// @bun
var qG=Object.create;var{getPrototypeOf:$G,defineProperty:V1,getOwnPropertyNames:QG}=Object;var YG=Object.prototype.hasOwnProperty;var N1=(x,d,b)=>{b=x!=null?qG($G(x)):{};let c=d||!x||!x.__esModule?V1(b,"default",{value:x,enumerable:!0}):b;for(let q of QG(x))if(!YG.call(c,q))V1(c,q,{get:()=>x[q],enumerable:!0});return c};var i=(x,d)=>()=>(d||x((d={exports:{}}).exports,d),d.exports);var wx=import.meta.require;var If=i((hF,vf)=>{var m7=1000,u7=m7*60,y7=u7*60,d7=y7*24,ZJ=d7*7,TJ=d7*365.25;vf.exports=function(x,d){d=d||{};var b=typeof x;if(b==="string"&&x.length>0)return CJ(x);else if(b==="number"&&isFinite(x))return d.long?gJ(x):kJ(x);throw new Error("val is not a non-empty string or a valid number. val="+JSON.stringify(x))};function CJ(x){if(x=String(x),x.length>100)return;var d=/^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(x);if(!d)return;var b=parseFloat(d[1]),c=(d[2]||"ms").toLowerCase();switch(c){case"years":case"year":case"yrs":case"yr":case"y":return b*TJ;case"weeks":case"week":case"w":return b*ZJ;case"days":case"day":case"d":return b*d7;case"hours":case"hour":case"hrs":case"hr":case"h":return b*y7;case"minutes":case"minute":case"mins":case"min":case"m":return b*u7;case"seconds":case"second":case"secs":case"sec":case"s":return b*m7;case"milliseconds":case"millisecond":case"msecs":case"msec":case"ms":return b;default:return}}function kJ(x){var d=Math.abs(x);if(d>=d7)return Math.round(x/d7)+"d";if(d>=y7)return Math.round(x/y7)+"h";if(d>=u7)return Math.round(x/u7)+"m";if(d>=m7)return Math.round(x/m7)+"s";return x+"ms"}function gJ(x){var d=Math.abs(x);if(d>=d7)return S5(x,d,d7,"day");if(d>=y7)return S5(x,d,y7,"hour");if(d>=u7)return S5(x,d,u7,"minute");if(d>=m7)return S5(x,d,m7,"second");return x+" ms"}function S5(x,d,b,c){var q=d>=b*1.5;return Math.round(x/b)+" "+c+(q?"s":"")}});var N9=i((aF,Sf)=>{function hJ(x){b.debug=b,b.default=b,b.coerce=E,b.disable=Y,b.enable=q,b.enabled=G,b.humanize=If(),b.destroy=J,Object.keys(x).forEach((V)=>{b[V]=x[V]}),b.names=[],b.skips=[],b.formatters={};function d(V){let N=0;for(let U=0;U<V.length;U++)N=(N<<5)-N+V.charCodeAt(U),N|=0;return b.colors[Math.abs(N)%b.colors.length]}b.selectColor=d;function b(V){let N,U=null,K,X;function D(...L){if(!D.enabled)return;let H=D,O=Number(new Date),j=O-(N||O);if(H.diff=j,H.prev=N,H.curr=O,N=O,L[0]=b.coerce(L[0]),typeof L[0]!=="string")L.unshift("%O");let e=0;L[0]=L[0].replace(/%([a-zA-Z%])/g,(F,z)=>{if(F==="%%")return"%";e++;let B=b.formatters[z];if(typeof B==="function"){let w=L[e];F=B.call(H,w),L.splice(e,1),e--}return F}),b.formatArgs.call(H,L),(H.log||b.log).apply(H,L)}if(D.namespace=V,D.useColors=b.useColors(),D.color=b.selectColor(V),D.extend=c,D.destroy=b.destroy,Object.defineProperty(D,"enabled",{enumerable:!0,configurable:!1,get:()=>{if(U!==null)return U;if(K!==b.namespaces)K=b.namespaces,X=b.enabled(V);return X},set:(L)=>{U=L}}),typeof b.init==="function")b.init(D);return D}function c(V,N){let U=b(this.namespace+(typeof N==="undefined"?":":N)+V);return U.log=this.log,U}function q(V){b.save(V),b.namespaces=V,b.names=[],b.skips=[];let N=(typeof V==="string"?V:"").trim().replace(" ",",").split(",").filter(Boolean);for(let U of N)if(U[0]==="-")b.skips.push(U.slice(1));else b.names.push(U)}function $(V,N){let U=0,K=0,X=-1,D=0;while(U<V.length)if(K<N.length&&(N[K]===V[U]||N[K]==="*"))if(N[K]==="*")X=K,D=U,K++;else U++,K++;else if(X!==-1)K=X+1,D++,U=D;else return!1;while(K<N.length&&N[K]==="*")K++;return K===N.length}function Y(){let V=[...b.names,...b.skips.map((N)=>"-"+N)].join(",");return b.enable(""),V}function G(V){for(let N of b.skips)if($(V,N))return!1;for(let N of b.names)if($(V,N))return!0;return!1}function E(V){if(V instanceof Error)return V.stack||V.message;return V}function J(){console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}return b.enable(b.load()),b}Sf.exports=hJ});var Tf=i((Zf,T5)=>{Zf.formatArgs=_J;Zf.save=mJ;Zf.load=uJ;Zf.useColors=aJ;Zf.storage=yJ();Zf.destroy=(()=>{let x=!1;return()=>{if(!x)x=!0,console.warn("Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.")}})();Zf.colors=["#0000CC","#0000FF","#0033CC","#0033FF","#0066CC","#0066FF","#0099CC","#0099FF","#00CC00","#00CC33","#00CC66","#00CC99","#00CCCC","#00CCFF","#3300CC","#3300FF","#3333CC","#3333FF","#3366CC","#3366FF","#3399CC","#3399FF","#33CC00","#33CC33","#33CC66","#33CC99","#33CCCC","#33CCFF","#6600CC","#6600FF","#6633CC","#6633FF","#66CC00","#66CC33","#9900CC","#9900FF","#9933CC","#9933FF","#99CC00","#99CC33","#CC0000","#CC0033","#CC0066","#CC0099","#CC00CC","#CC00FF","#CC3300","#CC3333","#CC3366","#CC3399","#CC33CC","#CC33FF","#CC6600","#CC6633","#CC9900","#CC9933","#CCCC00","#CCCC33","#FF0000","#FF0033","#FF0066","#FF0099","#FF00CC","#FF00FF","#FF3300","#FF3333","#FF3366","#FF3399","#FF33CC","#FF33FF","#FF6600","#FF6633","#FF9900","#FF9933","#FFCC00","#FFCC33"];function aJ(){if(typeof window!=="undefined"&&window.process&&(window.process.type==="renderer"||window.process.__nwjs))return!0;if(typeof navigator!=="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/))return!1;let x;return typeof document!=="undefined"&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||typeof window!=="undefined"&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||typeof navigator!=="undefined"&&navigator.userAgent&&(x=navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/))&&parseInt(x[1],10)>=31||typeof navigator!=="undefined"&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/)}function _J(x){if(x[0]=(this.useColors?"%c":"")+this.namespace+(this.useColors?" %c":" ")+x[0]+(this.useColors?"%c ":" ")+"+"+T5.exports.humanize(this.diff),!this.useColors)return;let d="color: "+this.color;x.splice(1,0,d,"color: inherit");let b=0,c=0;x[0].replace(/%[a-zA-Z%]/g,(q)=>{if(q==="%%")return;if(b++,q==="%c")c=b}),x.splice(c,0,d)}Zf.log=console.debug||console.log||(()=>{});function mJ(x){try{if(x)Zf.storage.setItem("debug",x);else Zf.storage.removeItem("debug")}catch(d){}}function uJ(){let x;try{x=Zf.storage.getItem("debug")}catch(d){}if(!x&&typeof process!=="undefined"&&"env"in process)x=process.env.DEBUG;return x}function yJ(){try{return localStorage}catch(x){}}T5.exports=N9()(Zf);var{formatters:pJ}=T5.exports;pJ.j=function(x){try{return JSON.stringify(x)}catch(d){return"[UnexpectedJSONParseError]: "+d.message}}});var hf=i((mF,gf)=>{var kf=process.argv,Cf=kf.indexOf("--"),b7=function(x){x="--"+x;var d=kf.indexOf(x);return d!==-1&&(Cf!==-1?d<Cf:!0)};gf.exports=function(){if("FORCE_COLOR"in process.env)return!0;if(b7("no-color")||b7("no-colors")||b7("color=false"))return!1;if(b7("color")||b7("colors")||b7("color=true")||b7("color=always"))return!0;if(process.stdout&&!process.stdout.isTTY)return!1;if(process.platform==="win32")return!0;if("COLORTERM"in process.env)return!0;if(process.env.TERM==="dumb")return!1;if(/^screen|^xterm|^vt100|color|ansi|cygwin|linux/i.test(process.env.TERM))return!0;return!1}()});var uf=i((_f,k5)=>{var xV=wx("node:tty"),C5=wx("node:util");_f.init=QV;_f.log=cV;_f.formatArgs=dV;_f.save=qV;_f.load=$V;_f.useColors=fV;_f.destroy=C5.deprecate(()=>{},"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.");_f.colors=[6,2,3,4,5,1];try{let x=hf();if(x&&(x.stderr||x).level>=2)_f.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221]}catch(x){}_f.inspectOpts=Object.keys(process.env).filter((x)=>{return/^debug_/i.test(x)}).reduce((x,d)=>{let b=d.substring(6).toLowerCase().replace(/_([a-z])/g,(q,$)=>{return $.toUpperCase()}),c=process.env[d];if(/^(yes|on|true|enabled)$/i.test(c))c=!0;else if(/^(no|off|false|disabled)$/i.test(c))c=!1;else if(c==="null")c=null;else c=Number(c);return x[b]=c,x},{});function fV(){return"colors"in _f.inspectOpts?Boolean(_f.inspectOpts.colors):xV.isatty(process.stderr.fd)}function dV(x){let{namespace:d,useColors:b}=this;if(b){let c=this.color,q="\x1B[3"+(c<8?c:"8;5;"+c),$=`  ${q};1m${d} \x1B[0m`;x[0]=$+x[0].split(`
`).join(`
`+$),x.push(q+"m+"+k5.exports.humanize(this.diff)+"\x1B[0m")}else x[0]=bV()+d+" "+x[0]}function bV(){if(_f.inspectOpts.hideDate)return"";return new Date().toISOString()+" "}function cV(...x){return process.stderr.write(C5.formatWithOptions(_f.inspectOpts,...x)+`
`)}function qV(x){if(x)process.env.DEBUG=x;else delete process.env.DEBUG}function $V(){return process.env.DEBUG}function QV(x){x.inspectOpts={};let d=Object.keys(_f.inspectOpts);for(let b=0;b<d.length;b++)x.inspectOpts[d[b]]=_f.inspectOpts[d[b]]}k5.exports=N9()(_f);var{formatters:af}=k5.exports;af.o=function(x){return this.inspectOpts.colors=this.useColors,C5.inspect(x,this.inspectOpts).split(`
`).map((d)=>d.trim()).join(" ")};af.O=function(x){return this.inspectOpts.colors=this.useColors,C5.inspect(x,this.inspectOpts)}});var yf=i((yF,U9)=>{if(typeof process==="undefined"||process.type==="renderer"||!1||process.__nwjs)U9.exports=Tf();else U9.exports=uf()});var O0=i((h5,Yd)=>{(function(x,d){if(typeof h5==="object")Yd.exports=h5=d();else if(typeof define==="function"&&define.amd)define([],d);else x.CryptoJS=d()})(h5,function(){var x=x||function(d,b){var c;if(typeof window!=="undefined"&&window.crypto)c=window.crypto;if(typeof self!=="undefined"&&self.crypto)c=self.crypto;if(typeof globalThis!=="undefined"&&globalThis.crypto)c=globalThis.crypto;if(!c&&typeof window!=="undefined"&&window.msCrypto)c=window.msCrypto;if(!c&&typeof global!=="undefined"&&global.crypto)c=global.crypto;if(!c)try{c=wx("node:crypto")}catch(H){}var q=function(){if(c){if(typeof c.getRandomValues==="function")try{return c.getRandomValues(new Uint32Array(1))[0]}catch(H){}if(typeof c.randomBytes==="function")try{return c.randomBytes(4).readInt32LE()}catch(H){}}throw new Error("Native crypto module could not be used to get secure random number.")},$=Object.create||function(){function H(){}return function(O){var j;return H.prototype=O,j=new H,H.prototype=null,j}}(),Y={},G=Y.lib={},E=G.Base=function(){return{extend:function(H){var O=$(this);if(H)O.mixIn(H);if(!O.hasOwnProperty("init")||this.init===O.init)O.init=function(){O.$super.init.apply(this,arguments)};return O.init.prototype=O,O.$super=this,O},create:function(){var H=this.extend();return H.init.apply(H,arguments),H},init:function(){},mixIn:function(H){for(var O in H)if(H.hasOwnProperty(O))this[O]=H[O];if(H.hasOwnProperty("toString"))this.toString=H.toString},clone:function(){return this.init.prototype.extend(this)}}}(),J=G.WordArray=E.extend({init:function(H,O){if(H=this.words=H||[],O!=b)this.sigBytes=O;else this.sigBytes=H.length*4},toString:function(H){return(H||N).stringify(this)},concat:function(H){var O=this.words,j=H.words,e=this.sigBytes,M=H.sigBytes;if(this.clamp(),e%4)for(var F=0;F<M;F++){var z=j[F>>>2]>>>24-F%4*8&255;O[e+F>>>2]|=z<<24-(e+F)%4*8}else for(var B=0;B<M;B+=4)O[e+B>>>2]=j[B>>>2];return this.sigBytes+=M,this},clamp:function(){var H=this.words,O=this.sigBytes;H[O>>>2]&=4294967295<<32-O%4*8,H.length=d.ceil(O/4)},clone:function(){var H=E.clone.call(this);return H.words=this.words.slice(0),H},random:function(H){var O=[];for(var j=0;j<H;j+=4)O.push(q());return new J.init(O,H)}}),V=Y.enc={},N=V.Hex={stringify:function(H){var{words:O,sigBytes:j}=H,e=[];for(var M=0;M<j;M++){var F=O[M>>>2]>>>24-M%4*8&255;e.push((F>>>4).toString(16)),e.push((F&15).toString(16))}return e.join("")},parse:function(H){var O=H.length,j=[];for(var e=0;e<O;e+=2)j[e>>>3]|=parseInt(H.substr(e,2),16)<<24-e%8*4;return new J.init(j,O/2)}},U=V.Latin1={stringify:function(H){var{words:O,sigBytes:j}=H,e=[];for(var M=0;M<j;M++){var F=O[M>>>2]>>>24-M%4*8&255;e.push(String.fromCharCode(F))}return e.join("")},parse:function(H){var O=H.length,j=[];for(var e=0;e<O;e++)j[e>>>2]|=(H.charCodeAt(e)&255)<<24-e%4*8;return new J.init(j,O)}},K=V.Utf8={stringify:function(H){try{return decodeURIComponent(escape(U.stringify(H)))}catch(O){throw new Error("Malformed UTF-8 data")}},parse:function(H){return U.parse(unescape(encodeURIComponent(H)))}},X=G.BufferedBlockAlgorithm=E.extend({reset:function(){this._data=new J.init,this._nDataBytes=0},_append:function(H){if(typeof H=="string")H=K.parse(H);this._data.concat(H),this._nDataBytes+=H.sigBytes},_process:function(H){var O,j=this._data,e=j.words,M=j.sigBytes,F=this.blockSize,z=F*4,B=M/z;if(H)B=d.ceil(B);else B=d.max((B|0)-this._minBufferSize,0);var w=B*F,Z=d.min(w*4,M);if(w){for(var P=0;P<w;P+=F)this._doProcessBlock(e,P);O=e.splice(0,w),j.sigBytes-=Z}return new J.init(O,Z)},clone:function(){var H=E.clone.call(this);return H._data=this._data.clone(),H},_minBufferSize:0}),D=G.Hasher=X.extend({cfg:E.extend(),init:function(H){this.cfg=this.cfg.extend(H),this.reset()},reset:function(){X.reset.call(this),this._doReset()},update:function(H){return this._append(H),this._process(),this},finalize:function(H){if(H)this._append(H);var O=this._doFinalize();return O},blockSize:16,_createHelper:function(H){return function(O,j){return new H.init(j).finalize(O)}},_createHmacHelper:function(H){return function(O,j){return new L.HMAC.init(H,j).finalize(O)}}}),L=Y.algo={};return Y}(Math);return x})});var Z2=i((a5,Gd)=>{(function(x,d){if(typeof a5==="object")Gd.exports=a5=d(O0());else if(typeof define==="function"&&define.amd)define(["./core"],d);else d(x.CryptoJS)})(a5,function(x){return function(d){var b=x,c=b.lib,q=c.Base,$=c.WordArray,Y=b.x64={},G=Y.Word=q.extend({init:function(J,V){this.high=J,this.low=V}}),E=Y.WordArray=q.extend({init:function(J,V){if(J=this.words=J||[],V!=d)this.sigBytes=V;else this.sigBytes=J.length*8},toX32:function(){var J=this.words,V=J.length,N=[];for(var U=0;U<V;U++){var K=J[U];N.push(K.high),N.push(K.low)}return $.create(N,this.sigBytes)},clone:function(){var J=q.clone.call(this),V=J.words=this.words.slice(0),N=V.length;for(var U=0;U<N;U++)V[U]=V[U].clone();return J}})}(),x})});var Jd=i((_5,Ed)=>{(function(x,d){if(typeof _5==="object")Ed.exports=_5=d(O0());else if(typeof define==="function"&&define.amd)define(["./core"],d);else d(x.CryptoJS)})(_5,function(x){return function(){if(typeof ArrayBuffer!="function")return;var d=x,b=d.lib,c=b.WordArray,q=c.init,$=c.init=function(Y){if(Y instanceof ArrayBuffer)Y=new Uint8Array(Y);if(Y instanceof Int8Array||typeof Uint8ClampedArray!=="undefined"&&Y instanceof Uint8ClampedArray||Y instanceof Int16Array||Y instanceof Uint16Array||Y instanceof Int32Array||Y instanceof Uint32Array||Y instanceof Float32Array||Y instanceof Float64Array)Y=new Uint8Array(Y.buffer,Y.byteOffset,Y.byteLength);if(Y instanceof Uint8Array){var G=Y.byteLength,E=[];for(var J=0;J<G;J++)E[J>>>2]|=Y[J]<<24-J%4*8;q.call(this,E,G)}else q.apply(this,arguments)};$.prototype=c}(),x.lib.WordArray})});var Nd=i((m5,Vd)=>{(function(x,d){if(typeof m5==="object")Vd.exports=m5=d(O0());else if(typeof define==="function"&&define.amd)define(["./core"],d);else d(x.CryptoJS)})(m5,function(x){return function(){var d=x,b=d.lib,c=b.WordArray,q=d.enc,$=q.Utf16=q.Utf16BE={stringify:function(G){var{words:E,sigBytes:J}=G,V=[];for(var N=0;N<J;N+=2){var U=E[N>>>2]>>>16-N%4*8&65535;V.push(String.fromCharCode(U))}return V.join("")},parse:function(G){var E=G.length,J=[];for(var V=0;V<E;V++)J[V>>>1]|=G.charCodeAt(V)<<16-V%2*16;return c.create(J,E*2)}};q.Utf16LE={stringify:function(G){var{words:E,sigBytes:J}=G,V=[];for(var N=0;N<J;N+=2){var U=Y(E[N>>>2]>>>16-N%4*8&65535);V.push(String.fromCharCode(U))}return V.join("")},parse:function(G){var E=G.length,J=[];for(var V=0;V<E;V++)J[V>>>1]|=Y(G.charCodeAt(V)<<16-V%2*16);return c.create(J,E*2)}};function Y(G){return G<<8&4278255360|G>>>8&16711935}}(),x.enc.Utf16})});var P6=i((u5,Ud)=>{(function(x,d){if(typeof u5==="object")Ud.exports=u5=d(O0());else if(typeof define==="function"&&define.amd)define(["./core"],d);else d(x.CryptoJS)})(u5,function(x){return function(){var d=x,b=d.lib,c=b.WordArray,q=d.enc,$=q.Base64={stringify:function(G){var{words:E,sigBytes:J}=G,V=this._map;G.clamp();var N=[];for(var U=0;U<J;U+=3){var K=E[U>>>2]>>>24-U%4*8&255,X=E[U+1>>>2]>>>24-(U+1)%4*8&255,D=E[U+2>>>2]>>>24-(U+2)%4*8&255,L=K<<16|X<<8|D;for(var H=0;H<4&&U+H*0.75<J;H++)N.push(V.charAt(L>>>6*(3-H)&63))}var O=V.charAt(64);if(O)while(N.length%4)N.push(O);return N.join("")},parse:function(G){var E=G.length,J=this._map,V=this._reverseMap;if(!V){V=this._reverseMap=[];for(var N=0;N<J.length;N++)V[J.charCodeAt(N)]=N}var U=J.charAt(64);if(U){var K=G.indexOf(U);if(K!==-1)E=K}return Y(G,E,V)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="};function Y(G,E,J){var V=[],N=0;for(var U=0;U<E;U++)if(U%4){var K=J[G.charCodeAt(U-1)]<<U%4*2,X=J[G.charCodeAt(U)]>>>6-U%4*2,D=K|X;V[N>>>2]|=D<<24-N%4*8,N++}return c.create(V,N)}}(),x.enc.Base64})});var Rd=i((y5,Kd)=>{(function(x,d){if(typeof y5==="object")Kd.exports=y5=d(O0());else if(typeof define==="function"&&define.amd)define(["./core"],d);else d(x.CryptoJS)})(y5,function(x){return function(){var d=x,b=d.lib,c=b.WordArray,q=d.enc,$=q.Base64url={stringify:function(G,E){if(E===void 0)E=!0;var{words:J,sigBytes:V}=G,N=E?this._safe_map:this._map;G.clamp();var U=[];for(var K=0;K<V;K+=3){var X=J[K>>>2]>>>24-K%4*8&255,D=J[K+1>>>2]>>>24-(K+1)%4*8&255,L=J[K+2>>>2]>>>24-(K+2)%4*8&255,H=X<<16|D<<8|L;for(var O=0;O<4&&K+O*0.75<V;O++)U.push(N.charAt(H>>>6*(3-O)&63))}var j=N.charAt(64);if(j)while(U.length%4)U.push(j);return U.join("")},parse:function(G,E){if(E===void 0)E=!0;var J=G.length,V=E?this._safe_map:this._map,N=this._reverseMap;if(!N){N=this._reverseMap=[];for(var U=0;U<V.length;U++)N[V.charCodeAt(U)]=U}var K=V.charAt(64);if(K){var X=G.indexOf(K);if(X!==-1)J=X}return Y(G,J,N)},_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",_safe_map:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"};function Y(G,E,J){var V=[],N=0;for(var U=0;U<E;U++)if(U%4){var K=J[G.charCodeAt(U-1)]<<U%4*2,X=J[G.charCodeAt(U)]>>>6-U%4*2,D=K|X;V[N>>>2]|=D<<24-N%4*8,N++}return c.create(V,N)}}(),x.enc.Base64url})});var v6=i((p5,Xd)=>{(function(x,d){if(typeof p5==="object")Xd.exports=p5=d(O0());else if(typeof define==="function"&&define.amd)define(["./core"],d);else d(x.CryptoJS)})(p5,function(x){return function(d){var b=x,c=b.lib,q=c.WordArray,$=c.Hasher,Y=b.algo,G=[];(function(){for(var K=0;K<64;K++)G[K]=d.abs(d.sin(K+1))*4294967296|0})();var E=Y.MD5=$.extend({_doReset:function(){this._hash=new q.init([1732584193,4023233417,2562383102,271733878])},_doProcessBlock:function(K,X){for(var D=0;D<16;D++){var L=X+D,H=K[L];K[L]=(H<<8|H>>>24)&16711935|(H<<24|H>>>8)&4278255360}var O=this._hash.words,j=K[X+0],e=K[X+1],M=K[X+2],F=K[X+3],z=K[X+4],B=K[X+5],w=K[X+6],Z=K[X+7],P=K[X+8],I=K[X+9],a=K[X+10],S=K[X+11],y=K[X+12],T=K[X+13],m=K[X+14],u=K[X+15],v=O[0],g=O[1],h=O[2],k=O[3];v=J(v,g,h,k,j,7,G[0]),k=J(k,v,g,h,e,12,G[1]),h=J(h,k,v,g,M,17,G[2]),g=J(g,h,k,v,F,22,G[3]),v=J(v,g,h,k,z,7,G[4]),k=J(k,v,g,h,B,12,G[5]),h=J(h,k,v,g,w,17,G[6]),g=J(g,h,k,v,Z,22,G[7]),v=J(v,g,h,k,P,7,G[8]),k=J(k,v,g,h,I,12,G[9]),h=J(h,k,v,g,a,17,G[10]),g=J(g,h,k,v,S,22,G[11]),v=J(v,g,h,k,y,7,G[12]),k=J(k,v,g,h,T,12,G[13]),h=J(h,k,v,g,m,17,G[14]),g=J(g,h,k,v,u,22,G[15]),v=V(v,g,h,k,e,5,G[16]),k=V(k,v,g,h,w,9,G[17]),h=V(h,k,v,g,S,14,G[18]),g=V(g,h,k,v,j,20,G[19]),v=V(v,g,h,k,B,5,G[20]),k=V(k,v,g,h,a,9,G[21]),h=V(h,k,v,g,u,14,G[22]),g=V(g,h,k,v,z,20,G[23]),v=V(v,g,h,k,I,5,G[24]),k=V(k,v,g,h,m,9,G[25]),h=V(h,k,v,g,F,14,G[26]),g=V(g,h,k,v,P,20,G[27]),v=V(v,g,h,k,T,5,G[28]),k=V(k,v,g,h,M,9,G[29]),h=V(h,k,v,g,Z,14,G[30]),g=V(g,h,k,v,y,20,G[31]),v=N(v,g,h,k,B,4,G[32]),k=N(k,v,g,h,P,11,G[33]),h=N(h,k,v,g,S,16,G[34]),g=N(g,h,k,v,m,23,G[35]),v=N(v,g,h,k,e,4,G[36]),k=N(k,v,g,h,z,11,G[37]),h=N(h,k,v,g,Z,16,G[38]),g=N(g,h,k,v,a,23,G[39]),v=N(v,g,h,k,T,4,G[40]),k=N(k,v,g,h,j,11,G[41]),h=N(h,k,v,g,F,16,G[42]),g=N(g,h,k,v,w,23,G[43]),v=N(v,g,h,k,I,4,G[44]),k=N(k,v,g,h,y,11,G[45]),h=N(h,k,v,g,u,16,G[46]),g=N(g,h,k,v,M,23,G[47]),v=U(v,g,h,k,j,6,G[48]),k=U(k,v,g,h,Z,10,G[49]),h=U(h,k,v,g,m,15,G[50]),g=U(g,h,k,v,B,21,G[51]),v=U(v,g,h,k,y,6,G[52]),k=U(k,v,g,h,F,10,G[53]),h=U(h,k,v,g,a,15,G[54]),g=U(g,h,k,v,e,21,G[55]),v=U(v,g,h,k,P,6,G[56]),k=U(k,v,g,h,u,10,G[57]),h=U(h,k,v,g,w,15,G[58]),g=U(g,h,k,v,T,21,G[59]),v=U(v,g,h,k,z,6,G[60]),k=U(k,v,g,h,S,10,G[61]),h=U(h,k,v,g,M,15,G[62]),g=U(g,h,k,v,I,21,G[63]),O[0]=O[0]+v|0,O[1]=O[1]+g|0,O[2]=O[2]+h|0,O[3]=O[3]+k|0},_doFinalize:function(){var K=this._data,X=K.words,D=this._nDataBytes*8,L=K.sigBytes*8;X[L>>>5]|=128<<24-L%32;var H=d.floor(D/4294967296),O=D;X[(L+64>>>9<<4)+15]=(H<<8|H>>>24)&16711935|(H<<24|H>>>8)&4278255360,X[(L+64>>>9<<4)+14]=(O<<8|O>>>24)&16711935|(O<<24|O>>>8)&4278255360,K.sigBytes=(X.length+1)*4,this._process();var j=this._hash,e=j.words;for(var M=0;M<4;M++){var F=e[M];e[M]=(F<<8|F>>>24)&16711935|(F<<24|F>>>8)&4278255360}return j},clone:function(){var K=$.clone.call(this);return K._hash=this._hash.clone(),K}});function J(K,X,D,L,H,O,j){var e=K+(X&D|~X&L)+H+j;return(e<<O|e>>>32-O)+X}function V(K,X,D,L,H,O,j){var e=K+(X&L|D&~L)+H+j;return(e<<O|e>>>32-O)+X}function N(K,X,D,L,H,O,j){var e=K+(X^D^L)+H+j;return(e<<O|e>>>32-O)+X}function U(K,X,D,L,H,O,j){var e=K+(D^(X|~L))+H+j;return(e<<O|e>>>32-O)+X}b.MD5=$._createHelper(E),b.HmacMD5=$._createHmacHelper(E)}(Math),x.MD5})});var A9=i((l5,jd)=>{(function(x,d){if(typeof l5==="object")jd.exports=l5=d(O0());else if(typeof define==="function"&&define.amd)define(["./core"],d);else d(x.CryptoJS)})(l5,function(x){return function(){var d=x,b=d.lib,c=b.WordArray,q=b.Hasher,$=d.algo,Y=[],G=$.SHA1=q.extend({_doReset:function(){this._hash=new c.init([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(E,J){var V=this._hash.words,N=V[0],U=V[1],K=V[2],X=V[3],D=V[4];for(var L=0;L<80;L++){if(L<16)Y[L]=E[J+L]|0;else{var H=Y[L-3]^Y[L-8]^Y[L-14]^Y[L-16];Y[L]=H<<1|H>>>31}var O=(N<<5|N>>>27)+D+Y[L];if(L<20)O+=(U&K|~U&X)+1518500249;else if(L<40)O+=(U^K^X)+1859775393;else if(L<60)O+=(U&K|U&X|K&X)-1894007588;else O+=(U^K^X)-899497514;D=X,X=K,K=U<<30|U>>>2,U=N,N=O}V[0]=V[0]+N|0,V[1]=V[1]+U|0,V[2]=V[2]+K|0,V[3]=V[3]+X|0,V[4]=V[4]+D|0},_doFinalize:function(){var E=this._data,J=E.words,V=this._nDataBytes*8,N=E.sigBytes*8;return J[N>>>5]|=128<<24-N%32,J[(N+64>>>9<<4)+14]=Math.floor(V/4294967296),J[(N+64>>>9<<4)+15]=V,E.sigBytes=J.length*4,this._process(),this._hash},clone:function(){var E=q.clone.call(this);return E._hash=this._hash.clone(),E}});d.SHA1=q._createHelper(G),d.HmacSHA1=q._createHmacHelper(G)}(),x.SHA1})});var i5=i((n5,Od)=>{(function(x,d){if(typeof n5==="object")Od.exports=n5=d(O0());else if(typeof define==="function"&&define.amd)define(["./core"],d);else d(x.CryptoJS)})(n5,function(x){return function(d){var b=x,c=b.lib,q=c.WordArray,$=c.Hasher,Y=b.algo,G=[],E=[];(function(){function N(D){var L=d.sqrt(D);for(var H=2;H<=L;H++)if(!(D%H))return!1;return!0}function U(D){return(D-(D|0))*4294967296|0}var K=2,X=0;while(X<64){if(N(K)){if(X<8)G[X]=U(d.pow(K,0.5));E[X]=U(d.pow(K,0.3333333333333333)),X++}K++}})();var J=[],V=Y.SHA256=$.extend({_doReset:function(){this._hash=new q.init(G.slice(0))},_doProcessBlock:function(N,U){var K=this._hash.words,X=K[0],D=K[1],L=K[2],H=K[3],O=K[4],j=K[5],e=K[6],M=K[7];for(var F=0;F<64;F++){if(F<16)J[F]=N[U+F]|0;else{var z=J[F-15],B=(z<<25|z>>>7)^(z<<14|z>>>18)^z>>>3,w=J[F-2],Z=(w<<15|w>>>17)^(w<<13|w>>>19)^w>>>10;J[F]=B+J[F-7]+Z+J[F-16]}var P=O&j^~O&e,I=X&D^X&L^D&L,a=(X<<30|X>>>2)^(X<<19|X>>>13)^(X<<10|X>>>22),S=(O<<26|O>>>6)^(O<<21|O>>>11)^(O<<7|O>>>25),y=M+S+P+E[F]+J[F],T=a+I;M=e,e=j,j=O,O=H+y|0,H=L,L=D,D=X,X=y+T|0}K[0]=K[0]+X|0,K[1]=K[1]+D|0,K[2]=K[2]+L|0,K[3]=K[3]+H|0,K[4]=K[4]+O|0,K[5]=K[5]+j|0,K[6]=K[6]+e|0,K[7]=K[7]+M|0},_doFinalize:function(){var N=this._data,U=N.words,K=this._nDataBytes*8,X=N.sigBytes*8;return U[X>>>5]|=128<<24-X%32,U[(X+64>>>9<<4)+14]=d.floor(K/4294967296),U[(X+64>>>9<<4)+15]=K,N.sigBytes=U.length*4,this._process(),this._hash},clone:function(){var N=$.clone.call(this);return N._hash=this._hash.clone(),N}});b.SHA256=$._createHelper(V),b.HmacSHA256=$._createHmacHelper(V)}(Math),x.SHA256})});var Wd=i((r5,Hd)=>{(function(x,d,b){if(typeof r5==="object")Hd.exports=r5=d(O0(),i5());else if(typeof define==="function"&&define.amd)define(["./core","./sha256"],d);else d(x.CryptoJS)})(r5,function(x){return function(){var d=x,b=d.lib,c=b.WordArray,q=d.algo,$=q.SHA256,Y=q.SHA224=$.extend({_doReset:function(){this._hash=new c.init([3238371032,914150663,812702999,4144912697,4290775857,1750603025,1694076839,3204075428])},_doFinalize:function(){var G=$._doFinalize.call(this);return G.sigBytes-=4,G}});d.SHA224=$._createHelper(Y),d.HmacSHA224=$._createHmacHelper(Y)}(),x.SHA224})});var F9=i((s5,Ld)=>{(function(x,d,b){if(typeof s5==="object")Ld.exports=s5=d(O0(),Z2());else if(typeof define==="function"&&define.amd)define(["./core","./x64-core"],d);else d(x.CryptoJS)})(s5,function(x){return function(){var d=x,b=d.lib,c=b.Hasher,q=d.x64,$=q.Word,Y=q.WordArray,G=d.algo;function E(){return $.create.apply($,arguments)}var J=[E(1116352408,3609767458),E(1899447441,602891725),E(3049323471,3964484399),E(3921009573,2173295548),E(961987163,4081628472),E(1508970993,3053834265),E(2453635748,2937671579),E(2870763221,3664609560),E(3624381080,2734883394),E(310598401,1164996542),E(607225278,1323610764),E(1426881987,3590304994),E(1925078388,4068182383),E(2162078206,991336113),E(2614888103,633803317),E(3248222580,3479774868),E(3835390401,2666613458),E(4022224774,944711139),E(264347078,2341262773),E(604807628,2007800933),E(770255983,1495990901),E(1249150122,1856431235),E(1555081692,3175218132),E(1996064986,2198950837),E(2554220882,3999719339),E(2821834349,766784016),E(2952996808,2566594879),E(3210313671,3203337956),E(3336571891,1034457026),E(3584528711,2466948901),E(113926993,3758326383),E(338241895,168717936),E(666307205,1188179964),E(773529912,1546045734),E(1294757372,1522805485),E(1396182291,2643833823),E(1695183700,2343527390),E(1986661051,1014477480),E(2177026350,1206759142),E(2456956037,344077627),E(2730485921,1290863460),E(2820302411,3158454273),E(3259730800,3505952657),E(3345764771,106217008),E(3516065817,3606008344),E(3600352804,1432725776),E(4094571909,1467031594),E(275423344,851169720),E(430227734,3100823752),E(506948616,1363258195),E(659060556,3750685593),E(883997877,3785050280),E(958139571,3318307427),E(1322822218,3812723403),E(1537002063,2003034995),E(1747873779,3602036899),E(1955562222,1575990012),E(2024104815,1125592928),E(2227730452,2716904306),E(2361852424,442776044),E(2428436474,593698344),E(2756734187,3733110249),E(3204031479,2999351573),E(3329325298,3815920427),E(3391569614,3928383900),E(3515267271,566280711),E(3940187606,3454069534),E(4118630271,4000239992),E(116418474,1914138554),E(174292421,2731055270),E(289380356,3203993006),E(460393269,320620315),E(685471733,587496836),E(852142971,1086792851),E(1017036298,365543100),E(1126000580,2618297676),E(1288033470,3409855158),E(1501505948,4234509866),E(1607167915,987167468),E(1816402316,1246189591)],V=[];(function(){for(var U=0;U<80;U++)V[U]=E()})();var N=G.SHA512=c.extend({_doReset:function(){this._hash=new Y.init([new $.init(1779033703,4089235720),new $.init(3144134277,2227873595),new $.init(1013904242,4271175723),new $.init(2773480762,1595750129),new $.init(1359893119,2917565137),new $.init(2600822924,725511199),new $.init(528734635,4215389547),new $.init(1541459225,327033209)])},_doProcessBlock:function(U,K){var X=this._hash.words,D=X[0],L=X[1],H=X[2],O=X[3],j=X[4],e=X[5],M=X[6],F=X[7],z=D.high,B=D.low,w=L.high,Z=L.low,P=H.high,I=H.low,a=O.high,S=O.low,y=j.high,T=j.low,m=e.high,u=e.low,v=M.high,g=M.low,h=F.high,k=F.low,Y0=z,U0=B,B0=w,f0=Z,p0=P,Z0=I,Q0=a,K0=S,T0=y,D0=T,Qx=m,Yx=u,Mx=v,bx=g,Nx=h,Gx=k;for(var s0=0;s0<80;s0++){var l0,e0,C0=V[s0];if(s0<16)e0=C0.high=U[K+s0*2]|0,l0=C0.low=U[K+s0*2+1]|0;else{var Ax=V[s0-15],Fx=Ax.high,zx=Ax.low,u6=(Fx>>>1|zx<<31)^(Fx>>>8|zx<<24)^Fx>>>7,R7=(zx>>>1|Fx<<31)^(zx>>>8|Fx<<24)^(zx>>>7|Fx<<25),N2=V[s0-2],Bx=N2.high,D6=N2.low,G5=(Bx>>>19|D6<<13)^(Bx<<3|D6>>>29)^Bx>>>6,E5=(D6>>>19|Bx<<13)^(D6<<3|Bx>>>29)^(D6>>>6|Bx<<26),J5=V[s0-7],V5=J5.high,U2=J5.low,y6=V[s0-16],rY=y6.high,$1=y6.low;l0=R7+U2,e0=u6+V5+(l0>>>0<R7>>>0?1:0),l0=l0+E5,e0=e0+G5+(l0>>>0<E5>>>0?1:0),l0=l0+$1,e0=e0+rY+(l0>>>0<$1>>>0?1:0),C0.high=e0,C0.low=l0}var sY=T0&Qx^~T0&Mx,Q1=D0&Yx^~D0&bx,oY=Y0&B0^Y0&p0^B0&p0,tY=U0&f0^U0&Z0^f0&Z0,xG=(Y0>>>28|U0<<4)^(Y0<<30|U0>>>2)^(Y0<<25|U0>>>7),Y1=(U0>>>28|Y0<<4)^(U0<<30|Y0>>>2)^(U0<<25|Y0>>>7),fG=(T0>>>14|D0<<18)^(T0>>>18|D0<<14)^(T0<<23|D0>>>9),dG=(D0>>>14|T0<<18)^(D0>>>18|T0<<14)^(D0<<23|T0>>>9),G1=J[s0],bG=G1.high,E1=G1.low,Xx=Gx+dG,e6=Nx+fG+(Xx>>>0<Gx>>>0?1:0),Xx=Xx+Q1,e6=e6+sY+(Xx>>>0<Q1>>>0?1:0),Xx=Xx+E1,e6=e6+bG+(Xx>>>0<E1>>>0?1:0),Xx=Xx+l0,e6=e6+e0+(Xx>>>0<l0>>>0?1:0),J1=Y1+tY,cG=xG+oY+(J1>>>0<Y1>>>0?1:0);Nx=Mx,Gx=bx,Mx=Qx,bx=Yx,Qx=T0,Yx=D0,D0=K0+Xx|0,T0=Q0+e6+(D0>>>0<K0>>>0?1:0)|0,Q0=p0,K0=Z0,p0=B0,Z0=f0,B0=Y0,f0=U0,U0=Xx+J1|0,Y0=e6+cG+(U0>>>0<Xx>>>0?1:0)|0}B=D.low=B+U0,D.high=z+Y0+(B>>>0<U0>>>0?1:0),Z=L.low=Z+f0,L.high=w+B0+(Z>>>0<f0>>>0?1:0),I=H.low=I+Z0,H.high=P+p0+(I>>>0<Z0>>>0?1:0),S=O.low=S+K0,O.high=a+Q0+(S>>>0<K0>>>0?1:0),T=j.low=T+D0,j.high=y+T0+(T>>>0<D0>>>0?1:0),u=e.low=u+Yx,e.high=m+Qx+(u>>>0<Yx>>>0?1:0),g=M.low=g+bx,M.high=v+Mx+(g>>>0<bx>>>0?1:0),k=F.low=k+Gx,F.high=h+Nx+(k>>>0<Gx>>>0?1:0)},_doFinalize:function(){var U=this._data,K=U.words,X=this._nDataBytes*8,D=U.sigBytes*8;K[D>>>5]|=128<<24-D%32,K[(D+128>>>10<<5)+30]=Math.floor(X/4294967296),K[(D+128>>>10<<5)+31]=X,U.sigBytes=K.length*4,this._process();var L=this._hash.toX32();return L},clone:function(){var U=c.clone.call(this);return U._hash=this._hash.clone(),U},blockSize:32});d.SHA512=c._createHelper(N),d.HmacSHA512=c._createHmacHelper(N)}(),x.SHA512})});var ed=i((o5,Dd)=>{(function(x,d,b){if(typeof o5==="object")Dd.exports=o5=d(O0(),Z2(),F9());else if(typeof define==="function"&&define.amd)define(["./core","./x64-core","./sha512"],d);else d(x.CryptoJS)})(o5,function(x){return function(){var d=x,b=d.x64,c=b.Word,q=b.WordArray,$=d.algo,Y=$.SHA512,G=$.SHA384=Y.extend({_doReset:function(){this._hash=new q.init([new c.init(3418070365,3238371032),new c.init(1654270250,914150663),new c.init(2438529370,812702999),new c.init(355462360,4144912697),new c.init(1731405415,4290775857),new c.init(2394180231,1750603025),new c.init(3675008525,1694076839),new c.init(1203062813,3204075428)])},_doFinalize:function(){var E=Y._doFinalize.call(this);return E.sigBytes-=16,E}});d.SHA384=Y._createHelper(G),d.HmacSHA384=Y._createHmacHelper(G)}(),x.SHA384})});var Ad=i((t5,Md)=>{(function(x,d,b){if(typeof t5==="object")Md.exports=t5=d(O0(),Z2());else if(typeof define==="function"&&define.amd)define(["./core","./x64-core"],d);else d(x.CryptoJS)})(t5,function(x){return function(d){var b=x,c=b.lib,q=c.WordArray,$=c.Hasher,Y=b.x64,G=Y.Word,E=b.algo,J=[],V=[],N=[];(function(){var X=1,D=0;for(var L=0;L<24;L++){J[X+5*D]=(L+1)*(L+2)/2%64;var H=D%5,O=(2*X+3*D)%5;X=H,D=O}for(var X=0;X<5;X++)for(var D=0;D<5;D++)V[X+5*D]=D+(2*X+3*D)%5*5;var j=1;for(var e=0;e<24;e++){var M=0,F=0;for(var z=0;z<7;z++){if(j&1){var B=(1<<z)-1;if(B<32)F^=1<<B;else M^=1<<B-32}if(j&128)j=j<<1^113;else j<<=1}N[e]=G.create(M,F)}})();var U=[];(function(){for(var X=0;X<25;X++)U[X]=G.create()})();var K=E.SHA3=$.extend({cfg:$.cfg.extend({outputLength:512}),_doReset:function(){var X=this._state=[];for(var D=0;D<25;D++)X[D]=new G.init;this.blockSize=(1600-2*this.cfg.outputLength)/32},_doProcessBlock:function(X,D){var L=this._state,H=this.blockSize/2;for(var O=0;O<H;O++){var j=X[D+2*O],e=X[D+2*O+1];j=(j<<8|j>>>24)&16711935|(j<<24|j>>>8)&4278255360,e=(e<<8|e>>>24)&16711935|(e<<24|e>>>8)&4278255360;var M=L[O];M.high^=e,M.low^=j}for(var F=0;F<24;F++){for(var z=0;z<5;z++){var B=0,w=0;for(var Z=0;Z<5;Z++){var M=L[z+5*Z];B^=M.high,w^=M.low}var P=U[z];P.high=B,P.low=w}for(var z=0;z<5;z++){var I=U[(z+4)%5],a=U[(z+1)%5],S=a.high,y=a.low,B=I.high^(S<<1|y>>>31),w=I.low^(y<<1|S>>>31);for(var Z=0;Z<5;Z++){var M=L[z+5*Z];M.high^=B,M.low^=w}}for(var T=1;T<25;T++){var B,w,M=L[T],m=M.high,u=M.low,v=J[T];if(v<32)B=m<<v|u>>>32-v,w=u<<v|m>>>32-v;else B=u<<v-32|m>>>64-v,w=m<<v-32|u>>>64-v;var g=U[V[T]];g.high=B,g.low=w}var h=U[0],k=L[0];h.high=k.high,h.low=k.low;for(var z=0;z<5;z++)for(var Z=0;Z<5;Z++){var T=z+5*Z,M=L[T],Y0=U[T],U0=U[(z+1)%5+5*Z],B0=U[(z+2)%5+5*Z];M.high=Y0.high^~U0.high&B0.high,M.low=Y0.low^~U0.low&B0.low}var M=L[0],f0=N[F];M.high^=f0.high,M.low^=f0.low}},_doFinalize:function(){var X=this._data,D=X.words,L=this._nDataBytes*8,H=X.sigBytes*8,O=this.blockSize*32;D[H>>>5]|=1<<24-H%32,D[(d.ceil((H+1)/O)*O>>>5)-1]|=128,X.sigBytes=D.length*4,this._process();var j=this._state,e=this.cfg.outputLength/8,M=e/8,F=[];for(var z=0;z<M;z++){var B=j[z],w=B.high,Z=B.low;w=(w<<8|w>>>24)&16711935|(w<<24|w>>>8)&4278255360,Z=(Z<<8|Z>>>24)&16711935|(Z<<24|Z>>>8)&4278255360,F.push(Z),F.push(w)}return new q.init(F,e)},clone:function(){var X=$.clone.call(this),D=X._state=this._state.slice(0);for(var L=0;L<25;L++)D[L]=D[L].clone();return X}});b.SHA3=$._createHelper(K),b.HmacSHA3=$._createHmacHelper(K)}(Math),x.SHA3})});var zd=i((x4,Fd)=>{(function(x,d){if(typeof x4==="object")Fd.exports=x4=d(O0());else if(typeof define==="function"&&define.amd)define(["./core"],d);else d(x.CryptoJS)})(x4,function(x){return function(d){var b=x,c=b.lib,q=c.WordArray,$=c.Hasher,Y=b.algo,G=q.create([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13]),E=q.create([5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11]),J=q.create([11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6]),V=q.create([8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11]),N=q.create([0,1518500249,1859775393,2400959708,2840853838]),U=q.create([1352829926,1548603684,1836072691,2053994217,0]),K=Y.RIPEMD160=$.extend({_doReset:function(){this._hash=q.create([1732584193,4023233417,2562383102,271733878,3285377520])},_doProcessBlock:function(e,M){for(var F=0;F<16;F++){var z=M+F,B=e[z];e[z]=(B<<8|B>>>24)&16711935|(B<<24|B>>>8)&4278255360}var w=this._hash.words,Z=N.words,P=U.words,I=G.words,a=E.words,S=J.words,y=V.words,T,m,u,v,g,h,k,Y0,U0,B0;h=T=w[0],k=m=w[1],Y0=u=w[2],U0=v=w[3],B0=g=w[4];var f0;for(var F=0;F<80;F+=1){if(f0=T+e[M+I[F]]|0,F<16)f0+=X(m,u,v)+Z[0];else if(F<32)f0+=D(m,u,v)+Z[1];else if(F<48)f0+=L(m,u,v)+Z[2];else if(F<64)f0+=H(m,u,v)+Z[3];else f0+=O(m,u,v)+Z[4];if(f0=f0|0,f0=j(f0,S[F]),f0=f0+g|0,T=g,g=v,v=j(u,10),u=m,m=f0,f0=h+e[M+a[F]]|0,F<16)f0+=O(k,Y0,U0)+P[0];else if(F<32)f0+=H(k,Y0,U0)+P[1];else if(F<48)f0+=L(k,Y0,U0)+P[2];else if(F<64)f0+=D(k,Y0,U0)+P[3];else f0+=X(k,Y0,U0)+P[4];f0=f0|0,f0=j(f0,y[F]),f0=f0+B0|0,h=B0,B0=U0,U0=j(Y0,10),Y0=k,k=f0}f0=w[1]+u+U0|0,w[1]=w[2]+v+B0|0,w[2]=w[3]+g+h|0,w[3]=w[4]+T+k|0,w[4]=w[0]+m+Y0|0,w[0]=f0},_doFinalize:function(){var e=this._data,M=e.words,F=this._nDataBytes*8,z=e.sigBytes*8;M[z>>>5]|=128<<24-z%32,M[(z+64>>>9<<4)+14]=(F<<8|F>>>24)&16711935|(F<<24|F>>>8)&4278255360,e.sigBytes=(M.length+1)*4,this._process();var B=this._hash,w=B.words;for(var Z=0;Z<5;Z++){var P=w[Z];w[Z]=(P<<8|P>>>24)&16711935|(P<<24|P>>>8)&4278255360}return B},clone:function(){var e=$.clone.call(this);return e._hash=this._hash.clone(),e}});function X(e,M,F){return e^M^F}function D(e,M,F){return e&M|~e&F}function L(e,M,F){return(e|~M)^F}function H(e,M,F){return e&F|M&~F}function O(e,M,F){return e^(M|~F)}function j(e,M){return e<<M|e>>>32-M}b.RIPEMD160=$._createHelper(K),b.HmacRIPEMD160=$._createHmacHelper(K)}(Math),x.RIPEMD160})});var d4=i((f4,Bd)=>{(function(x,d){if(typeof f4==="object")Bd.exports=f4=d(O0());else if(typeof define==="function"&&define.amd)define(["./core"],d);else d(x.CryptoJS)})(f4,function(x){(function(){var d=x,b=d.lib,c=b.Base,q=d.enc,$=q.Utf8,Y=d.algo,G=Y.HMAC=c.extend({init:function(E,J){if(E=this._hasher=new E.init,typeof J=="string")J=$.parse(J);var V=E.blockSize,N=V*4;if(J.sigBytes>N)J=E.finalize(J);J.clamp();var U=this._oKey=J.clone(),K=this._iKey=J.clone(),X=U.words,D=K.words;for(var L=0;L<V;L++)X[L]^=1549556828,D[L]^=909522486;U.sigBytes=K.sigBytes=N,this.reset()},reset:function(){var E=this._hasher;E.reset(),E.update(this._iKey)},update:function(E){return this._hasher.update(E),this},finalize:function(E){var J=this._hasher,V=J.finalize(E);J.reset();var N=J.finalize(this._oKey.clone().concat(V));return N}})})()})});var Pd=i((b4,wd)=>{(function(x,d,b){if(typeof b4==="object")wd.exports=b4=d(O0(),i5(),d4());else if(typeof define==="function"&&define.amd)define(["./core","./sha256","./hmac"],d);else d(x.CryptoJS)})(b4,function(x){return function(){var d=x,b=d.lib,c=b.Base,q=b.WordArray,$=d.algo,Y=$.SHA256,G=$.HMAC,E=$.PBKDF2=c.extend({cfg:c.extend({keySize:4,hasher:Y,iterations:250000}),init:function(J){this.cfg=this.cfg.extend(J)},compute:function(J,V){var N=this.cfg,U=G.create(N.hasher,J),K=q.create(),X=q.create([1]),D=K.words,L=X.words,H=N.keySize,O=N.iterations;while(D.length<H){var j=U.update(V).finalize(X);U.reset();var e=j.words,M=e.length,F=j;for(var z=1;z<O;z++){F=U.finalize(F),U.reset();var B=F.words;for(var w=0;w<M;w++)e[w]^=B[w]}K.concat(j),L[0]++}return K.sigBytes=H*4,K}});d.PBKDF2=function(J,V,N){return E.create(N).compute(J,V)}}(),x.PBKDF2})});var G6=i((c4,vd)=>{(function(x,d,b){if(typeof c4==="object")vd.exports=c4=d(O0(),A9(),d4());else if(typeof define==="function"&&define.amd)define(["./core","./sha1","./hmac"],d);else d(x.CryptoJS)})(c4,function(x){return function(){var d=x,b=d.lib,c=b.Base,q=b.WordArray,$=d.algo,Y=$.MD5,G=$.EvpKDF=c.extend({cfg:c.extend({keySize:4,hasher:Y,iterations:1}),init:function(E){this.cfg=this.cfg.extend(E)},compute:function(E,J){var V,N=this.cfg,U=N.hasher.create(),K=q.create(),X=K.words,D=N.keySize,L=N.iterations;while(X.length<D){if(V)U.update(V);V=U.update(E).finalize(J),U.reset();for(var H=1;H<L;H++)V=U.finalize(V),U.reset();K.concat(V)}return K.sigBytes=D*4,K}});d.EvpKDF=function(E,J,V){return G.create(V).compute(E,J)}}(),x.EvpKDF})});var i0=i((q4,Id)=>{(function(x,d,b){if(typeof q4==="object")Id.exports=q4=d(O0(),G6());else if(typeof define==="function"&&define.amd)define(["./core","./evpkdf"],d);else d(x.CryptoJS)})(q4,function(x){x.lib.Cipher||function(d){var b=x,c=b.lib,q=c.Base,$=c.WordArray,Y=c.BufferedBlockAlgorithm,G=b.enc,E=G.Utf8,J=G.Base64,V=b.algo,N=V.EvpKDF,U=c.Cipher=Y.extend({cfg:q.extend(),createEncryptor:function(P,I){return this.create(this._ENC_XFORM_MODE,P,I)},createDecryptor:function(P,I){return this.create(this._DEC_XFORM_MODE,P,I)},init:function(P,I,a){this.cfg=this.cfg.extend(a),this._xformMode=P,this._key=I,this.reset()},reset:function(){Y.reset.call(this),this._doReset()},process:function(P){return this._append(P),this._process()},finalize:function(P){if(P)this._append(P);var I=this._doFinalize();return I},keySize:4,ivSize:4,_ENC_XFORM_MODE:1,_DEC_XFORM_MODE:2,_createHelper:function(){function P(I){if(typeof I=="string")return Z;else return z}return function(I){return{encrypt:function(a,S,y){return P(S).encrypt(I,a,S,y)},decrypt:function(a,S,y){return P(S).decrypt(I,a,S,y)}}}}()}),K=c.StreamCipher=U.extend({_doFinalize:function(){var P=this._process(!0);return P},blockSize:1}),X=b.mode={},D=c.BlockCipherMode=q.extend({createEncryptor:function(P,I){return this.Encryptor.create(P,I)},createDecryptor:function(P,I){return this.Decryptor.create(P,I)},init:function(P,I){this._cipher=P,this._iv=I}}),L=X.CBC=function(){var P=D.extend();P.Encryptor=P.extend({processBlock:function(a,S){var y=this._cipher,T=y.blockSize;I.call(this,a,S,T),y.encryptBlock(a,S),this._prevBlock=a.slice(S,S+T)}}),P.Decryptor=P.extend({processBlock:function(a,S){var y=this._cipher,T=y.blockSize,m=a.slice(S,S+T);y.decryptBlock(a,S),I.call(this,a,S,T),this._prevBlock=m}});function I(a,S,y){var T,m=this._iv;if(m)T=m,this._iv=d;else T=this._prevBlock;for(var u=0;u<y;u++)a[S+u]^=T[u]}return P}(),H=b.pad={},O=H.Pkcs7={pad:function(P,I){var a=I*4,S=a-P.sigBytes%a,y=S<<24|S<<16|S<<8|S,T=[];for(var m=0;m<S;m+=4)T.push(y);var u=$.create(T,S);P.concat(u)},unpad:function(P){var I=P.words[P.sigBytes-1>>>2]&255;P.sigBytes-=I}},j=c.BlockCipher=U.extend({cfg:U.cfg.extend({mode:L,padding:O}),reset:function(){var P;U.reset.call(this);var I=this.cfg,a=I.iv,S=I.mode;if(this._xformMode==this._ENC_XFORM_MODE)P=S.createEncryptor;else P=S.createDecryptor,this._minBufferSize=1;if(this._mode&&this._mode.__creator==P)this._mode.init(this,a&&a.words);else this._mode=P.call(S,this,a&&a.words),this._mode.__creator=P},_doProcessBlock:function(P,I){this._mode.processBlock(P,I)},_doFinalize:function(){var P,I=this.cfg.padding;if(this._xformMode==this._ENC_XFORM_MODE)I.pad(this._data,this.blockSize),P=this._process(!0);else P=this._process(!0),I.unpad(P);return P},blockSize:4}),e=c.CipherParams=q.extend({init:function(P){this.mixIn(P)},toString:function(P){return(P||this.formatter).stringify(this)}}),M=b.format={},F=M.OpenSSL={stringify:function(P){var I,a=P.ciphertext,S=P.salt;if(S)I=$.create([1398893684,1701076831]).concat(S).concat(a);else I=a;return I.toString(J)},parse:function(P){var I,a=J.parse(P),S=a.words;if(S[0]==1398893684&&S[1]==1701076831)I=$.create(S.slice(2,4)),S.splice(0,4),a.sigBytes-=16;return e.create({ciphertext:a,salt:I})}},z=c.SerializableCipher=q.extend({cfg:q.extend({format:F}),encrypt:function(P,I,a,S){S=this.cfg.extend(S);var y=P.createEncryptor(a,S),T=y.finalize(I),m=y.cfg;return e.create({ciphertext:T,key:a,iv:m.iv,algorithm:P,mode:m.mode,padding:m.padding,blockSize:P.blockSize,formatter:S.format})},decrypt:function(P,I,a,S){S=this.cfg.extend(S),I=this._parse(I,S.format);var y=P.createDecryptor(a,S).finalize(I.ciphertext);return y},_parse:function(P,I){if(typeof P=="string")return I.parse(P,this);else return P}}),B=b.kdf={},w=B.OpenSSL={execute:function(P,I,a,S,y){if(!S)S=$.random(8);if(!y)var T=N.create({keySize:I+a}).compute(P,S);else var T=N.create({keySize:I+a,hasher:y}).compute(P,S);var m=$.create(T.words.slice(I),a*4);return T.sigBytes=I*4,e.create({key:T,iv:m,salt:S})}},Z=c.PasswordBasedCipher=z.extend({cfg:z.cfg.extend({kdf:w}),encrypt:function(P,I,a,S){S=this.cfg.extend(S);var y=S.kdf.execute(a,P.keySize,P.ivSize,S.salt,S.hasher);S.iv=y.iv;var T=z.encrypt.call(this,P,I,y.key,S);return T.mixIn(y),T},decrypt:function(P,I,a,S){S=this.cfg.extend(S),I=this._parse(I,S.format);var y=S.kdf.execute(a,P.keySize,P.ivSize,I.salt,S.hasher);S.iv=y.iv;var T=z.decrypt.call(this,P,I,y.key,S);return T}})}()})});var Zd=i(($4,Sd)=>{(function(x,d,b){if(typeof $4==="object")Sd.exports=$4=d(O0(),i0());else if(typeof define==="function"&&define.amd)define(["./core","./cipher-core"],d);else d(x.CryptoJS)})($4,function(x){return x.mode.CFB=function(){var d=x.lib.BlockCipherMode.extend();d.Encryptor=d.extend({processBlock:function(c,q){var $=this._cipher,Y=$.blockSize;b.call(this,c,q,Y,$),this._prevBlock=c.slice(q,q+Y)}}),d.Decryptor=d.extend({processBlock:function(c,q){var $=this._cipher,Y=$.blockSize,G=c.slice(q,q+Y);b.call(this,c,q,Y,$),this._prevBlock=G}});function b(c,q,$,Y){var G,E=this._iv;if(E)G=E.slice(0),this._iv=void 0;else G=this._prevBlock;Y.encryptBlock(G,0);for(var J=0;J<$;J++)c[q+J]^=G[J]}return d}(),x.mode.CFB})});var Cd=i((Q4,Td)=>{(function(x,d,b){if(typeof Q4==="object")Td.exports=Q4=d(O0(),i0());else if(typeof define==="function"&&define.amd)define(["./core","./cipher-core"],d);else d(x.CryptoJS)})(Q4,function(x){return x.mode.CTR=function(){var d=x.lib.BlockCipherMode.extend(),b=d.Encryptor=d.extend({processBlock:function(c,q){var $=this._cipher,Y=$.blockSize,G=this._iv,E=this._counter;if(G)E=this._counter=G.slice(0),this._iv=void 0;var J=E.slice(0);$.encryptBlock(J,0),E[Y-1]=E[Y-1]+1|0;for(var V=0;V<Y;V++)c[q+V]^=J[V]}});return d.Decryptor=b,d}(),x.mode.CTR})});var gd=i((Y4,kd)=>{(function(x,d,b){if(typeof Y4==="object")kd.exports=Y4=d(O0(),i0());else if(typeof define==="function"&&define.amd)define(["./core","./cipher-core"],d);else d(x.CryptoJS)})(Y4,function(x){return x.mode.CTRGladman=function(){var d=x.lib.BlockCipherMode.extend();function b($){if(($>>24&255)===255){var Y=$>>16&255,G=$>>8&255,E=$&255;if(Y===255)if(Y=0,G===255)if(G=0,E===255)E=0;else++E;else++G;else++Y;$=0,$+=Y<<16,$+=G<<8,$+=E}else $+=16777216;return $}function c($){if(($[0]=b($[0]))===0)$[1]=b($[1]);return $}var q=d.Encryptor=d.extend({processBlock:function($,Y){var G=this._cipher,E=G.blockSize,J=this._iv,V=this._counter;if(J)V=this._counter=J.slice(0),this._iv=void 0;c(V);var N=V.slice(0);G.encryptBlock(N,0);for(var U=0;U<E;U++)$[Y+U]^=N[U]}});return d.Decryptor=q,d}(),x.mode.CTRGladman})});var ad=i((G4,hd)=>{(function(x,d,b){if(typeof G4==="object")hd.exports=G4=d(O0(),i0());else if(typeof define==="function"&&define.amd)define(["./core","./cipher-core"],d);else d(x.CryptoJS)})(G4,function(x){return x.mode.OFB=function(){var d=x.lib.BlockCipherMode.extend(),b=d.Encryptor=d.extend({processBlock:function(c,q){var $=this._cipher,Y=$.blockSize,G=this._iv,E=this._keystream;if(G)E=this._keystream=G.slice(0),this._iv=void 0;$.encryptBlock(E,0);for(var J=0;J<Y;J++)c[q+J]^=E[J]}});return d.Decryptor=b,d}(),x.mode.OFB})});var md=i((E4,_d)=>{(function(x,d,b){if(typeof E4==="object")_d.exports=E4=d(O0(),i0());else if(typeof define==="function"&&define.amd)define(["./core","./cipher-core"],d);else d(x.CryptoJS)})(E4,function(x){return x.mode.ECB=function(){var d=x.lib.BlockCipherMode.extend();return d.Encryptor=d.extend({processBlock:function(b,c){this._cipher.encryptBlock(b,c)}}),d.Decryptor=d.extend({processBlock:function(b,c){this._cipher.decryptBlock(b,c)}}),d}(),x.mode.ECB})});var yd=i((J4,ud)=>{(function(x,d,b){if(typeof J4==="object")ud.exports=J4=d(O0(),i0());else if(typeof define==="function"&&define.amd)define(["./core","./cipher-core"],d);else d(x.CryptoJS)})(J4,function(x){return x.pad.AnsiX923={pad:function(d,b){var c=d.sigBytes,q=b*4,$=q-c%q,Y=c+$-1;d.clamp(),d.words[Y>>>2]|=$<<24-Y%4*8,d.sigBytes+=$},unpad:function(d){var b=d.words[d.sigBytes-1>>>2]&255;d.sigBytes-=b}},x.pad.Ansix923})});var ld=i((V4,pd)=>{(function(x,d,b){if(typeof V4==="object")pd.exports=V4=d(O0(),i0());else if(typeof define==="function"&&define.amd)define(["./core","./cipher-core"],d);else d(x.CryptoJS)})(V4,function(x){return x.pad.Iso10126={pad:function(d,b){var c=b*4,q=c-d.sigBytes%c;d.concat(x.lib.WordArray.random(q-1)).concat(x.lib.WordArray.create([q<<24],1))},unpad:function(d){var b=d.words[d.sigBytes-1>>>2]&255;d.sigBytes-=b}},x.pad.Iso10126})});var id=i((N4,nd)=>{(function(x,d,b){if(typeof N4==="object")nd.exports=N4=d(O0(),i0());else if(typeof define==="function"&&define.amd)define(["./core","./cipher-core"],d);else d(x.CryptoJS)})(N4,function(x){return x.pad.Iso97971={pad:function(d,b){d.concat(x.lib.WordArray.create([2147483648],1)),x.pad.ZeroPadding.pad(d,b)},unpad:function(d){x.pad.ZeroPadding.unpad(d),d.sigBytes--}},x.pad.Iso97971})});var sd=i((U4,rd)=>{(function(x,d,b){if(typeof U4==="object")rd.exports=U4=d(O0(),i0());else if(typeof define==="function"&&define.amd)define(["./core","./cipher-core"],d);else d(x.CryptoJS)})(U4,function(x){return x.pad.ZeroPadding={pad:function(d,b){var c=b*4;d.clamp(),d.sigBytes+=c-(d.sigBytes%c||c)},unpad:function(d){var b=d.words,c=d.sigBytes-1;for(var c=d.sigBytes-1;c>=0;c--)if(b[c>>>2]>>>24-c%4*8&255){d.sigBytes=c+1;break}}},x.pad.ZeroPadding})});var td=i((K4,od)=>{(function(x,d,b){if(typeof K4==="object")od.exports=K4=d(O0(),i0());else if(typeof define==="function"&&define.amd)define(["./core","./cipher-core"],d);else d(x.CryptoJS)})(K4,function(x){return x.pad.NoPadding={pad:function(){},unpad:function(){}},x.pad.NoPadding})});var fb=i((R4,xb)=>{(function(x,d,b){if(typeof R4==="object")xb.exports=R4=d(O0(),i0());else if(typeof define==="function"&&define.amd)define(["./core","./cipher-core"],d);else d(x.CryptoJS)})(R4,function(x){return function(d){var b=x,c=b.lib,q=c.CipherParams,$=b.enc,Y=$.Hex,G=b.format,E=G.Hex={stringify:function(J){return J.ciphertext.toString(Y)},parse:function(J){var V=Y.parse(J);return q.create({ciphertext:V})}}}(),x.format.Hex})});var bb=i((X4,db)=>{(function(x,d,b){if(typeof X4==="object")db.exports=X4=d(O0(),P6(),v6(),G6(),i0());else if(typeof define==="function"&&define.amd)define(["./core","./enc-base64","./md5","./evpkdf","./cipher-core"],d);else d(x.CryptoJS)})(X4,function(x){return function(){var d=x,b=d.lib,c=b.BlockCipher,q=d.algo,$=[],Y=[],G=[],E=[],J=[],V=[],N=[],U=[],K=[],X=[];(function(){var H=[];for(var O=0;O<256;O++)if(O<128)H[O]=O<<1;else H[O]=O<<1^283;var j=0,e=0;for(var O=0;O<256;O++){var M=e^e<<1^e<<2^e<<3^e<<4;M=M>>>8^M&255^99,$[j]=M,Y[M]=j;var F=H[j],z=H[F],B=H[z],w=H[M]*257^M*16843008;G[j]=w<<24|w>>>8,E[j]=w<<16|w>>>16,J[j]=w<<8|w>>>24,V[j]=w;var w=B*16843009^z*65537^F*257^j*16843008;if(N[M]=w<<24|w>>>8,U[M]=w<<16|w>>>16,K[M]=w<<8|w>>>24,X[M]=w,!j)j=e=1;else j=F^H[H[H[B^F]]],e^=H[H[e]]}})();var D=[0,1,2,4,8,16,32,64,128,27,54],L=q.AES=c.extend({_doReset:function(){var H;if(this._nRounds&&this._keyPriorReset===this._key)return;var O=this._keyPriorReset=this._key,j=O.words,e=O.sigBytes/4,M=this._nRounds=e+6,F=(M+1)*4,z=this._keySchedule=[];for(var B=0;B<F;B++)if(B<e)z[B]=j[B];else{if(H=z[B-1],!(B%e))H=H<<8|H>>>24,H=$[H>>>24]<<24|$[H>>>16&255]<<16|$[H>>>8&255]<<8|$[H&255],H^=D[B/e|0]<<24;else if(e>6&&B%e==4)H=$[H>>>24]<<24|$[H>>>16&255]<<16|$[H>>>8&255]<<8|$[H&255];z[B]=z[B-e]^H}var w=this._invKeySchedule=[];for(var Z=0;Z<F;Z++){var B=F-Z;if(Z%4)var H=z[B];else var H=z[B-4];if(Z<4||B<=4)w[Z]=H;else w[Z]=N[$[H>>>24]]^U[$[H>>>16&255]]^K[$[H>>>8&255]]^X[$[H&255]]}},encryptBlock:function(H,O){this._doCryptBlock(H,O,this._keySchedule,G,E,J,V,$)},decryptBlock:function(H,O){var j=H[O+1];H[O+1]=H[O+3],H[O+3]=j,this._doCryptBlock(H,O,this._invKeySchedule,N,U,K,X,Y);var j=H[O+1];H[O+1]=H[O+3],H[O+3]=j},_doCryptBlock:function(H,O,j,e,M,F,z,B){var w=this._nRounds,Z=H[O]^j[0],P=H[O+1]^j[1],I=H[O+2]^j[2],a=H[O+3]^j[3],S=4;for(var y=1;y<w;y++){var T=e[Z>>>24]^M[P>>>16&255]^F[I>>>8&255]^z[a&255]^j[S++],m=e[P>>>24]^M[I>>>16&255]^F[a>>>8&255]^z[Z&255]^j[S++],u=e[I>>>24]^M[a>>>16&255]^F[Z>>>8&255]^z[P&255]^j[S++],v=e[a>>>24]^M[Z>>>16&255]^F[P>>>8&255]^z[I&255]^j[S++];Z=T,P=m,I=u,a=v}var T=(B[Z>>>24]<<24|B[P>>>16&255]<<16|B[I>>>8&255]<<8|B[a&255])^j[S++],m=(B[P>>>24]<<24|B[I>>>16&255]<<16|B[a>>>8&255]<<8|B[Z&255])^j[S++],u=(B[I>>>24]<<24|B[a>>>16&255]<<16|B[Z>>>8&255]<<8|B[P&255])^j[S++],v=(B[a>>>24]<<24|B[Z>>>16&255]<<16|B[P>>>8&255]<<8|B[I&255])^j[S++];H[O]=T,H[O+1]=m,H[O+2]=u,H[O+3]=v},keySize:8});d.AES=c._createHelper(L)}(),x.AES})});var qb=i((j4,cb)=>{(function(x,d,b){if(typeof j4==="object")cb.exports=j4=d(O0(),P6(),v6(),G6(),i0());else if(typeof define==="function"&&define.amd)define(["./core","./enc-base64","./md5","./evpkdf","./cipher-core"],d);else d(x.CryptoJS)})(j4,function(x){return function(){var d=x,b=d.lib,c=b.WordArray,q=b.BlockCipher,$=d.algo,Y=[57,49,41,33,25,17,9,1,58,50,42,34,26,18,10,2,59,51,43,35,27,19,11,3,60,52,44,36,63,55,47,39,31,23,15,7,62,54,46,38,30,22,14,6,61,53,45,37,29,21,13,5,28,20,12,4],G=[14,17,11,24,1,5,3,28,15,6,21,10,23,19,12,4,26,8,16,7,27,20,13,2,41,52,31,37,47,55,30,40,51,45,33,48,44,49,39,56,34,53,46,42,50,36,29,32],E=[1,2,4,6,8,10,12,14,15,17,19,21,23,25,27,28],J=[{0:8421888,268435456:32768,536870912:8421378,805306368:2,1073741824:512,1342177280:8421890,1610612736:8389122,1879048192:8388608,2147483648:514,2415919104:8389120,2684354560:33280,2952790016:8421376,3221225472:32770,3489660928:8388610,3758096384:0,4026531840:33282,134217728:0,402653184:8421890,671088640:33282,939524096:32768,1207959552:8421888,1476395008:512,1744830464:8421378,2013265920:2,2281701376:8389120,2550136832:33280,2818572288:8421376,3087007744:8389122,3355443200:8388610,3623878656:32770,3892314112:514,4160749568:8388608,1:32768,268435457:2,536870913:8421888,805306369:8388608,1073741825:8421378,1342177281:33280,1610612737:512,1879048193:8389122,2147483649:8421890,2415919105:8421376,2684354561:8388610,2952790017:33282,3221225473:514,3489660929:8389120,3758096385:32770,4026531841:0,134217729:8421890,402653185:8421376,671088641:8388608,939524097:512,1207959553:32768,1476395009:8388610,1744830465:2,2013265921:33282,2281701377:32770,2550136833:8389122,2818572289:514,3087007745:8421888,3355443201:8389120,3623878657:0,3892314113:33280,4160749569:8421378},{0:1074282512,16777216:16384,33554432:524288,50331648:1074266128,67108864:1073741840,83886080:1074282496,100663296:1073758208,117440512:16,134217728:540672,150994944:1073758224,167772160:1073741824,184549376:540688,201326592:524304,218103808:0,234881024:16400,251658240:1074266112,8388608:1073758208,25165824:540688,41943040:16,58720256:1073758224,75497472:1074282512,92274688:1073741824,109051904:524288,125829120:1074266128,142606336:524304,159383552:0,176160768:16384,192937984:1074266112,209715200:1073741840,226492416:540672,243269632:1074282496,260046848:16400,268435456:0,285212672:1074266128,301989888:1073758224,318767104:1074282496,335544320:1074266112,352321536:16,369098752:540688,385875968:16384,402653184:16400,419430400:524288,436207616:524304,452984832:1073741840,469762048:540672,486539264:1073758208,503316480:1073741824,520093696:1074282512,276824064:540688,293601280:524288,310378496:1074266112,327155712:16384,343932928:1073758208,360710144:1074282512,377487360:16,394264576:1073741824,411041792:1074282496,427819008:1073741840,444596224:1073758224,461373440:524304,478150656:0,494927872:16400,511705088:1074266128,528482304:540672},{0:260,1048576:0,2097152:67109120,3145728:65796,4194304:65540,5242880:67108868,6291456:67174660,7340032:67174400,8388608:67108864,9437184:67174656,10485760:65792,11534336:67174404,12582912:67109124,13631488:65536,14680064:4,15728640:256,524288:67174656,1572864:67174404,2621440:0,3670016:67109120,4718592:67108868,5767168:65536,6815744:65540,7864320:260,8912896:4,9961472:256,11010048:67174400,12058624:65796,13107200:65792,14155776:67109124,15204352:67174660,16252928:67108864,16777216:67174656,17825792:65540,18874368:65536,19922944:67109120,20971520:256,22020096:67174660,23068672:67108868,24117248:0,25165824:67109124,26214400:67108864,27262976:4,28311552:65792,29360128:67174400,30408704:260,31457280:65796,32505856:67174404,17301504:67108864,18350080:260,19398656:67174656,20447232:0,21495808:65540,22544384:67109120,23592960:256,24641536:67174404,25690112:65536,26738688:67174660,27787264:65796,28835840:67108868,29884416:67109124,30932992:67174400,31981568:4,33030144:65792},{0:2151682048,65536:2147487808,131072:4198464,196608:2151677952,262144:0,327680:4198400,393216:2147483712,458752:4194368,524288:2147483648,589824:4194304,655360:64,720896:2147487744,786432:2151678016,851968:4160,917504:4096,983040:2151682112,32768:2147487808,98304:64,163840:2151678016,229376:2147487744,294912:4198400,360448:2151682112,425984:0,491520:2151677952,557056:4096,622592:2151682048,688128:4194304,753664:4160,819200:2147483648,884736:4194368,950272:4198464,1015808:2147483712,1048576:4194368,1114112:4198400,1179648:2147483712,1245184:0,1310720:4160,1376256:2151678016,1441792:2151682048,1507328:2147487808,1572864:2151682112,1638400:2147483648,1703936:2151677952,1769472:4198464,1835008:2147487744,1900544:4194304,1966080:64,2031616:4096,1081344:2151677952,1146880:2151682112,1212416:0,1277952:4198400,1343488:4194368,1409024:2147483648,1474560:2147487808,1540096:64,1605632:2147483712,1671168:4096,1736704:2147487744,1802240:2151678016,1867776:4160,1933312:2151682048,1998848:4194304,2064384:4198464},{0:128,4096:17039360,8192:262144,12288:536870912,16384:537133184,20480:16777344,24576:553648256,28672:262272,32768:16777216,36864:537133056,40960:536871040,45056:553910400,49152:553910272,53248:0,57344:17039488,61440:553648128,2048:17039488,6144:553648256,10240:128,14336:17039360,18432:262144,22528:537133184,26624:553910272,30720:536870912,34816:537133056,38912:0,43008:553910400,47104:16777344,51200:536871040,55296:553648128,59392:16777216,63488:262272,65536:262144,69632:128,73728:536870912,77824:553648256,81920:16777344,86016:553910272,90112:537133184,94208:16777216,98304:553910400,102400:553648128,106496:17039360,110592:537133056,114688:262272,118784:536871040,122880:0,126976:17039488,67584:553648256,71680:16777216,75776:17039360,79872:537133184,83968:536870912,88064:17039488,92160:128,96256:553910272,100352:262272,104448:553910400,108544:0,112640:553648128,116736:16777344,120832:262144,124928:537133056,129024:536871040},{0:268435464,256:8192,512:270532608,768:270540808,1024:268443648,1280:2097152,1536:2097160,1792:268435456,2048:0,2304:268443656,2560:2105344,2816:8,3072:270532616,3328:2105352,3584:8200,3840:270540800,128:270532608,384:270540808,640:8,896:2097152,1152:2105352,1408:268435464,1664:268443648,1920:8200,2176:2097160,2432:8192,2688:268443656,2944:270532616,3200:0,3456:270540800,3712:2105344,3968:268435456,4096:268443648,4352:270532616,4608:270540808,4864:8200,5120:2097152,5376:268435456,5632:268435464,5888:2105344,6144:2105352,6400:0,6656:8,6912:270532608,7168:8192,7424:268443656,7680:270540800,7936:2097160,4224:8,4480:2105344,4736:2097152,4992:268435464,5248:268443648,5504:8200,5760:270540808,6016:270532608,6272:270540800,6528:270532616,6784:8192,7040:2105352,7296:2097160,7552:0,7808:268435456,8064:268443656},{0:1048576,16:33555457,32:1024,48:1049601,64:34604033,80:0,96:1,112:34603009,128:33555456,144:1048577,160:33554433,176:34604032,192:34603008,208:1025,224:1049600,240:33554432,8:34603009,24:0,40:33555457,56:34604032,72:1048576,88:33554433,104:33554432,120:1025,136:1049601,152:33555456,168:34603008,184:1048577,200:1024,216:34604033,232:1,248:1049600,256:33554432,272:1048576,288:33555457,304:34603009,320:1048577,336:33555456,352:34604032,368:1049601,384:1025,400:34604033,416:1049600,432:1,448:0,464:34603008,480:33554433,496:1024,264:1049600,280:33555457,296:34603009,312:1,328:33554432,344:1048576,360:1025,376:34604032,392:33554433,408:34603008,424:0,440:34604033,456:1049601,472:1024,488:33555456,504:1048577},{0:134219808,1:131072,2:134217728,3:32,4:131104,5:134350880,6:134350848,7:2048,8:134348800,9:134219776,10:133120,11:134348832,12:2080,13:0,14:134217760,15:133152,2147483648:2048,2147483649:134350880,2147483650:134219808,2147483651:134217728,2147483652:134348800,2147483653:133120,2147483654:133152,2147483655:32,2147483656:134217760,2147483657:2080,2147483658:131104,2147483659:134350848,2147483660:0,2147483661:134348832,2147483662:134219776,2147483663:131072,16:133152,17:134350848,18:32,19:2048,20:134219776,21:134217760,22:134348832,23:131072,24:0,25:131104,26:134348800,27:134219808,28:134350880,29:133120,30:2080,31:134217728,2147483664:131072,2147483665:2048,2147483666:134348832,2147483667:133152,2147483668:32,2147483669:134348800,2147483670:134217728,2147483671:134219808,2147483672:134350880,2147483673:134217760,2147483674:134219776,2147483675:0,2147483676:133120,2147483677:2080,2147483678:131104,2147483679:134350848}],V=[4160749569,528482304,33030144,2064384,129024,8064,504,2147483679],N=$.DES=q.extend({_doReset:function(){var D=this._key,L=D.words,H=[];for(var O=0;O<56;O++){var j=Y[O]-1;H[O]=L[j>>>5]>>>31-j%32&1}var e=this._subKeys=[];for(var M=0;M<16;M++){var F=e[M]=[],z=E[M];for(var O=0;O<24;O++)F[O/6|0]|=H[(G[O]-1+z)%28]<<31-O%6,F[4+(O/6|0)]|=H[28+(G[O+24]-1+z)%28]<<31-O%6;F[0]=F[0]<<1|F[0]>>>31;for(var O=1;O<7;O++)F[O]=F[O]>>>(O-1)*4+3;F[7]=F[7]<<5|F[7]>>>27}var B=this._invSubKeys=[];for(var O=0;O<16;O++)B[O]=e[15-O]},encryptBlock:function(D,L){this._doCryptBlock(D,L,this._subKeys)},decryptBlock:function(D,L){this._doCryptBlock(D,L,this._invSubKeys)},_doCryptBlock:function(D,L,H){this._lBlock=D[L],this._rBlock=D[L+1],U.call(this,4,252645135),U.call(this,16,65535),K.call(this,2,858993459),K.call(this,8,16711935),U.call(this,1,1431655765);for(var O=0;O<16;O++){var j=H[O],e=this._lBlock,M=this._rBlock,F=0;for(var z=0;z<8;z++)F|=J[z][((M^j[z])&V[z])>>>0];this._lBlock=M,this._rBlock=e^F}var B=this._lBlock;this._lBlock=this._rBlock,this._rBlock=B,U.call(this,1,1431655765),K.call(this,8,16711935),K.call(this,2,858993459),U.call(this,16,65535),U.call(this,4,252645135),D[L]=this._lBlock,D[L+1]=this._rBlock},keySize:2,ivSize:2,blockSize:2});function U(D,L){var H=(this._lBlock>>>D^this._rBlock)&L;this._rBlock^=H,this._lBlock^=H<<D}function K(D,L){var H=(this._rBlock>>>D^this._lBlock)&L;this._lBlock^=H,this._rBlock^=H<<D}d.DES=q._createHelper(N);var X=$.TripleDES=q.extend({_doReset:function(){var D=this._key,L=D.words;if(L.length!==2&&L.length!==4&&L.length<6)throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");var H=L.slice(0,2),O=L.length<4?L.slice(0,2):L.slice(2,4),j=L.length<6?L.slice(0,2):L.slice(4,6);this._des1=N.createEncryptor(c.create(H)),this._des2=N.createEncryptor(c.create(O)),this._des3=N.createEncryptor(c.create(j))},encryptBlock:function(D,L){this._des1.encryptBlock(D,L),this._des2.decryptBlock(D,L),this._des3.encryptBlock(D,L)},decryptBlock:function(D,L){this._des3.decryptBlock(D,L),this._des2.encryptBlock(D,L),this._des1.decryptBlock(D,L)},keySize:6,ivSize:2,blockSize:2});d.TripleDES=q._createHelper(X)}(),x.TripleDES})});var Qb=i((O4,$b)=>{(function(x,d,b){if(typeof O4==="object")$b.exports=O4=d(O0(),P6(),v6(),G6(),i0());else if(typeof define==="function"&&define.amd)define(["./core","./enc-base64","./md5","./evpkdf","./cipher-core"],d);else d(x.CryptoJS)})(O4,function(x){return function(){var d=x,b=d.lib,c=b.StreamCipher,q=d.algo,$=q.RC4=c.extend({_doReset:function(){var E=this._key,J=E.words,V=E.sigBytes,N=this._S=[];for(var U=0;U<256;U++)N[U]=U;for(var U=0,K=0;U<256;U++){var X=U%V,D=J[X>>>2]>>>24-X%4*8&255;K=(K+N[U]+D)%256;var L=N[U];N[U]=N[K],N[K]=L}this._i=this._j=0},_doProcessBlock:function(E,J){E[J]^=Y.call(this)},keySize:8,ivSize:0});function Y(){var E=this._S,J=this._i,V=this._j,N=0;for(var U=0;U<4;U++){J=(J+1)%256,V=(V+E[J])%256;var K=E[J];E[J]=E[V],E[V]=K,N|=E[(E[J]+E[V])%256]<<24-U*8}return this._i=J,this._j=V,N}d.RC4=c._createHelper($);var G=q.RC4Drop=$.extend({cfg:$.cfg.extend({drop:192}),_doReset:function(){$._doReset.call(this);for(var E=this.cfg.drop;E>0;E--)Y.call(this)}});d.RC4Drop=c._createHelper(G)}(),x.RC4})});var Gb=i((H4,Yb)=>{(function(x,d,b){if(typeof H4==="object")Yb.exports=H4=d(O0(),P6(),v6(),G6(),i0());else if(typeof define==="function"&&define.amd)define(["./core","./enc-base64","./md5","./evpkdf","./cipher-core"],d);else d(x.CryptoJS)})(H4,function(x){return function(){var d=x,b=d.lib,c=b.StreamCipher,q=d.algo,$=[],Y=[],G=[],E=q.Rabbit=c.extend({_doReset:function(){var V=this._key.words,N=this.cfg.iv;for(var U=0;U<4;U++)V[U]=(V[U]<<8|V[U]>>>24)&16711935|(V[U]<<24|V[U]>>>8)&4278255360;var K=this._X=[V[0],V[3]<<16|V[2]>>>16,V[1],V[0]<<16|V[3]>>>16,V[2],V[1]<<16|V[0]>>>16,V[3],V[2]<<16|V[1]>>>16],X=this._C=[V[2]<<16|V[2]>>>16,V[0]&4294901760|V[1]&65535,V[3]<<16|V[3]>>>16,V[1]&4294901760|V[2]&65535,V[0]<<16|V[0]>>>16,V[2]&4294901760|V[3]&65535,V[1]<<16|V[1]>>>16,V[3]&4294901760|V[0]&65535];this._b=0;for(var U=0;U<4;U++)J.call(this);for(var U=0;U<8;U++)X[U]^=K[U+4&7];if(N){var D=N.words,L=D[0],H=D[1],O=(L<<8|L>>>24)&16711935|(L<<24|L>>>8)&4278255360,j=(H<<8|H>>>24)&16711935|(H<<24|H>>>8)&4278255360,e=O>>>16|j&4294901760,M=j<<16|O&65535;X[0]^=O,X[1]^=e,X[2]^=j,X[3]^=M,X[4]^=O,X[5]^=e,X[6]^=j,X[7]^=M;for(var U=0;U<4;U++)J.call(this)}},_doProcessBlock:function(V,N){var U=this._X;J.call(this),$[0]=U[0]^U[5]>>>16^U[3]<<16,$[1]=U[2]^U[7]>>>16^U[5]<<16,$[2]=U[4]^U[1]>>>16^U[7]<<16,$[3]=U[6]^U[3]>>>16^U[1]<<16;for(var K=0;K<4;K++)$[K]=($[K]<<8|$[K]>>>24)&16711935|($[K]<<24|$[K]>>>8)&4278255360,V[N+K]^=$[K]},blockSize:4,ivSize:2});function J(){var V=this._X,N=this._C;for(var U=0;U<8;U++)Y[U]=N[U];N[0]=N[0]+1295307597+this._b|0,N[1]=N[1]+3545052371+(N[0]>>>0<Y[0]>>>0?1:0)|0,N[2]=N[2]+886263092+(N[1]>>>0<Y[1]>>>0?1:0)|0,N[3]=N[3]+1295307597+(N[2]>>>0<Y[2]>>>0?1:0)|0,N[4]=N[4]+3545052371+(N[3]>>>0<Y[3]>>>0?1:0)|0,N[5]=N[5]+886263092+(N[4]>>>0<Y[4]>>>0?1:0)|0,N[6]=N[6]+1295307597+(N[5]>>>0<Y[5]>>>0?1:0)|0,N[7]=N[7]+3545052371+(N[6]>>>0<Y[6]>>>0?1:0)|0,this._b=N[7]>>>0<Y[7]>>>0?1:0;for(var U=0;U<8;U++){var K=V[U]+N[U],X=K&65535,D=K>>>16,L=((X*X>>>17)+X*D>>>15)+D*D,H=((K&4294901760)*K|0)+((K&65535)*K|0);G[U]=L^H}V[0]=G[0]+(G[7]<<16|G[7]>>>16)+(G[6]<<16|G[6]>>>16)|0,V[1]=G[1]+(G[0]<<8|G[0]>>>24)+G[7]|0,V[2]=G[2]+(G[1]<<16|G[1]>>>16)+(G[0]<<16|G[0]>>>16)|0,V[3]=G[3]+(G[2]<<8|G[2]>>>24)+G[1]|0,V[4]=G[4]+(G[3]<<16|G[3]>>>16)+(G[2]<<16|G[2]>>>16)|0,V[5]=G[5]+(G[4]<<8|G[4]>>>24)+G[3]|0,V[6]=G[6]+(G[5]<<16|G[5]>>>16)+(G[4]<<16|G[4]>>>16)|0,V[7]=G[7]+(G[6]<<8|G[6]>>>24)+G[5]|0}d.Rabbit=c._createHelper(E)}(),x.Rabbit})});var Jb=i((W4,Eb)=>{(function(x,d,b){if(typeof W4==="object")Eb.exports=W4=d(O0(),P6(),v6(),G6(),i0());else if(typeof define==="function"&&define.amd)define(["./core","./enc-base64","./md5","./evpkdf","./cipher-core"],d);else d(x.CryptoJS)})(W4,function(x){return function(){var d=x,b=d.lib,c=b.StreamCipher,q=d.algo,$=[],Y=[],G=[],E=q.RabbitLegacy=c.extend({_doReset:function(){var V=this._key.words,N=this.cfg.iv,U=this._X=[V[0],V[3]<<16|V[2]>>>16,V[1],V[0]<<16|V[3]>>>16,V[2],V[1]<<16|V[0]>>>16,V[3],V[2]<<16|V[1]>>>16],K=this._C=[V[2]<<16|V[2]>>>16,V[0]&4294901760|V[1]&65535,V[3]<<16|V[3]>>>16,V[1]&4294901760|V[2]&65535,V[0]<<16|V[0]>>>16,V[2]&4294901760|V[3]&65535,V[1]<<16|V[1]>>>16,V[3]&4294901760|V[0]&65535];this._b=0;for(var X=0;X<4;X++)J.call(this);for(var X=0;X<8;X++)K[X]^=U[X+4&7];if(N){var D=N.words,L=D[0],H=D[1],O=(L<<8|L>>>24)&16711935|(L<<24|L>>>8)&4278255360,j=(H<<8|H>>>24)&16711935|(H<<24|H>>>8)&4278255360,e=O>>>16|j&4294901760,M=j<<16|O&65535;K[0]^=O,K[1]^=e,K[2]^=j,K[3]^=M,K[4]^=O,K[5]^=e,K[6]^=j,K[7]^=M;for(var X=0;X<4;X++)J.call(this)}},_doProcessBlock:function(V,N){var U=this._X;J.call(this),$[0]=U[0]^U[5]>>>16^U[3]<<16,$[1]=U[2]^U[7]>>>16^U[5]<<16,$[2]=U[4]^U[1]>>>16^U[7]<<16,$[3]=U[6]^U[3]>>>16^U[1]<<16;for(var K=0;K<4;K++)$[K]=($[K]<<8|$[K]>>>24)&16711935|($[K]<<24|$[K]>>>8)&4278255360,V[N+K]^=$[K]},blockSize:4,ivSize:2});function J(){var V=this._X,N=this._C;for(var U=0;U<8;U++)Y[U]=N[U];N[0]=N[0]+1295307597+this._b|0,N[1]=N[1]+3545052371+(N[0]>>>0<Y[0]>>>0?1:0)|0,N[2]=N[2]+886263092+(N[1]>>>0<Y[1]>>>0?1:0)|0,N[3]=N[3]+1295307597+(N[2]>>>0<Y[2]>>>0?1:0)|0,N[4]=N[4]+3545052371+(N[3]>>>0<Y[3]>>>0?1:0)|0,N[5]=N[5]+886263092+(N[4]>>>0<Y[4]>>>0?1:0)|0,N[6]=N[6]+1295307597+(N[5]>>>0<Y[5]>>>0?1:0)|0,N[7]=N[7]+3545052371+(N[6]>>>0<Y[6]>>>0?1:0)|0,this._b=N[7]>>>0<Y[7]>>>0?1:0;for(var U=0;U<8;U++){var K=V[U]+N[U],X=K&65535,D=K>>>16,L=((X*X>>>17)+X*D>>>15)+D*D,H=((K&4294901760)*K|0)+((K&65535)*K|0);G[U]=L^H}V[0]=G[0]+(G[7]<<16|G[7]>>>16)+(G[6]<<16|G[6]>>>16)|0,V[1]=G[1]+(G[0]<<8|G[0]>>>24)+G[7]|0,V[2]=G[2]+(G[1]<<16|G[1]>>>16)+(G[0]<<16|G[0]>>>16)|0,V[3]=G[3]+(G[2]<<8|G[2]>>>24)+G[1]|0,V[4]=G[4]+(G[3]<<16|G[3]>>>16)+(G[2]<<16|G[2]>>>16)|0,V[5]=G[5]+(G[4]<<8|G[4]>>>24)+G[3]|0,V[6]=G[6]+(G[5]<<16|G[5]>>>16)+(G[4]<<16|G[4]>>>16)|0,V[7]=G[7]+(G[6]<<8|G[6]>>>24)+G[5]|0}d.RabbitLegacy=c._createHelper(E)}(),x.RabbitLegacy})});var Nb=i((L4,Vb)=>{(function(x,d,b){if(typeof L4==="object")Vb.exports=L4=d(O0(),P6(),v6(),G6(),i0());else if(typeof define==="function"&&define.amd)define(["./core","./enc-base64","./md5","./evpkdf","./cipher-core"],d);else d(x.CryptoJS)})(L4,function(x){return function(){var d=x,b=d.lib,c=b.BlockCipher,q=d.algo;let $=16,Y=[608135816,2242054355,320440878,57701188,2752067618,698298832,137296536,3964562569,1160258022,953160567,3193202383,887688300,3232508343,3380367581,1065670069,3041331479,2450970073,2306472731],G=[[3509652390,2564797868,805139163,3491422135,3101798381,1780907670,3128725573,4046225305,614570311,3012652279,134345442,2240740374,1667834072,1901547113,2757295779,4103290238,227898511,1921955416,1904987480,2182433518,2069144605,3260701109,2620446009,720527379,3318853667,677414384,3393288472,3101374703,2390351024,1614419982,1822297739,2954791486,3608508353,3174124327,2024746970,1432378464,3864339955,2857741204,1464375394,1676153920,1439316330,715854006,3033291828,289532110,2706671279,2087905683,3018724369,1668267050,732546397,1947742710,3462151702,2609353502,2950085171,1814351708,2050118529,680887927,999245976,1800124847,3300911131,1713906067,1641548236,4213287313,1216130144,1575780402,4018429277,3917837745,3693486850,3949271944,596196993,3549867205,258830323,2213823033,772490370,2760122372,1774776394,2652871518,566650946,4142492826,1728879713,2882767088,1783734482,3629395816,2517608232,2874225571,1861159788,326777828,3124490320,2130389656,2716951837,967770486,1724537150,2185432712,2364442137,1164943284,2105845187,998989502,3765401048,2244026483,1075463327,1455516326,1322494562,910128902,469688178,1117454909,936433444,3490320968,3675253459,1240580251,122909385,2157517691,634681816,4142456567,3825094682,3061402683,2540495037,79693498,3249098678,1084186820,1583128258,426386531,1761308591,1047286709,322548459,995290223,1845252383,2603652396,3431023940,2942221577,3202600964,3727903485,1712269319,422464435,3234572375,1170764815,3523960633,3117677531,1434042557,442511882,3600875718,1076654713,1738483198,4213154764,2393238008,3677496056,1014306527,4251020053,793779912,2902807211,842905082,4246964064,1395751752,1040244610,2656851899,3396308128,445077038,3742853595,3577915638,679411651,2892444358,2354009459,1767581616,3150600392,3791627101,3102740896,284835224,4246832056,1258075500,768725851,2589189241,3069724005,3532540348,1274779536,3789419226,2764799539,1660621633,3471099624,4011903706,913787905,3497959166,737222580,2514213453,2928710040,3937242737,1804850592,3499020752,2949064160,2386320175,2390070455,2415321851,4061277028,2290661394,2416832540,1336762016,1754252060,3520065937,3014181293,791618072,3188594551,3933548030,2332172193,3852520463,3043980520,413987798,3465142937,3030929376,4245938359,2093235073,3534596313,375366246,2157278981,2479649556,555357303,3870105701,2008414854,3344188149,4221384143,3956125452,2067696032,3594591187,2921233993,2428461,544322398,577241275,1471733935,610547355,4027169054,1432588573,1507829418,2025931657,3646575487,545086370,48609733,2200306550,1653985193,298326376,1316178497,3007786442,2064951626,458293330,2589141269,3591329599,3164325604,727753846,2179363840,146436021,1461446943,4069977195,705550613,3059967265,3887724982,4281599278,3313849956,1404054877,2845806497,146425753,1854211946],[1266315497,3048417604,3681880366,3289982499,2909710000,1235738493,2632868024,2414719590,3970600049,1771706367,1449415276,3266420449,422970021,1963543593,2690192192,3826793022,1062508698,1531092325,1804592342,2583117782,2714934279,4024971509,1294809318,4028980673,1289560198,2221992742,1669523910,35572830,157838143,1052438473,1016535060,1802137761,1753167236,1386275462,3080475397,2857371447,1040679964,2145300060,2390574316,1461121720,2956646967,4031777805,4028374788,33600511,2920084762,1018524850,629373528,3691585981,3515945977,2091462646,2486323059,586499841,988145025,935516892,3367335476,2599673255,2839830854,265290510,3972581182,2759138881,3795373465,1005194799,847297441,406762289,1314163512,1332590856,1866599683,4127851711,750260880,613907577,1450815602,3165620655,3734664991,3650291728,3012275730,3704569646,1427272223,778793252,1343938022,2676280711,2052605720,1946737175,3164576444,3914038668,3967478842,3682934266,1661551462,3294938066,4011595847,840292616,3712170807,616741398,312560963,711312465,1351876610,322626781,1910503582,271666773,2175563734,1594956187,70604529,3617834859,1007753275,1495573769,4069517037,2549218298,2663038764,504708206,2263041392,3941167025,2249088522,1514023603,1998579484,1312622330,694541497,2582060303,2151582166,1382467621,776784248,2618340202,3323268794,2497899128,2784771155,503983604,4076293799,907881277,423175695,432175456,1378068232,4145222326,3954048622,3938656102,3820766613,2793130115,2977904593,26017576,3274890735,3194772133,1700274565,1756076034,4006520079,3677328699,720338349,1533947780,354530856,688349552,3973924725,1637815568,332179504,3949051286,53804574,2852348879,3044236432,1282449977,3583942155,3416972820,4006381244,1617046695,2628476075,3002303598,1686838959,431878346,2686675385,1700445008,1080580658,1009431731,832498133,3223435511,2605976345,2271191193,2516031870,1648197032,4164389018,2548247927,300782431,375919233,238389289,3353747414,2531188641,2019080857,1475708069,455242339,2609103871,448939670,3451063019,1395535956,2413381860,1841049896,1491858159,885456874,4264095073,4001119347,1565136089,3898914787,1108368660,540939232,1173283510,2745871338,3681308437,4207628240,3343053890,4016749493,1699691293,1103962373,3625875870,2256883143,3830138730,1031889488,3479347698,1535977030,4236805024,3251091107,2132092099,1774941330,1199868427,1452454533,157007616,2904115357,342012276,595725824,1480756522,206960106,497939518,591360097,863170706,2375253569,3596610801,1814182875,2094937945,3421402208,1082520231,3463918190,2785509508,435703966,3908032597,1641649973,2842273706,3305899714,1510255612,2148256476,2655287854,3276092548,4258621189,236887753,3681803219,274041037,1734335097,3815195456,3317970021,1899903192,1026095262,4050517792,356393447,2410691914,3873677099,3682840055],[3913112168,2491498743,4132185628,2489919796,1091903735,1979897079,3170134830,3567386728,3557303409,857797738,1136121015,1342202287,507115054,2535736646,337727348,3213592640,1301675037,2528481711,1895095763,1721773893,3216771564,62756741,2142006736,835421444,2531993523,1442658625,3659876326,2882144922,676362277,1392781812,170690266,3921047035,1759253602,3611846912,1745797284,664899054,1329594018,3901205900,3045908486,2062866102,2865634940,3543621612,3464012697,1080764994,553557557,3656615353,3996768171,991055499,499776247,1265440854,648242737,3940784050,980351604,3713745714,1749149687,3396870395,4211799374,3640570775,1161844396,3125318951,1431517754,545492359,4268468663,3499529547,1437099964,2702547544,3433638243,2581715763,2787789398,1060185593,1593081372,2418618748,4260947970,69676912,2159744348,86519011,2512459080,3838209314,1220612927,3339683548,133810670,1090789135,1078426020,1569222167,845107691,3583754449,4072456591,1091646820,628848692,1613405280,3757631651,526609435,236106946,48312990,2942717905,3402727701,1797494240,859738849,992217954,4005476642,2243076622,3870952857,3732016268,765654824,3490871365,2511836413,1685915746,3888969200,1414112111,2273134842,3281911079,4080962846,172450625,2569994100,980381355,4109958455,2819808352,2716589560,2568741196,3681446669,3329971472,1835478071,660984891,3704678404,4045999559,3422617507,3040415634,1762651403,1719377915,3470491036,2693910283,3642056355,3138596744,1364962596,2073328063,1983633131,926494387,3423689081,2150032023,4096667949,1749200295,3328846651,309677260,2016342300,1779581495,3079819751,111262694,1274766160,443224088,298511866,1025883608,3806446537,1145181785,168956806,3641502830,3584813610,1689216846,3666258015,3200248200,1692713982,2646376535,4042768518,1618508792,1610833997,3523052358,4130873264,2001055236,3610705100,2202168115,4028541809,2961195399,1006657119,2006996926,3186142756,1430667929,3210227297,1314452623,4074634658,4101304120,2273951170,1399257539,3367210612,3027628629,1190975929,2062231137,2333990788,2221543033,2438960610,1181637006,548689776,2362791313,3372408396,3104550113,3145860560,296247880,1970579870,3078560182,3769228297,1714227617,3291629107,3898220290,166772364,1251581989,493813264,448347421,195405023,2709975567,677966185,3703036547,1463355134,2715995803,1338867538,1343315457,2802222074,2684532164,233230375,2599980071,2000651841,3277868038,1638401717,4028070440,3237316320,6314154,819756386,300326615,590932579,1405279636,3267499572,3150704214,2428286686,3959192993,3461946742,1862657033,1266418056,963775037,2089974820,2263052895,1917689273,448879540,3550394620,3981727096,150775221,3627908307,1303187396,508620638,2975983352,2726630617,1817252668,1876281319,1457606340,908771278,3720792119,3617206836,2455994898,1729034894,1080033504],[976866871,3556439503,2881648439,1522871579,1555064734,1336096578,3548522304,2579274686,3574697629,3205460757,3593280638,3338716283,3079412587,564236357,2993598910,1781952180,1464380207,3163844217,3332601554,1699332808,1393555694,1183702653,3581086237,1288719814,691649499,2847557200,2895455976,3193889540,2717570544,1781354906,1676643554,2592534050,3230253752,1126444790,2770207658,2633158820,2210423226,2615765581,2414155088,3127139286,673620729,2805611233,1269405062,4015350505,3341807571,4149409754,1057255273,2012875353,2162469141,2276492801,2601117357,993977747,3918593370,2654263191,753973209,36408145,2530585658,25011837,3520020182,2088578344,530523599,2918365339,1524020338,1518925132,3760827505,3759777254,1202760957,3985898139,3906192525,674977740,4174734889,2031300136,2019492241,3983892565,4153806404,3822280332,352677332,2297720250,60907813,90501309,3286998549,1016092578,2535922412,2839152426,457141659,509813237,4120667899,652014361,1966332200,2975202805,55981186,2327461051,676427537,3255491064,2882294119,3433927263,1307055953,942726286,933058658,2468411793,3933900994,4215176142,1361170020,2001714738,2830558078,3274259782,1222529897,1679025792,2729314320,3714953764,1770335741,151462246,3013232138,1682292957,1483529935,471910574,1539241949,458788160,3436315007,1807016891,3718408830,978976581,1043663428,3165965781,1927990952,4200891579,2372276910,3208408903,3533431907,1412390302,2931980059,4132332400,1947078029,3881505623,4168226417,2941484381,1077988104,1320477388,886195818,18198404,3786409000,2509781533,112762804,3463356488,1866414978,891333506,18488651,661792760,1628790961,3885187036,3141171499,876946877,2693282273,1372485963,791857591,2686433993,3759982718,3167212022,3472953795,2716379847,445679433,3561995674,3504004811,3574258232,54117162,3331405415,2381918588,3769707343,4154350007,1140177722,4074052095,668550556,3214352940,367459370,261225585,2610173221,4209349473,3468074219,3265815641,314222801,3066103646,3808782860,282218597,3406013506,3773591054,379116347,1285071038,846784868,2669647154,3771962079,3550491691,2305946142,453669953,1268987020,3317592352,3279303384,3744833421,2610507566,3859509063,266596637,3847019092,517658769,3462560207,3443424879,370717030,4247526661,2224018117,4143653529,4112773975,2788324899,2477274417,1456262402,2901442914,1517677493,1846949527,2295493580,3734397586,2176403920,1280348187,1908823572,3871786941,846861322,1172426758,3287448474,3383383037,1655181056,3139813346,901632758,1897031941,2986607138,3066810236,3447102507,1393639104,373351379,950779232,625454576,3124240540,4148612726,2007998917,544563296,2244738638,2330496472,2058025392,1291430526,424198748,50039436,29584100,3605783033,2429876329,2791104160,1057563949,3255363231,3075367218,3463963227,1469046755,985887462]];var E={pbox:[],sbox:[]};function J(X,D){let L=D>>24&255,H=D>>16&255,O=D>>8&255,j=D&255,e=X.sbox[0][L]+X.sbox[1][H];return e=e^X.sbox[2][O],e=e+X.sbox[3][j],e}function V(X,D,L){let H=D,O=L,j;for(let e=0;e<$;++e)H=H^X.pbox[e],O=J(X,H)^O,j=H,H=O,O=j;return j=H,H=O,O=j,O=O^X.pbox[$],H=H^X.pbox[$+1],{left:H,right:O}}function N(X,D,L){let H=D,O=L,j;for(let e=$+1;e>1;--e)H=H^X.pbox[e],O=J(X,H)^O,j=H,H=O,O=j;return j=H,H=O,O=j,O=O^X.pbox[1],H=H^X.pbox[0],{left:H,right:O}}function U(X,D,L){for(let M=0;M<4;M++){X.sbox[M]=[];for(let F=0;F<256;F++)X.sbox[M][F]=G[M][F]}let H=0;for(let M=0;M<$+2;M++)if(X.pbox[M]=Y[M]^D[H],H++,H>=L)H=0;let O=0,j=0,e=0;for(let M=0;M<$+2;M+=2)e=V(X,O,j),O=e.left,j=e.right,X.pbox[M]=O,X.pbox[M+1]=j;for(let M=0;M<4;M++)for(let F=0;F<256;F+=2)e=V(X,O,j),O=e.left,j=e.right,X.sbox[M][F]=O,X.sbox[M][F+1]=j;return!0}var K=q.Blowfish=c.extend({_doReset:function(){if(this._keyPriorReset===this._key)return;var X=this._keyPriorReset=this._key,D=X.words,L=X.sigBytes/4;U(E,D,L)},encryptBlock:function(X,D){var L=V(E,X[D],X[D+1]);X[D]=L.left,X[D+1]=L.right},decryptBlock:function(X,D){var L=N(E,X[D],X[D+1]);X[D]=L.left,X[D+1]=L.right},blockSize:2,keySize:4,ivSize:2});d.Blowfish=c._createHelper(K)}(),x.Blowfish})});var Kb=i((D4,Ub)=>{(function(x,d,b){if(typeof D4==="object")Ub.exports=D4=d(O0(),Z2(),Jd(),Nd(),P6(),Rd(),v6(),A9(),i5(),Wd(),F9(),ed(),Ad(),zd(),d4(),Pd(),G6(),i0(),Zd(),Cd(),gd(),ad(),md(),yd(),ld(),id(),sd(),td(),fb(),bb(),qb(),Qb(),Gb(),Jb(),Nb());else if(typeof define==="function"&&define.amd)define(["./core","./x64-core","./lib-typedarrays","./enc-utf16","./enc-base64","./enc-base64url","./md5","./sha1","./sha256","./sha224","./sha512","./sha384","./sha3","./ripemd160","./hmac","./pbkdf2","./evpkdf","./cipher-core","./mode-cfb","./mode-ctr","./mode-ctr-gladman","./mode-ofb","./mode-ecb","./pad-ansix923","./pad-iso10126","./pad-iso97971","./pad-zeropadding","./pad-nopadding","./format-hex","./aes","./tripledes","./rc4","./rabbit","./rabbit-legacy","./blowfish"],d);else x.CryptoJS=d(x.CryptoJS)})(D4,function(x){return x})});var kb=i((lz,t0)=>{function B9(x,d){return Object.keys(d).forEach(function(b){if(b==="default"||b==="__esModule"||Object.prototype.hasOwnProperty.call(x,b))return;Object.defineProperty(x,b,{enumerable:!0,get:function c(){return d[b]}})}),x}function b0(x,d,b,c){Object.defineProperty(x,d,{get:b,set:c,enumerable:!0,configurable:!0})}b0(lz,"EncodeStream",()=>T2);b0(lz,"DecodeStream",()=>E6);b0(lz,"Array",()=>P9);b0(lz,"LazyArray",()=>Bb);b0(lz,"Bitfield",()=>wb);b0(lz,"Boolean",()=>Pb);b0(lz,"Buffer",()=>vb);b0(lz,"Enum",()=>Ib);b0(lz,"Optional",()=>Sb);b0(lz,"Reserved",()=>Zb);b0(lz,"String",()=>Tb);b0(lz,"Struct",()=>v9);b0(lz,"VersionedStruct",()=>I9);var AV={utf16le:"utf-16le",ucs2:"utf-16le",utf16be:"utf-16be"};class E6{constructor(x){this.buffer=x,this.view=new DataView(x.buffer,x.byteOffset,x.byteLength),this.pos=0,this.length=this.buffer.length}readString(x,d="ascii"){d=AV[d]||d;let b=this.readBuffer(x);try{return new TextDecoder(d).decode(b)}catch(c){return b}}readBuffer(x){return this.buffer.slice(this.pos,this.pos+=x)}readUInt24BE(){return(this.readUInt16BE()<<8)+this.readUInt8()}readUInt24LE(){return this.readUInt16LE()+(this.readUInt8()<<16)}readInt24BE(){return(this.readInt16BE()<<8)+this.readUInt8()}readInt24LE(){return this.readUInt16LE()+(this.readInt8()<<16)}}E6.TYPES={UInt8:1,UInt16:2,UInt24:3,UInt32:4,Int8:1,Int16:2,Int24:3,Int32:4,Float:4,Double:8};for(let x of Object.getOwnPropertyNames(DataView.prototype))if(x.slice(0,3)==="get"){let d=x.slice(3).replace("Ui","UI");if(d==="Float32")d="Float";else if(d==="Float64")d="Double";let b=E6.TYPES[d];if(E6.prototype["read"+d+(b===1?"":"BE")]=function(){let c=this.view[x](this.pos,!1);return this.pos+=b,c},b!==1)E6.prototype["read"+d+"LE"]=function(){let c=this.view[x](this.pos,!0);return this.pos+=b,c}}var FV=new TextEncoder,Rb=new Uint8Array(new Uint16Array([4660]).buffer)[0]==18;class T2{constructor(x){this.buffer=x,this.view=new DataView(this.buffer.buffer,this.buffer.byteOffset,this.buffer.byteLength),this.pos=0}writeBuffer(x){this.buffer.set(x,this.pos),this.pos+=x.length}writeString(x,d="ascii"){let b;switch(d){case"utf16le":case"utf16-le":case"ucs2":b=Xb(x,Rb);break;case"utf16be":case"utf16-be":b=Xb(x,!Rb);break;case"utf8":b=FV.encode(x);break;case"ascii":b=zV(x);break;default:throw new Error(`Unsupported encoding: ${d}`)}this.writeBuffer(b)}writeUInt24BE(x){this.buffer[this.pos++]=x>>>16&255,this.buffer[this.pos++]=x>>>8&255,this.buffer[this.pos++]=x&255}writeUInt24LE(x){this.buffer[this.pos++]=x&255,this.buffer[this.pos++]=x>>>8&255,this.buffer[this.pos++]=x>>>16&255}writeInt24BE(x){if(x>=0)this.writeUInt24BE(x);else this.writeUInt24BE(x+16777215+1)}writeInt24LE(x){if(x>=0)this.writeUInt24LE(x);else this.writeUInt24LE(x+16777215+1)}fill(x,d){if(d<this.buffer.length)this.buffer.fill(x,this.pos,this.pos+d),this.pos+=d;else{let b=new Uint8Array(d);b.fill(x),this.writeBuffer(b)}}}function Xb(x,d){let b=new Uint16Array(x.length);for(let c=0;c<x.length;c++){let q=x.charCodeAt(c);if(d)q=q>>8|(q&255)<<8;b[c]=q}return new Uint8Array(b.buffer)}function zV(x){let d=new Uint8Array(x.length);for(let b=0;b<x.length;b++)d[b]=x.charCodeAt(b);return d}for(let x of Object.getOwnPropertyNames(DataView.prototype))if(x.slice(0,3)==="set"){let d=x.slice(3).replace("Ui","UI");if(d==="Float32")d="Float";else if(d==="Float64")d="Double";let b=E6.TYPES[d];if(T2.prototype["write"+d+(b===1?"":"BE")]=function(c){this.view[x](this.pos,c,!1),this.pos+=b},b!==1)T2.prototype["write"+d+"LE"]=function(c){this.view[x](this.pos,c,!0),this.pos+=b}}class vx{fromBuffer(x){let d=new E6(x);return this.decode(d)}toBuffer(x){let d=this.size(x),b=new Uint8Array(d),c=new T2(b);return this.encode(c,x),b}}var W0={};b0(W0,"Number",()=>F0);b0(W0,"uint8",()=>BV);b0(W0,"uint16be",()=>Ob);b0(W0,"uint16",()=>wV);b0(W0,"uint16le",()=>PV);b0(W0,"uint24be",()=>Hb);b0(W0,"uint24",()=>vV);b0(W0,"uint24le",()=>IV);b0(W0,"uint32be",()=>Wb);b0(W0,"uint32",()=>SV);b0(W0,"uint32le",()=>ZV);b0(W0,"int8",()=>TV);b0(W0,"int16be",()=>Lb);b0(W0,"int16",()=>CV);b0(W0,"int16le",()=>kV);b0(W0,"int24be",()=>Db);b0(W0,"int24",()=>gV);b0(W0,"int24le",()=>hV);b0(W0,"int32be",()=>eb);b0(W0,"int32",()=>aV);b0(W0,"int32le",()=>_V);b0(W0,"floatbe",()=>Mb);b0(W0,"float",()=>mV);b0(W0,"floatle",()=>uV);b0(W0,"doublebe",()=>Ab);b0(W0,"double",()=>yV);b0(W0,"doublele",()=>pV);b0(W0,"Fixed",()=>p7);b0(W0,"fixed16be",()=>Fb);b0(W0,"fixed16",()=>lV);b0(W0,"fixed16le",()=>nV);b0(W0,"fixed32be",()=>zb);b0(W0,"fixed32",()=>iV);b0(W0,"fixed32le",()=>rV);class F0 extends vx{constructor(x,d="BE"){super();if(this.type=x,this.endian=d,this.fn=this.type,this.type[this.type.length-1]!=="8")this.fn+=this.endian}size(){return E6.TYPES[this.type]}decode(x){return x[`read${this.fn}`]()}encode(x,d){return x[`write${this.fn}`](d)}}var BV=new F0("UInt8"),Ob=new F0("UInt16","BE"),wV=Ob,PV=new F0("UInt16","LE"),Hb=new F0("UInt24","BE"),vV=Hb,IV=new F0("UInt24","LE"),Wb=new F0("UInt32","BE"),SV=Wb,ZV=new F0("UInt32","LE"),TV=new F0("Int8"),Lb=new F0("Int16","BE"),CV=Lb,kV=new F0("Int16","LE"),Db=new F0("Int24","BE"),gV=Db,hV=new F0("Int24","LE"),eb=new F0("Int32","BE"),aV=eb,_V=new F0("Int32","LE"),Mb=new F0("Float","BE"),mV=Mb,uV=new F0("Float","LE"),Ab=new F0("Double","BE"),yV=Ab,pV=new F0("Double","LE");class p7 extends F0{constructor(x,d,b=x>>1){super(`Int${x}`,d);this._point=1<<b}decode(x){return super.decode(x)/this._point}encode(x,d){return super.encode(x,d*this._point|0)}}var Fb=new p7(16,"BE"),lV=Fb,nV=new p7(16,"LE"),zb=new p7(32,"BE"),iV=zb,rV=new p7(32,"LE"),w9={};b0(w9,"resolveLength",()=>J6);b0(w9,"PropertyDescriptor",()=>A4);function J6(x,d,b){let c;if(typeof x==="number")c=x;else if(typeof x==="function")c=x.call(b,b);else if(b&&typeof x==="string")c=b[x];else if(d&&x instanceof F0)c=x.decode(d);if(isNaN(c))throw new Error("Not a fixed size");return c}class A4{constructor(x={}){this.enumerable=!0,this.configurable=!0;for(let d in x){let b=x[d];this[d]=b}}}class P9 extends vx{constructor(x,d,b="count"){super();this.type=x,this.length=d,this.lengthType=b}decode(x,d){let b,{pos:c}=x,q=[],$=d;if(this.length!=null)b=J6(this.length,x,d);if(this.length instanceof F0)Object.defineProperties(q,{parent:{value:d},_startOffset:{value:c},_currentOffset:{value:0,writable:!0},_length:{value:b}}),$=q;if(b==null||this.lengthType==="bytes"){let Y=b!=null?x.pos+b:(d!=null?d._length:void 0)?d._startOffset+d._length:x.length;while(x.pos<Y)q.push(this.type.decode(x,$))}else for(let Y=0,G=b;Y<G;Y++)q.push(this.type.decode(x,$));return q}size(x,d,b=!0){if(!x)return this.type.size(null,d)*J6(this.length,null,d);let c=0;if(this.length instanceof F0)c+=this.length.size(),d={parent:d,pointerSize:0};for(let q of x)c+=this.type.size(q,d);if(d&&b&&this.length instanceof F0)c+=d.pointerSize;return c}encode(x,d,b){let c=b;if(this.length instanceof F0)c={pointers:[],startOffset:x.pos,parent:b},c.pointerOffset=x.pos+this.size(d,c,!1),this.length.encode(x,d.length);for(let q of d)this.type.encode(x,q,c);if(this.length instanceof F0){let q=0;while(q<c.pointers.length){let $=c.pointers[q++];$.type.encode(x,$.val,$.parent)}}}}class Bb extends P9{decode(x,d){let{pos:b}=x,c=J6(this.length,x,d);if(this.length instanceof F0)d={parent:d,_startOffset:b,_currentOffset:0,_length:c};let q=new e4(this.type,c,x,d);return x.pos+=c*this.type.size(null,d),q}size(x,d){if(x instanceof e4)x=x.toArray();return super.size(x,d)}encode(x,d,b){if(d instanceof e4)d=d.toArray();return super.encode(x,d,b)}}class e4{constructor(x,d,b,c){this.type=x,this.length=d,this.stream=b,this.ctx=c,this.base=this.stream.pos,this.items=[]}get(x){if(x<0||x>=this.length)return;if(this.items[x]==null){let{pos:d}=this.stream;this.stream.pos=this.base+this.type.size(null,this.ctx)*x,this.items[x]=this.type.decode(this.stream,this.ctx),this.stream.pos=d}return this.items[x]}toArray(){let x=[];for(let d=0,b=this.length;d<b;d++)x.push(this.get(d));return x}}class wb extends vx{constructor(x,d=[]){super();this.type=x,this.flags=d}decode(x){let d=this.type.decode(x),b={};for(let c=0;c<this.flags.length;c++){let q=this.flags[c];if(q!=null)b[q]=!!(d&1<<c)}return b}size(){return this.type.size()}encode(x,d){let b=0;for(let c=0;c<this.flags.length;c++){let q=this.flags[c];if(q!=null){if(d[q])b|=1<<c}}return this.type.encode(x,b)}}class Pb extends vx{constructor(x){super();this.type=x}decode(x,d){return!!this.type.decode(x,d)}size(x,d){return this.type.size(x,d)}encode(x,d,b){return this.type.encode(x,+d,b)}}class vb extends vx{constructor(x){super();this.length=x}decode(x,d){let b=J6(this.length,x,d);return x.readBuffer(b)}size(x,d){if(!x)return J6(this.length,null,d);let b=x.length;if(this.length instanceof F0)b+=this.length.size();return b}encode(x,d,b){if(this.length instanceof F0)this.length.encode(x,d.length);return x.writeBuffer(d)}}class Ib extends vx{constructor(x,d=[]){super();this.type=x,this.options=d}decode(x){let d=this.type.decode(x);return this.options[d]||d}size(){return this.type.size()}encode(x,d){let b=this.options.indexOf(d);if(b===-1)throw new Error(`Unknown option in enum: ${d}`);return this.type.encode(x,b)}}class Sb extends vx{constructor(x,d=!0){super();this.type=x,this.condition=d}decode(x,d){let{condition:b}=this;if(typeof b==="function")b=b.call(d,d);if(b)return this.type.decode(x,d)}size(x,d){let{condition:b}=this;if(typeof b==="function")b=b.call(d,d);if(b)return this.type.size(x,d);else return 0}encode(x,d,b){let{condition:c}=this;if(typeof c==="function")c=c.call(b,b);if(c)return this.type.encode(x,d,b)}}class Zb extends vx{constructor(x,d=1){super();this.type=x,this.count=d}decode(x,d){x.pos+=this.size(null,d);return}size(x,d){let b=J6(this.count,null,d);return this.type.size()*b}encode(x,d,b){return x.fill(0,this.size(d,b))}}class Tb extends vx{constructor(x,d="ascii"){super();this.length=x,this.encoding=d}decode(x,d){let b,c,{encoding:q}=this;if(typeof q==="function")q=q.call(d,d)||"ascii";let $=z9(q);if(this.length!=null)b=J6(this.length,x,d);else{let G;({buffer:G,length:b,pos:c}=x);while(c<b-$+1&&(G[c]!==0||$===2&&G[c+1]!==0))c+=$;b=c-x.pos}let Y=x.readString(b,q);if(this.length==null&&x.pos<x.length)x.pos+=$;return Y}size(x,d){if(x===void 0||x===null)return J6(this.length,null,d);let{encoding:b}=this;if(typeof b==="function")b=b.call(d!=null?d.val:void 0,d!=null?d.val:void 0)||"ascii";if(b==="utf16be")b="utf16le";let c=jb(x,b);if(this.length instanceof F0)c+=this.length.size();if(this.length==null)c+=z9(b);return c}encode(x,d,b){let{encoding:c}=this;if(typeof c==="function")c=c.call(b!=null?b.val:void 0,b!=null?b.val:void 0)||"ascii";if(this.length instanceof F0)this.length.encode(x,jb(d,c));if(x.writeString(d,c),this.length==null)return z9(c)==2?x.writeUInt16LE(0):x.writeUInt8(0)}}function z9(x){switch(x){case"ascii":case"utf8":return 1;case"utf16le":case"utf16-le":case"utf-16be":case"utf-16le":case"utf16be":case"utf16-be":case"ucs2":return 2;default:return 1}}function jb(x,d){switch(d){case"ascii":return x.length;case"utf8":let b=0;for(let c=0;c<x.length;c++){let q=x.charCodeAt(c);if(q>=55296&&q<=56319&&c<x.length-1){let $=x.charCodeAt(++c);if(($&64512)===56320)q=((q&1023)<<10)+($&1023)+65536;else c--}if((q&4294967168)===0)b++;else if((q&4294965248)===0)b+=2;else if((q&4294901760)===0)b+=3;else if((q&4292870144)===0)b+=4}return b;case"utf16le":case"utf16-le":case"utf16be":case"utf16-be":case"ucs2":return x.length*2;default:throw new Error("Unknown encoding "+d)}}class v9 extends vx{constructor(x={}){super();this.fields=x}decode(x,d,b=0){let c=this._setup(x,d,b);if(this._parseFields(x,c,this.fields),this.process!=null)this.process.call(c,x);return c}_setup(x,d,b){let c={};return Object.defineProperties(c,{parent:{value:d},_startOffset:{value:x.pos},_currentOffset:{value:0,writable:!0},_length:{value:b}}),c}_parseFields(x,d,b){for(let q in b){var c;let $=b[q];if(typeof $==="function")c=$.call(d,d);else c=$.decode(x,d);if(c!==void 0)if(c instanceof A4)Object.defineProperty(d,q,c);else d[q]=c;d._currentOffset=x.pos-d._startOffset}}size(x,d,b=!0){if(x==null)x={};let c={parent:d,val:x,pointerSize:0};if(this.preEncode!=null)this.preEncode.call(x);let q=0;for(let $ in this.fields){let Y=this.fields[$];if(Y.size!=null)q+=Y.size(x[$],c)}if(b)q+=c.pointerSize;return q}encode(x,d,b){let c;if(this.preEncode!=null)this.preEncode.call(d,x);let q={pointers:[],startOffset:x.pos,parent:b,val:d,pointerSize:0};q.pointerOffset=x.pos+this.size(d,q,!1);for(let Y in this.fields)if(c=this.fields[Y],c.encode!=null)c.encode(x,d[Y],q);let $=0;while($<q.pointers.length){let Y=q.pointers[$++];Y.type.encode(x,Y.val,Y.parent)}}}var sV=(x,d)=>{return d.reduce((b,c)=>b&&b[c],x)};class I9 extends v9{constructor(x,d={}){super();if(this.type=x,this.versions=d,typeof x==="string")this.versionPath=x.split(".")}decode(x,d,b=0){let c=this._setup(x,d,b);if(typeof this.type==="string")c.version=sV(d,this.versionPath);else c.version=this.type.decode(x);if(this.versions.header)this._parseFields(x,c,this.versions.header);let q=this.versions[c.version];if(q==null)throw new Error(`Unknown version ${c.version}`);if(q instanceof I9)return q.decode(x,d);if(this._parseFields(x,c,q),this.process!=null)this.process.call(c,x);return c}size(x,d,b=!0){let c,q;if(!x)throw new Error("Not a fixed size");if(this.preEncode!=null)this.preEncode.call(x);let $={parent:d,val:x,pointerSize:0},Y=0;if(typeof this.type!=="string")Y+=this.type.size(x.version,$);if(this.versions.header){for(c in this.versions.header)if(q=this.versions.header[c],q.size!=null)Y+=q.size(x[c],$)}let G=this.versions[x.version];if(G==null)throw new Error(`Unknown version ${x.version}`);for(c in G)if(q=G[c],q.size!=null)Y+=q.size(x[c],$);if(b)Y+=$.pointerSize;return Y}encode(x,d,b){let c,q;if(this.preEncode!=null)this.preEncode.call(d,x);let $={pointers:[],startOffset:x.pos,parent:b,val:d,pointerSize:0};if($.pointerOffset=x.pos+this.size(d,$,!1),typeof this.type!=="string")this.type.encode(x,d.version);if(this.versions.header){for(c in this.versions.header)if(q=this.versions.header[c],q.encode!=null)q.encode(x,d[c],$)}let Y=this.versions[d.version];for(c in Y)if(q=Y[c],q.encode!=null)q.encode(x,d[c],$);let G=0;while(G<$.pointers.length){let E=$.pointers[G++];E.type.encode(x,E.val,E.parent)}}}var S9={};b0(S9,"Pointer",()=>Cb);b0(S9,"VoidPointer",()=>M4);class Cb extends vx{constructor(x,d,b={}){super();if(this.offsetType=x,this.type=d,this.options=b,this.type==="void")this.type=null;if(this.options.type==null)this.options.type="local";if(this.options.allowNull==null)this.options.allowNull=!0;if(this.options.nullValue==null)this.options.nullValue=0;if(this.options.lazy==null)this.options.lazy=!1;if(this.options.relativeTo){if(typeof this.options.relativeTo!=="function")throw new Error("relativeTo option must be a function");this.relativeToGetter=b.relativeTo}}decode(x,d){let b=this.offsetType.decode(x,d);if(b===this.options.nullValue&&this.options.allowNull)return null;let c;switch(this.options.type){case"local":c=d._startOffset;break;case"immediate":c=x.pos-this.offsetType.size();break;case"parent":c=d.parent._startOffset;break;default:var q=d;while(q.parent)q=q.parent;c=q._startOffset||0}if(this.options.relativeTo)c+=this.relativeToGetter(d);let $=b+c;if(this.type!=null){let Y=null,G=()=>{if(Y!=null)return Y;let{pos:E}=x;return x.pos=$,Y=this.type.decode(x,d),x.pos=E,Y};if(this.options.lazy)return new A4({get:G});return G()}else return $}size(x,d){let b=d;switch(this.options.type){case"local":case"immediate":break;case"parent":d=d.parent;break;default:while(d.parent)d=d.parent}let{type:c}=this;if(c==null){if(!(x instanceof M4))throw new Error("Must be a VoidPointer");({type:c}=x),x=x.value}if(x&&d){let q=c.size(x,b);d.pointerSize+=q}return this.offsetType.size()}encode(x,d,b){let c,q=b;if(d==null){this.offsetType.encode(x,this.options.nullValue);return}switch(this.options.type){case"local":c=b.startOffset;break;case"immediate":c=x.pos+this.offsetType.size(d,q);break;case"parent":b=b.parent,c=b.startOffset;break;default:c=0;while(b.parent)b=b.parent}if(this.options.relativeTo)c+=this.relativeToGetter(q.val);this.offsetType.encode(x,b.pointerOffset-c);let{type:$}=this;if($==null){if(!(d instanceof M4))throw new Error("Must be a VoidPointer");({type:$}=d),d=d.value}return b.pointers.push({type:$,val:d,parent:q}),b.pointerOffset+=$.size(d,q)}}class M4{constructor(x,d){this.type=x,this.value=d}}B9(lz,w9);B9(lz,W0);B9(lz,S9)});var gb=i((tV)=>{function oV(x,d,b){if(d in x)Object.defineProperty(x,d,{value:b,enumerable:!0,configurable:!0,writable:!0});else x[d]=b;return x}tV._=oV});var Uc=i((iz,B4)=>{var hb,ab,_b,mb,ub,yb,pb,lb,nb,ib,rb,sb,ob,F4,Z9,tb,xc,fc,l7,dc,bc,cc,qc,$c,Qc,Yc,Gc,Ec,z4,Jc,Vc,Nc;(function(x){var d=typeof global==="object"?global:typeof self==="object"?self:typeof this==="object"?this:{};if(typeof define==="function"&&define.amd)define("tslib",["exports"],function(c){x(b(d,b(c)))});else if(typeof B4==="object"&&typeof iz==="object")x(b(d,b(iz)));else x(b(d));function b(c,q){if(c!==d)if(typeof Object.create==="function")Object.defineProperty(c,"__esModule",{value:!0});else c.__esModule=!0;return function($,Y){return c[$]=q?q($,Y):Y}}})(function(x){var d=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function($,Y){$.__proto__=Y}||function($,Y){for(var G in Y)if(Object.prototype.hasOwnProperty.call(Y,G))$[G]=Y[G]};hb=function($,Y){if(typeof Y!=="function"&&Y!==null)throw new TypeError("Class extends value "+String(Y)+" is not a constructor or null");d($,Y);function G(){this.constructor=$}$.prototype=Y===null?Object.create(Y):(G.prototype=Y.prototype,new G)},ab=Object.assign||function($){for(var Y,G=1,E=arguments.length;G<E;G++){Y=arguments[G];for(var J in Y)if(Object.prototype.hasOwnProperty.call(Y,J))$[J]=Y[J]}return $},_b=function($,Y){var G={};for(var E in $)if(Object.prototype.hasOwnProperty.call($,E)&&Y.indexOf(E)<0)G[E]=$[E];if($!=null&&typeof Object.getOwnPropertySymbols==="function"){for(var J=0,E=Object.getOwnPropertySymbols($);J<E.length;J++)if(Y.indexOf(E[J])<0&&Object.prototype.propertyIsEnumerable.call($,E[J]))G[E[J]]=$[E[J]]}return G},mb=function($,Y,G,E){var J=arguments.length,V=J<3?Y:E===null?E=Object.getOwnPropertyDescriptor(Y,G):E,N;if(typeof Reflect==="object"&&typeof Reflect.decorate==="function")V=Reflect.decorate($,Y,G,E);else for(var U=$.length-1;U>=0;U--)if(N=$[U])V=(J<3?N(V):J>3?N(Y,G,V):N(Y,G))||V;return J>3&&V&&Object.defineProperty(Y,G,V),V},ub=function($,Y){return function(G,E){Y(G,E,$)}},yb=function($,Y,G,E,J,V){function N(F){if(F!==void 0&&typeof F!=="function")throw new TypeError("Function expected");return F}var U=E.kind,K=U==="getter"?"get":U==="setter"?"set":"value",X=!Y&&$?E.static?$:$.prototype:null,D=Y||(X?Object.getOwnPropertyDescriptor(X,E.name):{}),L,H=!1;for(var O=G.length-1;O>=0;O--){var j={};for(var e in E)j[e]=e==="access"?{}:E[e];for(var e in E.access)j.access[e]=E.access[e];j.addInitializer=function(F){if(H)throw new TypeError("Cannot add initializers after decoration has completed");V.push(N(F||null))};var M=G[O](U==="accessor"?{get:D.get,set:D.set}:D[K],j);if(U==="accessor"){if(M===void 0)continue;if(M===null||typeof M!=="object")throw new TypeError("Object expected");if(L=N(M.get))D.get=L;if(L=N(M.set))D.set=L;if(L=N(M.init))J.unshift(L)}else if(L=N(M))if(U==="field")J.unshift(L);else D[K]=L}if(X)Object.defineProperty(X,E.name,D);H=!0},pb=function($,Y,G){var E=arguments.length>2;for(var J=0;J<Y.length;J++)G=E?Y[J].call($,G):Y[J].call($);return E?G:void 0},lb=function($){return typeof $==="symbol"?$:"".concat($)},nb=function($,Y,G){if(typeof Y==="symbol")Y=Y.description?"[".concat(Y.description,"]"):"";return Object.defineProperty($,"name",{configurable:!0,value:G?"".concat(G," ",Y):Y})},ib=function($,Y){if(typeof Reflect==="object"&&typeof Reflect.metadata==="function")return Reflect.metadata($,Y)},rb=function($,Y,G,E){function J(V){return V instanceof G?V:new G(function(N){N(V)})}return new(G||(G=Promise))(function(V,N){function U(D){try{X(E.next(D))}catch(L){N(L)}}function K(D){try{X(E.throw(D))}catch(L){N(L)}}function X(D){D.done?V(D.value):J(D.value).then(U,K)}X((E=E.apply($,Y||[])).next())})},sb=function($,Y){var G={label:0,sent:function(){if(V[0]&1)throw V[1];return V[1]},trys:[],ops:[]},E,J,V,N=Object.create((typeof Iterator==="function"?Iterator:Object).prototype);return N.next=U(0),N.throw=U(1),N.return=U(2),typeof Symbol==="function"&&(N[Symbol.iterator]=function(){return this}),N;function U(X){return function(D){return K([X,D])}}function K(X){if(E)throw new TypeError("Generator is already executing.");while(N&&(N=0,X[0]&&(G=0)),G)try{if(E=1,J&&(V=X[0]&2?J.return:X[0]?J.throw||((V=J.return)&&V.call(J),0):J.next)&&!(V=V.call(J,X[1])).done)return V;if(J=0,V)X=[X[0]&2,V.value];switch(X[0]){case 0:case 1:V=X;break;case 4:return G.label++,{value:X[1],done:!1};case 5:G.label++,J=X[1],X=[0];continue;case 7:X=G.ops.pop(),G.trys.pop();continue;default:if((V=G.trys,!(V=V.length>0&&V[V.length-1]))&&(X[0]===6||X[0]===2)){G=0;continue}if(X[0]===3&&(!V||X[1]>V[0]&&X[1]<V[3])){G.label=X[1];break}if(X[0]===6&&G.label<V[1]){G.label=V[1],V=X;break}if(V&&G.label<V[2]){G.label=V[2],G.ops.push(X);break}if(V[2])G.ops.pop();G.trys.pop();continue}X=Y.call($,G)}catch(D){X=[6,D],J=0}finally{E=V=0}if(X[0]&5)throw X[1];return{value:X[0]?X[1]:void 0,done:!0}}},ob=function($,Y){for(var G in $)if(G!=="default"&&!Object.prototype.hasOwnProperty.call(Y,G))z4(Y,$,G)},z4=Object.create?function($,Y,G,E){if(E===void 0)E=G;var J=Object.getOwnPropertyDescriptor(Y,G);if(!J||("get"in J?!Y.__esModule:J.writable||J.configurable))J={enumerable:!0,get:function(){return Y[G]}};Object.defineProperty($,E,J)}:function($,Y,G,E){if(E===void 0)E=G;$[E]=Y[G]},F4=function($){var Y=typeof Symbol==="function"&&Symbol.iterator,G=Y&&$[Y],E=0;if(G)return G.call($);if($&&typeof $.length==="number")return{next:function(){if($&&E>=$.length)$=void 0;return{value:$&&$[E++],done:!$}}};throw new TypeError(Y?"Object is not iterable.":"Symbol.iterator is not defined.")},Z9=function($,Y){var G=typeof Symbol==="function"&&$[Symbol.iterator];if(!G)return $;var E=G.call($),J,V=[],N;try{while((Y===void 0||Y-- >0)&&!(J=E.next()).done)V.push(J.value)}catch(U){N={error:U}}finally{try{if(J&&!J.done&&(G=E.return))G.call(E)}finally{if(N)throw N.error}}return V},tb=function(){for(var $=[],Y=0;Y<arguments.length;Y++)$=$.concat(Z9(arguments[Y]));return $},xc=function(){for(var $=0,Y=0,G=arguments.length;Y<G;Y++)$+=arguments[Y].length;for(var E=Array($),J=0,Y=0;Y<G;Y++)for(var V=arguments[Y],N=0,U=V.length;N<U;N++,J++)E[J]=V[N];return E},fc=function($,Y,G){if(G||arguments.length===2){for(var E=0,J=Y.length,V;E<J;E++)if(V||!(E in Y)){if(!V)V=Array.prototype.slice.call(Y,0,E);V[E]=Y[E]}}return $.concat(V||Array.prototype.slice.call(Y))},l7=function($){return this instanceof l7?(this.v=$,this):new l7($)},dc=function($,Y,G){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var E=G.apply($,Y||[]),J,V=[];return J=Object.create((typeof AsyncIterator==="function"?AsyncIterator:Object).prototype),U("next"),U("throw"),U("return",N),J[Symbol.asyncIterator]=function(){return this},J;function N(O){return function(j){return Promise.resolve(j).then(O,L)}}function U(O,j){if(E[O]){if(J[O]=function(e){return new Promise(function(M,F){V.push([O,e,M,F])>1||K(O,e)})},j)J[O]=j(J[O])}}function K(O,j){try{X(E[O](j))}catch(e){H(V[0][3],e)}}function X(O){O.value instanceof l7?Promise.resolve(O.value.v).then(D,L):H(V[0][2],O)}function D(O){K("next",O)}function L(O){K("throw",O)}function H(O,j){if(O(j),V.shift(),V.length)K(V[0][0],V[0][1])}},bc=function($){var Y,G;return Y={},E("next"),E("throw",function(J){throw J}),E("return"),Y[Symbol.iterator]=function(){return this},Y;function E(J,V){Y[J]=$[J]?function(N){return(G=!G)?{value:l7($[J](N)),done:!1}:V?V(N):N}:V}},cc=function($){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var Y=$[Symbol.asyncIterator],G;return Y?Y.call($):($=typeof F4==="function"?F4($):$[Symbol.iterator](),G={},E("next"),E("throw"),E("return"),G[Symbol.asyncIterator]=function(){return this},G);function E(V){G[V]=$[V]&&function(N){return new Promise(function(U,K){N=$[V](N),J(U,K,N.done,N.value)})}}function J(V,N,U,K){Promise.resolve(K).then(function(X){V({value:X,done:U})},N)}},qc=function($,Y){if(Object.defineProperty)Object.defineProperty($,"raw",{value:Y});else $.raw=Y;return $};var b=Object.create?function($,Y){Object.defineProperty($,"default",{enumerable:!0,value:Y})}:function($,Y){$.default=Y},c=function($){return c=Object.getOwnPropertyNames||function(Y){var G=[];for(var E in Y)if(Object.prototype.hasOwnProperty.call(Y,E))G[G.length]=E;return G},c($)};$c=function($){if($&&$.__esModule)return $;var Y={};if($!=null){for(var G=c($),E=0;E<G.length;E++)if(G[E]!=="default")z4(Y,$,G[E])}return b(Y,$),Y},Qc=function($){return $&&$.__esModule?$:{default:$}},Yc=function($,Y,G,E){if(G==="a"&&!E)throw new TypeError("Private accessor was defined without a getter");if(typeof Y==="function"?$!==Y||!E:!Y.has($))throw new TypeError("Cannot read private member from an object whose class did not declare it");return G==="m"?E:G==="a"?E.call($):E?E.value:Y.get($)},Gc=function($,Y,G,E,J){if(E==="m")throw new TypeError("Private method is not writable");if(E==="a"&&!J)throw new TypeError("Private accessor was defined without a setter");if(typeof Y==="function"?$!==Y||!J:!Y.has($))throw new TypeError("Cannot write private member to an object whose class did not declare it");return E==="a"?J.call($,G):J?J.value=G:Y.set($,G),G},Ec=function($,Y){if(Y===null||typeof Y!=="object"&&typeof Y!=="function")throw new TypeError("Cannot use 'in' operator on non-object");return typeof $==="function"?Y===$:$.has(Y)},Jc=function($,Y,G){if(Y!==null&&Y!==void 0){if(typeof Y!=="object"&&typeof Y!=="function")throw new TypeError("Object expected.");var E,J;if(G){if(!Symbol.asyncDispose)throw new TypeError("Symbol.asyncDispose is not defined.");E=Y[Symbol.asyncDispose]}if(E===void 0){if(!Symbol.dispose)throw new TypeError("Symbol.dispose is not defined.");if(E=Y[Symbol.dispose],G)J=E}if(typeof E!=="function")throw new TypeError("Object not disposable.");if(J)E=function(){try{J.call(this)}catch(V){return Promise.reject(V)}};$.stack.push({value:Y,dispose:E,async:G})}else if(G)$.stack.push({async:!0});return Y};var q=typeof SuppressedError==="function"?SuppressedError:function($,Y,G){var E=new Error(G);return E.name="SuppressedError",E.error=$,E.suppressed=Y,E};Vc=function($){function Y(V){$.error=$.hasError?new q(V,$.error,"An error was suppressed during disposal."):V,$.hasError=!0}var G,E=0;function J(){while(G=$.stack.pop())try{if(!G.async&&E===1)return E=0,$.stack.push(G),Promise.resolve().then(J);if(G.dispose){var V=G.dispose.call(G.value);if(G.async)return E|=2,Promise.resolve(V).then(J,function(N){return Y(N),J()})}else E|=1}catch(N){Y(N)}if(E===1)return $.hasError?Promise.reject($.error):Promise.resolve();if($.hasError)throw $.error}return J()},Nc=function($,Y){if(typeof $==="string"&&/^\.\.?\//.test($))return $.replace(/\.(tsx)$|((?:\.d)?)((?:\.[^./]+?)?)\.([cm]?)ts$/i,function(G,E,J,V,N){return E?Y?".jsx":".js":J&&(!V||!N)?G:J+V+"."+N.toLowerCase()+"js"});return $},x("__extends",hb),x("__assign",ab),x("__rest",_b),x("__decorate",mb),x("__param",ub),x("__esDecorate",yb),x("__runInitializers",pb),x("__propKey",lb),x("__setFunctionName",nb),x("__metadata",ib),x("__awaiter",rb),x("__generator",sb),x("__exportStar",ob),x("__createBinding",z4),x("__values",F4),x("__read",Z9),x("__spread",tb),x("__spreadArrays",xc),x("__spreadArray",fc),x("__await",l7),x("__asyncGenerator",dc),x("__asyncDelegator",bc),x("__asyncValues",cc),x("__makeTemplateObject",qc),x("__importStar",$c),x("__importDefault",Qc),x("__classPrivateFieldGet",Yc),x("__classPrivateFieldSet",Gc),x("__classPrivateFieldIn",Ec),x("__addDisposableResource",Jc),x("__disposeResources",Vc),x("__rewriteRelativeImportExtension",Nc)})});var Kc=i((fN)=>{fN._=Uc().__decorate});var Xc=i((sz,Rc)=>{Rc.exports=function x(d,b){if(d===b)return!0;if(d&&b&&typeof d=="object"&&typeof b=="object"){if(d.constructor!==b.constructor)return!1;var c,q,$;if(Array.isArray(d)){if(c=d.length,c!=b.length)return!1;for(q=c;q--!==0;)if(!x(d[q],b[q]))return!1;return!0}if(d.constructor===RegExp)return d.source===b.source&&d.flags===b.flags;if(d.valueOf!==Object.prototype.valueOf)return d.valueOf()===b.valueOf();if(d.toString!==Object.prototype.toString)return d.toString()===b.toString();if($=Object.keys(d),c=$.length,c!==Object.keys(b).length)return!1;for(q=c;q--!==0;)if(!Object.prototype.hasOwnProperty.call(b,$[q]))return!1;for(q=c;q--!==0;){var Y=$[q];if(!x(d[Y],b[Y]))return!1}return!0}return d!==d&&b!==b}});var Oc=i((EN)=>{EN.byteLength=cN;EN.toByteArray=$N;EN.fromByteArray=GN;var ox=[],Ix=[],bN=typeof Uint8Array!=="undefined"?Uint8Array:Array,T9="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(I6=0,C9=T9.length;I6<C9;++I6)ox[I6]=T9[I6],Ix[T9.charCodeAt(I6)]=I6;var I6,C9;Ix[45]=62;Ix[95]=63;function jc(x){var d=x.length;if(d%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var b=x.indexOf("=");if(b===-1)b=d;var c=b===d?0:4-b%4;return[b,c]}function cN(x){var d=jc(x),b=d[0],c=d[1];return(b+c)*3/4-c}function qN(x,d,b){return(d+b)*3/4-b}function $N(x){var d,b=jc(x),c=b[0],q=b[1],$=new bN(qN(x,c,q)),Y=0,G=q>0?c-4:c,E;for(E=0;E<G;E+=4)d=Ix[x.charCodeAt(E)]<<18|Ix[x.charCodeAt(E+1)]<<12|Ix[x.charCodeAt(E+2)]<<6|Ix[x.charCodeAt(E+3)],$[Y++]=d>>16&255,$[Y++]=d>>8&255,$[Y++]=d&255;if(q===2)d=Ix[x.charCodeAt(E)]<<2|Ix[x.charCodeAt(E+1)]>>4,$[Y++]=d&255;if(q===1)d=Ix[x.charCodeAt(E)]<<10|Ix[x.charCodeAt(E+1)]<<4|Ix[x.charCodeAt(E+2)]>>2,$[Y++]=d>>8&255,$[Y++]=d&255;return $}function QN(x){return ox[x>>18&63]+ox[x>>12&63]+ox[x>>6&63]+ox[x&63]}function YN(x,d,b){var c,q=[];for(var $=d;$<b;$+=3)c=(x[$]<<16&16711680)+(x[$+1]<<8&65280)+(x[$+2]&255),q.push(QN(c));return q.join("")}function GN(x){var d,b=x.length,c=b%3,q=[],$=16383;for(var Y=0,G=b-c;Y<G;Y+=$)q.push(YN(x,Y,Y+$>G?G:Y+$));if(c===1)d=x[b-1],q.push(ox[d>>2]+ox[d<<4&63]+"==");else if(c===2)d=(x[b-2]<<8)+x[b-1],q.push(ox[d>>10]+ox[d>>4&63]+ox[d<<2&63]+"=");return q.join("")}});var m9=i((tz,Bc)=>{var h9=0,Dc=-3;function C2(){this.table=new Uint16Array(16),this.trans=new Uint16Array(288)}function UN(x,d){this.source=x,this.sourceIndex=0,this.tag=0,this.bitcount=0,this.dest=d,this.destLen=0,this.ltree=new C2,this.dtree=new C2}var ec=new C2,Mc=new C2,a9=new Uint8Array(30),_9=new Uint16Array(30),Ac=new Uint8Array(30),Fc=new Uint16Array(30),KN=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Hc=new C2,tx=new Uint8Array(320);function zc(x,d,b,c){var q,$;for(q=0;q<b;++q)x[q]=0;for(q=0;q<30-b;++q)x[q+b]=q/b|0;for($=c,q=0;q<30;++q)d[q]=$,$+=1<<x[q]}function RN(x,d){var b;for(b=0;b<7;++b)x.table[b]=0;x.table[7]=24,x.table[8]=152,x.table[9]=112;for(b=0;b<24;++b)x.trans[b]=256+b;for(b=0;b<144;++b)x.trans[24+b]=b;for(b=0;b<8;++b)x.trans[168+b]=280+b;for(b=0;b<112;++b)x.trans[176+b]=144+b;for(b=0;b<5;++b)d.table[b]=0;d.table[5]=32;for(b=0;b<32;++b)d.trans[b]=b}var Wc=new Uint16Array(16);function k9(x,d,b,c){var q,$;for(q=0;q<16;++q)x.table[q]=0;for(q=0;q<c;++q)x.table[d[b+q]]++;x.table[0]=0;for($=0,q=0;q<16;++q)Wc[q]=$,$+=x.table[q];for(q=0;q<c;++q)if(d[b+q])x.trans[Wc[d[b+q]]++]=q}function XN(x){if(!x.bitcount--)x.tag=x.source[x.sourceIndex++],x.bitcount=7;var d=x.tag&1;return x.tag>>>=1,d}function x6(x,d,b){if(!d)return b;while(x.bitcount<24)x.tag|=x.source[x.sourceIndex++]<<x.bitcount,x.bitcount+=8;var c=x.tag&65535>>>16-d;return x.tag>>>=d,x.bitcount-=d,c+b}function g9(x,d){while(x.bitcount<24)x.tag|=x.source[x.sourceIndex++]<<x.bitcount,x.bitcount+=8;var b=0,c=0,q=0,$=x.tag;do c=2*c+($&1),$>>>=1,++q,b+=d.table[q],c-=d.table[q];while(c>=0);return x.tag=$,x.bitcount-=q,d.trans[b+c]}function jN(x,d,b){var c,q,$,Y,G,E;c=x6(x,5,257),q=x6(x,5,1),$=x6(x,4,4);for(Y=0;Y<19;++Y)tx[Y]=0;for(Y=0;Y<$;++Y){var J=x6(x,3,0);tx[KN[Y]]=J}k9(Hc,tx,0,19);for(G=0;G<c+q;){var V=g9(x,Hc);switch(V){case 16:var N=tx[G-1];for(E=x6(x,2,3);E;--E)tx[G++]=N;break;case 17:for(E=x6(x,3,3);E;--E)tx[G++]=0;break;case 18:for(E=x6(x,7,11);E;--E)tx[G++]=0;break;default:tx[G++]=V;break}}k9(d,tx,0,c),k9(b,tx,c,q)}function Lc(x,d,b){while(!0){var c=g9(x,d);if(c===256)return h9;if(c<256)x.dest[x.destLen++]=c;else{var q,$,Y,G;c-=257,q=x6(x,a9[c],_9[c]),$=g9(x,b),Y=x.destLen-x6(x,Ac[$],Fc[$]);for(G=Y;G<Y+q;++G)x.dest[x.destLen++]=x.dest[G]}}}function ON(x){var d,b,c;while(x.bitcount>8)x.sourceIndex--,x.bitcount-=8;if(d=x.source[x.sourceIndex+1],d=256*d+x.source[x.sourceIndex],b=x.source[x.sourceIndex+3],b=256*b+x.source[x.sourceIndex+2],d!==(~b&65535))return Dc;x.sourceIndex+=4;for(c=d;c;--c)x.dest[x.destLen++]=x.source[x.sourceIndex++];return x.bitcount=0,h9}function HN(x,d){var b=new UN(x,d),c,q,$;do{switch(c=XN(b),q=x6(b,2,0),q){case 0:$=ON(b);break;case 1:$=Lc(b,ec,Mc);break;case 2:jN(b,b.ltree,b.dtree),$=Lc(b,b.ltree,b.dtree);break;default:$=Dc}if($!==h9)throw new Error("Data error")}while(!c);if(b.destLen<b.dest.length)if(typeof b.dest.slice==="function")return b.dest.slice(0,b.destLen);else return b.dest.subarray(0,b.destLen);return b.dest}RN(ec,Mc);zc(a9,_9,4,3);zc(Ac,Fc,2,1);a9[28]=0;_9[28]=258;Bc.exports=HN});var vc=i((xB,Pc)=>{var WN=new Uint8Array(new Uint32Array([305419896]).buffer)[0]===18,wc=(x,d,b)=>{let c=x[d];x[d]=x[b],x[b]=c},LN=(x)=>{let d=x.length;for(let b=0;b<d;b+=4)wc(x,b,b+3),wc(x,b+1,b+2)},DN=(x)=>{if(WN)LN(x)};Pc.exports={swap32LE:DN}});var w4=i((fB,Zc)=>{var Ic=m9(),{swap32LE:eN}=vc();class Sc{constructor(x){let d=typeof x.readUInt32BE==="function"&&typeof x.slice==="function";if(d||x instanceof Uint8Array){let b;if(d)this.highStart=x.readUInt32LE(0),this.errorValue=x.readUInt32LE(4),b=x.readUInt32LE(8),x=x.slice(12);else{let c=new DataView(x.buffer);this.highStart=c.getUint32(0,!0),this.errorValue=c.getUint32(4,!0),b=c.getUint32(8,!0),x=x.subarray(12)}x=Ic(x,new Uint8Array(b)),x=Ic(x,new Uint8Array(b)),eN(x),this.data=new Uint32Array(x.buffer)}else({data:this.data,highStart:this.highStart,errorValue:this.errorValue}=x)}get(x){let d;if(x<0||x>1114111)return this.errorValue;if(x<55296||x>56319&&x<=65535)return d=(this.data[x>>5]<<2)+(x&31),this.data[d];if(x<=65535)return d=(this.data[2048+(x-55296>>5)]<<2)+(x&31),this.data[d];if(x<this.highStart)return d=this.data[2080+(x>>11)],d=this.data[d+(x>>5&63)],d=(d<<2)+(x&31),this.data[d];return this.data[this.data.length-4]}}Zc.exports=Sc});var rc=i((dB,xx)=>{var MN=Oc(),AN=w4();function f6(x){return x&&x.__esModule?x.default:x}function FN(x){Object.defineProperty(x,"__esModule",{value:!0,configurable:!0})}function Jx(x,d,b,c){Object.defineProperty(x,d,{get:b,set:c,enumerable:!0,configurable:!0})}FN(dB);Jx(dB,"getCategory",()=>ax);Jx(dB,"getCombiningClass",()=>Cc);Jx(dB,"getScript",()=>kc);Jx(dB,"getEastAsianWidth",()=>gc);Jx(dB,"getNumericValue",()=>hc);Jx(dB,"isAlphabetic",()=>ac);Jx(dB,"isDigit",()=>_c);Jx(dB,"isPunctuation",()=>mc);Jx(dB,"isLowerCase",()=>uc);Jx(dB,"isUpperCase",()=>yc);Jx(dB,"isTitleCase",()=>pc);Jx(dB,"isWhiteSpace",()=>lc);Jx(dB,"isBaseForm",()=>nc);Jx(dB,"isMark",()=>ic);Jx(dB,"default",()=>gN);var V6={};V6=JSON.parse('{"categories":["Cc","Zs","Po","Sc","Ps","Pe","Sm","Pd","Nd","Lu","Sk","Pc","Ll","So","Lo","Pi","Cf","No","Pf","Lt","Lm","Mn","Me","Mc","Nl","Zl","Zp","Cs","Co"],"combiningClasses":["Not_Reordered","Above","Above_Right","Below","Attached_Above_Right","Attached_Below","Overlay","Iota_Subscript","Double_Below","Double_Above","Below_Right","Above_Left","CCC10","CCC11","CCC12","CCC13","CCC14","CCC15","CCC16","CCC17","CCC18","CCC19","CCC20","CCC21","CCC22","CCC23","CCC24","CCC25","CCC30","CCC31","CCC32","CCC27","CCC28","CCC29","CCC33","CCC34","CCC35","CCC36","Nukta","Virama","CCC84","CCC91","CCC103","CCC107","CCC118","CCC122","CCC129","CCC130","CCC132","Attached_Above","Below_Left","Left","Kana_Voicing","CCC26","Right"],"scripts":["Common","Latin","Bopomofo","Inherited","Greek","Coptic","Cyrillic","Armenian","Hebrew","Arabic","Syriac","Thaana","Nko","Samaritan","Mandaic","Devanagari","Bengali","Gurmukhi","Gujarati","Oriya","Tamil","Telugu","Kannada","Malayalam","Sinhala","Thai","Lao","Tibetan","Myanmar","Georgian","Hangul","Ethiopic","Cherokee","Canadian_Aboriginal","Ogham","Runic","Tagalog","Hanunoo","Buhid","Tagbanwa","Khmer","Mongolian","Limbu","Tai_Le","New_Tai_Lue","Buginese","Tai_Tham","Balinese","Sundanese","Batak","Lepcha","Ol_Chiki","Braille","Glagolitic","Tifinagh","Han","Hiragana","Katakana","Yi","Lisu","Vai","Bamum","Syloti_Nagri","Phags_Pa","Saurashtra","Kayah_Li","Rejang","Javanese","Cham","Tai_Viet","Meetei_Mayek","null","Linear_B","Lycian","Carian","Old_Italic","Gothic","Old_Permic","Ugaritic","Old_Persian","Deseret","Shavian","Osmanya","Osage","Elbasan","Caucasian_Albanian","Linear_A","Cypriot","Imperial_Aramaic","Palmyrene","Nabataean","Hatran","Phoenician","Lydian","Meroitic_Hieroglyphs","Meroitic_Cursive","Kharoshthi","Old_South_Arabian","Old_North_Arabian","Manichaean","Avestan","Inscriptional_Parthian","Inscriptional_Pahlavi","Psalter_Pahlavi","Old_Turkic","Old_Hungarian","Hanifi_Rohingya","Old_Sogdian","Sogdian","Elymaic","Brahmi","Kaithi","Sora_Sompeng","Chakma","Mahajani","Sharada","Khojki","Multani","Khudawadi","Grantha","Newa","Tirhuta","Siddham","Modi","Takri","Ahom","Dogra","Warang_Citi","Nandinagari","Zanabazar_Square","Soyombo","Pau_Cin_Hau","Bhaiksuki","Marchen","Masaram_Gondi","Gunjala_Gondi","Makasar","Cuneiform","Egyptian_Hieroglyphs","Anatolian_Hieroglyphs","Mro","Bassa_Vah","Pahawh_Hmong","Medefaidrin","Miao","Tangut","Nushu","Duployan","SignWriting","Nyiakeng_Puachue_Hmong","Wancho","Mende_Kikakui","Adlam"],"eaw":["N","Na","A","W","H","F"]}');var k2=new(f6(AN))(f6(MN).toByteArray("")),zN=Math.log2||((x)=>Math.log(x)/Math.LN2),P4=(x)=>zN(x)+1|0,BN=P4(f6(V6).categories.length-1),Tc=P4(f6(V6).combiningClasses.length-1),u9=P4(f6(V6).scripts.length-1),v4=P4(f6(V6).eaw.length-1),g2=10,wN=Tc+u9+v4+g2,PN=u9+v4+g2,vN=v4+g2,IN=g2,SN=(1<<BN)-1,ZN=(1<<Tc)-1,TN=(1<<u9)-1,CN=(1<<v4)-1,kN=(1<<g2)-1;function ax(x){let d=k2.get(x);return f6(V6).categories[d>>wN&SN]}function Cc(x){let d=k2.get(x);return f6(V6).combiningClasses[d>>PN&ZN]}function kc(x){let d=k2.get(x);return f6(V6).scripts[d>>vN&TN]}function gc(x){let d=k2.get(x);return f6(V6).eaw[d>>IN&CN]}function hc(x){let d=k2.get(x),b=d&kN;if(b===0)return null;else if(b<=50)return b-1;else if(b<480){let c=(b>>4)-12,q=(b&15)+1;return c/q}else if(b<768){d=(b>>5)-14;let c=(b&31)+2;while(c>0)d*=10,c--;return d}else{d=(b>>2)-191;let c=(b&3)+1;while(c>0)d*=60,c--;return d}}function ac(x){let d=ax(x);return d==="Lu"||d==="Ll"||d==="Lt"||d==="Lm"||d==="Lo"||d==="Nl"}function _c(x){return ax(x)==="Nd"}function mc(x){let d=ax(x);return d==="Pc"||d==="Pd"||d==="Pe"||d==="Pf"||d==="Pi"||d==="Po"||d==="Ps"}function uc(x){return ax(x)==="Ll"}function yc(x){return ax(x)==="Lu"}function pc(x){return ax(x)==="Lt"}function lc(x){let d=ax(x);return d==="Zs"||d==="Zl"||d==="Zp"}function nc(x){let d=ax(x);return d==="Nd"||d==="No"||d==="Nl"||d==="Lu"||d==="Ll"||d==="Lt"||d==="Lm"||d==="Lo"||d==="Me"||d==="Mc"}function ic(x){let d=ax(x);return d==="Mn"||d==="Me"||d==="Mc"}var gN={getCategory:ax,getCombiningClass:Cc,getScript:kc,getEastAsianWidth:gc,getNumericValue:hc,isAlphabetic:ac,isDigit:_c,isPunctuation:mc,isLowerCase:uc,isUpperCase:yc,isTitleCase:pc,isWhiteSpace:lc,isBaseForm:nc,isMark:ic}});var tc=i((bB,oc)=>{var y9=1,p9=0;class sc{constructor(x){this.stateTable=x.stateTable,this.accepting=x.accepting,this.tags=x.tags}match(x){var d=this;return{*[Symbol.iterator](){var b=y9,c=null,q=null,$=null;for(var Y=0;Y<x.length;Y++){var G=x[Y];if($=b,b=d.stateTable[b][G],b===p9){if(c!=null&&q!=null&&q>=c)yield[c,q,d.tags[$]];b=d.stateTable[y9][G],c=null}if(b!==p9&&c==null)c=Y;if(d.accepting[b])q=Y;if(b===p9)b=y9}if(c!=null&&q!=null&&q>=c)yield[c,q,d.tags[b]]}}}apply(x,d){for(var[b,c,q]of this.match(x))for(var $ of q)if(typeof d[$]==="function")d[$](b,c,x.slice(b,c+1))}}oc.exports=sc});var xq=i((cB,I4)=>{var hN=function(){function x(V,N){return N!=null&&V instanceof N}var d;try{d=Map}catch(V){d=function(){}}var b;try{b=Set}catch(V){b=function(){}}var c;try{c=Promise}catch(V){c=function(){}}function q(V,N,U,K,X){if(typeof N==="object")U=N.depth,K=N.prototype,X=N.includeNonEnumerable,N=N.circular;var D=[],L=[],H=typeof Buffer!="undefined";if(typeof N=="undefined")N=!0;if(typeof U=="undefined")U=1/0;function O(j,e){if(j===null)return null;if(e===0)return j;var M,F;if(typeof j!="object")return j;if(x(j,d))M=new d;else if(x(j,b))M=new b;else if(x(j,c))M=new c(function(y,T){j.then(function(m){y(O(m,e-1))},function(m){T(O(m,e-1))})});else if(q.__isArray(j))M=[];else if(q.__isRegExp(j)){if(M=new RegExp(j.source,J(j)),j.lastIndex)M.lastIndex=j.lastIndex}else if(q.__isDate(j))M=new Date(j.getTime());else if(H&&Buffer.isBuffer(j)){if(Buffer.allocUnsafe)M=Buffer.allocUnsafe(j.length);else M=new Buffer(j.length);return j.copy(M),M}else if(x(j,Error))M=Object.create(j);else if(typeof K=="undefined")F=Object.getPrototypeOf(j),M=Object.create(F);else M=Object.create(K),F=K;if(N){var z=D.indexOf(j);if(z!=-1)return L[z];D.push(j),L.push(M)}if(x(j,d))j.forEach(function(y,T){var m=O(T,e-1),u=O(y,e-1);M.set(m,u)});if(x(j,b))j.forEach(function(y){var T=O(y,e-1);M.add(T)});for(var B in j){var w;if(F)w=Object.getOwnPropertyDescriptor(F,B);if(w&&w.set==null)continue;M[B]=O(j[B],e-1)}if(Object.getOwnPropertySymbols){var Z=Object.getOwnPropertySymbols(j);for(var B=0;B<Z.length;B++){var P=Z[B],I=Object.getOwnPropertyDescriptor(j,P);if(I&&!I.enumerable&&!X)continue;if(M[P]=O(j[P],e-1),!I.enumerable)Object.defineProperty(M,P,{enumerable:!1})}}if(X){var a=Object.getOwnPropertyNames(j);for(var B=0;B<a.length;B++){var S=a[B],I=Object.getOwnPropertyDescriptor(j,S);if(I&&I.enumerable)continue;M[S]=O(j[S],e-1),Object.defineProperty(M,S,{enumerable:!1})}}return M}return O(V,U)}q.clonePrototype=function V(N){if(N===null)return null;var U=function(){};return U.prototype=N,new U};function $(V){return Object.prototype.toString.call(V)}q.__objToStr=$;function Y(V){return typeof V==="object"&&$(V)==="[object Date]"}q.__isDate=Y;function G(V){return typeof V==="object"&&$(V)==="[object Array]"}q.__isArray=G;function E(V){return typeof V==="object"&&$(V)==="[object RegExp]"}q.__isRegExp=E;function J(V){var N="";if(V.global)N+="g";if(V.ignoreCase)N+="i";if(V.multiline)N+="m";return N}return q.__getRegExpFlags=J,q}();if(typeof I4==="object"&&I4.exports)I4.exports=hN});var l9=i((aN)=>{function fq(x){this.buffer=x,this.pos=0}fq.prototype.read=function(x,d,b){if(this.pos+b>this.buffer.length)b=this.buffer.length-this.pos;for(var c=0;c<b;c++)x[d+c]=this.buffer[this.pos+c];return this.pos+=b,b};aN.BrotliInput=fq;function dq(x){this.buffer=x,this.pos=0}dq.prototype.write=function(x,d){if(this.pos+d>this.buffer.length)throw new Error("Output buffer is not large enough");return this.buffer.set(x.subarray(0,d),this.pos),this.pos+=d,d};aN.BrotliOutput=dq});var qq=i(($B,cq)=>{var Q7=4096,uN=2*Q7+32,bq=2*Q7-1,yN=new Uint32Array([0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535,131071,262143,524287,1048575,2097151,4194303,8388607,16777215]);function Y7(x){this.buf_=new Uint8Array(uN),this.input_=x,this.reset()}Y7.READ_SIZE=Q7;Y7.IBUF_MASK=bq;Y7.prototype.reset=function(){this.buf_ptr_=0,this.val_=0,this.pos_=0,this.bit_pos_=0,this.bit_end_pos_=0,this.eos_=0,this.readMoreInput();for(var x=0;x<4;x++)this.val_|=this.buf_[this.pos_]<<8*x,++this.pos_;return this.bit_end_pos_>0};Y7.prototype.readMoreInput=function(){if(this.bit_end_pos_>256)return;else if(this.eos_){if(this.bit_pos_>this.bit_end_pos_)throw new Error("Unexpected end of input "+this.bit_pos_+" "+this.bit_end_pos_)}else{var x=this.buf_ptr_,d=this.input_.read(this.buf_,x,Q7);if(d<0)throw new Error("Unexpected end of input");if(d<Q7){this.eos_=1;for(var b=0;b<32;b++)this.buf_[x+d+b]=0}if(x===0){for(var b=0;b<32;b++)this.buf_[(Q7<<1)+b]=this.buf_[b];this.buf_ptr_=Q7}else this.buf_ptr_=0;this.bit_end_pos_+=d<<3}};Y7.prototype.fillBitWindow=function(){while(this.bit_pos_>=8)this.val_>>>=8,this.val_|=this.buf_[this.pos_&bq]<<24,++this.pos_,this.bit_pos_=this.bit_pos_-8>>>0,this.bit_end_pos_=this.bit_end_pos_-8>>>0};Y7.prototype.readBits=function(x){if(32-this.bit_pos_<x)this.fillBitWindow();var d=this.val_>>>this.bit_pos_&yN[x];return this.bit_pos_+=x,d};cq.exports=Y7});var Qq=i((pN)=>{pN.dictionary=new Uint8Array([116,105,109,101,100,111,119,110,108,105,102,101,108,101,102,116,98,97,99,107,99,111,100,101,100,97,116,97,115,104,111,119,111,110,108,121,115,105,116,101,99,105,116,121,111,112,101,110,106,117,115,116,108,105,107,101,102,114,101,101,119,111,114,107,116,101,120,116,121,101,97,114,111,118,101,114,98,111,100,121,108,111,118,101,102,111,114,109,98,111,111,107,112,108,97,121,108,105,118,101,108,105,110,101,104,101,108,112,104,111,109,101,115,105,100,101,109,111,114,101,119,111,114,100,108,111,110,103,116,104,101,109,118,105,101,119,102,105,110,100,112,97,103,101,100,97,121,115,102,117,108,108,104,101,97,100,116,101,114,109,101,97,99,104,97,114,101,97,102,114,111,109,116,114,117,101,109,97,114,107,97,98,108,101,117,112,111,110,104,105,103,104,100,97,116,101,108,97,110,100,110,101,119,115,101,118,101,110,110,101,120,116,99,97,115,101,98,111,116,104,112,111,115,116,117,115,101,100,109,97,100,101,104,97,110,100,104,101,114,101,119,104,97,116,110,97,109,101,76,105,110,107,98,108,111,103,115,105,122,101,98,97,115,101,104,101,108,100,109,97,107,101,109,97,105,110,117,115,101,114,39,41,32,43,104,111,108,100,101,110,100,115,119,105,116,104,78,101,119,115,114,101,97,100,119,101,114,101,115,105,103,110,116,97,107,101,104,97,118,101,103,97,109,101,115,101,101,110,99,97,108,108,112,97,116,104,119,101,108,108,112,108,117,115,109,101,110,117,102,105,108,109,112,97,114,116,106,111,105,110,116,104,105,115,108,105,115,116,103,111,111,100,110,101,101,100,119,97,121,115,119,101,115,116,106,111,98,115,109,105,110,100,97,108,115,111,108,111,103,111,114,105,99,104,117,115,101,115,108,97,115,116,116,101,97,109,97,114,109,121,102,111,111,100,107,105,110,103,119,105,108,108,101,97,115,116,119,97,114,100,98,101,115,116,102,105,114,101,80,97,103,101,107,110,111,119,97,119,97,121,46,112,110,103,109,111,118,101,116,104,97,110,108,111,97,100,103,105,118,101,115,101,108,102,110,111,116,101,109,117,99,104,102,101,101,100,109,97,110,121,114,111,99,107,105,99,111,110,111,110,99,101,108,111,111,107,104,105,100,101,100,105,101,100,72,111,109,101,114,117,108,101,104,111,115,116,97,106,97,120,105,110,102,111,99,108,117,98,108,97,119,115,108,101,115,115,104,97,108,102,115,111,109,101,115,117,99,104,122,111,110,101,49,48,48,37,111,110,101,115,99,97,114,101,84,105,109,101,114,97,99,101,98,108,117,101,102,111,117,114,119,101,101,107,102,97,99,101,104,111,112,101,103,97,118,101,104,97,114,100,108,111,115,116,119,104,101,110,112,97,114,107,107,101,112,116,112,97,115,115,115,104,105,112,114,111,111,109,72,84,77,76,112,108,97,110,84,121,112,101,100,111,110,101,115,97,118,101,107,101,101,112,102,108,97,103,108,105,110,107,115,111,108,100,102,105,118,101,116,111,111,107,114,97,116,101,116,111,119,110,106,117,109,112,116,104,117,115,100,97,114,107,99,97,114,100,102,105,108,101,102,101,97,114,115,116,97,121,107,105,108,108,116,104,97,116,102,97,108,108,97,117,116,111,101,118,101,114,46,99,111,109,116,97,108,107,115,104,111,112,118,111,116,101,100,101,101,112,109,111,100,101,114,101,115,116,116,117,114,110,98,111,114,110,98,97,110,100,102,101,108,108,114,111,115,101,117,114,108,40,115,107,105,110,114,111,108,101,99,111,109,101,97,99,116,115,97,103,101,115,109,101,101,116,103,111,108,100,46,106,112,103,105,116,101,109,118,97,114,121,102,101,108,116,116,104,101,110,115,101,110,100,100,114,111,112,86,105,101,119,99,111,112,121,49,46,48,34,60,47,97,62,115,116,111,112,101,108,115,101,108,105,101,115,116,111,117,114,112,97,99,107,46,103,105,102,112,97,115,116,99,115,115,63,103,114,97,121,109,101,97,110,38,103,116,59,114,105,100,101,115,104,111,116,108,97,116,101,115,97,105,100,114,111,97,100,118,97,114,32,102,101,101,108,106,111,104,110,114,105,99,107,112,111,114,116,102,97,115,116,39,85,65,45,100,101,97,100,60,47,98,62,112,111,111,114,98,105,108,108,116,121,112,101,85,46,83,46,119,111,111,100,109,117,115,116,50,112,120,59,73,110,102,111,114,97,110,107,119,105,100,101,119,97,110,116,119,97,108,108,108,101,97,100,91,48,93,59,112,97,117,108,119,97,118,101,115,117,114,101,36,40,39,35,119,97,105,116,109,97,115,115,97,114,109,115,103,111,101,115,103,97,105,110,108,97,110,103,112,97,105,100,33,45,45,32,108,111,99,107,117,110,105,116,114,111,111,116,119,97,108,107,102,105,114,109,119,105,102,101,120,109,108,34,115,111,110,103,116,101,115,116,50,48,112,120,107,105,110,100,114,111,119,115,116,111,111,108,102,111,110,116,109,97,105,108,115,97,102,101,115,116,97,114,109,97,112,115,99,111,114,101,114,97,105,110,102,108,111,119,98,97,98,121,115,112,97,110,115,97,121,115,52,112,120,59,54,112,120,59,97,114,116,115,102,111,111,116,114,101,97,108,119,105,107,105,104,101,97,116,115,116,101,112,116,114,105,112,111,114,103,47,108,97,107,101,119,101,97,107,116,111,108,100,70,111,114,109,99,97,115,116,102,97,110,115,98,97,110,107,118,101,114,121,114,117,110,115,106,117,108,121,116,97,115,107,49,112,120,59,103,111,97,108,103,114,101,119,115,108,111,119,101,100,103,101,105,100,61,34,115,101,116,115,53,112,120,59,46,106,115,63,52,48,112,120,105,102,32,40,115,111,111,110,115,101,97,116,110,111,110,101,116,117,98,101,122,101,114,111,115,101,110,116,114,101,101,100,102,97,99,116,105,110,116,111,103,105,102,116,104,97,114,109,49,56,112,120,99,97,109,101,104,105,108,108,98,111,108,100,122,111,111,109,118,111,105,100,101,97,115,121,114,105,110,103,102,105,108,108,112,101,97,107,105,110,105,116,99,111,115,116,51,112,120,59,106,97,99,107,116,97,103,115,98,105,116,115,114,111,108,108,101,100,105,116,107,110,101,119,110,101,97,114,60,33,45,45,103,114,111,119,74,83,79,78,100,117,116,121,78,97,109,101,115,97,108,101,121,111,117,32,108,111,116,115,112,97,105,110,106,97,122,122,99,111,108,100,101,121,101,115,102,105,115,104,119,119,119,46,114,105,115,107,116,97,98,115,112,114,101,118,49,48,112,120,114,105,115,101,50,53,112,120,66,108,117,101,100,105,110,103,51,48,48,44,98,97,108,108,102,111,114,100,101,97,114,110,119,105,108,100,98,111,120,46,102,97,105,114,108,97,99,107,118,101,114,115,112,97,105,114,106,117,110,101,116,101,99,104,105,102,40,33,112,105,99,107,101,118,105,108,36,40,34,35,119,97,114,109,108,111,114,100,100,111,101,115,112,117,108,108,44,48,48,48,105,100,101,97,100,114,97,119,104,117,103,101,115,112,111,116,102,117,110,100,98,117,114,110,104,114,101,102,99,101,108,108,107,101,121,115,116,105,99,107,104,111,117,114,108,111,115,115,102,117,101,108,49,50,112,120,115,117,105,116,100,101,97,108,82,83,83,34,97,103,101,100,103,114,101,121,71,69,84,34,101,97,115,101,97,105,109,115,103,105,114,108,97,105,100,115,56,112,120,59,110,97,118,121,103,114,105,100,116,105,112,115,35,57,57,57,119,97,114,115,108,97,100,121,99,97,114,115,41,59,32,125,112,104,112,63,104,101,108,108,116,97,108,108,119,104,111,109,122,104,58,229,42,47,13,10,32,49,48,48,104,97,108,108,46,10,10,65,55,112,120,59,112,117,115,104,99,104,97,116,48,112,120,59,99,114,101,119,42,47,60,47,104,97,115,104,55,53,112,120,102,108,97,116,114,97,114,101,32,38,38,32,116,101,108,108,99,97,109,112,111,110,116,111,108,97,105,100,109,105,115,115,115,107,105,112,116,101,110,116,102,105,110,101,109,97,108,101,103,101,116,115,112,108,111,116,52,48,48,44,13,10,13,10,99,111,111,108,102,101,101,116,46,112,104,112,60,98,114,62,101,114,105,99,109,111,115,116,103,117,105,100,98,101,108,108,100,101,115,99,104,97,105,114,109,97,116,104,97,116,111,109,47,105,109,103,38,35,56,50,108,117,99,107,99,101,110,116,48,48,48,59,116,105,110,121,103,111,110,101,104,116,109,108,115,101,108,108,100,114,117,103,70,82,69,69,110,111,100,101,110,105,99,107,63,105,100,61,108,111,115,101,110,117,108,108,118,97,115,116,119,105,110,100,82,83,83,32,119,101,97,114,114,101,108,121,98,101,101,110,115,97,109,101,100,117,107,101,110,97,115,97,99,97,112,101,119,105,115,104,103,117,108,102,84,50,51,58,104,105,116,115,115,108,111,116,103,97,116,101,107,105,99,107,98,108,117,114,116,104,101,121,49,53,112,120,39,39,41,59,41,59,34,62,109,115,105,101,119,105,110,115,98,105,114,100,115,111,114,116,98,101,116,97,115,101,101,107,84,49,56,58,111,114,100,115,116,114,101,101,109,97,108,108,54,48,112,120,102,97,114,109,226,128,153,115,98,111,121,115,91,48,93,46,39,41,59,34,80,79,83,84,98,101,97,114,107,105,100,115,41,59,125,125,109,97,114,121,116,101,110,100,40,85,75,41,113,117,97,100,122,104,58,230,45,115,105,122,45,45,45,45,112,114,111,112,39,41,59,13,108,105,102,116,84,49,57,58,118,105,99,101,97,110,100,121,100,101,98,116,62,82,83,83,112,111,111,108,110,101,99,107,98,108,111,119,84,49,54,58,100,111,111,114,101,118,97,108,84,49,55,58,108,101,116,115,102,97,105,108,111,114,97,108,112,111,108,108,110,111,118,97,99,111,108,115,103,101,110,101,32,226,128,148,115,111,102,116,114,111,109,101,116,105,108,108,114,111,115,115,60,104,51,62,112,111,117,114,102,97,100,101,112,105,110,107,60,116,114,62,109,105,110,105,41,124,33,40,109,105,110,101,122,104,58,232,98,97,114,115,104,101,97,114,48,48,41,59,109,105,108,107,32,45,45,62,105,114,111,110,102,114,101,100,100,105,115,107,119,101,110,116,115,111,105,108,112,117,116,115,47,106,115,47,104,111,108,121,84,50,50,58,73,83,66,78,84,50,48,58,97,100,97,109,115,101,101,115,60,104,50,62,106,115,111,110,39,44,32,39,99,111,110,116,84,50,49,58,32,82,83,83,108,111,111,112,97,115,105,97,109,111,111,110,60,47,112,62,115,111,117,108,76,73,78,69,102,111,114,116,99,97,114,116,84,49,52,58,60,104,49,62,56,48,112,120,33,45,45,60,57,112,120,59,84,48,52,58,109,105,107,101,58,52,54,90,110,105,99,101,105,110,99,104,89,111,114,107,114,105,99,101,122,104,58,228,39,41,41,59,112,117,114,101,109,97,103,101,112,97,114,97,116,111,110,101,98,111,110,100,58,51,55,90,95,111,102,95,39,93,41,59,48,48,48,44,122,104,58,231,116,97,110,107,121,97,114,100,98,111,119,108,98,117,115,104,58,53,54,90,74,97,118,97,51,48,112,120,10,124,125,10,37,67,51,37,58,51,52,90,106,101,102,102,69,88,80,73,99,97,115,104,118,105,115,97,103,111,108,102,115,110,111,119,122,104,58,233,113,117,101,114,46,99,115,115,115,105,99,107,109,101,97,116,109,105,110,46,98,105,110,100,100,101,108,108,104,105,114,101,112,105,99,115,114,101,110,116,58,51,54,90,72,84,84,80,45,50,48,49,102,111,116,111,119,111,108,102,69,78,68,32,120,98,111,120,58,53,52,90,66,79,68,89,100,105,99,107,59,10,125,10,101,120,105,116,58,51,53,90,118,97,114,115,98,101,97,116,39,125,41,59,100,105,101,116,57,57,57,59,97,110,110,101,125,125,60,47,91,105,93,46,76,97,110,103,107,109,194,178,119,105,114,101,116,111,121,115,97,100,100,115,115,101,97,108,97,108,101,120,59,10,9,125,101,99,104,111,110,105,110,101,46,111,114,103,48,48,53,41,116,111,110,121,106,101,119,115,115,97,110,100,108,101,103,115,114,111,111,102,48,48,48,41,32,50,48,48,119,105,110,101,103,101,97,114,100,111,103,115,98,111,111,116,103,97,114,121,99,117,116,115,116,121,108,101,116,101,109,112,116,105,111,110,46,120,109,108,99,111,99,107,103,97,110,103,36,40,39,46,53,48,112,120,80,104,46,68,109,105,115,99,97,108,97,110,108,111,97,110,100,101,115,107,109,105,108,101,114,121,97,110,117,110,105,120,100,105,115,99,41,59,125,10,100,117,115,116,99,108,105,112,41,46,10,10,55,48,112,120,45,50,48,48,68,86,68,115,55,93,62,60,116,97,112,101,100,101,109,111,105,43,43,41,119,97,103,101,101,117,114,111,112,104,105,108,111,112,116,115,104,111,108,101,70,65,81,115,97,115,105,110,45,50,54,84,108,97,98,115,112,101,116,115,85,82,76,32,98,117,108,107,99,111,111,107,59,125,13,10,72,69,65,68,91,48,93,41,97,98,98,114,106,117,97,110,40,49,57,56,108,101,115,104,116,119,105,110,60,47,105,62,115,111,110,121,103,117,121,115,102,117,99,107,112,105,112,101,124,45,10,33,48,48,50,41,110,100,111,119,91,49,93,59,91,93,59,10,76,111,103,32,115,97,108,116,13,10,9,9,98,97,110,103,116,114,105,109,98,97,116,104,41,123,13,10,48,48,112,120,10,125,41,59,107,111,58,236,102,101,101,115,97,100,62,13,115,58,47,47,32,91,93,59,116,111,108,108,112,108,117,103,40,41,123,10,123,13,10,32,46,106,115,39,50,48,48,112,100,117,97,108,98,111,97,116,46,74,80,71,41,59,10,125,113,117,111,116,41,59,10,10,39,41,59,10,13,10,125,13,50,48,49,52,50,48,49,53,50,48,49,54,50,48,49,55,50,48,49,56,50,48,49,57,50,48,50,48,50,48,50,49,50,48,50,50,50,48,50,51,50,48,50,52,50,48,50,53,50,48,50,54,50,48,50,55,50,48,50,56,50,48,50,57,50,48,51,48,50,48,51,49,50,48,51,50,50,48,51,51,50,48,51,52,50,48,51,53,50,48,51,54,50,48,51,55,50,48,49,51,50,48,49,50,50,48,49,49,50,48,49,48,50,48,48,57,50,48,48,56,50,48,48,55,50,48,48,54,50,48,48,53,50,48,48,52,50,48,48,51,50,48,48,50,50,48,48,49,50,48,48,48,49,57,57,57,49,57,57,56,49,57,57,55,49,57,57,54,49,57,57,53,49,57,57,52,49,57,57,51,49,57,57,50,49,57,57,49,49,57,57,48,49,57,56,57,49,57,56,56,49,57,56,55,49,57,56,54,49,57,56,53,49,57,56,52,49,57,56,51,49,57,56,50,49,57,56,49,49,57,56,48,49,57,55,57,49,57,55,56,49,57,55,55,49,57,55,54,49,57,55,53,49,57,55,52,49,57,55,51,49,57,55,50,49,57,55,49,49,57,55,48,49,57,54,57,49,57,54,56,49,57,54,55,49,57,54,54,49,57,54,53,49,57,54,52,49,57,54,51,49,57,54,50,49,57,54,49,49,57,54,48,49,57,53,57,49,57,53,56,49,57,53,55,49,57,53,54,49,57,53,53,49,57,53,52,49,57,53,51,49,57,53,50,49,57,53,49,49,57,53,48,49,48,48,48,49,48,50,52,49,51,57,52,48,48,48,48,57,57,57,57,99,111,109,111,109,195,161,115,101,115,116,101,101,115,116,97,112,101,114,111,116,111,100,111,104,97,99,101,99,97,100,97,97,195,177,111,98,105,101,110,100,195,173,97,97,115,195,173,118,105,100,97,99,97,115,111,111,116,114,111,102,111,114,111,115,111,108,111,111,116,114,97,99,117,97,108,100,105,106,111,115,105,100,111,103,114,97,110,116,105,112,111,116,101,109,97,100,101,98,101,97,108,103,111,113,117,195,169,101,115,116,111,110,97,100,97,116,114,101,115,112,111,99,111,99,97,115,97,98,97,106,111,116,111,100,97,115,105,110,111,97,103,117,97,112,117,101,115,117,110,111,115,97,110,116,101,100,105,99,101,108,117,105,115,101,108,108,97,109,97,121,111,122,111,110,97,97,109,111,114,112,105,115,111,111,98,114,97,99,108,105,99,101,108,108,111,100,105,111,115,104,111,114,97,99,97,115,105,208,183,208,176,208,189,208,176,208,190,208,188,209,128,208,176,209,128,209,131,209,130,208,176,208,189,208,181,208,191,208,190,208,190,209,130,208,184,208,183,208,189,208,190,208,180,208,190,209,130,208,190,208,182,208,181,208,190,208,189,208,184,209,133,208,157,208,176,208,181,208,181,208,177,209,139,208,188,209,139,208,146,209,139,209,129,208,190,208,178,209,139,208,178,208,190,208,157,208,190,208,190,208,177,208,159,208,190,208,187,208,184,208,189,208,184,208,160,208,164,208,157,208,181,208,156,209,139,209,130,209,139,208,158,208,189,208,184,208,188,208,180,208,176,208,151,208,176,208,148,208,176,208,157,209,131,208,158,208,177,209,130,208,181,208,152,208,183,208,181,208,185,208,189,209,131,208,188,208,188,208,162,209,139,209,131,208,182,217,129,217,138,216,163,217,134,217,133,216,167,217,133,216,185,217,131,217,132,216,163,217,136,216,177,216,175,217,138,216,167,217,129,217,137,217,135,217,136,217,132,217,133,217,132,217,131,216,167,217,136,217,132,217,135,216,168,216,179,216,167,217,132,216,165,217,134,217,135,217,138,216,163,217,138,217,130,216,175,217,135,217,132,216,171,217,133,216,168,217,135,217,132,217,136,217,132,217,138,216,168,217,132,216,167,217,138,216,168,217,131,216,180,217,138,216,167,217,133,216,163,217,133,217,134,216,170,216,168,217,138,217,132,217,134,216,173,216,168,217,135,217,133,217,133,216,180,217,136,216,180,102,105,114,115,116,118,105,100,101,111,108,105,103,104,116,119,111,114,108,100,109,101,100,105,97,119,104,105,116,101,99,108,111,115,101,98,108,97,99,107,114,105,103,104,116,115,109,97,108,108,98,111,111,107,115,112,108,97,99,101,109,117,115,105,99,102,105,101,108,100,111,114,100,101,114,112,111,105,110,116,118,97,108,117,101,108,101,118,101,108,116,97,98,108,101,98,111,97,114,100,104,111,117,115,101,103,114,111,117,112,119,111,114,107,115,121,101,97,114,115,115,116,97,116,101,116,111,100,97,121,119,97,116,101,114,115,116,97,114,116,115,116,121,108,101,100,101,97,116,104,112,111,119,101,114,112,104,111,110,101,110,105,103,104,116,101,114,114,111,114,105,110,112,117,116,97,98,111,117,116,116,101,114,109,115,116,105,116,108,101,116,111,111,108,115,101,118,101,110,116,108,111,99,97,108,116,105,109,101,115,108,97,114,103,101,119,111,114,100,115,103,97,109,101,115,115,104,111,114,116,115,112,97,99,101,102,111,99,117,115,99,108,101,97,114,109,111,100,101,108,98,108,111,99,107,103,117,105,100,101,114,97,100,105,111,115,104,97,114,101,119,111,109,101,110,97,103,97,105,110,109,111,110,101,121,105,109,97,103,101,110,97,109,101,115,121,111,117,110,103,108,105,110,101,115,108,97,116,101,114,99,111,108,111,114,103,114,101,101,110,102,114,111,110,116,38,97,109,112,59,119,97,116,99,104,102,111,114,99,101,112,114,105,99,101,114,117,108,101,115,98,101,103,105,110,97,102,116,101,114,118,105,115,105,116,105,115,115,117,101,97,114,101,97,115,98,101,108,111,119,105,110,100,101,120,116,111,116,97,108,104,111,117,114,115,108,97,98,101,108,112,114,105,110,116,112,114,101,115,115,98,117,105,108,116,108,105,110,107,115,115,112,101,101,100,115,116,117,100,121,116,114,97,100,101,102,111,117,110,100,115,101,110,115,101,117,110,100,101,114,115,104,111,119,110,102,111,114,109,115,114,97,110,103,101,97,100,100,101,100,115,116,105,108,108,109,111,118,101,100,116,97,107,101,110,97,98,111,118,101,102,108,97,115,104,102,105,120,101,100,111,102,116,101,110,111,116,104,101,114,118,105,101,119,115,99,104,101,99,107,108,101,103,97,108,114,105,118,101,114,105,116,101,109,115,113,117,105,99,107,115,104,97,112,101,104,117,109,97,110,101,120,105,115,116,103,111,105,110,103,109,111,118,105,101,116,104,105,114,100,98,97,115,105,99,112,101,97,99,101,115,116,97,103,101,119,105,100,116,104,108,111,103,105,110,105,100,101,97,115,119,114,111,116,101,112,97,103,101,115,117,115,101,114,115,100,114,105,118,101,115,116,111,114,101,98,114,101,97,107,115,111,117,116,104,118,111,105,99,101,115,105,116,101,115,109,111,110,116,104,119,104,101,114,101,98,117,105,108,100,119,104,105,99,104,101,97,114,116,104,102,111,114,117,109,116,104,114,101,101,115,112,111,114,116,112,97,114,116,121,67,108,105,99,107,108,111,119,101,114,108,105,118,101,115,99,108,97,115,115,108,97,121,101,114,101,110,116,114,121,115,116,111,114,121,117,115,97,103,101,115,111,117,110,100,99,111,117,114,116,121,111,117,114,32,98,105,114,116,104,112,111,112,117,112,116,121,112,101,115,97,112,112,108,121,73,109,97,103,101,98,101,105,110,103,117,112,112,101,114,110,111,116,101,115,101,118,101,114,121,115,104,111,119,115,109,101,97,110,115,101,120,116,114,97,109,97,116,99,104,116,114,97,99,107,107,110,111,119,110,101,97,114,108,121,98,101,103,97,110,115,117,112,101,114,112,97,112,101,114,110,111,114,116,104,108,101,97,114,110,103,105,118,101,110,110,97,109,101,100,101,110,100,101,100,84,101,114,109,115,112,97,114,116,115,71,114,111,117,112,98,114,97,110,100,117,115,105,110,103,119,111,109,97,110,102,97,108,115,101,114,101,97,100,121,97,117,100,105,111,116,97,107,101,115,119,104,105,108,101,46,99,111,109,47,108,105,118,101,100,99,97,115,101,115,100,97,105,108,121,99,104,105,108,100,103,114,101,97,116,106,117,100,103,101,116,104,111,115,101,117,110,105,116,115,110,101,118,101,114,98,114,111,97,100,99,111,97,115,116,99,111,118,101,114,97,112,112,108,101,102,105,108,101,115,99,121,99,108,101,115,99,101,110,101,112,108,97,110,115,99,108,105,99,107,119,114,105,116,101,113,117,101,101,110,112,105,101,99,101,101,109,97,105,108,102,114,97,109,101,111,108,100,101,114,112,104,111,116,111,108,105,109,105,116,99,97,99,104,101,99,105,118,105,108,115,99,97,108,101,101,110,116,101,114,116,104,101,109,101,116,104,101,114,101,116,111,117,99,104,98,111,117,110,100,114,111,121,97,108,97,115,107,101,100,119,104,111,108,101,115,105,110,99,101,115,116,111,99,107,32,110,97,109,101,102,97,105,116,104,104,101,97,114,116,101,109,112,116,121,111,102,102,101,114,115,99,111,112,101,111,119,110,101,100,109,105,103,104,116,97,108,98,117,109,116,104,105,110,107,98,108,111,111,100,97,114,114,97,121,109,97,106,111,114,116,114,117,115,116,99,97,110,111,110,117,110,105,111,110,99,111,117,110,116,118,97,108,105,100,115,116,111,110,101,83,116,121,108,101,76,111,103,105,110,104,97,112,112,121,111,99,99,117,114,108,101,102,116,58,102,114,101,115,104,113,117,105,116,101,102,105,108,109,115,103,114,97,100,101,110,101,101,100,115,117,114,98,97,110,102,105,103,104,116,98,97,115,105,115,104,111,118,101,114,97,117,116,111,59,114,111,117,116,101,46,104,116,109,108,109,105,120,101,100,102,105,110,97,108,89,111,117,114,32,115,108,105,100,101,116,111,112,105,99,98,114,111,119,110,97,108,111,110,101,100,114,97,119,110,115,112,108,105,116,114,101,97,99,104,82,105,103,104,116,100,97,116,101,115,109,97,114,99,104,113,117,111,116,101,103,111,111,100,115,76,105,110,107,115,100,111,117,98,116,97,115,121,110,99,116,104,117,109,98,97,108,108,111,119,99,104,105,101,102,121,111,117,116,104,110,111,118,101,108,49,48,112,120,59,115,101,114,118,101,117,110,116,105,108,104,97,110,100,115,67,104,101,99,107,83,112,97,99,101,113,117,101,114,121,106,97,109,101,115,101,113,117,97,108,116,119,105,99,101,48,44,48,48,48,83,116,97,114,116,112,97,110,101,108,115,111,110,103,115,114,111,117,110,100,101,105,103,104,116,115,104,105,102,116,119,111,114,116,104,112,111,115,116,115,108,101,97,100,115,119,101,101,107,115,97,118,111,105,100,116,104,101,115,101,109,105,108,101,115,112,108,97,110,101,115,109,97,114,116,97,108,112,104,97,112,108,97,110,116,109,97,114,107,115,114,97,116,101,115,112,108,97,121,115,99,108,97,105,109,115,97,108,101,115,116,101,120,116,115,115,116,97,114,115,119,114,111,110,103,60,47,104,51,62,116,104,105,110,103,46,111,114,103,47,109,117,108,116,105,104,101,97,114,100,80,111,119,101,114,115,116,97,110,100,116,111,107,101,110,115,111,108,105,100,40,116,104,105,115,98,114,105,110,103,115,104,105,112,115,115,116,97,102,102,116,114,105,101,100,99,97,108,108,115,102,117,108,108,121,102,97,99,116,115,97,103,101,110,116,84,104,105,115,32,47,47,45,45,62,97,100,109,105,110,101,103,121,112,116,69,118,101,110,116,49,53,112,120,59,69,109,97,105,108,116,114,117,101,34,99,114,111,115,115,115,112,101,110,116,98,108,111,103,115,98,111,120,34,62,110,111,116,101,100,108,101,97,118,101,99,104,105,110,97,115,105,122,101,115,103,117,101,115,116,60,47,104,52,62,114,111,98,111,116,104,101,97,118,121,116,114,117,101,44,115,101,118,101,110,103,114,97,110,100,99,114,105,109,101,115,105,103,110,115,97,119,97,114,101,100,97,110,99,101,112,104,97,115,101,62,60,33,45,45,101,110,95,85,83,38,35,51,57,59,50,48,48,112,120,95,110,97,109,101,108,97,116,105,110,101,110,106,111,121,97,106,97,120,46,97,116,105,111,110,115,109,105,116,104,85,46,83,46,32,104,111,108,100,115,112,101,116,101,114,105,110,100,105,97,110,97,118,34,62,99,104,97,105,110,115,99,111,114,101,99,111,109,101,115,100,111,105,110,103,112,114,105,111,114,83,104,97,114,101,49,57,57,48,115,114,111,109,97,110,108,105,115,116,115,106,97,112,97,110,102,97,108,108,115,116,114,105,97,108,111,119,110,101,114,97,103,114,101,101,60,47,104,50,62,97,98,117,115,101,97,108,101,114,116,111,112,101,114,97,34,45,47,47,87,99,97,114,100,115,104,105,108,108,115,116,101,97,109,115,80,104,111,116,111,116,114,117,116,104,99,108,101,97,110,46,112,104,112,63,115,97,105,110,116,109,101,116,97,108,108,111,117,105,115,109,101,97,110,116,112,114,111,111,102,98,114,105,101,102,114,111,119,34,62,103,101,110,114,101,116,114,117,99,107,108,111,111,107,115,86,97,108,117,101,70,114,97,109,101,46,110,101,116,47,45,45,62,10,60,116,114,121,32,123,10,118,97,114,32,109,97,107,101,115,99,111,115,116,115,112,108,97,105,110,97,100,117,108,116,113,117,101,115,116,116,114,97,105,110,108,97,98,111,114,104,101,108,112,115,99,97,117,115,101,109,97,103,105,99,109,111,116,111,114,116,104,101,105,114,50,53,48,112,120,108,101,97,115,116,115,116,101,112,115,67,111,117,110,116,99,111,117,108,100,103,108,97,115,115,115,105,100,101,115,102,117,110,100,115,104,111,116,101,108,97,119,97,114,100,109,111,117,116,104,109,111,118,101,115,112,97,114,105,115,103,105,118,101,115,100,117,116,99,104,116,101,120,97,115,102,114,117,105,116,110,117,108,108,44,124,124,91,93,59,116,111,112,34,62,10,60,33,45,45,80,79,83,84,34,111,99,101,97,110,60,98,114,47,62,102,108,111,111,114,115,112,101,97,107,100,101,112,116,104,32,115,105,122,101,98,97,110,107,115,99,97,116,99,104,99,104,97,114,116,50,48,112,120,59,97,108,105,103,110,100,101,97,108,115,119,111,117,108,100,53,48,112,120,59,117,114,108,61,34,112,97,114,107,115,109,111,117,115,101,77,111,115,116,32,46,46,46,60,47,97,109,111,110,103,98,114,97,105,110,98,111,100,121,32,110,111,110,101,59,98,97,115,101,100,99,97,114,114,121,100,114,97,102,116,114,101,102,101,114,112,97,103,101,95,104,111,109,101,46,109,101,116,101,114,100,101,108,97,121,100,114,101,97,109,112,114,111,118,101,106,111,105,110,116,60,47,116,114,62,100,114,117,103,115,60,33,45,45,32,97,112,114,105,108,105,100,101,97,108,97,108,108,101,110,101,120,97,99,116,102,111,114,116,104,99,111,100,101,115,108,111,103,105,99,86,105,101,119,32,115,101,101,109,115,98,108,97,110,107,112,111,114,116,115,32,40,50,48,48,115,97,118,101,100,95,108,105,110,107,103,111,97,108,115,103,114,97,110,116,103,114,101,101,107,104,111,109,101,115,114,105,110,103,115,114,97,116,101,100,51,48,112,120,59,119,104,111,115,101,112,97,114,115,101,40,41,59,34,32,66,108,111,99,107,108,105,110,117,120,106,111,110,101,115,112,105,120,101,108,39,41,59,34,62,41,59,105,102,40,45,108,101,102,116,100,97,118,105,100,104,111,114,115,101,70,111,99,117,115,114,97,105,115,101,98,111,120,101,115,84,114,97,99,107,101,109,101,110,116,60,47,101,109,62,98,97,114,34,62,46,115,114,99,61,116,111,119,101,114,97,108,116,61,34,99,97,98,108,101,104,101,110,114,121,50,52,112,120,59,115,101,116,117,112,105,116,97,108,121,115,104,97,114,112,109,105,110,111,114,116,97,115,116,101,119,97,110,116,115,116,104,105,115,46,114,101,115,101,116,119,104,101,101,108,103,105,114,108,115,47,99,115,115,47,49,48,48,37,59,99,108,117,98,115,115,116,117,102,102,98,105,98,108,101,118,111,116,101,115,32,49,48,48,48,107,111,114,101,97,125,41,59,13,10,98,97,110,100,115,113,117,101,117,101,61,32,123,125,59,56,48,112,120,59,99,107,105,110,103,123,13,10,9,9,97,104,101,97,100,99,108,111,99,107,105,114,105,115,104,108,105,107,101,32,114,97,116,105,111,115,116,97,116,115,70,111,114,109,34,121,97,104,111,111,41,91,48,93,59,65,98,111,117,116,102,105,110,100,115,60,47,104,49,62,100,101,98,117,103,116,97,115,107,115,85,82,76,32,61,99,101,108,108,115,125,41,40,41,59,49,50,112,120,59,112,114,105,109,101,116,101,108,108,115,116,117,114,110,115,48,120,54,48,48,46,106,112,103,34,115,112,97,105,110,98,101,97,99,104,116,97,120,101,115,109,105,99,114,111,97,110,103,101,108,45,45,62,60,47,103,105,102,116,115,115,116,101,118,101,45,108,105,110,107,98,111,100,121,46,125,41,59,10,9,109,111,117,110,116,32,40,49,57,57,70,65,81,60,47,114,111,103,101,114,102,114,97,110,107,67,108,97,115,115,50,56,112,120,59,102,101,101,100,115,60,104,49,62,60,115,99,111,116,116,116,101,115,116,115,50,50,112,120,59,100,114,105,110,107,41,32,124,124,32,108,101,119,105,115,115,104,97,108,108,35,48,51,57,59,32,102,111,114,32,108,111,118,101,100,119,97,115,116,101,48,48,112,120,59,106,97,58,227,130,115,105,109,111,110,60,102,111,110,116,114,101,112,108,121,109,101,101,116,115,117,110,116,101,114,99,104,101,97,112,116,105,103,104,116,66,114,97,110,100,41,32,33,61,32,100,114,101,115,115,99,108,105,112,115,114,111,111,109,115,111,110,107,101,121,109,111,98,105,108,109,97,105,110,46,78,97,109,101,32,112,108,97,116,101,102,117,110,110,121,116,114,101,101,115,99,111,109,47,34,49,46,106,112,103,119,109,111,100,101,112,97,114,97,109,83,84,65,82,84,108,101,102,116,32,105,100,100,101,110,44,32,50,48,49,41,59,10,125,10,102,111,114,109,46,118,105,114,117,115,99,104,97,105,114,116,114,97,110,115,119,111,114,115,116,80,97,103,101,115,105,116,105,111,110,112,97,116,99,104,60,33,45,45,10,111,45,99,97,99,102,105,114,109,115,116,111,117,114,115,44,48,48,48,32,97,115,105,97,110,105,43,43,41,123,97,100,111,98,101,39,41,91,48,93,105,100,61,49,48,98,111,116,104,59,109,101,110,117,32,46,50,46,109,105,46,112,110,103,34,107,101,118,105,110,99,111,97,99,104,67,104,105,108,100,98,114,117,99,101,50,46,106,112,103,85,82,76,41,43,46,106,112,103,124,115,117,105,116,101,115,108,105,99,101,104,97,114,114,121,49,50,48,34,32,115,119,101,101,116,116,114,62,13,10,110,97,109,101,61,100,105,101,103,111,112,97,103,101,32,115,119,105,115,115,45,45,62,10,10,35,102,102,102,59,34,62,76,111,103,46,99,111,109,34,116,114,101,97,116,115,104,101,101,116,41,32,38,38,32,49,52,112,120,59,115,108,101,101,112,110,116,101,110,116,102,105,108,101,100,106,97,58,227,131,105,100,61,34,99,78,97,109,101,34,119,111,114,115,101,115,104,111,116,115,45,98,111,120,45,100,101,108,116,97,10,38,108,116,59,98,101,97,114,115,58,52,56,90,60,100,97,116,97,45,114,117,114,97,108,60,47,97,62,32,115,112,101,110,100,98,97,107,101,114,115,104,111,112,115,61,32,34,34,59,112,104,112,34,62,99,116,105,111,110,49,51,112,120,59,98,114,105,97,110,104,101,108,108,111,115,105,122,101,61,111,61,37,50,70,32,106,111,105,110,109,97,121,98,101,60,105,109,103,32,105,109,103,34,62,44,32,102,106,115,105,109,103,34,32,34,41,91,48,93,77,84,111,112,66,84,121,112,101,34,110,101,119,108,121,68,97,110,115,107,99,122,101,99,104,116,114,97,105,108,107,110,111,119,115,60,47,104,53,62,102,97,113,34,62,122,104,45,99,110,49,48,41,59,10,45,49,34,41,59,116,121,112,101,61,98,108,117,101,115,116,114,117,108,121,100,97,118,105,115,46,106,115,39,59,62,13,10,60,33,115,116,101,101,108,32,121,111,117,32,104,50,62,13,10,102,111,114,109,32,106,101,115,117,115,49,48,48,37,32,109,101,110,117,46,13,10,9,13,10,119,97,108,101,115,114,105,115,107,115,117,109,101,110,116,100,100,105,110,103,98,45,108,105,107,116,101,97,99,104,103,105,102,34,32,118,101,103,97,115,100,97,110,115,107,101,101,115,116,105,115,104,113,105,112,115,117,111,109,105,115,111,98,114,101,100,101,115,100,101,101,110,116,114,101,116,111,100,111,115,112,117,101,100,101,97,195,177,111,115,101,115,116,195,161,116,105,101,110,101,104,97,115,116,97,111,116,114,111,115,112,97,114,116,101,100,111,110,100,101,110,117,101,118,111,104,97,99,101,114,102,111,114,109,97,109,105,115,109,111,109,101,106,111,114,109,117,110,100,111,97,113,117,195,173,100,195,173,97,115,115,195,179,108,111,97,121,117,100,97,102,101,99,104,97,116,111,100,97,115,116,97,110,116,111,109,101,110,111,115,100,97,116,111,115,111,116,114,97,115,115,105,116,105,111,109,117,99,104,111,97,104,111,114,97,108,117,103,97,114,109,97,121,111,114,101,115,116,111,115,104,111,114,97,115,116,101,110,101,114,97,110,116,101,115,102,111,116,111,115,101,115,116,97,115,112,97,195,173,115,110,117,101,118,97,115,97,108,117,100,102,111,114,111,115,109,101,100,105,111,113,117,105,101,110,109,101,115,101,115,112,111,100,101,114,99,104,105,108,101,115,101,114,195,161,118,101,99,101,115,100,101,99,105,114,106,111,115,195,169,101,115,116,97,114,118,101,110,116,97,103,114,117,112,111,104,101,99,104,111,101,108,108,111,115,116,101,110,103,111,97,109,105,103,111,99,111,115,97,115,110,105,118,101,108,103,101,110,116,101,109,105,115,109,97,97,105,114,101,115,106,117,108,105,111,116,101,109,97,115,104,97,99,105,97,102,97,118,111,114,106,117,110,105,111,108,105,98,114,101,112,117,110,116,111,98,117,101,110,111,97,117,116,111,114,97,98,114,105,108,98,117,101,110,97,116,101,120,116,111,109,97,114,122,111,115,97,98,101,114,108,105,115,116,97,108,117,101,103,111,99,195,179,109,111,101,110,101,114,111,106,117,101,103,111,112,101,114,195,186,104,97,98,101,114,101,115,116,111,121,110,117,110,99,97,109,117,106,101,114,118,97,108,111,114,102,117,101,114,97,108,105,98,114,111,103,117,115,116,97,105,103,117,97,108,118,111,116,111,115,99,97,115,111,115,103,117,195,173,97,112,117,101,100,111,115,111,109,111,115,97,118,105,115,111,117,115,116,101,100,100,101,98,101,110,110,111,99,104,101,98,117,115,99,97,102,97,108,116,97,101,117,114,111,115,115,101,114,105,101,100,105,99,104,111,99,117,114,115,111,99,108,97,118,101,99,97,115,97,115,108,101,195,179,110,112,108,97,122,111,108,97,114,103,111,111,98,114,97,115,118,105,115,116,97,97,112,111,121,111,106,117,110,116,111,116,114,97,116,97,118,105,115,116,111,99,114,101,97,114,99,97,109,112,111,104,101,109,111,115,99,105,110,99,111,99,97,114,103,111,112,105,115,111,115,111,114,100,101,110,104,97,99,101,110,195,161,114,101,97,100,105,115,99,111,112,101,100,114,111,99,101,114,99,97,112,117,101,100,97,112,97,112,101,108,109,101,110,111,114,195,186,116,105,108,99,108,97,114,111,106,111,114,103,101,99,97,108,108,101,112,111,110,101,114,116,97,114,100,101,110,97,100,105,101,109,97,114,99,97,115,105,103,117,101,101,108,108,97,115,115,105,103,108,111,99,111,99,104,101,109,111,116,111,115,109,97,100,114,101,99,108,97,115,101,114,101,115,116,111,110,105,195,177,111,113,117,101,100,97,112,97,115,97,114,98,97,110,99,111,104,105,106,111,115,118,105,97,106,101,112,97,98,108,111,195,169,115,116,101,118,105,101,110,101,114,101,105,110,111,100,101,106,97,114,102,111,110,100,111,99,97,110,97,108,110,111,114,116,101,108,101,116,114,97,99,97,117,115,97,116,111,109,97,114,109,97,110,111,115,108,117,110,101,115,97,117,116,111,115,118,105,108,108,97,118,101,110,100,111,112,101,115,97,114,116,105,112,111,115,116,101,110,103,97,109,97,114,99,111,108,108,101,118,97,112,97,100,114,101,117,110,105,100,111,118,97,109,111,115,122,111,110,97,115,97,109,98,111,115,98,97,110,100,97,109,97,114,105,97,97,98,117,115,111,109,117,99,104,97,115,117,98,105,114,114,105,111,106,97,118,105,118,105,114,103,114,97,100,111,99,104,105,99,97,97,108,108,195,173,106,111,118,101,110,100,105,99,104,97,101,115,116,97,110,116,97,108,101,115,115,97,108,105,114,115,117,101,108,111,112,101,115,111,115,102,105,110,101,115,108,108,97,109,97,98,117,115,99,111,195,169,115,116,97,108,108,101,103,97,110,101,103,114,111,112,108,97,122,97,104,117,109,111,114,112,97,103,97,114,106,117,110,116,97,100,111,98,108,101,105,115,108,97,115,98,111,108,115,97,98,97,195,177,111,104,97,98,108,97,108,117,99,104,97,195,129,114,101,97,100,105,99,101,110,106,117,103,97,114,110,111,116,97,115,118,97,108,108,101,97,108,108,195,161,99,97,114,103,97,100,111,108,111,114,97,98,97,106,111,101,115,116,195,169,103,117,115,116,111,109,101,110,116,101,109,97,114,105,111,102,105,114,109,97,99,111,115,116,111,102,105,99,104,97,112,108,97,116,97,104,111,103,97,114,97,114,116,101,115,108,101,121,101,115,97,113,117,101,108,109,117,115,101,111,98,97,115,101,115,112,111,99,111,115,109,105,116,97,100,99,105,101,108,111,99,104,105,99,111,109,105,101,100,111,103,97,110,97,114,115,97,110,116,111,101,116,97,112,97,100,101,98,101,115,112,108,97,121,97,114,101,100,101,115,115,105,101,116,101,99,111,114,116,101,99,111,114,101,97,100,117,100,97,115,100,101,115,101,111,118,105,101,106,111,100,101,115,101,97,97,103,117,97,115,38,113,117,111,116,59,100,111,109,97,105,110,99,111,109,109,111,110,115,116,97,116,117,115,101,118,101,110,116,115,109,97,115,116,101,114,115,121,115,116,101,109,97,99,116,105,111,110,98,97,110,110,101,114,114,101,109,111,118,101,115,99,114,111,108,108,117,112,100,97,116,101,103,108,111,98,97,108,109,101,100,105,117,109,102,105,108,116,101,114,110,117,109,98,101,114,99,104,97,110,103,101,114,101,115,117,108,116,112,117,98,108,105,99,115,99,114,101,101,110,99,104,111,111,115,101,110,111,114,109,97,108,116,114,97,118,101,108,105,115,115,117,101,115,115,111,117,114,99,101,116,97,114,103,101,116,115,112,114,105,110,103,109,111,100,117,108,101,109,111,98,105,108,101,115,119,105,116,99,104,112,104,111,116,111,115,98,111,114,100,101,114,114,101,103,105,111,110,105,116,115,101,108,102,115,111,99,105,97,108,97,99,116,105,118,101,99,111,108,117,109,110,114,101,99,111,114,100,102,111,108,108,111,119,116,105,116,108,101,62,101,105,116,104,101,114,108,101,110,103,116,104,102,97,109,105,108,121,102,114,105,101,110,100,108,97,121,111,117,116,97,117,116,104,111,114,99,114,101,97,116,101,114,101,118,105,101,119,115,117,109,109,101,114,115,101,114,118,101,114,112,108,97,121,101,100,112,108,97,121,101,114,101,120,112,97,110,100,112,111,108,105,99,121,102,111,114,109,97,116,100,111,117,98,108,101,112,111,105,110,116,115,115,101,114,105,101,115,112,101,114,115,111,110,108,105,118,105,110,103,100,101,115,105,103,110,109,111,110,116,104,115,102,111,114,99,101,115,117,110,105,113,117,101,119,101,105,103,104,116,112,101,111,112,108,101,101,110,101,114,103,121,110,97,116,117,114,101,115,101,97,114,99,104,102,105,103,117,114,101,104,97,118,105,110,103,99,117,115,116,111,109,111,102,102,115,101,116,108,101,116,116,101,114,119,105,110,100,111,119,115,117,98,109,105,116,114,101,110,100,101,114,103,114,111,117,112,115,117,112,108,111,97,100,104,101,97,108,116,104,109,101,116,104,111,100,118,105,100,101,111,115,115,99,104,111,111,108,102,117,116,117,114,101,115,104,97,100,111,119,100,101,98,97,116,101,118,97,108,117,101,115,79,98,106,101,99,116,111,116,104,101,114,115,114,105,103,104,116,115,108,101,97,103,117,101,99,104,114,111,109,101,115,105,109,112,108,101,110,111,116,105,99,101,115,104,97,114,101,100,101,110,100,105,110,103,115,101,97,115,111,110,114,101,112,111,114,116,111,110,108,105,110,101,115,113,117,97,114,101,98,117,116,116,111,110,105,109,97,103,101,115,101,110,97,98,108,101,109,111,118,105,110,103,108,97,116,101,115,116,119,105,110,116,101,114,70,114,97,110,99,101,112,101,114,105,111,100,115,116,114,111,110,103,114,101,112,101,97,116,76,111,110,100,111,110,100,101,116,97,105,108,102,111,114,109,101,100,100,101,109,97,110,100,115,101,99,117,114,101,112,97,115,115,101,100,116,111,103,103,108,101,112,108,97,99,101,115,100,101,118,105,99,101,115,116,97,116,105,99,99,105,116,105,101,115,115,116,114,101,97,109,121,101,108,108,111,119,97,116,116,97,99,107,115,116,114,101,101,116,102,108,105,103,104,116,104,105,100,100,101,110,105,110,102,111,34,62,111,112,101,110,101,100,117,115,101,102,117,108,118,97,108,108,101,121,99,97,117,115,101,115,108,101,97,100,101,114,115,101,99,114,101,116,115,101,99,111,110,100,100,97,109,97,103,101,115,112,111,114,116,115,101,120,99,101,112,116,114,97,116,105,110,103,115,105,103,110,101,100,116,104,105,110,103,115,101,102,102,101,99,116,102,105,101,108,100,115,115,116,97,116,101,115,111,102,102,105,99,101,118,105,115,117,97,108,101,100,105,116,111,114,118,111,108,117,109,101,82,101,112,111,114,116,109,117,115,101,117,109,109,111,118,105,101,115,112,97,114,101,110,116,97,99,99,101,115,115,109,111,115,116,108,121,109,111,116,104,101,114,34,32,105,100,61,34,109,97,114,107,101,116,103,114,111,117,110,100,99,104,97,110,99,101,115,117,114,118,101,121,98,101,102,111,114,101,115,121,109,98,111,108,109,111,109,101,110,116,115,112,101,101,99,104,109,111,116,105,111,110,105,110,115,105,100,101,109,97,116,116,101,114,67,101,110,116,101,114,111,98,106,101,99,116,101,120,105,115,116,115,109,105,100,100,108,101,69,117,114,111,112,101,103,114,111,119,116,104,108,101,103,97,99,121,109,97,110,110,101,114,101,110,111,117,103,104,99,97,114,101,101,114,97,110,115,119,101,114,111,114,105,103,105,110,112,111,114,116,97,108,99,108,105,101,110,116,115,101,108,101,99,116,114,97,110,100,111,109,99,108,111,115,101,100,116,111,112,105,99,115,99,111,109,105,110,103,102,97,116,104,101,114,111,112,116,105,111,110,115,105,109,112,108,121,114,97,105,115,101,100,101,115,99,97,112,101,99,104,111,115,101,110,99,104,117,114,99,104,100,101,102,105,110,101,114,101,97,115,111,110,99,111,114,110,101,114,111,117,116,112,117,116,109,101,109,111,114,121,105,102,114,97,109,101,112,111,108,105,99,101,109,111,100,101,108,115,78,117,109,98,101,114,100,117,114,105,110,103,111,102,102,101,114,115,115,116,121,108,101,115,107,105,108,108,101,100,108,105,115,116,101,100,99,97,108,108,101,100,115,105,108,118,101,114,109,97,114,103,105,110,100,101,108,101,116,101,98,101,116,116,101,114,98,114,111,119,115,101,108,105,109,105,116,115,71,108,111,98,97,108,115,105,110,103,108,101,119,105,100,103,101,116,99,101,110,116,101,114,98,117,100,103,101,116,110,111,119,114,97,112,99,114,101,100,105,116,99,108,97,105,109,115,101,110,103,105,110,101,115,97,102,101,116,121,99,104,111,105,99,101,115,112,105,114,105,116,45,115,116,121,108,101,115,112,114,101,97,100,109,97,107,105,110,103,110,101,101,100,101,100,114,117,115,115,105,97,112,108,101,97,115,101,101,120,116,101,110,116,83,99,114,105,112,116,98,114,111,107,101,110,97,108,108,111,119,115,99,104,97,114,103,101,100,105,118,105,100,101,102,97,99,116,111,114,109,101,109,98,101,114,45,98,97,115,101,100,116,104,101,111,114,121,99,111,110,102,105,103,97,114,111,117,110,100,119,111,114,107,101,100,104,101,108,112,101,100,67,104,117,114,99,104,105,109,112,97,99,116,115,104,111,117,108,100,97,108,119,97,121,115,108,111,103,111,34,32,98,111,116,116,111,109,108,105,115,116,34,62,41,123,118,97,114,32,112,114,101,102,105,120,111,114,97,110,103,101,72,101,97,100,101,114,46,112,117,115,104,40,99,111,117,112,108,101,103,97,114,100,101,110,98,114,105,100,103,101,108,97,117,110,99,104,82,101,118,105,101,119,116,97,107,105,110,103,118,105,115,105,111,110,108,105,116,116,108,101,100,97,116,105,110,103,66,117,116,116,111,110,98,101,97,117,116,121,116,104,101,109,101,115,102,111,114,103,111,116,83,101,97,114,99,104,97,110,99,104,111,114,97,108,109,111,115,116,108,111,97,100,101,100,67,104,97,110,103,101,114,101,116,117,114,110,115,116,114,105,110,103,114,101,108,111,97,100,77,111,98,105,108,101,105,110,99,111,109,101,115,117,112,112,108,121,83,111,117,114,99,101,111,114,100,101,114,115,118,105,101,119,101,100,38,110,98,115,112,59,99,111,117,114,115,101,65,98,111,117,116,32,105,115,108,97,110,100,60,104,116,109,108,32,99,111,111,107,105,101,110,97,109,101,61,34,97,109,97,122,111,110,109,111,100,101,114,110,97,100,118,105,99,101,105,110,60,47,97,62,58,32,84,104,101,32,100,105,97,108,111,103,104,111,117,115,101,115,66,69,71,73,78,32,77,101,120,105,99,111,115,116,97,114,116,115,99,101,110,116,114,101,104,101,105,103,104,116,97,100,100,105,110,103,73,115,108,97,110,100,97,115,115,101,116,115,69,109,112,105,114,101,83,99,104,111,111,108,101,102,102,111,114,116,100,105,114,101,99,116,110,101,97,114,108,121,109,97,110,117,97,108,83,101,108,101,99,116,46,10,10,79,110,101,106,111,105,110,101,100,109,101,110,117,34,62,80,104,105,108,105,112,97,119,97,114,100,115,104,97,110,100,108,101,105,109,112,111,114,116,79,102,102,105,99,101,114,101,103,97,114,100,115,107,105,108,108,115,110,97,116,105,111,110,83,112,111,114,116,115,100,101,103,114,101,101,119,101,101,107,108,121,32,40,101,46,103,46,98,101,104,105,110,100,100,111,99,116,111,114,108,111,103,103,101,100,117,110,105,116,101,100,60,47,98,62,60,47,98,101,103,105,110,115,112,108,97,110,116,115,97,115,115,105,115,116,97,114,116,105,115,116,105,115,115,117,101,100,51,48,48,112,120,124,99,97,110,97,100,97,97,103,101,110,99,121,115,99,104,101,109,101,114,101,109,97,105,110,66,114,97,122,105,108,115,97,109,112,108,101,108,111,103,111,34,62,98,101,121,111,110,100,45,115,99,97,108,101,97,99,99,101,112,116,115,101,114,118,101,100,109,97,114,105,110,101,70,111,111,116,101,114,99,97,109,101,114,97,60,47,104,49,62,10,95,102,111,114,109,34,108,101,97,118,101,115,115,116,114,101,115,115,34,32,47,62,13,10,46,103,105,102,34,32,111,110,108,111,97,100,108,111,97,100,101,114,79,120,102,111,114,100,115,105,115,116,101,114,115,117,114,118,105,118,108,105,115,116,101,110,102,101,109,97,108,101,68,101,115,105,103,110,115,105,122,101,61,34,97,112,112,101,97,108,116,101,120,116,34,62,108,101,118,101,108,115,116,104,97,110,107,115,104,105,103,104,101,114,102,111,114,99,101,100,97,110,105,109,97,108,97,110,121,111,110,101,65,102,114,105,99,97,97,103,114,101,101,100,114,101,99,101,110,116,80,101,111,112,108,101,60,98,114,32,47,62,119,111,110,100,101,114,112,114,105,99,101,115,116,117,114,110,101,100,124,124,32,123,125,59,109,97,105,110,34,62,105,110,108,105,110,101,115,117,110,100,97,121,119,114,97,112,34,62,102,97,105,108,101,100,99,101,110,115,117,115,109,105,110,117,116,101,98,101,97,99,111,110,113,117,111,116,101,115,49,53,48,112,120,124,101,115,116,97,116,101,114,101,109,111,116,101,101,109,97,105,108,34,108,105,110,107,101,100,114,105,103,104,116,59,115,105,103,110,97,108,102,111,114,109,97,108,49,46,104,116,109,108,115,105,103,110,117,112,112,114,105,110,99,101,102,108,111,97,116,58,46,112,110,103,34,32,102,111,114,117,109,46,65,99,99,101,115,115,112,97,112,101,114,115,115,111,117,110,100,115,101,120,116,101,110,100,72,101,105,103,104,116,115,108,105,100,101,114,85,84,70,45,56,34,38,97,109,112,59,32,66,101,102,111,114,101,46,32,87,105,116,104,115,116,117,100,105,111,111,119,110,101,114,115,109,97,110,97,103,101,112,114,111,102,105,116,106,81,117,101,114,121,97,110,110,117,97,108,112,97,114,97,109,115,98,111,117,103,104,116,102,97,109,111,117,115,103,111,111,103,108,101,108,111,110,103,101,114,105,43,43,41,32,123,105,115,114,97,101,108,115,97,121,105,110,103,100,101,99,105,100,101,104,111,109,101,34,62,104,101,97,100,101,114,101,110,115,117,114,101,98,114,97,110,99,104,112,105,101,99,101,115,98,108,111,99,107,59,115,116,97,116,101,100,116,111,112,34,62,60,114,97,99,105,110,103,114,101,115,105,122,101,45,45,38,103,116,59,112,97,99,105,116,121,115,101,120,117,97,108,98,117,114,101,97,117,46,106,112,103,34,32,49,48,44,48,48,48,111,98,116,97,105,110,116,105,116,108,101,115,97,109,111,117,110,116,44,32,73,110,99,46,99,111,109,101,100,121,109,101,110,117,34,32,108,121,114,105,99,115,116,111,100,97,121,46,105,110,100,101,101,100,99,111,117,110,116,121,95,108,111,103,111,46,70,97,109,105,108,121,108,111,111,107,101,100,77,97,114,107,101,116,108,115,101,32,105,102,80,108,97,121,101,114,116,117,114,107,101,121,41,59,118,97,114,32,102,111,114,101,115,116,103,105,118,105,110,103,101,114,114,111,114,115,68,111,109,97,105,110,125,101,108,115,101,123,105,110,115,101,114,116,66,108,111,103,60,47,102,111,111,116,101,114,108,111,103,105,110,46,102,97,115,116,101,114,97,103,101,110,116,115,60,98,111,100,121,32,49,48,112,120,32,48,112,114,97,103,109,97,102,114,105,100,97,121,106,117,110,105,111,114,100,111,108,108,97,114,112,108,97,99,101,100,99,111,118,101,114,115,112,108,117,103,105,110,53,44,48,48,48,32,112,97,103,101,34,62,98,111,115,116,111,110,46,116,101,115,116,40,97,118,97,116,97,114,116,101,115,116,101,100,95,99,111,117,110,116,102,111,114,117,109,115,115,99,104,101,109,97,105,110,100,101,120,44,102,105,108,108,101,100,115,104,97,114,101,115,114,101,97,100,101,114,97,108,101,114,116,40,97,112,112,101,97,114,83,117,98,109,105,116,108,105,110,101,34,62,98,111,100,121,34,62,10,42,32,84,104,101,84,104,111,117,103,104,115,101,101,105,110,103,106,101,114,115,101,121,78,101,119,115,60,47,118,101,114,105,102,121,101,120,112,101,114,116,105,110,106,117,114,121,119,105,100,116,104,61,67,111,111,107,105,101,83,84,65,82,84,32,97,99,114,111,115,115,95,105,109,97,103,101,116,104,114,101,97,100,110,97,116,105,118,101,112,111,99,107,101,116,98,111,120,34,62,10,83,121,115,116,101,109,32,68,97,118,105,100,99,97,110,99,101,114,116,97,98,108,101,115,112,114,111,118,101,100,65,112,114,105,108,32,114,101,97,108,108,121,100,114,105,118,101,114,105,116,101,109,34,62,109,111,114,101,34,62,98,111,97,114,100,115,99,111,108,111,114,115,99,97,109,112,117,115,102,105,114,115,116,32,124,124,32,91,93,59,109,101,100,105,97,46,103,117,105,116,97,114,102,105,110,105,115,104,119,105,100,116,104,58,115,104,111,119,101,100,79,116,104,101,114,32,46,112,104,112,34,32,97,115,115,117,109,101,108,97,121,101,114,115,119,105,108,115,111,110,115,116,111,114,101,115,114,101,108,105,101,102,115,119,101,100,101,110,67,117,115,116,111,109,101,97,115,105,108,121,32,121,111,117,114,32,83,116,114,105,110,103,10,10,87,104,105,108,116,97,121,108,111,114,99,108,101,97,114,58,114,101,115,111,114,116,102,114,101,110,99,104,116,104,111,117,103,104,34,41,32,43,32,34,60,98,111,100,121,62,98,117,121,105,110,103,98,114,97,110,100,115,77,101,109,98,101,114,110,97,109,101,34,62,111,112,112,105,110,103,115,101,99,116,111,114,53,112,120,59,34,62,118,115,112,97,99,101,112,111,115,116,101,114,109,97,106,111,114,32,99,111,102,102,101,101,109,97,114,116,105,110,109,97,116,117,114,101,104,97,112,112,101,110,60,47,110,97,118,62,107,97,110,115,97,115,108,105,110,107,34,62,73,109,97,103,101,115,61,102,97,108,115,101,119,104,105,108,101,32,104,115,112,97,99,101,48,38,97,109,112,59,32,10,10,73,110,32,32,112,111,119,101,114,80,111,108,115,107,105,45,99,111,108,111,114,106,111,114,100,97,110,66,111,116,116,111,109,83,116,97,114,116,32,45,99,111,117,110,116,50,46,104,116,109,108,110,101,119,115,34,62,48,49,46,106,112,103,79,110,108,105,110,101,45,114,105,103,104,116,109,105,108,108,101,114,115,101,110,105,111,114,73,83,66,78,32,48,48,44,48,48,48,32,103,117,105,100,101,115,118,97,108,117,101,41,101,99,116,105,111,110,114,101,112,97,105,114,46,120,109,108,34,32,32,114,105,103,104,116,115,46,104,116,109,108,45,98,108,111,99,107,114,101,103,69,120,112,58,104,111,118,101,114,119,105,116,104,105,110,118,105,114,103,105,110,112,104,111,110,101,115,60,47,116,114,62,13,117,115,105,110,103,32,10,9,118,97,114,32,62,39,41,59,10,9,60,47,116,100,62,10,60,47,116,114,62,10,98,97,104,97,115,97,98,114,97,115,105,108,103,97,108,101,103,111,109,97,103,121,97,114,112,111,108,115,107,105,115,114,112,115,107,105,216,177,216,175,217,136,228,184,173,230,150,135,231,174,128,228,189,147,231,185,129,233,171,148,228,191,161,230,129,175,228,184,173,229,155,189,230,136,145,228,187,172,228,184,128,228,184,170,229,133,172,229,143,184,231,174,161,231,144,134,232,174,186,229,157,155,229,143,175,228,187,165,230,156,141,229,138,161,230,151,182,233,151,180,228,184,170,228,186,186,228,186,167,229,147,129,232,135,170,229,183,177,228,188,129,228,184,154,230,159,165,231,156,139,229,183,165,228,189,156,232,129,148,231,179,187,230,178,161,230,156,137,231,189,145,231,171,153,230,137,128,230,156,137,232,175,132,232,174,186,228,184,173,229,191,131,230,150,135,231,171,160,231,148,168,230,136,183,233,166,150,233,161,181,228,189,156,232,128,133,230,138,128,230,156,175,233,151,174,233,162,152,231,155,184,229,133,179,228,184,139,232,189,189,230,144,156,231,180,162,228,189,191,231,148,168,232,189,175,228,187,182,229,156,168,231,186,191,228,184,187,233,162,152,232,181,132,230,150,153,232,167,134,233,162,145,229,155,158,229,164,141,230,179,168,229,134,140,231,189,145,231,187,156,230,148,182,232,151,143,229,134,133,229,174,185,230,142,168,232,141,144,229,184,130,229,156,186,230,182,136,230,129,175,231,169,186,233,151,180,229,143,145,229,184,131,228,187,128,228,185,136,229,165,189,229,143,139,231,148,159,230,180,187,229,155,190,231,137,135,229,143,145,229,177,149,229,166,130,230,158,156,230,137,139,230,156,186,230,150,176,233,151,187,230,156,128,230,150,176,230,150,185,229,188,143,229,140,151,228,186,172,230,143,144,228,190,155,229,133,179,228,186,142,230,155,180,229,164,154,232,191,153,228,184,170,231,179,187,231,187,159,231,159,165,233,129,147,230,184,184,230,136,143,229,185,191,229,145,138,229,133,182,228,187,150,229,143,145,232,161,168,229,174,137,229,133,168,231,172,172,228,184,128,228,188,154,229,145,152,232,191,155,232,161,140,231,130,185,229,135,187,231,137,136,230,157,131,231,148,181,229,173,144,228,184,150,231,149,140,232,174,190,232,174,161,229,133,141,232,180,185,230,149,153,232,130,178,229,138,160,229,133,165,230,180,187,229,138,168,228,187,150,228,187,172,229,149,134,229,147,129,229,141,154,229,174,162,231,142,176,229,156,168,228,184,138,230,181,183,229,166,130,228,189,149,229,183,178,231,187,143,231,149,153,232,168,128,232,175,166,231,187,134,231,164,190,229,140,186,231,153,187,229,189,149,230,156,172,231,171,153,233,156,128,232,166,129,228,187,183,230,160,188,230,148,175,230,140,129,229,155,189,233,153,133,233,147,190,230,142,165,229,155,189,229,174,182,229,187,186,232,174,190,230,156,139,229,143,139,233,152,133,232,175,187,230,179,149,229,190,139,228,189,141,231,189,174,231,187,143,230,181,142,233,128,137,230,139,169,232,191,153,230,160,183,229,189,147,229,137,141,229,136,134,231,177,187,230,142,146,232,161,140,229,155,160,228,184,186,228,186,164,230,152,147,230,156,128,229,144,142,233,159,179,228,185,144,228,184,141,232,131,189,233,128,154,232,191,135,232,161,140,228,184,154,231,167,145,230,138,128,229,143,175,232,131,189,232,174,190,229,164,135,229,144,136,228,189,156,229,164,167,229,174,182,231,164,190,228,188,154,231,160,148,231,169,182,228,184,147,228,184,154,229,133,168,233,131,168,233,161,185,231,155,174,232,191,153,233,135,140,232,191,152,230,152,175,229,188,128,229,167,139,230,131,133,229,134,181,231,148,181,232,132,145,230,150,135,228,187,182,229,147,129,231,137,140,229,184,174,229,138,169,230,150,135,229,140,150,232,181,132,230,186,144,229,164,167,229,173,166,229,173,166,228,185,160,229,156,176,229,157,128,230,181,143,232,167,136,230,138,149,232,181,132,229,183,165,231,168,139,232,166,129,230,177,130,230,128,142,228,185,136,230,151,182,229,128,153,229,138,159,232,131,189,228,184,187,232,166,129,231,155,174,229,137,141,232,181,132,232,174,175,229,159,142,229,184,130,230,150,185,230,179,149,231,148,181,229,189,177,230,139,155,232,129,152,229,163,176,230,152,142,228,187,187,228,189,149,229,129,165,229,186,183,230,149,176,230,141,174,231,190,142,229,155,189,230,177,189,232,189,166,228,187,139,231,187,141,228,189,134,230,152,175,228,186,164,230,181,129,231,148,159,228,186,167,230,137,128,228,187,165,231,148,181,232,175,157,230,152,190,231,164,186,228,184,128,228,186,155,229,141,149,228,189,141,228,186,186,229,145,152,229,136,134,230,158,144,229,156,176,229,155,190,230,151,133,230,184,184,229,183,165,229,133,183,229,173,166,231,148,159,231,179,187,229,136,151,231,189,145,229,143,139,229,184,150,229,173,144,229,175,134,231,160,129,233,162,145,233,129,147,230,142,167,229,136,182,229,156,176,229,140,186,229,159,186,230,156,172,229,133,168,229,155,189,231,189,145,228,184,138,233,135,141,232,166,129,231,172,172,228,186,140,229,150,156,230,172,162,232,191,155,229,133,165,229,143,139,230,131,133,232,191,153,228,186,155,232,128,131,232,175,149,229,143,145,231,142,176,229,159,185,232,174,173,228,187,165,228,184,138,230,148,191,229,186,156,230,136,144,228,184,186,231,142,175,229,162,131,233,166,153,230,184,175,229,144,140,230,151,182,229,168,177,228,185,144,229,143,145,233,128,129,228,184,128,229,174,154,229,188,128,229,143,145,228,189,156,229,147,129,230,160,135,229,135,134,230,172,162,232,191,142,232,167,163,229,134,179,229,156,176,230,150,185,228,184,128,228,184,139,228,187,165,229,143,138,232,180,163,228,187,187,230,136,150,232,128,133,229,174,162,230,136,183,228,187,163,232,161,168,231,167,175,229,136,134,229,165,179,228,186,186,230,149,176,231,160,129,233,148,128,229,148,174,229,135,186,231,142,176,231,166,187,231,186,191,229,186,148,231,148,168,229,136,151,232,161,168,228,184,141,229,144,140,231,188,150,232,190,145,231,187,159,232,174,161,230,159,165,232,175,162,228,184,141,232,166,129,230,156,137,229,133,179,230,156,186,230,158,132,229,190,136,229,164,154,230,146,173,230,148,190,231,187,132,231,187,135,230,148,191,231,173,150,231,155,180,230,142,165,232,131,189,229,138,155,230,157,165,230,186,144,230,153,130,233,150,147,231,156,139,229,136,176,231,131,173,233,151,168,229,133,179,233,148,174,228,184,147,229,140,186,233,157,158,229,184,184,232,139,177,232,175,173,231,153,190,229,186,166,229,184,140,230,156,155,231,190,142,229,165,179,230,175,148,232,190,131,231,159,165,232,175,134,232,167,132,229,174,154,229,187,186,232,174,174,233,131,168,233,151,168,230,132,143,232,167,129,231,178,190,229,189,169,230,151,165,230,156,172,230,143,144,233,171,152,229,143,145,232,168,128,230,150,185,233,157,162,229,159,186,233,135,145,229,164,132,231,144,134,230,157,131,233,153,144,229,189,177,231,137,135,233,147,182,232,161,140,232,191,152,230,156,137,229,136,134,228,186,171,231,137,169,229,147,129,231,187,143,232,144,165,230,183,187,229,138,160,228,184,147,229,174,182,232,191,153,231,167,141,232,175,157,233,162,152,232,181,183,230,157,165,228,184,154,229,138,161,229,133,172,229,145,138,232,174,176,229,189,149,231,174,128,228,187,139,232,180,168,233,135,143,231,148,183,228,186,186,229,189,177,229,147,141,229,188,149,231,148,168,230,138,165,229,145,138,233,131,168,229,136,134,229,191,171,233,128,159,229,146,168,232,175,162,230,151,182,229,176,154,230,179,168,230,132,143,231,148,179,232,175,183,229,173,166,230,160,161,229,186,148,232,175,165,229,142,134,229,143,178,229,143,170,230,152,175,232,191,148,229,155,158,232,180,173,228,185,176,229,144,141,231,167,176,228,184,186,228,186,134,230,136,144,229,138,159,232,175,180,230,152,142,228,190,155,229,186,148,229,173,169,229,173,144,228,184,147,233,162,152,231,168,139,229,186,143,228,184,128,232,136,172,230,156,131,229,147,161,229,143,170,230,156,137,229,133,182,229,174,131,228,191,157,230,138,164,232,128,140,228,184,148,228,187,138,229,164,169,231,170,151,229,143,163,229,138,168,230,128,129,231,138,182,230,128,129,231,137,185,229,136,171,232,174,164,228,184,186,229,191,133,233,161,187,230,155,180,230,150,176,229,176,143,232,175,180,230,136,145,229,128,145,228,189,156,228,184,186,229,170,146,228,189,147,229,140,133,230,139,172,233,130,163,228,185,136,228,184,128,230,160,183,229,155,189,229,134,133,230,152,175,229,144,166,230,160,185,230,141,174,231,148,181,232,167,134,229,173,166,233,153,162,229,133,183,230,156,137,232,191,135,231,168,139,231,148,177,228,186,142,228,186,186,230,137,141,229,135,186,230,157,165,228,184,141,232,191,135,230,173,163,229,156,168,230,152,142,230,152,159,230,149,133,228,186,139,229,133,179,231,179,187,230,160,135,233,162,152,229,149,134,229,138,161,232,190,147,229,133,165,228,184,128,231,155,180,229,159,186,231,161,128,230,149,153,229,173,166,228,186,134,232,167,163,229,187,186,231,173,145,231,187,147,230,158,156,229,133,168,231,144,131,233,128,154,231,159,165,232,174,161,229,136,146,229,175,185,228,186,142,232,137,186,230,156,175,231,155,184,229,134,140,229,143,145,231,148,159,231,156,159,231,154,132,229,187,186,231,171,139,231,173,137,231,186,167,231,177,187,229,158,139,231,187,143,233,170,140,229,174,158,231,142,176,229,136,182,228,189,156,230,157,165,232,135,170,230,160,135,231,173,190,228,187,165,228,184,139,229,142,159,229,136,155,230,151,160,230,179,149,229,133,182,228,184,173,229,128,139,228,186,186,228,184,128,229,136,135,230,140,135,229,141,151,229,133,179,233,151,173,233,155,134,229,155,162,231,172,172,228,184,137,229,133,179,230,179,168,229,155,160,230,173,164,231,133,167,231,137,135,230,183,177,229,156,179,229,149,134,228,184,154,229,185,191,229,183,158,230,151,165,230,156,159,233,171,152,231,186,167,230,156,128,232,191,145,231,187,188,229,144,136,232,161,168,231,164,186,228,184,147,232,190,145,232,161,140,228,184,186,228,186,164,233,128,154,232,175,132,228,187,183,232,167,137,229,190,151,231,178,190,229,141,142,229,174,182,229,186,173,229,174,140,230,136,144,230,132,159,232,167,137,229,174,137,232,163,133,229,190,151,229,136,176,233,130,174,228,187,182,229,136,182,229,186,166,233,163,159,229,147,129,232,153,189,231,132,182,232,189,172,232,189,189,230,138,165,228,187,183,232,174,176,232,128,133,230,150,185,230,161,136,232,161,140,230,148,191,228,186,186,230,176,145,231,148,168,229,147,129,228,184,156,232,165,191,230,143,144,229,135,186,233,133,146,229,186,151,231,132,182,229,144,142,228,187,152,230,172,190,231,131,173,231,130,185,228,187,165,229,137,141,229,174,140,229,133,168,229,143,145,229,184,150,232,174,190,231,189,174,233,162,134,229,175,188,229,183,165,228,184,154,229,140,187,233,153,162,231,156,139,231,156,139,231,187,143,229,133,184,229,142,159,229,155,160,229,185,179,229,143,176,229,144,132,231,167,141,229,162,158,229,138,160,230,157,144,230,150,153,230,150,176,229,162,158,228,185,139,229,144,142,232,129,140,228,184,154,230,149,136,230,158,156,228,187,138,229,185,180,232,174,186,230,150,135,230,136,145,229,155,189,229,145,138,232,175,137,231,137,136,228,184,187,228,191,174,230,148,185,229,143,130,228,184,142,230,137,147,229,141,176,229,191,171,228,185,144,230,156,186,230,162,176,232,167,130,231,130,185,229,173,152,229,156,168,231,178,190,231,165,158,232,142,183,229,190,151,229,136,169,231,148,168,231,187,167,231,187,173,228,189,160,228,187,172,232,191,153,228,185,136,230,168,161,229,188,143,232,175,173,232,168,128,232,131,189,229,164,159,233,155,133,232,153,142,230,147,141,228,189,156,233,163,142,230,160,188,228,184,128,232,181,183,231,167,145,229,173,166,228,189,147,232,130,178,231,159,173,228,191,161,230,157,161,228,187,182,230,178,187,231,150,151,232,191,144,229,138,168,228,186,167,228,184,154,228,188,154,232,174,174,229,175,188,232,136,170,229,133,136,231,148,159,232,129,148,231,155,159,229,143,175,230,152,175,229,149,143,233,161,140,231,187,147,230,158,132,228,189,156,231,148,168,232,176,131,230,159,165,232,179,135,230,150,153,232,135,170,229,138,168,232,180,159,232,180,163,229,134,156,228,184,154,232,174,191,233,151,174,229,174,158,230,150,189,230,142,165,229,143,151,232,174,168,232,174,186,233,130,163,228,184,170,229,143,141,233,166,136,229,138,160,229,188,186,229,165,179,230,128,167,232,140,131,229,155,180,230,156,141,229,139,153,228,188,145,233,151,178,228,187,138,230,151,165,229,174,162,230,156,141,232,167,128,231,156,139,229,143,130,229,138,160,231,154,132,232,175,157,228,184,128,231,130,185,228,191,157,232,175,129,229,155,190,228,185,166,230,156,137,230,149,136,230,181,139,232,175,149,231,167,187,229,138,168,230,137,141,232,131,189,229,134,179,229,174,154,232,130,161,231,165,168,228,184,141,230,150,173,233,156,128,230,177,130,228,184,141,229,190,151,229,138,158,230,179,149,228,185,139,233,151,180,233,135,135,231,148,168,232,144,165,233,148,128,230,138,149,232,175,137,231,155,174,230,160,135,231,136,177,230,131,133,230,145,132,229,189,177,230,156,137,228,186,155,232,164,135,232,163,189,230,150,135,229,173,166,230,156,186,228,188,154,230,149,176,229,173,151,232,163,133,228,191,174,232,180,173,231,137,169,229,134,156,230,157,145,229,133,168,233,157,162,231,178,190,229,147,129,229,133,182,229,174,158,228,186,139,230,131,133,230,176,180,229,185,179,230,143,144,231,164,186,228,184,138,229,184,130,232,176,162,232,176,162,230,153,174,233,128,154,230,149,153,229,184,136,228,184,138,228,188,160,231,177,187,229,136,171,230,173,140,230,155,178,230,139,165,230,156,137,229,136,155,230,150,176,233,133,141,228,187,182,229,143,170,232,166,129,230,151,182,228,187,163,232,179,135,232,168,138,232,190,190,229,136,176,228,186,186,231,148,159,232,174,162,233,152,133,232,128,129,229,184,136,229,177,149,231,164,186,229,191,131,231,144,134,232,180,180,229,173,144,231,182,178,231,171,153,228,184,187,233,161,140,232,135,170,231,132,182,231,186,167,229,136,171,231,174,128,229,141,149,230,148,185,233,157,169,233,130,163,228,186,155,230,157,165,232,175,180,230,137,147,229,188,128,228,187,163,231,160,129,229,136,160,233,153,164,232,175,129,229,136,184,232,138,130,231,155,174,233,135,141,231,130,185,230,172,161,230,149,184,229,164,154,229,176,145,232,167,132,229,136,146,232,181,132,233,135,145,230,137,190,229,136,176,228,187,165,229,144,142,229,164,167,229,133,168,228,184,187,233,161,181,230,156,128,228,189,179,229,155,158,231,173,148,229,164,169,228,184,139,228,191,157,233,154,156,231,142,176,228,187,163,230,163,128,230,159,165,230,138,149,231,165,168,229,176,143,230,151,182,230,178,146,230,156,137,230,173,163,229,184,184,231,148,154,232,135,179,228,187,163,231,144,134,231,155,174,229,189,149,229,133,172,229,188,128,229,164,141,229,136,182,233,135,145,232,158,141,229,185,184,231,166,143,231,137,136,230,156,172,229,189,162,230,136,144,229,135,134,229,164,135,232,161,140,230,131,133,229,155,158,229,136,176,230,128,157,230,131,179,230,128,142,230,160,183,229,141,143,232,174,174,232,174,164,232,175,129,230,156,128,229,165,189,228,186,167,231,148,159,230,140,137,231,133,167,230,156,141,232,163,133,229,185,191,228,184,156,229,138,168,230,188,171,233,135,135,232,180,173,230,150,176,230,137,139,231,187,132,229,155,190,233,157,162,230,157,191,229,143,130,232,128,131,230,148,191,230,178,187,229,174,185,230,152,147,229,164,169,229,156,176,229,138,170,229,138,155,228,186,186,228,187,172,229,141,135,231,186,167,233,128,159,229,186,166,228,186,186,231,137,169,232,176,131,230,149,180,230,181,129,232,161,140,233,128,160,230,136,144,230,150,135,229,173,151,233,159,169,229,155,189,232,180,184,230,152,147,229,188,128,229,177,149,231,155,184,233,151,156,232,161,168,231,142,176,229,189,177,232,167,134,229,166,130,230,173,164,231,190,142,229,174,185,229,164,167,229,176,143,230,138,165,233,129,147,230,157,161,230,172,190,229,191,131,230,131,133,232,174,184,229,164,154,230,179,149,232,167,132,229,174,182,229,177,133,228,185,166,229,186,151,232,191,158,230,142,165,231,171,139,229,141,179,228,184,190,230,138,165,230,138,128,229,183,167,229,165,165,232,191,144,231,153,187,229,133,165,228,187,165,230,157,165,231,144,134,232,174,186,228,186,139,228,187,182,232,135,170,231,148,177,228,184,173,229,141,142,229,138,158,229,133,172,229,166,136,229,166,136,231,156,159,230,173,163,228,184,141,233,148,153,229,133,168,230,150,135,229,144,136,229,144,140,228,187,183,229,128,188,229,136,171,228,186,186,231,155,145,231,157,163,229,133,183,228,189,147,228,184,150,231,186,170,229,155,162,233,152,159,229,136,155,228,184,154,230,137,191,230,139,133,229,162,158,233,149,191,230,156,137,228,186,186,228,191,157,230,140,129,229,149,134,229,174,182,231,187,180,228,191,174,229,143,176,230,185,190,229,183,166,229,143,179,232,130,161,228,187,189,231,173,148,230,161,136,229,174,158,233,153,133,231,148,181,228,191,161,231,187,143,231,144,134,231,148,159,229,145,189,229,174,163,228,188,160,228,187,187,229,138,161,230,173,163,229,188,143,231,137,185,232,137,178,228,184,139,230,157,165,229,141,143,228,188,154,229,143,170,232,131,189,229,189,147,231,132,182,233,135,141,230,150,176,229,133,167,229,174,185,230,140,135,229,175,188,232,191,144,232,161,140,230,151,165,229,191,151,232,179,163,229,174,182,232,182,133,232,191,135,229,156,159,229,156,176,230,181,153,230,177,159,230,148,175,228,187,152,230,142,168,229,135,186,231,171,153,233,149,191,230,157,173,229,183,158,230,137,167,232,161,140,229,136,182,233,128,160,228,185,139,228,184,128,230,142,168,229,185,191,231,142,176,229,156,186,230,143,143,232,191,176,229,143,152,229,140,150,228,188,160,231,187,159,230,173,140,230,137,139,228,191,157,233,153,169,232,175,190,231,168,139,229,140,187,231,150,151,231,187,143,232,191,135,232,191,135,229,142,187,228,185,139,229,137,141,230,148,182,229,133,165,229,185,180,229,186,166,230,157,130,229,191,151,231,190,142,228,184,189,230,156,128,233,171,152,231,153,187,233,153,134,230,156,170,230,157,165,229,138,160,229,183,165,229,133,141,232,180,163,230,149,153,231,168,139,231,137,136,229,157,151,232,186,171,228,189,147,233,135,141,229,186,134,229,135,186,229,148,174,230,136,144,230,156,172,229,189,162,229,188,143,229,156,159,232,177,134,229,135,186,229,131,185,228,184,156,230,150,185,233,130,174,231,174,177,229,141,151,228,186,172,230,177,130,232,129,140,229,143,150,229,190,151,232,129,140,228,189,141,231,155,184,228,191,161,233,161,181,233,157,162,229,136,134,233,146,159,231,189,145,233,161,181,231,161,174,229,174,154,229,155,190,228,190,139,231,189,145,229,157,128,231,167,175,230,158,129,233,148,153,232,175,175,231,155,174,231,154,132,229,174,157,232,180,157,230,156,186,229,133,179,233,163,142,233,153,169,230,142,136,230,157,131,231,151,133,230,175,146,229,174,160,231,137,169,233,153,164,228,186,134,232,169,149,232,171,150,231,150,190,231,151,133,229,143,138,230,151,182,230,177,130,232,180,173,231,171,153,231,130,185,229,132,191,231,171,165,230,175,143,229,164,169,228,184,173,229,164,174,232,174,164,232,175,134,230,175,143,228,184,170,229,164,169,230,180,165,229,173,151,228,189,147,229,143,176,231,129,163,231,187,180,230,138,164,230,156,172,233,161,181,228,184,170,230,128,167,229,174,152,230,150,185,229,184,184,232,167,129,231,155,184,230,156,186,230,136,152,231,149,165,229,186,148,229,189,147,229,190,139,229,184,136,230,150,185,228,190,191,230,160,161,229,155,173,232,130,161,229,184,130,230,136,191,229,177,139,230,160,143,231,155,174,229,145,152,229,183,165,229,175,188,232,135,180,231,170,129,231,132,182,233,129,147,229,133,183,230,156,172,231,189,145,231,187,147,229,144,136,230,161,163,230,161,136,229,138,179,229,138,168,229,143,166,229,164,150,231,190,142,229,133,131,229,188,149,232,181,183,230,148,185,229,143,152,231,172,172,229,155,155,228,188,154,232,174,161,232,170,170,230,152,142,233,154,144,231,167,129,229,174,157,229,174,157,232,167,132,232,140,131,230,182,136,232,180,185,229,133,177,229,144,140,229,191,152,232,174,176,228,189,147,231,179,187,229,184,166,230,157,165,229,144,141,229,173,151,231,153,188,232,161,168,229,188,128,230,148,190,229,138,160,231,155,159,229,143,151,229,136,176,228,186,140,230,137,139,229,164,167,233,135,143,230,136,144,228,186,186,230,149,176,233,135,143,229,133,177,228,186,171,229,140,186,229,159,159,229,165,179,229,173,169,229,142,159,229,136,153,230,137,128,229,156,168,231,187,147,230,157,159,233,128,154,228,191,161,232,182,133,231,186,167,233,133,141,231,189,174,229,189,147,230,151,182,228,188,152,231,167,128,230,128,167,230,132,159,230,136,191,228,186,167,233,129,138,230,136,178,229,135,186,229,143,163,230,143,144,228,186,164,229,176,177,228,184,154,228,191,157,229,129,165,231,168,139,229,186,166,229,143,130,230,149,176,228,186,139,228,184,154,230,149,180,228,184,170,229,177,177,228,184,156,230,131,133,230,132,159,231,137,185,230,174,138,229,136,134,233,161,158,230,144,156,229,176,139,229,177,158,228,186,142,233,151,168,230,136,183,232,180,162,229,138,161,229,163,176,233,159,179,229,143,138,229,133,182,232,180,162,231,187,143,229,157,154,230,140,129,229,185,178,233,131,168,230,136,144,231,171,139,229,136,169,231,155,138,232,128,131,232,153,145,230,136,144,233,131,189,229,140,133,232,163,133,231,148,168,230,136,182,230,175,148,232,181,155,230,150,135,230,152,142,230,139,155,229,149,134,229,174,140,230,149,180,231,156,159,230,152,175,231,156,188,231,157,155,228,188,153,228,188,180,229,168,129,230,156,155,233,162,134,229,159,159,229,141,171,231,148,159,228,188,152,230,131,160,232,171,150,229,163,135,229,133,172,229,133,177,232,137,175,229,165,189,229,133,133,229,136,134,231,172,166,229,144,136,233,153,132,228,187,182,231,137,185,231,130,185,228,184,141,229,143,175,232,139,177,230,150,135,232,181,132,228,186,167,230,160,185,230,156,172,230,152,142,230,152,190,229,175,134,231,162,188,229,133,172,228,188,151,230,176,145,230,151,143,230,155,180,229,138,160,228,186,171,229,143,151,229,144,140,229,173,166,229,144,175,229,138,168,233,128,130,229,144,136,229,142,159,230,157,165,233,151,174,231,173,148,230,156,172,230,150,135,231,190,142,233,163,159,231,187,191,232,137,178,231,168,179,229,174,154,231,187,136,228,186,142,231,148,159,231,137,169,228,190,155,230,177,130,230,144,156,231,139,144,229,138,155,233,135,143,228,184,165,233,135,141,230,176,184,232,191,156,229,134,153,231,156,159,230,156,137,233,153,144,231,171,158,228,186,137,229,175,185,232,177,161,232,180,185,231,148,168,228,184,141,229,165,189,231,187,157,229,175,185,229,141,129,229,136,134,228,191,131,232,191,155,231,130,185,232,175,132,229,189,177,233,159,179,228,188,152,229,138,191,228,184,141,229,176,145,230,172,163,232,181,143,229,185,182,228,184,148,230,156,137,231,130,185,230,150,185,229,144,145,229,133,168,230,150,176,228,191,161,231,148,168,232,174,190,230,150,189,229,189,162,232,177,161,232,181,132,230,160,188,231,170,129,231,160,180,233,154,143,231,157,128,233,135,141,229,164,167,228,186,142,230,152,175,230,175,149,228,184,154,230,153,186,232,131,189,229,140,150,229,183,165,229,174,140,231,190,142,229,149,134,229,159,142,231,187,159,228,184,128,229,135,186,231,137,136,230,137,147,233,128,160,231,148,162,229,147,129,230,166,130,229,134,181,231,148,168,228,186,142,228,191,157,231,149,153,229,155,160,231,180,160,228,184,173,229,156,139,229,173,152,229,130,168,232,180,180,229,155,190,230,156,128,230,132,155,233,149,191,230,156,159,229,143,163,228,187,183,231,144,134,232,180,162,229,159,186,229,156,176,229,174,137,230,142,146,230,173,166,230,177,137,233,135,140,233,157,162,229,136,155,229,187,186,229,164,169,231,169,186,233,166,150,229,133,136,229,174,140,229,150,132,233,169,177,229,138,168,228,184,139,233,157,162,228,184,141,229,134,141,232,175,154,228,191,161,230,132,143,228,185,137,233,152,179,229,133,137,232,139,177,229,155,189,230,188,130,228,186,174,229,134,155,228,186,139,231,142,169,229,174,182,231,190,164,228,188,151,229,134,156,230,176,145,229,141,179,229,143,175,229,144,141,231,168,177,229,174,182,229,133,183,229,138,168,231,148,187,230,131,179,229,136,176,230,179,168,230,152,142,229,176,143,229,173,166,230,128,167,232,131,189,232,128,131,231,160,148,231,161,172,228,187,182,232,167,130,231,156,139,230,184,133,230,165,154,230,144,158,231,172,145,233,166,150,233,160,129,233,187,132,233,135,145,233,128,130,231,148,168,230,177,159,232,139,143,231,156,159,229,174,158,228,184,187,231,174,161,233,152,182,230,174,181,232,168,187,229,134,138,231,191,187,232,175,145,230,157,131,229,136,169,229,129,154,229,165,189,228,188,188,228,185,142,233,128,154,232,174,175,230,150,189,229,183,165,231,139,128,230,133,139,228,185,159,232,174,184,231,142,175,228,191,157,229,159,185,229,133,187,230,166,130,229,191,181,229,164,167,229,158,139,230,156,186,231,165,168,231,144,134,232,167,163,229,140,191,229,144,141,99,117,97,110,100,111,101,110,118,105,97,114,109,97,100,114,105,100,98,117,115,99,97,114,105,110,105,99,105,111,116,105,101,109,112,111,112,111,114,113,117,101,99,117,101,110,116,97,101,115,116,97,100,111,112,117,101,100,101,110,106,117,101,103,111,115,99,111,110,116,114,97,101,115,116,195,161,110,110,111,109,98,114,101,116,105,101,110,101,110,112,101,114,102,105,108,109,97,110,101,114,97,97,109,105,103,111,115,99,105,117,100,97,100,99,101,110,116,114,111,97,117,110,113,117,101,112,117,101,100,101,115,100,101,110,116,114,111,112,114,105,109,101,114,112,114,101,99,105,111,115,101,103,195,186,110,98,117,101,110,111,115,118,111,108,118,101,114,112,117,110,116,111,115,115,101,109,97,110,97,104,97,98,195,173,97,97,103,111,115,116,111,110,117,101,118,111,115,117,110,105,100,111,115,99,97,114,108,111,115,101,113,117,105,112,111,110,105,195,177,111,115,109,117,99,104,111,115,97,108,103,117,110,97,99,111,114,114,101,111,105,109,97,103,101,110,112,97,114,116,105,114,97,114,114,105,98,97,109,97,114,195,173,97,104,111,109,98,114,101,101,109,112,108,101,111,118,101,114,100,97,100,99,97,109,98,105,111,109,117,99,104,97,115,102,117,101,114,111,110,112,97,115,97,100,111,108,195,173,110,101,97,112,97,114,101,99,101,110,117,101,118,97,115,99,117,114,115,111,115,101,115,116,97,98,97,113,117,105,101,114,111,108,105,98,114,111,115,99,117,97,110,116,111,97,99,99,101,115,111,109,105,103,117,101,108,118,97,114,105,111,115,99,117,97,116,114,111,116,105,101,110,101,115,103,114,117,112,111,115,115,101,114,195,161,110,101,117,114,111,112,97,109,101,100,105,111,115,102,114,101,110,116,101,97,99,101,114,99,97,100,101,109,195,161,115,111,102,101,114,116,97,99,111,99,104,101,115,109,111,100,101,108,111,105,116,97,108,105,97,108,101,116,114,97,115,97,108,103,195,186,110,99,111,109,112,114,97,99,117,97,108,101,115,101,120,105,115,116,101,99,117,101,114,112,111,115,105,101,110,100,111,112,114,101,110,115,97,108,108,101,103,97,114,118,105,97,106,101,115,100,105,110,101,114,111,109,117,114,99,105,97,112,111,100,114,195,161,112,117,101,115,116,111,100,105,97,114,105,111,112,117,101,98,108,111,113,117,105,101,114,101,109,97,110,117,101,108,112,114,111,112,105,111,99,114,105,115,105,115,99,105,101,114,116,111,115,101,103,117,114,111,109,117,101,114,116,101,102,117,101,110,116,101,99,101,114,114,97,114,103,114,97,110,100,101,101,102,101,99,116,111,112,97,114,116,101,115,109,101,100,105,100,97,112,114,111,112,105,97,111,102,114,101,99,101,116,105,101,114,114,97,101,45,109,97,105,108,118,97,114,105,97,115,102,111,114,109,97,115,102,117,116,117,114,111,111,98,106,101,116,111,115,101,103,117,105,114,114,105,101,115,103,111,110,111,114,109,97,115,109,105,115,109,111,115,195,186,110,105,99,111,99,97,109,105,110,111,115,105,116,105,111,115,114,97,122,195,179,110,100,101,98,105,100,111,112,114,117,101,98,97,116,111,108,101,100,111,116,101,110,195,173,97,106,101,115,195,186,115,101,115,112,101,114,111,99,111,99,105,110,97,111,114,105,103,101,110,116,105,101,110,100,97,99,105,101,110,116,111,99,195,161,100,105,122,104,97,98,108,97,114,115,101,114,195,173,97,108,97,116,105,110,97,102,117,101,114,122,97,101,115,116,105,108,111,103,117,101,114,114,97,101,110,116,114,97,114,195,169,120,105,116,111,108,195,179,112,101,122,97,103,101,110,100,97,118,195,173,100,101,111,101,118,105,116,97,114,112,97,103,105,110,97,109,101,116,114,111,115,106,97,118,105,101,114,112,97,100,114,101,115,102,195,161,99,105,108,99,97,98,101,122,97,195,161,114,101,97,115,115,97,108,105,100,97,101,110,118,195,173,111,106,97,112,195,179,110,97,98,117,115,111,115,98,105,101,110,101,115,116,101,120,116,111,115,108,108,101,118,97,114,112,117,101,100,97,110,102,117,101,114,116,101,99,111,109,195,186,110,99,108,97,115,101,115,104,117,109,97,110,111,116,101,110,105,100,111,98,105,108,98,97,111,117,110,105,100,97,100,101,115,116,195,161,115,101,100,105,116,97,114,99,114,101,97,100,111,208,180,208,187,209,143,209,135,209,130,208,190,208,186,208,176,208,186,208,184,208,187,208,184,209,141,209,130,208,190,208,178,209,129,208,181,208,181,208,179,208,190,208,191,209,128,208,184,209,130,208,176,208,186,208,181,209,137,208,181,209,131,208,182,208,181,208,154,208,176,208,186,208,177,208,181,208,183,208,177,209,139,208,187,208,190,208,189,208,184,208,146,209,129,208,181,208,191,208,190,208,180,208,173,209,130,208,190,209,130,208,190,208,188,209,135,208,181,208,188,208,189,208,181,209,130,208,187,208,181,209,130,209,128,208,176,208,183,208,190,208,189,208,176,208,179,208,180,208,181,208,188,208,189,208,181,208,148,208,187,209,143,208,159,209,128,208,184,208,189,208,176,209,129,208,189,208,184,209,133,209,130,208,181,208,188,208,186,209,130,208,190,208,179,208,190,208,180,208,178,208,190,209,130,209,130,208,176,208,188,208,161,208,168,208,144,208,188,208,176,209,143,208,167,209,130,208,190,208,178,208,176,209,129,208,178,208,176,208,188,208,181,208,188,209,131,208,162,208,176,208,186,208,180,208,178,208,176,208,189,208,176,208,188,209,141,209,130,208,184,209,141,209,130,209,131,208,146,208,176,208,188,209,130,208,181,209,133,208,191,209,128,208,190,209,130,209,131,209,130,208,189,208,176,208,180,208,180,208,189,209,143,208,146,208,190,209,130,209,130,209,128,208,184,208,189,208,181,208,185,208,146,208,176,209,129,208,189,208,184,208,188,209,129,208,176,208,188,209,130,208,190,209,130,209,128,209,131,208,177,208,158,208,189,208,184,208,188,208,184,209,128,208,189,208,181,208,181,208,158,208,158,208,158,208,187,208,184,209,134,209,141,209,130,208,176,208,158,208,189,208,176,208,189,208,181,208,188,208,180,208,190,208,188,208,188,208,190,208,185,208,180,208,178,208,181,208,190,208,189,208,190,209,129,209,131,208,180,224,164,149,224,165,135,224,164,185,224,165,136,224,164,149,224,165,128,224,164,184,224,165,135,224,164,149,224,164,190,224,164,149,224,165,139,224,164,148,224,164,176,224,164,170,224,164,176,224,164,168,224,165,135,224,164,143,224,164,149,224,164,149,224,164,191,224,164,173,224,165,128,224,164,135,224,164,184,224,164,149,224,164,176,224,164,164,224,165,139,224,164,185,224,165,139,224,164,134,224,164,170,224,164,185,224,165,128,224,164,175,224,164,185,224,164,175,224,164,190,224,164,164,224,164,149,224,164,165,224,164,190,106,97,103,114,97,110,224,164,134,224,164,156,224,164,156,224,165,139,224,164,133,224,164,172,224,164,166,224,165,139,224,164,151,224,164,136,224,164,156,224,164,190,224,164,151,224,164,143,224,164,185,224,164,174,224,164,135,224,164,168,224,164,181,224,164,185,224,164,175,224,165,135,224,164,165,224,165,135,224,164,165,224,165,128,224,164,152,224,164,176,224,164,156,224,164,172,224,164,166,224,165,128,224,164,149,224,164,136,224,164,156,224,165,128,224,164,181,224,165,135,224,164,168,224,164,136,224,164,168,224,164,143,224,164,185,224,164,176,224,164,137,224,164,184,224,164,174,224,165,135,224,164,149,224,164,174,224,164,181,224,165,139,224,164,178,224,165,135,224,164,184,224,164,172,224,164,174,224,164,136,224,164,166,224,165,135,224,164,147,224,164,176,224,164,134,224,164,174,224,164,172,224,164,184,224,164,173,224,164,176,224,164,172,224,164,168,224,164,154,224,164,178,224,164,174,224,164,168,224,164,134,224,164,151,224,164,184,224,165,128,224,164,178,224,165,128,216,185,217,132,217,137,216,165,217,132,217,137,217,135,216,176,216,167,216,162,216,174,216,177,216,185,216,175,216,175,216,167,217,132,217,137,217,135,216,176,217,135,216,181,217,136,216,177,216,186,217,138,216,177,217,131,216,167,217,134,217,136,217,132,216,167,216,168,217,138,217,134,216,185,216,177,216,182,216,176,217,132,217,131,217,135,217,134,216,167,217,138,217,136,217,133,217,130,216,167,217,132,216,185,217,132,217,138,216,167,217,134,216,167,217,132,217,131,217,134,216,173,216,170,217,137,217,130,216,168,217,132,217,136,216,173,216,169,216,167,216,174,216,177,217,129,217,130,216,183,216,185,216,168,216,175,216,177,217,131,217,134,216,165,216,176,216,167,217,131,217,133,216,167,216,167,216,173,216,175,216,165,217,132,216,167,217,129,217,138,217,135,216,168,216,185,216,182,217,131,217,138,217,129,216,168,216,173,216,171,217,136,217,133,217,134,217,136,217,135,217,136,216,163,217,134,216,167,216,172,216,175,216,167,217,132,217,135,216,167,216,179,217,132,217,133,216,185,217,134,216,175,217,132,217,138,216,179,216,185,216,168,216,177,216,181,217,132,217,137,217,133,217,134,216,176,216,168,217,135,216,167,216,163,217,134,217,135,217,133,216,171,217,132,217,131,217,134,216,170,216,167,217,132,216,167,216,173,217,138,216,171,217,133,216,181,216,177,216,180,216,177,216,173,216,173,217,136,217,132,217,136,217,129,217,138,216,167,216,176,216,167,217,132,217,131,217,132,217,133,216,177,216,169,216,167,217,134,216,170,216,167,217,132,217,129,216,163,216,168,217,136,216,174,216,167,216,181,216,163,217,134,216,170,216,167,217,134,217,135,216,167,217,132,217,138,216,185,216,182,217,136,217,136,217,130,216,175,216,167,216,168,217,134,216,174,217,138,216,177,216,168,217,134,216,170,217,132,217,131,217,133,216,180,216,167,216,161,217,136,217,135,217,138,216,167,216,168,217,136,217,130,216,181,216,181,217,136,217,133,216,167,216,177,217,130,217,133,216,163,216,173,216,175,217,134,216,173,217,134,216,185,216,175,217,133,216,177,216,163,217,138,216,167,216,173,216,169,217,131,216,170,216,168,216,175,217,136,217,134,217,138,216,172,216,168,217,133,217,134,217,135,216,170,216,173,216,170,216,172,217,135,216,169,216,179,217,134,216,169,217,138,216,170,217,133,217,131,216,177,216,169,216,186,216,178,216,169,217,134,217,129,216,179,216,168,217,138,216,170,217,132,217,132,217,135,217,132,217,134,216,167,216,170,217,132,217,131,217,130,217,132,216,168,217,132,217,133,216,167,216,185,217,134,217,135,216,163,217,136,217,132,216,180,217,138,216,161,217,134,217,136,216,177,216,163,217,133,216,167,217,129,217,138,217,131,216,168,217,131,217,132,216,176,216,167,216,170,216,177,216,170,216,168,216,168,216,163,217,134,217,135,217,133,216,179,216,167,217,134,217,131,216,168,217,138,216,185,217,129,217,130,216,175,216,173,216,179,217,134,217,132,217,135,217,133,216,180,216,185,216,177,216,163,217,135,217,132,216,180,217,135,216,177,217,130,216,183,216,177,216,183,217,132,216,168,112,114,111,102,105,108,101,115,101,114,118,105,99,101,100,101,102,97,117,108,116,104,105,109,115,101,108,102,100,101,116,97,105,108,115,99,111,110,116,101,110,116,115,117,112,112,111,114,116,115,116,97,114,116,101,100,109,101,115,115,97,103,101,115,117,99,99,101,115,115,102,97,115,104,105,111,110,60,116,105,116,108,101,62,99,111,117,110,116,114,121,97,99,99,111,117,110,116,99,114,101,97,116,101,100,115,116,111,114,105,101,115,114,101,115,117,108,116,115,114,117,110,110,105,110,103,112,114,111,99,101,115,115,119,114,105,116,105,110,103,111,98,106,101,99,116,115,118,105,115,105,98,108,101,119,101,108,99,111,109,101,97,114,116,105,99,108,101,117,110,107,110,111,119,110,110,101,116,119,111,114,107,99,111,109,112,97,110,121,100,121,110,97,109,105,99,98,114,111,119,115,101,114,112,114,105,118,97,99,121,112,114,111,98,108,101,109,83,101,114,118,105,99,101,114,101,115,112,101,99,116,100,105,115,112,108,97,121,114,101,113,117,101,115,116,114,101,115,101,114,118,101,119,101,98,115,105,116,101,104,105,115,116,111,114,121,102,114,105,101,110,100,115,111,112,116,105,111,110,115,119,111,114,107,105,110,103,118,101,114,115,105,111,110,109,105,108,108,105,111,110,99,104,97,110,110,101,108,119,105,110,100,111,119,46,97,100,100,114,101,115,115,118,105,115,105,116,101,100,119,101,97,116,104,101,114,99,111,114,114,101,99,116,112,114,111,100,117,99,116,101,100,105,114,101,99,116,102,111,114,119,97,114,100,121,111,117,32,99,97,110,114,101,109,111,118,101,100,115,117,98,106,101,99,116,99,111,110,116,114,111,108,97,114,99,104,105,118,101,99,117,114,114,101,110,116,114,101,97,100,105,110,103,108,105,98,114,97,114,121,108,105,109,105,116,101,100,109,97,110,97,103,101,114,102,117,114,116,104,101,114,115,117,109,109,97,114,121,109,97,99,104,105,110,101,109,105,110,117,116,101,115,112,114,105,118,97,116,101,99,111,110,116,101,120,116,112,114,111,103,114,97,109,115,111,99,105,101,116,121,110,117,109,98,101,114,115,119,114,105,116,116,101,110,101,110,97,98,108,101,100,116,114,105,103,103,101,114,115,111,117,114,99,101,115,108,111,97,100,105,110,103,101,108,101,109,101,110,116,112,97,114,116,110,101,114,102,105,110,97,108,108,121,112,101,114,102,101,99,116,109,101,97,110,105,110,103,115,121,115,116,101,109,115,107,101,101,112,105,110,103,99,117,108,116,117,114,101,38,113,117,111,116,59,44,106,111,117,114,110,97,108,112,114,111,106,101,99,116,115,117,114,102,97,99,101,115,38,113,117,111,116,59,101,120,112,105,114,101,115,114,101,118,105,101,119,115,98,97,108,97,110,99,101,69,110,103,108,105,115,104,67,111,110,116,101,110,116,116,104,114,111,117,103,104,80,108,101,97,115,101,32,111,112,105,110,105,111,110,99,111,110,116,97,99,116,97,118,101,114,97,103,101,112,114,105,109,97,114,121,118,105,108,108,97,103,101,83,112,97,110,105,115,104,103,97,108,108,101,114,121,100,101,99,108,105,110,101,109,101,101,116,105,110,103,109,105,115,115,105,111,110,112,111,112,117,108,97,114,113,117,97,108,105,116,121,109,101,97,115,117,114,101,103,101,110,101,114,97,108,115,112,101,99,105,101,115,115,101,115,115,105,111,110,115,101,99,116,105,111,110,119,114,105,116,101,114,115,99,111,117,110,116,101,114,105,110,105,116,105,97,108,114,101,112,111,114,116,115,102,105,103,117,114,101,115,109,101,109,98,101,114,115,104,111,108,100,105,110,103,100,105,115,112,117,116,101,101,97,114,108,105,101,114,101,120,112,114,101,115,115,100,105,103,105,116,97,108,112,105,99,116,117,114,101,65,110,111,116,104,101,114,109,97,114,114,105,101,100,116,114,97,102,102,105,99,108,101,97,100,105,110,103,99,104,97,110,103,101,100,99,101,110,116,114,97,108,118,105,99,116,111,114,121,105,109,97,103,101,115,47,114,101,97,115,111,110,115,115,116,117,100,105,101,115,102,101,97,116,117,114,101,108,105,115,116,105,110,103,109,117,115,116,32,98,101,115,99,104,111,111,108,115,86,101,114,115,105,111,110,117,115,117,97,108,108,121,101,112,105,115,111,100,101,112,108,97,121,105,110,103,103,114,111,119,105,110,103,111,98,118,105,111,117,115,111,118,101,114,108,97,121,112,114,101,115,101,110,116,97,99,116,105,111,110,115,60,47,117,108,62,13,10,119,114,97,112,112,101,114,97,108,114,101,97,100,121,99,101,114,116,97,105,110,114,101,97,108,105,116,121,115,116,111,114,97,103,101,97,110,111,116,104,101,114,100,101,115,107,116,111,112,111,102,102,101,114,101,100,112,97,116,116,101,114,110,117,110,117,115,117,97,108,68,105,103,105,116,97,108,99,97,112,105,116,97,108,87,101,98,115,105,116,101,102,97,105,108,117,114,101,99,111,110,110,101,99,116,114,101,100,117,99,101,100,65,110,100,114,111,105,100,100,101,99,97,100,101,115,114,101,103,117,108,97,114,32,38,97,109,112,59,32,97,110,105,109,97,108,115,114,101,108,101,97,115,101,65,117,116,111,109,97,116,103,101,116,116,105,110,103,109,101,116,104,111,100,115,110,111,116,104,105,110,103,80,111,112,117,108,97,114,99,97,112,116,105,111,110,108,101,116,116,101,114,115,99,97,112,116,117,114,101,115,99,105,101,110,99,101,108,105,99,101,110,115,101,99,104,97,110,103,101,115,69,110,103,108,97,110,100,61,49,38,97,109,112,59,72,105,115,116,111,114,121,32,61,32,110,101,119,32,67,101,110,116,114,97,108,117,112,100,97,116,101,100,83,112,101,99,105,97,108,78,101,116,119,111,114,107,114,101,113,117,105,114,101,99,111,109,109,101,110,116,119,97,114,110,105,110,103,67,111,108,108,101,103,101,116,111,111,108,98,97,114,114,101,109,97,105,110,115,98,101,99,97,117,115,101,101,108,101,99,116,101,100,68,101,117,116,115,99,104,102,105,110,97,110,99,101,119,111,114,107,101,114,115,113,117,105,99,107,108,121,98,101,116,119,101,101,110,101,120,97,99,116,108,121,115,101,116,116,105,110,103,100,105,115,101,97,115,101,83,111,99,105,101,116,121,119,101,97,112,111,110,115,101,120,104,105,98,105,116,38,108,116,59,33,45,45,67,111,110,116,114,111,108,99,108,97,115,115,101,115,99,111,118,101,114,101,100,111,117,116,108,105,110,101,97,116,116,97,99,107,115,100,101,118,105,99,101,115,40,119,105,110,100,111,119,112,117,114,112,111,115,101,116,105,116,108,101,61,34,77,111,98,105,108,101,32,107,105,108,108,105,110,103,115,104,111,119,105,110,103,73,116,97,108,105,97,110,100,114,111,112,112,101,100,104,101,97,118,105,108,121,101,102,102,101,99,116,115,45,49,39,93,41,59,10,99,111,110,102,105,114,109,67,117,114,114,101,110,116,97,100,118,97,110,99,101,115,104,97,114,105,110,103,111,112,101,110,105,110,103,100,114,97,119,105,110,103,98,105,108,108,105,111,110,111,114,100,101,114,101,100,71,101,114,109,97,110,121,114,101,108,97,116,101,100,60,47,102,111,114,109,62,105,110,99,108,117,100,101,119,104,101,116,104,101,114,100,101,102,105,110,101,100,83,99,105,101,110,99,101,99,97,116,97,108,111,103,65,114,116,105,99,108,101,98,117,116,116,111,110,115,108,97,114,103,101,115,116,117,110,105,102,111,114,109,106,111,117,114,110,101,121,115,105,100,101,98,97,114,67,104,105,99,97,103,111,104,111,108,105,100,97,121,71,101,110,101,114,97,108,112,97,115,115,97,103,101,44,38,113,117,111,116,59,97,110,105,109,97,116,101,102,101,101,108,105,110,103,97,114,114,105,118,101,100,112,97,115,115,105,110,103,110,97,116,117,114,97,108,114,111,117,103,104,108,121,46,10,10,84,104,101,32,98,117,116,32,110,111,116,100,101,110,115,105,116,121,66,114,105,116,97,105,110,67,104,105,110,101,115,101,108,97,99,107,32,111,102,116,114,105,98,117,116,101,73,114,101,108,97,110,100,34,32,100,97,116,97,45,102,97,99,116,111,114,115,114,101,99,101,105,118,101,116,104,97,116,32,105,115,76,105,98,114,97,114,121,104,117,115,98,97,110,100,105,110,32,102,97,99,116,97,102,102,97,105,114,115,67,104,97,114,108,101,115,114,97,100,105,99,97,108,98,114,111,117,103,104,116,102,105,110,100,105,110,103,108,97,110,100,105,110,103,58,108,97,110,103,61,34,114,101,116,117,114,110,32,108,101,97,100,101,114,115,112,108,97,110,110,101,100,112,114,101,109,105,117,109,112,97,99,107,97,103,101,65,109,101,114,105,99,97,69,100,105,116,105,111,110,93,38,113,117,111,116,59,77,101,115,115,97,103,101,110,101,101,100,32,116,111,118,97,108,117,101,61,34,99,111,109,112,108,101,120,108,111,111,107,105,110,103,115,116,97,116,105,111,110,98,101,108,105,101,118,101,115,109,97,108,108,101,114,45,109,111,98,105,108,101,114,101,99,111,114,100,115,119,97,110,116,32,116,111,107,105,110,100,32,111,102,70,105,114,101,102,111,120,121,111,117,32,97,114,101,115,105,109,105,108,97,114,115,116,117,100,105,101,100,109,97,120,105,109,117,109,104,101,97,100,105,110,103,114,97,112,105,100,108,121,99,108,105,109,97,116,101,107,105,110,103,100,111,109,101,109,101,114,103,101,100,97,109,111,117,110,116,115,102,111,117,110,100,101,100,112,105,111,110,101,101,114,102,111,114,109,117,108,97,100,121,110,97,115,116,121,104,111,119,32,116,111,32,83,117,112,112,111,114,116,114,101,118,101,110,117,101,101,99,111,110,111,109,121,82,101,115,117,108,116,115,98,114,111,116,104,101,114,115,111,108,100,105,101,114,108,97,114,103,101,108,121,99,97,108,108,105,110,103,46,38,113,117,111,116,59,65,99,99,111,117,110,116,69,100,119,97,114,100,32,115,101,103,109,101,110,116,82,111,98,101,114,116,32,101,102,102,111,114,116,115,80,97,99,105,102,105,99,108,101,97,114,110,101,100,117,112,32,119,105,116,104,104,101,105,103,104,116,58,119,101,32,104,97,118,101,65,110,103,101,108,101,115,110,97,116,105,111,110,115,95,115,101,97,114,99,104,97,112,112,108,105,101,100,97,99,113,117,105,114,101,109,97,115,115,105,118,101,103,114,97,110,116,101,100,58,32,102,97,108,115,101,116,114,101,97,116,101,100,98,105,103,103,101,115,116,98,101,110,101,102,105,116,100,114,105,118,105,110,103,83,116,117,100,105,101,115,109,105,110,105,109,117,109,112,101,114,104,97,112,115,109,111,114,110,105,110,103,115,101,108,108,105,110,103,105,115,32,117,115,101,100,114,101,118,101,114,115,101,118,97,114,105,97,110,116,32,114,111,108,101,61,34,109,105,115,115,105,110,103,97,99,104,105,101,118,101,112,114,111,109,111,116,101,115,116,117,100,101,110,116,115,111,109,101,111,110,101,101,120,116,114,101,109,101,114,101,115,116,111,114,101,98,111,116,116,111,109,58,101,118,111,108,118,101,100,97,108,108,32,116,104,101,115,105,116,101,109,97,112,101,110,103,108,105,115,104,119,97,121,32,116,111,32,32,65,117,103,117,115,116,115,121,109,98,111,108,115,67,111,109,112,97,110,121,109,97,116,116,101,114,115,109,117,115,105,99,97,108,97,103,97,105,110,115,116,115,101,114,118,105,110,103,125,41,40,41,59,13,10,112,97,121,109,101,110,116,116,114,111,117,98,108,101,99,111,110,99,101,112,116,99,111,109,112,97,114,101,112,97,114,101,110,116,115,112,108,97,121,101,114,115,114,101,103,105,111,110,115,109,111,110,105,116,111,114,32,39,39,84,104,101,32,119,105,110,110,105,110,103,101,120,112,108,111,114,101,97,100,97,112,116,101,100,71,97,108,108,101,114,121,112,114,111,100,117,99,101,97,98,105,108,105,116,121,101,110,104,97,110,99,101,99,97,114,101,101,114,115,41,46,32,84,104,101,32,99,111,108,108,101,99,116,83,101,97,114,99,104,32,97,110,99,105,101,110,116,101,120,105,115,116,101,100,102,111,111,116,101,114,32,104,97,110,100,108,101,114,112,114,105,110,116,101,100,99,111,110,115,111,108,101,69,97,115,116,101,114,110,101,120,112,111,114,116,115,119,105,110,100,111,119,115,67,104,97,110,110,101,108,105,108,108,101,103,97,108,110,101,117,116,114,97,108,115,117,103,103,101,115,116,95,104,101,97,100,101,114,115,105,103,110,105,110,103,46,104,116,109,108,34,62,115,101,116,116,108,101,100,119,101,115,116,101,114,110,99,97,117,115,105,110,103,45,119,101,98,107,105,116,99,108,97,105,109,101,100,74,117,115,116,105,99,101,99,104,97,112,116,101,114,118,105,99,116,105,109,115,84,104,111,109,97,115,32,109,111,122,105,108,108,97,112,114,111,109,105,115,101,112,97,114,116,105,101,115,101,100,105,116,105,111,110,111,117,116,115,105,100,101,58,102,97,108,115,101,44,104,117,110,100,114,101,100,79,108,121,109,112,105,99,95,98,117,116,116,111,110,97,117,116,104,111,114,115,114,101,97,99,104,101,100,99,104,114,111,110,105,99,100,101,109,97,110,100,115,115,101,99,111,110,100,115,112,114,111,116,101,99,116,97,100,111,112,116,101,100,112,114,101,112,97,114,101,110,101,105,116,104,101,114,103,114,101,97,116,108,121,103,114,101,97,116,101,114,111,118,101,114,97,108,108,105,109,112,114,111,118,101,99,111,109,109,97,110,100,115,112,101,99,105,97,108,115,101,97,114,99,104,46,119,111,114,115,104,105,112,102,117,110,100,105,110,103,116,104,111,117,103,104,116,104,105,103,104,101,115,116,105,110,115,116,101,97,100,117,116,105,108,105,116,121,113,117,97,114,116,101,114,67,117,108,116,117,114,101,116,101,115,116,105,110,103,99,108,101,97,114,108,121,101,120,112,111,115,101,100,66,114,111,119,115,101,114,108,105,98,101,114,97,108,125,32,99,97,116,99,104,80,114,111,106,101,99,116,101,120,97,109,112,108,101,104,105,100,101,40,41,59,70,108,111,114,105,100,97,97,110,115,119,101,114,115,97,108,108,111,119,101,100,69,109,112,101,114,111,114,100,101,102,101,110,115,101,115,101,114,105,111,117,115,102,114,101,101,100,111,109,83,101,118,101,114,97,108,45,98,117,116,116,111,110,70,117,114,116,104,101,114,111,117,116,32,111,102,32,33,61,32,110,117,108,108,116,114,97,105,110,101,100,68,101,110,109,97,114,107,118,111,105,100,40,48,41,47,97,108,108,46,106,115,112,114,101,118,101,110,116,82,101,113,117,101,115,116,83,116,101,112,104,101,110,10,10,87,104,101,110,32,111,98,115,101,114,118,101,60,47,104,50,62,13,10,77,111,100,101,114,110,32,112,114,111,118,105,100,101,34,32,97,108,116,61,34,98,111,114,100,101,114,115,46,10,10,70,111,114,32,10,10,77,97,110,121,32,97,114,116,105,115,116,115,112,111,119,101,114,101,100,112,101,114,102,111,114,109,102,105,99,116,105,111,110,116,121,112,101,32,111,102,109,101,100,105,99,97,108,116,105,99,107,101,116,115,111,112,112,111,115,101,100,67,111,117,110,99,105,108,119,105,116,110,101,115,115,106,117,115,116,105,99,101,71,101,111,114,103,101,32,66,101,108,103,105,117,109,46,46,46,60,47,97,62,116,119,105,116,116,101,114,110,111,116,97,98,108,121,119,97,105,116,105,110,103,119,97,114,102,97,114,101,32,79,116,104,101,114,32,114,97,110,107,105,110,103,112,104,114,97,115,101,115,109,101,110,116,105,111,110,115,117,114,118,105,118,101,115,99,104,111,108,97,114,60,47,112,62,13,10,32,67,111,117,110,116,114,121,105,103,110,111,114,101,100,108,111,115,115,32,111,102,106,117,115,116,32,97,115,71,101,111,114,103,105,97,115,116,114,97,110,103,101,60,104,101,97,100,62,60,115,116,111,112,112,101,100,49,39,93,41,59,13,10,105,115,108,97,110,100,115,110,111,116,97,98,108,101,98,111,114,100,101,114,58,108,105,115,116,32,111,102,99,97,114,114,105,101,100,49,48,48,44,48,48,48,60,47,104,51,62,10,32,115,101,118,101,114,97,108,98,101,99,111,109,101,115,115,101,108,101,99,116,32,119,101,100,100,105,110,103,48,48,46,104,116,109,108,109,111,110,97,114,99,104,111,102,102,32,116,104,101,116,101,97,99,104,101,114,104,105,103,104,108,121,32,98,105,111,108,111,103,121,108,105,102,101,32,111,102,111,114,32,101,118,101,110,114,105,115,101,32,111,102,38,114,97,113,117,111,59,112,108,117,115,111,110,101,104,117,110,116,105,110,103,40,116,104,111,117,103,104,68,111,117,103,108,97,115,106,111,105,110,105,110,103,99,105,114,99,108,101,115,70,111,114,32,116,104,101,65,110,99,105,101,110,116,86,105,101,116,110,97,109,118,101,104,105,99,108,101,115,117,99,104,32,97,115,99,114,121,115,116,97,108,118,97,108,117,101,32,61,87,105,110,100,111,119,115,101,110,106,111,121,101,100,97,32,115,109,97,108,108,97,115,115,117,109,101,100,60,97,32,105,100,61,34,102,111,114,101,105,103,110,32,65,108,108,32,114,105,104,111,119,32,116,104,101,68,105,115,112,108,97,121,114,101,116,105,114,101,100,104,111,119,101,118,101,114,104,105,100,100,101,110,59,98,97,116,116,108,101,115,115,101,101,107,105,110,103,99,97,98,105,110,101,116,119,97,115,32,110,111,116,108,111,111,107,32,97,116,99,111,110,100,117,99,116,103,101,116,32,116,104,101,74,97,110,117,97,114,121,104,97,112,112,101,110,115,116,117,114,110,105,110,103,97,58,104,111,118,101,114,79,110,108,105,110,101,32,70,114,101,110,99,104,32,108,97,99,107,105,110,103,116,121,112,105,99,97,108,101,120,116,114,97,99,116,101,110,101,109,105,101,115,101,118,101,110,32,105,102,103,101,110,101,114,97,116,100,101,99,105,100,101,100,97,114,101,32,110,111,116,47,115,101,97,114,99,104,98,101,108,105,101,102,115,45,105,109,97,103,101,58,108,111,99,97,116,101,100,115,116,97,116,105,99,46,108,111,103,105,110,34,62,99,111,110,118,101,114,116,118,105,111,108,101,110,116,101,110,116,101,114,101,100,102,105,114,115,116,34,62,99,105,114,99,117,105,116,70,105,110,108,97,110,100,99,104,101,109,105,115,116,115,104,101,32,119,97,115,49,48,112,120,59,34,62,97,115,32,115,117,99,104,100,105,118,105,100,101,100,60,47,115,112,97,110,62,119,105,108,108,32,98,101,108,105,110,101,32,111,102,97,32,103,114,101,97,116,109,121,115,116,101,114,121,47,105,110,100,101,120,46,102,97,108,108,105,110,103,100,117,101,32,116,111,32,114,97,105,108,119,97,121,99,111,108,108,101,103,101,109,111,110,115,116,101,114,100,101,115,99,101,110,116,105,116,32,119,105,116,104,110,117,99,108,101,97,114,74,101,119,105,115,104,32,112,114,111,116,101,115,116,66,114,105,116,105,115,104,102,108,111,119,101,114,115,112,114,101,100,105,99,116,114,101,102,111,114,109,115,98,117,116,116,111,110,32,119,104,111,32,119,97,115,108,101,99,116,117,114,101,105,110,115,116,97,110,116,115,117,105,99,105,100,101,103,101,110,101,114,105,99,112,101,114,105,111,100,115,109,97,114,107,101,116,115,83,111,99,105,97,108,32,102,105,115,104,105,110,103,99,111,109,98,105,110,101,103,114,97,112,104,105,99,119,105,110,110,101,114,115,60,98,114,32,47,62,60,98,121,32,116,104,101,32,78,97,116,117,114,97,108,80,114,105,118,97,99,121,99,111,111,107,105,101,115,111,117,116,99,111,109,101,114,101,115,111,108,118,101,83,119,101,100,105,115,104,98,114,105,101,102,108,121,80,101,114,115,105,97,110,115,111,32,109,117,99,104,67,101,110,116,117,114,121,100,101,112,105,99,116,115,99,111,108,117,109,110,115,104,111,117,115,105,110,103,115,99,114,105,112,116,115,110,101,120,116,32,116,111,98,101,97,114,105,110,103,109,97,112,112,105,110,103,114,101,118,105,115,101,100,106,81,117,101,114,121,40,45,119,105,100,116,104,58,116,105,116,108,101,34,62,116,111,111,108,116,105,112,83,101,99,116,105,111,110,100,101,115,105,103,110,115,84,117,114,107,105,115,104,121,111,117,110,103,101,114,46,109,97,116,99,104,40,125,41,40,41,59,10,10,98,117,114,110,105,110,103,111,112,101,114,97,116,101,100,101,103,114,101,101,115,115,111,117,114,99,101,61,82,105,99,104,97,114,100,99,108,111,115,101,108,121,112,108,97,115,116,105,99,101,110,116,114,105,101,115,60,47,116,114,62,13,10,99,111,108,111,114,58,35,117,108,32,105,100,61,34,112,111,115,115,101,115,115,114,111,108,108,105,110,103,112,104,121,115,105,99,115,102,97,105,108,105,110,103,101,120,101,99,117,116,101,99,111,110,116,101,115,116,108,105,110,107,32,116,111,68,101,102,97,117,108,116,60,98,114,32,47,62,10,58,32,116,114,117,101,44,99,104,97,114,116,101,114,116,111,117,114,105,115,109,99,108,97,115,115,105,99,112,114,111,99,101,101,100,101,120,112,108,97,105,110,60,47,104,49,62,13,10,111,110,108,105,110,101,46,63,120,109,108,32,118,101,104,101,108,112,105,110,103,100,105,97,109,111,110,100,117,115,101,32,116,104,101,97,105,114,108,105,110,101,101,110,100,32,45,45,62,41,46,97,116,116,114,40,114,101,97,100,101,114,115,104,111,115,116,105,110,103,35,102,102,102,102,102,102,114,101,97,108,105,122,101,86,105,110,99,101,110,116,115,105,103,110,97,108,115,32,115,114,99,61,34,47,80,114,111,100,117,99,116,100,101,115,112,105,116,101,100,105,118,101,114,115,101,116,101,108,108,105,110,103,80,117,98,108,105,99,32,104,101,108,100,32,105,110,74,111,115,101,112,104,32,116,104,101,97,116,114,101,97,102,102,101,99,116,115,60,115,116,121,108,101,62,97,32,108,97,114,103,101,100,111,101,115,110,39,116,108,97,116,101,114,44,32,69,108,101,109,101,110,116,102,97,118,105,99,111,110,99,114,101,97,116,111,114,72,117,110,103,97,114,121,65,105,114,112,111,114,116,115,101,101,32,116,104,101,115,111,32,116,104,97,116,77,105,99,104,97,101,108,83,121,115,116,101,109,115,80,114,111,103,114,97,109,115,44,32,97,110,100,32,32,119,105,100,116,104,61,101,38,113,117,111,116,59,116,114,97,100,105,110,103,108,101,102,116,34,62,10,112,101,114,115,111,110,115,71,111,108,100,101,110,32,65,102,102,97,105,114,115,103,114,97,109,109,97,114,102,111,114,109,105,110,103,100,101,115,116,114,111,121,105,100,101,97,32,111,102,99,97,115,101,32,111,102,111,108,100,101,115,116,32,116,104,105,115,32,105,115,46,115,114,99,32,61,32,99,97,114,116,111,111,110,114,101,103,105,115,116,114,67,111,109,109,111,110,115,77,117,115,108,105,109,115,87,104,97,116,32,105,115,105,110,32,109,97,110,121,109,97,114,107,105,110,103,114,101,118,101,97,108,115,73,110,100,101,101,100,44,101,113,117,97,108,108,121,47,115,104,111,119,95,97,111,117,116,100,111,111,114,101,115,99,97,112,101,40,65,117,115,116,114,105,97,103,101,110,101,116,105,99,115,121,115,116,101,109,44,73,110,32,116,104,101,32,115,105,116,116,105,110,103,72,101,32,97,108,115,111,73,115,108,97,110,100,115,65,99,97,100,101,109,121,10,9,9,60,33,45,45,68,97,110,105,101,108,32,98,105,110,100,105,110,103,98,108,111,99,107,34,62,105,109,112,111,115,101,100,117,116,105,108,105,122,101,65,98,114,97,104,97,109,40,101,120,99,101,112,116,123,119,105,100,116,104,58,112,117,116,116,105,110,103,41,46,104,116,109,108,40,124,124,32,91,93,59,10,68,65,84,65,91,32,42,107,105,116,99,104,101,110,109,111,117,110,116,101,100,97,99,116,117,97,108,32,100,105,97,108,101,99,116,109,97,105,110,108,121,32,95,98,108,97,110,107,39,105,110,115,116,97,108,108,101,120,112,101,114,116,115,105,102,40,116,121,112,101,73,116,32,97,108,115,111,38,99,111,112,121,59,32,34,62,84,101,114,109,115,98,111,114,110,32,105,110,79,112,116,105,111,110,115,101,97,115,116,101,114,110,116,97,108,107,105,110,103,99,111,110,99,101,114,110,103,97,105,110,101,100,32,111,110,103,111,105,110,103,106,117,115,116,105,102,121,99,114,105,116,105,99,115,102,97,99,116,111,114,121,105,116,115,32,111,119,110,97,115,115,97,117,108,116,105,110,118,105,116,101,100,108,97,115,116,105,110,103,104,105,115,32,111,119,110,104,114,101,102,61,34,47,34,32,114,101,108,61,34,100,101,118,101,108,111,112,99,111,110,99,101,114,116,100,105,97,103,114,97,109,100,111,108,108,97,114,115,99,108,117,115,116,101,114,112,104,112,63,105,100,61,97,108,99,111,104,111,108,41,59,125,41,40,41,59,117,115,105,110,103,32,97,62,60,115,112,97,110,62,118,101,115,115,101,108,115,114,101,118,105,118,97,108,65,100,100,114,101,115,115,97,109,97,116,101,117,114,97,110,100,114,111,105,100,97,108,108,101,103,101,100,105,108,108,110,101,115,115,119,97,108,107,105,110,103,99,101,110,116,101,114,115,113,117,97,108,105,102,121,109,97,116,99,104,101,115,117,110,105,102,105,101,100,101,120,116,105,110,99,116,68,101,102,101,110,115,101,100,105,101,100,32,105,110,10,9,60,33,45,45,32,99,117,115,116,111,109,115,108,105,110,107,105,110,103,76,105,116,116,108,101,32,66,111,111,107,32,111,102,101,118,101,110,105,110,103,109,105,110,46,106,115,63,97,114,101,32,116,104,101,107,111,110,116,97,107,116,116,111,100,97,121,39,115,46,104,116,109,108,34,32,116,97,114,103,101,116,61,119,101,97,114,105,110,103,65,108,108,32,82,105,103,59,10,125,41,40,41,59,114,97,105,115,105,110,103,32,65,108,115,111,44,32,99,114,117,99,105,97,108,97,98,111,117,116,34,62,100,101,99,108,97,114,101,45,45,62,10,60,115,99,102,105,114,101,102,111,120,97,115,32,109,117,99,104,97,112,112,108,105,101,115,105,110,100,101,120,44,32,115,44,32,98,117,116,32,116,121,112,101,32,61,32,10,13,10,60,33,45,45,116,111,119,97,114,100,115,82,101,99,111,114,100,115,80,114,105,118,97,116,101,70,111,114,101,105,103,110,80,114,101,109,105,101,114,99,104,111,105,99,101,115,86,105,114,116,117,97,108,114,101,116,117,114,110,115,67,111,109,109,101,110,116,80,111,119,101,114,101,100,105,110,108,105,110,101,59,112,111,118,101,114,116,121,99,104,97,109,98,101,114,76,105,118,105,110,103,32,118,111,108,117,109,101,115,65,110,116,104,111,110,121,108,111,103,105,110,34,32,82,101,108,97,116,101,100,69,99,111,110,111,109,121,114,101,97,99,104,101,115,99,117,116,116,105,110,103,103,114,97,118,105,116,121,108,105,102,101,32,105,110,67,104,97,112,116,101,114,45,115,104,97,100,111,119,78,111,116,97,98,108,101,60,47,116,100,62,13,10,32,114,101,116,117,114,110,115,116,97,100,105,117,109,119,105,100,103,101,116,115,118,97,114,121,105,110,103,116,114,97,118,101,108,115,104,101,108,100,32,98,121,119,104,111,32,97,114,101,119,111,114,107,32,105,110,102,97,99,117,108,116,121,97,110,103,117,108,97,114,119,104,111,32,104,97,100,97,105,114,112,111,114,116,116,111,119,110,32,111,102,10,10,83,111,109,101,32,39,99,108,105,99,107,39,99,104,97,114,103,101,115,107,101,121,119,111,114,100,105,116,32,119,105,108,108,99,105,116,121,32,111,102,40,116,104,105,115,41,59,65,110,100,114,101,119,32,117,110,105,113,117,101,32,99,104,101,99,107,101,100,111,114,32,109,111,114,101,51,48,48,112,120,59,32,114,101,116,117,114,110,59,114,115,105,111,110,61,34,112,108,117,103,105,110,115,119,105,116,104,105,110,32,104,101,114,115,101,108,102,83,116,97,116,105,111,110,70,101,100,101,114,97,108,118,101,110,116,117,114,101,112,117,98,108,105,115,104,115,101,110,116,32,116,111,116,101,110,115,105,111,110,97,99,116,114,101,115,115,99,111,109,101,32,116,111,102,105,110,103,101,114,115,68,117,107,101,32,111,102,112,101,111,112,108,101,44,101,120,112,108,111,105,116,119,104,97,116,32,105,115,104,97,114,109,111,110,121,97,32,109,97,106,111,114,34,58,34,104,116,116,112,105,110,32,104,105,115,32,109,101,110,117,34,62,10,109,111,110,116,104,108,121,111,102,102,105,99,101,114,99,111,117,110,99,105,108,103,97,105,110,105,110,103,101,118,101,110,32,105,110,83,117,109,109,97,114,121,100,97,116,101,32,111,102,108,111,121,97,108,116,121,102,105,116,110,101,115,115,97,110,100,32,119,97,115,101,109,112,101,114,111,114,115,117,112,114,101,109,101,83,101,99,111,110,100,32,104,101,97,114,105,110,103,82,117,115,115,105,97,110,108,111,110,103,101,115,116,65,108,98,101,114,116,97,108,97,116,101,114,97,108,115,101,116,32,111,102,32,115,109,97,108,108,34,62,46,97,112,112,101,110,100,100,111,32,119,105,116,104,102,101,100,101,114,97,108,98,97,110,107,32,111,102,98,101,110,101,97,116,104,68,101,115,112,105,116,101,67,97,112,105,116,97,108,103,114,111,117,110,100,115,41,44,32,97,110,100,32,112,101,114,99,101,110,116,105,116,32,102,114,111,109,99,108,111,115,105,110,103,99,111,110,116,97,105,110,73,110,115,116,101,97,100,102,105,102,116,101,101,110,97,115,32,119,101,108,108,46,121,97,104,111,111,46,114,101,115,112,111,110,100,102,105,103,104,116,101,114,111,98,115,99,117,114,101,114,101,102,108,101,99,116,111,114,103,97,110,105,99,61,32,77,97,116,104,46,101,100,105,116,105,110,103,111,110,108,105,110,101,32,112,97,100,100,105,110,103,97,32,119,104,111,108,101,111,110,101,114,114,111,114,121,101,97,114,32,111,102,101,110,100,32,111,102,32,98,97,114,114,105,101,114,119,104,101,110,32,105,116,104,101,97,100,101,114,32,104,111,109,101,32,111,102,114,101,115,117,109,101,100,114,101,110,97,109,101,100,115,116,114,111,110,103,62,104,101,97,116,105,110,103,114,101,116,97,105,110,115,99,108,111,117,100,102,114,119,97,121,32,111,102,32,77,97,114,99,104,32,49,107,110,111,119,105,110,103,105,110,32,112,97,114,116,66,101,116,119,101,101,110,108,101,115,115,111,110,115,99,108,111,115,101,115,116,118,105,114,116,117,97,108,108,105,110,107,115,34,62,99,114,111,115,115,101,100,69,78,68,32,45,45,62,102,97,109,111,117,115,32,97,119,97,114,100,101,100,76,105,99,101,110,115,101,72,101,97,108,116,104,32,102,97,105,114,108,121,32,119,101,97,108,116,104,121,109,105,110,105,109,97,108,65,102,114,105,99,97,110,99,111,109,112,101,116,101,108,97,98,101,108,34,62,115,105,110,103,105,110,103,102,97,114,109,101,114,115,66,114,97,115,105,108,41,100,105,115,99,117,115,115,114,101,112,108,97,99,101,71,114,101,103,111,114,121,102,111,110,116,32,99,111,112,117,114,115,117,101,100,97,112,112,101,97,114,115,109,97,107,101,32,117,112,114,111,117,110,100,101,100,98,111,116,104,32,111,102,98,108,111,99,107,101,100,115,97,119,32,116,104,101,111,102,102,105,99,101,115,99,111,108,111,117,114,115,105,102,40,100,111,99,117,119,104,101,110,32,104,101,101,110,102,111,114,99,101,112,117,115,104,40,102,117,65,117,103,117,115,116,32,85,84,70,45,56,34,62,70,97,110,116,97,115,121,105,110,32,109,111,115,116,105,110,106,117,114,101,100,85,115,117,97,108,108,121,102,97,114,109,105,110,103,99,108,111,115,117,114,101,111,98,106,101,99,116,32,100,101,102,101,110,99,101,117,115,101,32,111,102,32,77,101,100,105,99,97,108,60,98,111,100,121,62,10,101,118,105,100,101,110,116,98,101,32,117,115,101,100,107,101,121,67,111,100,101,115,105,120,116,101,101,110,73,115,108,97,109,105,99,35,48,48,48,48,48,48,101,110,116,105,114,101,32,119,105,100,101,108,121,32,97,99,116,105,118,101,32,40,116,121,112,101,111,102,111,110,101,32,99,97,110,99,111,108,111,114,32,61,115,112,101,97,107,101,114,101,120,116,101,110,100,115,80,104,121,115,105,99,115,116,101,114,114,97,105,110,60,116,98,111,100,121,62,102,117,110,101,114,97,108,118,105,101,119,105,110,103,109,105,100,100,108,101,32,99,114,105,99,107,101,116,112,114,111,112,104,101,116,115,104,105,102,116,101,100,100,111,99,116,111,114,115,82,117,115,115,101,108,108,32,116,97,114,103,101,116,99,111,109,112,97,99,116,97,108,103,101,98,114,97,115,111,99,105,97,108,45,98,117,108,107,32,111,102,109,97,110,32,97,110,100,60,47,116,100,62,10,32,104,101,32,108,101,102,116,41,46,118,97,108,40,41,102,97,108,115,101,41,59,108,111,103,105,99,97,108,98,97,110,107,105,110,103,104,111,109,101,32,116,111,110,97,109,105,110,103,32,65,114,105,122,111,110,97,99,114,101,100,105,116,115,41,59,10,125,41,59,10,102,111,117,110,100,101,114,105,110,32,116,117,114,110,67,111,108,108,105,110,115,98,101,102,111,114,101,32,66,117,116,32,116,104,101,99,104,97,114,103,101,100,84,105,116,108,101,34,62,67,97,112,116,97,105,110,115,112,101,108,108,101,100,103,111,100,100,101,115,115,84,97,103,32,45,45,62,65,100,100,105,110,103,58,98,117,116,32,119,97,115,82,101,99,101,110,116,32,112,97,116,105,101,110,116,98,97,99,107,32,105,110,61,102,97,108,115,101,38,76,105,110,99,111,108,110,119,101,32,107,110,111,119,67,111,117,110,116,101,114,74,117,100,97,105,115,109,115,99,114,105,112,116,32,97,108,116,101,114,101,100,39,93,41,59,10,32,32,104,97,115,32,116,104,101,117,110,99,108,101,97,114,69,118,101,110,116,39,44,98,111,116,104,32,105,110,110,111,116,32,97,108,108,10,10,60,33,45,45,32,112,108,97,99,105,110,103,104,97,114,100,32,116,111,32,99,101,110,116,101,114,115,111,114,116,32,111,102,99,108,105,101,110,116,115,115,116,114,101,101,116,115,66,101,114,110,97,114,100,97,115,115,101,114,116,115,116,101,110,100,32,116,111,102,97,110,116,97,115,121,100,111,119,110,32,105,110,104,97,114,98,111,117,114,70,114,101,101,100,111,109,106,101,119,101,108,114,121,47,97,98,111,117,116,46,46,115,101,97,114,99,104,108,101,103,101,110,100,115,105,115,32,109,97,100,101,109,111,100,101,114,110,32,111,110,108,121,32,111,110,111,110,108,121,32,116,111,105,109,97,103,101,34,32,108,105,110,101,97,114,32,112,97,105,110,116,101,114,97,110,100,32,110,111,116,114,97,114,101,108,121,32,97,99,114,111,110,121,109,100,101,108,105,118,101,114,115,104,111,114,116,101,114,48,48,38,97,109,112,59,97,115,32,109,97,110,121,119,105,100,116,104,61,34,47,42,32,60,33,91,67,116,105,116,108,101,32,61,111,102,32,116,104,101,32,108,111,119,101,115,116,32,112,105,99,107,101,100,32,101,115,99,97,112,101,100,117,115,101,115,32,111,102,112,101,111,112,108,101,115,32,80,117,98,108,105,99,77,97,116,116,104,101,119,116,97,99,116,105,99,115,100,97,109,97,103,101,100,119,97,121,32,102,111,114,108,97,119,115,32,111,102,101,97,115,121,32,116,111,32,119,105,110,100,111,119,115,116,114,111,110,103,32,32,115,105,109,112,108,101,125,99,97,116,99,104,40,115,101,118,101,110,116,104,105,110,102,111,98,111,120,119,101,110,116,32,116,111,112,97,105,110,116,101,100,99,105,116,105,122,101,110,73,32,100,111,110,39,116,114,101,116,114,101,97,116,46,32,83,111,109,101,32,119,119,46,34,41,59,10,98,111,109,98,105,110,103,109,97,105,108,116,111,58,109,97,100,101,32,105,110,46,32,77,97,110,121,32,99,97,114,114,105,101,115,124,124,123,125,59,119,105,119,111,114,107,32,111,102,115,121,110,111,110,121,109,100,101,102,101,97,116,115,102,97,118,111,114,101,100,111,112,116,105,99,97,108,112,97,103,101,84,114,97,117,110,108,101,115,115,32,115,101,110,100,105,110,103,108,101,102,116,34,62,60,99,111,109,83,99,111,114,65,108,108,32,116,104,101,106,81,117,101,114,121,46,116,111,117,114,105,115,116,67,108,97,115,115,105,99,102,97,108,115,101,34,32,87,105,108,104,101,108,109,115,117,98,117,114,98,115,103,101,110,117,105,110,101,98,105,115,104,111,112,115,46,115,112,108,105,116,40,103,108,111,98,97,108,32,102,111,108,108,111,119,115,98,111,100,121,32,111,102,110,111,109,105,110,97,108,67,111,110,116,97,99,116,115,101,99,117,108,97,114,108,101,102,116,32,116,111,99,104,105,101,102,108,121,45,104,105,100,100,101,110,45,98,97,110,110,101,114,60,47,108,105,62,10,10,46,32,87,104,101,110,32,105,110,32,98,111,116,104,100,105,115,109,105,115,115,69,120,112,108,111,114,101,97,108,119,97,121,115,32,118,105,97,32,116,104,101,115,112,97,195,177,111,108,119,101,108,102,97,114,101,114,117,108,105,110,103,32,97,114,114,97,110,103,101,99,97,112,116,97,105,110,104,105,115,32,115,111,110,114,117,108,101,32,111,102,104,101,32,116,111,111,107,105,116,115,101,108,102,44,61,48,38,97,109,112,59,40,99,97,108,108,101,100,115,97,109,112,108,101,115,116,111,32,109,97,107,101,99,111,109,47,112,97,103,77,97,114,116,105,110,32,75,101,110,110,101,100,121,97,99,99,101,112,116,115,102,117,108,108,32,111,102,104,97,110,100,108,101,100,66,101,115,105,100,101,115,47,47,45,45,62,60,47,97,98,108,101,32,116,111,116,97,114,103,101,116,115,101,115,115,101,110,99,101,104,105,109,32,116,111,32,105,116,115,32,98,121,32,99,111,109,109,111,110,46,109,105,110,101,114,97,108,116,111,32,116,97,107,101,119,97,121,115,32,116,111,115,46,111,114,103,47,108,97,100,118,105,115,101,100,112,101,110,97,108,116,121,115,105,109,112,108,101,58,105,102,32,116,104,101,121,76,101,116,116,101,114,115,97,32,115,104,111,114,116,72,101,114,98,101,114,116,115,116,114,105,107,101,115,32,103,114,111,117,112,115,46,108,101,110,103,116,104,102,108,105,103,104,116,115,111,118,101,114,108,97,112,115,108,111,119,108,121,32,108,101,115,115,101,114,32,115,111,99,105,97,108,32,60,47,112,62,10,9,9,105,116,32,105,110,116,111,114,97,110,107,101,100,32,114,97,116,101,32,111,102,117,108,62,13,10,32,32,97,116,116,101,109,112,116,112,97,105,114,32,111,102,109,97,107,101,32,105,116,75,111,110,116,97,107,116,65,110,116,111,110,105,111,104,97,118,105,110,103,32,114,97,116,105,110,103,115,32,97,99,116,105,118,101,115,116,114,101,97,109,115,116,114,97,112,112,101,100,34,41,46,99,115,115,40,104,111,115,116,105,108,101,108,101,97,100,32,116,111,108,105,116,116,108,101,32,103,114,111,117,112,115,44,80,105,99,116,117,114,101,45,45,62,13,10,13,10,32,114,111,119,115,61,34,32,111,98,106,101,99,116,105,110,118,101,114,115,101,60,102,111,111,116,101,114,67,117,115,116,111,109,86,62,60,92,47,115,99,114,115,111,108,118,105,110,103,67,104,97,109,98,101,114,115,108,97,118,101,114,121,119,111,117,110,100,101,100,119,104,101,114,101,97,115,33,61,32,39,117,110,100,102,111,114,32,97,108,108,112,97,114,116,108,121,32,45,114,105,103,104,116,58,65,114,97,98,105,97,110,98,97,99,107,101,100,32,99,101,110,116,117,114,121,117,110,105,116,32,111,102,109,111,98,105,108,101,45,69,117,114,111,112,101,44,105,115,32,104,111,109,101,114,105,115,107,32,111,102,100,101,115,105,114,101,100,67,108,105,110,116,111,110,99,111,115,116,32,111,102,97,103,101,32,111,102,32,98,101,99,111,109,101,32,110,111,110,101,32,111,102,112,38,113,117,111,116,59,77,105,100,100,108,101,32,101,97,100,39,41,91,48,67,114,105,116,105,99,115,115,116,117,100,105,111,115,62,38,99,111,112,121,59,103,114,111,117,112,34,62,97,115,115,101,109,98,108,109,97,107,105,110,103,32,112,114,101,115,115,101,100,119,105,100,103,101,116,46,112,115,58,34,32,63,32,114,101,98,117,105,108,116,98,121,32,115,111,109,101,70,111,114,109,101,114,32,101,100,105,116,111,114,115,100,101,108,97,121,101,100,67,97,110,111,110,105,99,104,97,100,32,116,104,101,112,117,115,104,105,110,103,99,108,97,115,115,61,34,98,117,116,32,97,114,101,112,97,114,116,105,97,108,66,97,98,121,108,111,110,98,111,116,116,111,109,32,99,97,114,114,105,101,114,67,111,109,109,97,110,100,105,116,115,32,117,115,101,65,115,32,119,105,116,104,99,111,117,114,115,101,115,97,32,116,104,105,114,100,100,101,110,111,116,101,115,97,108,115,111,32,105,110,72,111,117,115,116,111,110,50,48,112,120,59,34,62,97,99,99,117,115,101,100,100,111,117,98,108,101,32,103,111,97,108,32,111,102,70,97,109,111,117,115,32,41,46,98,105,110,100,40,112,114,105,101,115,116,115,32,79,110,108,105,110,101,105,110,32,74,117,108,121,115,116,32,43,32,34,103,99,111,110,115,117,108,116,100,101,99,105,109,97,108,104,101,108,112,102,117,108,114,101,118,105,118,101,100,105,115,32,118,101,114,121,114,39,43,39,105,112,116,108,111,115,105,110,103,32,102,101,109,97,108,101,115,105,115,32,97,108,115,111,115,116,114,105,110,103,115,100,97,121,115,32,111,102,97,114,114,105,118,97,108,102,117,116,117,114,101,32,60,111,98,106,101,99,116,102,111,114,99,105,110,103,83,116,114,105,110,103,40,34,32,47,62,10,9,9,104,101,114,101,32,105,115,101,110,99,111,100,101,100,46,32,32,84,104,101,32,98,97,108,108,111,111,110,100,111,110,101,32,98,121,47,99,111,109,109,111,110,98,103,99,111,108,111,114,108,97,119,32,111,102,32,73,110,100,105,97,110,97,97,118,111,105,100,101,100,98,117,116,32,116,104,101,50,112,120,32,51,112,120,106,113,117,101,114,121,46,97,102,116,101,114,32,97,112,111,108,105,99,121,46,109,101,110,32,97,110,100,102,111,111,116,101,114,45,61,32,116,114,117,101,59,102,111,114,32,117,115,101,115,99,114,101,101,110,46,73,110,100,105,97,110,32,105,109,97,103,101,32,61,102,97,109,105,108,121,44,104,116,116,112,58,47,47,32,38,110,98,115,112,59,100,114,105,118,101,114,115,101,116,101,114,110,97,108,115,97,109,101,32,97,115,110,111,116,105,99,101,100,118,105,101,119,101,114,115,125,41,40,41,59,10,32,105,115,32,109,111,114,101,115,101,97,115,111,110,115,102,111,114,109,101,114,32,116,104,101,32,110,101,119,105,115,32,106,117,115,116,99,111,110,115,101,110,116,32,83,101,97,114,99,104,119,97,115,32,116,104,101,119,104,121,32,116,104,101,115,104,105,112,112,101,100,98,114,62,60,98,114,62,119,105,100,116,104,58,32,104,101,105,103,104,116,61,109,97,100,101,32,111,102,99,117,105,115,105,110,101,105,115,32,116,104,97,116,97,32,118,101,114,121,32,65,100,109,105,114,97,108,32,102,105,120,101,100,59,110,111,114,109,97,108,32,77,105,115,115,105,111,110,80,114,101,115,115,44,32,111,110,116,97,114,105,111,99,104,97,114,115,101,116,116,114,121,32,116,111,32,105,110,118,97,100,101,100,61,34,116,114,117,101,34,115,112,97,99,105,110,103,105,115,32,109,111,115,116,97,32,109,111,114,101,32,116,111,116,97,108,108,121,102,97,108,108,32,111,102,125,41,59,13,10,32,32,105,109,109,101,110,115,101,116,105,109,101,32,105,110,115,101,116,32,111,117,116,115,97,116,105,115,102,121,116,111,32,102,105,110,100,100,111,119,110,32,116,111,108,111,116,32,111,102,32,80,108,97,121,101,114,115,105,110,32,74,117,110,101,113,117,97,110,116,117,109,110,111,116,32,116,104,101,116,105,109,101,32,116,111,100,105,115,116,97,110,116,70,105,110,110,105,115,104,115,114,99,32,61,32,40,115,105,110,103,108,101,32,104,101,108,112,32,111,102,71,101,114,109,97,110,32,108,97,119,32,97,110,100,108,97,98,101,108,101,100,102,111,114,101,115,116,115,99,111,111,107,105,110,103,115,112,97,99,101,34,62,104,101,97,100,101,114,45,119,101,108,108,32,97,115,83,116,97,110,108,101,121,98,114,105,100,103,101,115,47,103,108,111,98,97,108,67,114,111,97,116,105,97,32,65,98,111,117,116,32,91,48,93,59,10,32,32,105,116,44,32,97,110,100,103,114,111,117,112,101,100,98,101,105,110,103,32,97,41,123,116,104,114,111,119,104,101,32,109,97,100,101,108,105,103,104,116,101,114,101,116,104,105,99,97,108,70,70,70,70,70,70,34,98,111,116,116,111,109,34,108,105,107,101,32,97,32,101,109,112,108,111,121,115,108,105,118,101,32,105,110,97,115,32,115,101,101,110,112,114,105,110,116,101,114,109,111,115,116,32,111,102,117,98,45,108,105,110,107,114,101,106,101,99,116,115,97,110,100,32,117,115,101,105,109,97,103,101,34,62,115,117,99,99,101,101,100,102,101,101,100,105,110,103,78,117,99,108,101,97,114,105,110,102,111,114,109,97,116,111,32,104,101,108,112,87,111,109,101,110,39,115,78,101,105,116,104,101,114,77,101,120,105,99,97,110,112,114,111,116,101,105,110,60,116,97,98,108,101,32,98,121,32,109,97,110,121,104,101,97,108,116,104,121,108,97,119,115,117,105,116,100,101,118,105,115,101,100,46,112,117,115,104,40,123,115,101,108,108,101,114,115,115,105,109,112,108,121,32,84,104,114,111,117,103,104,46,99,111,111,107,105,101,32,73,109,97,103,101,40,111,108,100,101,114,34,62,117,115,46,106,115,34,62,32,83,105,110,99,101,32,117,110,105,118,101,114,115,108,97,114,103,101,114,32,111,112,101,110,32,116,111,33,45,45,32,101,110,100,108,105,101,115,32,105,110,39,93,41,59,13,10,32,32,109,97,114,107,101,116,119,104,111,32,105,115,32,40,34,68,79,77,67,111,109,97,110,97,103,101,100,111,110,101,32,102,111,114,116,121,112,101,111,102,32,75,105,110,103,100,111,109,112,114,111,102,105,116,115,112,114,111,112,111,115,101,116,111,32,115,104,111,119,99,101,110,116,101,114,59,109,97,100,101,32,105,116,100,114,101,115,115,101,100,119,101,114,101,32,105,110,109,105,120,116,117,114,101,112,114,101,99,105,115,101,97,114,105,115,105,110,103,115,114,99,32,61,32,39,109,97,107,101,32,97,32,115,101,99,117,114,101,100,66,97,112,116,105,115,116,118,111,116,105,110,103,32,10,9,9,118,97,114,32,77,97,114,99,104,32,50,103,114,101,119,32,117,112,67,108,105,109,97,116,101,46,114,101,109,111,118,101,115,107,105,108,108,101,100,119,97,121,32,116,104,101,60,47,104,101,97,100,62,102,97,99,101,32,111,102,97,99,116,105,110,103,32,114,105,103,104,116,34,62,116,111,32,119,111,114,107,114,101,100,117,99,101,115,104,97,115,32,104,97,100,101,114,101,99,116,101,100,115,104,111,119,40,41,59,97,99,116,105,111,110,61,98,111,111,107,32,111,102,97,110,32,97,114,101,97,61,61,32,34,104,116,116,60,104,101,97,100,101,114,10,60,104,116,109,108,62,99,111,110,102,111,114,109,102,97,99,105,110,103,32,99,111,111,107,105,101,46,114,101,108,121,32,111,110,104,111,115,116,101,100,32,46,99,117,115,116,111,109,104,101,32,119,101,110,116,98,117,116,32,102,111,114,115,112,114,101,97,100,32,70,97,109,105,108,121,32,97,32,109,101,97,110,115,111,117,116,32,116,104,101,102,111,114,117,109,115,46,102,111,111,116,97,103,101,34,62,77,111,98,105,108,67,108,101,109,101,110,116,115,34,32,105,100,61,34,97,115,32,104,105,103,104,105,110,116,101,110,115,101,45,45,62,60,33,45,45,102,101,109,97,108,101,32,105,115,32,115,101,101,110,105,109,112,108,105,101,100,115,101,116,32,116,104,101,97,32,115,116,97,116,101,97,110,100,32,104,105,115,102,97,115,116,101,115,116,98,101,115,105,100,101,115,98,117,116,116,111,110,95,98,111,117,110,100,101,100,34,62,60,105,109,103,32,73,110,102,111,98,111,120,101,118,101,110,116,115,44,97,32,121,111,117,110,103,97,110,100,32,97,114,101,78,97,116,105,118,101,32,99,104,101,97,112,101,114,84,105,109,101,111,117,116,97,110,100,32,104,97,115,101,110,103,105,110,101,115,119,111,110,32,116,104,101,40,109,111,115,116,108,121,114,105,103,104,116,58,32,102,105,110,100,32,97,32,45,98,111,116,116,111,109,80,114,105,110,99,101,32,97,114,101,97,32,111,102,109,111,114,101,32,111,102,115,101,97,114,99,104,95,110,97,116,117,114,101,44,108,101,103,97,108,108,121,112,101,114,105,111,100,44,108,97,110,100,32,111,102,111,114,32,119,105,116,104,105,110,100,117,99,101,100,112,114,111,118,105,110,103,109,105,115,115,105,108,101,108,111,99,97,108,108,121,65,103,97,105,110,115,116,116,104,101,32,119,97,121,107,38,113,117,111,116,59,112,120,59,34,62,13,10,112,117,115,104,101,100,32,97,98,97,110,100,111,110,110,117,109,101,114,97,108,67,101,114,116,97,105,110,73,110,32,116,104,105,115,109,111,114,101,32,105,110,111,114,32,115,111,109,101,110,97,109,101,32,105,115,97,110,100,44,32,105,110,99,114,111,119,110,101,100,73,83,66,78,32,48,45,99,114,101,97,116,101,115,79,99,116,111,98,101,114,109,97,121,32,110,111,116,99,101,110,116,101,114,32,108,97,116,101,32,105,110,68,101,102,101,110,99,101,101,110,97,99,116,101,100,119,105,115,104,32,116,111,98,114,111,97,100,108,121,99,111,111,108,105,110,103,111,110,108,111,97,100,61,105,116,46,32,84,104,101,114,101,99,111,118,101,114,77,101,109,98,101,114,115,104,101,105,103,104,116,32,97,115,115,117,109,101,115,60,104,116,109,108,62,10,112,101,111,112,108,101,46,105,110,32,111,110,101,32,61,119,105,110,100,111,119,102,111,111,116,101,114,95,97,32,103,111,111,100,32,114,101,107,108,97,109,97,111,116,104,101,114,115,44,116,111,32,116,104,105,115,95,99,111,111,107,105,101,112,97,110,101,108,34,62,76,111,110,100,111,110,44,100,101,102,105,110,101,115,99,114,117,115,104,101,100,98,97,112,116,105,115,109,99,111,97,115,116,97,108,115,116,97,116,117,115,32,116,105,116,108,101,34,32,109,111,118,101,32,116,111,108,111,115,116,32,105,110,98,101,116,116,101,114,32,105,109,112,108,105,101,115,114,105,118,97,108,114,121,115,101,114,118,101,114,115,32,83,121,115,116,101,109,80,101,114,104,97,112,115,101,115,32,97,110,100,32,99,111,110,116,101,110,100,102,108,111,119,105,110,103,108,97,115,116,101,100,32,114,105,115,101,32,105,110,71,101,110,101,115,105,115,118,105,101,119,32,111,102,114,105,115,105,110,103,32,115,101,101,109,32,116,111,98,117,116,32,105,110,32,98,97,99,107,105,110,103,104,101,32,119,105,108,108,103,105,118,101,110,32,97,103,105,118,105,110,103,32,99,105,116,105,101,115,46,102,108,111,119,32,111,102,32,76,97,116,101,114,32,97,108,108,32,98,117,116,72,105,103,104,119,97,121,111,110,108,121,32,98,121,115,105,103,110,32,111,102,104,101,32,100,111,101,115,100,105,102,102,101,114,115,98,97,116,116,101,114,121,38,97,109,112,59,108,97,115,105,110,103,108,101,115,116,104,114,101,97,116,115,105,110,116,101,103,101,114,116,97,107,101,32,111,110,114,101,102,117,115,101,100,99,97,108,108,101,100,32,61,85,83,38,97,109,112,83,101,101,32,116,104,101,110,97,116,105,118,101,115,98,121,32,116,104,105,115,115,121,115,116,101,109,46,104,101,97,100,32,111,102,58,104,111,118,101,114,44,108,101,115,98,105,97,110,115,117,114,110,97,109,101,97,110,100,32,97,108,108,99,111,109,109,111,110,47,104,101,97,100,101,114,95,95,112,97,114,97,109,115,72,97,114,118,97,114,100,47,112,105,120,101,108,46,114,101,109,111,118,97,108,115,111,32,108,111,110,103,114,111,108,101,32,111,102,106,111,105,110,116,108,121,115,107,121,115,99,114,97,85,110,105,99,111,100,101,98,114,32,47,62,13,10,65,116,108,97,110,116,97,110,117,99,108,101,117,115,67,111,117,110,116,121,44,112,117,114,101,108,121,32,99,111,117,110,116,34,62,101,97,115,105,108,121,32,98,117,105,108,100,32,97,111,110,99,108,105,99,107,97,32,103,105,118,101,110,112,111,105,110,116,101,114,104,38,113,117,111,116,59,101,118,101,110,116,115,32,101,108,115,101,32,123,10,100,105,116,105,111,110,115,110,111,119,32,116,104,101,44,32,119,105,116,104,32,109,97,110,32,119,104,111,111,114,103,47,87,101,98,111,110,101,32,97,110,100,99,97,118,97,108,114,121,72,101,32,100,105,101,100,115,101,97,116,116,108,101,48,48,44,48,48,48,32,123,119,105,110,100,111,119,104,97,118,101,32,116,111,105,102,40,119,105,110,100,97,110,100,32,105,116,115,115,111,108,101,108,121,32,109,38,113,117,111,116,59,114,101,110,101,119,101,100,68,101,116,114,111,105,116,97,109,111,110,103,115,116,101,105,116,104,101,114,32,116,104,101,109,32,105,110,83,101,110,97,116,111,114,85,115,60,47,97,62,60,75,105,110,103,32,111,102,70,114,97,110,99,105,115,45,112,114,111,100,117,99,104,101,32,117,115,101,100,97,114,116,32,97,110,100,104,105,109,32,97,110,100,117,115,101,100,32,98,121,115,99,111,114,105,110,103,97,116,32,104,111,109,101,116,111,32,104,97,118,101,114,101,108,97,116,101,115,105,98,105,108,105,116,121,102,97,99,116,105,111,110,66,117,102,102,97,108,111,108,105,110,107,34,62,60,119,104,97,116,32,104,101,102,114,101,101,32,116,111,67,105,116,121,32,111,102,99,111,109,101,32,105,110,115,101,99,116,111,114,115,99,111,117,110,116,101,100,111,110,101,32,100,97,121,110,101,114,118,111,117,115,115,113,117,97,114,101,32,125,59,105,102,40,103,111,105,110,32,119,104,97,116,105,109,103,34,32,97,108,105,115,32,111,110,108,121,115,101,97,114,99,104,47,116,117,101,115,100,97,121,108,111,111,115,101,108,121,83,111,108,111,109,111,110,115,101,120,117,97,108,32,45,32,60,97,32,104,114,109,101,100,105,117,109,34,68,79,32,78,79,84,32,70,114,97,110,99,101,44,119,105,116,104,32,97,32,119,97,114,32,97,110,100,115,101,99,111,110,100,32,116,97,107,101,32,97,32,62,13,10,13,10,13,10,109,97,114,107,101,116,46,104,105,103,104,119,97,121,100,111,110,101,32,105,110,99,116,105,118,105,116,121,34,108,97,115,116,34,62,111,98,108,105,103,101,100,114,105,115,101,32,116,111,34,117,110,100,101,102,105,109,97,100,101,32,116,111,32,69,97,114,108,121,32,112,114,97,105,115,101,100,105,110,32,105,116,115,32,102,111,114,32,104,105,115,97,116,104,108,101,116,101,74,117,112,105,116,101,114,89,97,104,111,111,33,32,116,101,114,109,101,100,32,115,111,32,109,97,110,121,114,101,97,108,108,121,32,115,46,32,84,104,101,32,97,32,119,111,109,97,110,63,118,97,108,117,101,61,100,105,114,101,99,116,32,114,105,103,104,116,34,32,98,105,99,121,99,108,101,97,99,105,110,103,61,34,100,97,121,32,97,110,100,115,116,97,116,105,110,103,82,97,116,104,101,114,44,104,105,103,104,101,114,32,79,102,102,105,99,101,32,97,114,101,32,110,111,119,116,105,109,101,115,44,32,119,104,101,110,32,97,32,112,97,121,32,102,111,114,111,110,32,116,104,105,115,45,108,105,110,107,34,62,59,98,111,114,100,101,114,97,114,111,117,110,100,32,97,110,110,117,97,108,32,116,104,101,32,78,101,119,112,117,116,32,116,104,101,46,99,111,109,34,32,116,97,107,105,110,32,116,111,97,32,98,114,105,101,102,40,105,110,32,116,104,101,103,114,111,117,112,115,46,59,32,119,105,100,116,104,101,110,122,121,109,101,115,115,105,109,112,108,101,32,105,110,32,108,97,116,101,123,114,101,116,117,114,110,116,104,101,114,97,112,121,97,32,112,111,105,110,116,98,97,110,110,105,110,103,105,110,107,115,34,62,10,40,41,59,34,32,114,101,97,32,112,108,97,99,101,92,117,48,48,51,67,97,97,98,111,117,116,32,97,116,114,62,13,10,9,9,99,99,111,117,110,116,32,103,105,118,101,115,32,97,60,83,67,82,73,80,84,82,97,105,108,119,97,121,116,104,101,109,101,115,47,116,111,111,108,98,111,120,66,121,73,100,40,34,120,104,117,109,97,110,115,44,119,97,116,99,104,101,115,105,110,32,115,111,109,101,32,105,102,32,40,119,105,99,111,109,105,110,103,32,102,111,114,109,97,116,115,32,85,110,100,101,114,32,98,117,116,32,104,97,115,104,97,110,100,101,100,32,109,97,100,101,32,98,121,116,104,97,110,32,105,110,102,101,97,114,32,111,102,100,101,110,111,116,101,100,47,105,102,114,97,109,101,108,101,102,116,32,105,110,118,111,108,116,97,103,101,105,110,32,101,97,99,104,97,38,113,117,111,116,59,98,97,115,101,32,111,102,73,110,32,109,97,110,121,117,110,100,101,114,103,111,114,101,103,105,109,101,115,97,99,116,105,111,110,32,60,47,112,62,13,10,60,117,115,116,111,109,86,97,59,38,103,116,59,60,47,105,109,112,111,114,116,115,111,114,32,116,104,97,116,109,111,115,116,108,121,32,38,97,109,112,59,114,101,32,115,105,122,101,61,34,60,47,97,62,60,47,104,97,32,99,108,97,115,115,112,97,115,115,105,118,101,72,111,115,116,32,61,32,87,104,101,116,104,101,114,102,101,114,116,105,108,101,86,97,114,105,111,117,115,61,91,93,59,40,102,117,99,97,109,101,114,97,115,47,62,60,47,116,100,62,97,99,116,115,32,97,115,73,110,32,115,111,109,101,62,13,10,13,10,60,33,111,114,103,97,110,105,115,32,60,98,114,32,47,62,66,101,105,106,105,110,103,99,97,116,97,108,195,160,100,101,117,116,115,99,104,101,117,114,111,112,101,117,101,117,115,107,97,114,97,103,97,101,105,108,103,101,115,118,101,110,115,107,97,101,115,112,97,195,177,97,109,101,110,115,97,106,101,117,115,117,97,114,105,111,116,114,97,98,97,106,111,109,195,169,120,105,99,111,112,195,161,103,105,110,97,115,105,101,109,112,114,101,115,105,115,116,101,109,97,111,99,116,117,98,114,101,100,117,114,97,110,116,101,97,195,177,97,100,105,114,101,109,112,114,101,115,97,109,111,109,101,110,116,111,110,117,101,115,116,114,111,112,114,105,109,101,114,97,116,114,97,118,195,169,115,103,114,97,99,105,97,115,110,117,101,115,116,114,97,112,114,111,99,101,115,111,101,115,116,97,100,111,115,99,97,108,105,100,97,100,112,101,114,115,111,110,97,110,195,186,109,101,114,111,97,99,117,101,114,100,111,109,195,186,115,105,99,97,109,105,101,109,98,114,111,111,102,101,114,116,97,115,97,108,103,117,110,111,115,112,97,195,173,115,101,115,101,106,101,109,112,108,111,100,101,114,101,99,104,111,97,100,101,109,195,161,115,112,114,105,118,97,100,111,97,103,114,101,103,97,114,101,110,108,97,99,101,115,112,111,115,105,98,108,101,104,111,116,101,108,101,115,115,101,118,105,108,108,97,112,114,105,109,101,114,111,195,186,108,116,105,109,111,101,118,101,110,116,111,115,97,114,99,104,105,118,111,99,117,108,116,117,114,97,109,117,106,101,114,101,115,101,110,116,114,97,100,97,97,110,117,110,99,105,111,101,109,98,97,114,103,111,109,101,114,99,97,100,111,103,114,97,110,100,101,115,101,115,116,117,100,105,111,109,101,106,111,114,101,115,102,101,98,114,101,114,111,100,105,115,101,195,177,111,116,117,114,105,115,109,111,99,195,179,100,105,103,111,112,111,114,116,97,100,97,101,115,112,97,99,105,111,102,97,109,105,108,105,97,97,110,116,111,110,105,111,112,101,114,109,105,116,101,103,117,97,114,100,97,114,97,108,103,117,110,97,115,112,114,101,99,105,111,115,97,108,103,117,105,101,110,115,101,110,116,105,100,111,118,105,115,105,116,97,115,116,195,173,116,117,108,111,99,111,110,111,99,101,114,115,101,103,117,110,100,111,99,111,110,115,101,106,111,102,114,97,110,99,105,97,109,105,110,117,116,111,115,115,101,103,117,110,100,97,116,101,110,101,109,111,115,101,102,101,99,116,111,115,109,195,161,108,97,103,97,115,101,115,105,195,179,110,114,101,118,105,115,116,97,103,114,97,110,97,100,97,99,111,109,112,114,97,114,105,110,103,114,101,115,111,103,97,114,99,195,173,97,97,99,99,105,195,179,110,101,99,117,97,100,111,114,113,117,105,101,110,101,115,105,110,99,108,117,115,111,100,101,98,101,114,195,161,109,97,116,101,114,105,97,104,111,109,98,114,101,115,109,117,101,115,116,114,97,112,111,100,114,195,173,97,109,97,195,177,97,110,97,195,186,108,116,105,109,97,101,115,116,97,109,111,115,111,102,105,99,105,97,108,116,97,109,98,105,101,110,110,105,110,103,195,186,110,115,97,108,117,100,111,115,112,111,100,101,109,111,115,109,101,106,111,114,97,114,112,111,115,105,116,105,111,110,98,117,115,105,110,101,115,115,104,111,109,101,112,97,103,101,115,101,99,117,114,105,116,121,108,97,110,103,117,97,103,101,115,116,97,110,100,97,114,100,99,97,109,112,97,105,103,110,102,101,97,116,117,114,101,115,99,97,116,101,103,111,114,121,101,120,116,101,114,110,97,108,99,104,105,108,100,114,101,110,114,101,115,101,114,118,101,100,114,101,115,101,97,114,99,104,101,120,99,104,97,110,103,101,102,97,118,111,114,105,116,101,116,101,109,112,108,97,116,101,109,105,108,105,116,97,114,121,105,110,100,117,115,116,114,121,115,101,114,118,105,99,101,115,109,97,116,101,114,105,97,108,112,114,111,100,117,99,116,115,122,45,105,110,100,101,120,58,99,111,109,109,101,110,116,115,115,111,102,116,119,97,114,101,99,111,109,112,108,101,116,101,99,97,108,101,110,100,97,114,112,108,97,116,102,111,114,109,97,114,116,105,99,108,101,115,114,101,113,117,105,114,101,100,109,111,118,101,109,101,110,116,113,117,101,115,116,105,111,110,98,117,105,108,100,105,110,103,112,111,108,105,116,105,99,115,112,111,115,115,105,98,108,101,114,101,108,105,103,105,111,110,112,104,121,115,105,99,97,108,102,101,101,100,98,97,99,107,114,101,103,105,115,116,101,114,112,105,99,116,117,114,101,115,100,105,115,97,98,108,101,100,112,114,111,116,111,99,111,108,97,117,100,105,101,110,99,101,115,101,116,116,105,110,103,115,97,99,116,105,118,105,116,121,101,108,101,109,101,110,116,115,108,101,97,114,110,105,110,103,97,110,121,116,104,105,110,103,97,98,115,116,114,97,99,116,112,114,111,103,114,101,115,115,111,118,101,114,118,105,101,119,109,97,103,97,122,105,110,101,101,99,111,110,111,109,105,99,116,114,97,105,110,105,110,103,112,114,101,115,115,117,114,101,118,97,114,105,111,117,115,32,60,115,116,114,111,110,103,62,112,114,111,112,101,114,116,121,115,104,111,112,112,105,110,103,116,111,103,101,116,104,101,114,97,100,118,97,110,99,101,100,98,101,104,97,118,105,111,114,100,111,119,110,108,111,97,100,102,101,97,116,117,114,101,100,102,111,111,116,98,97,108,108,115,101,108,101,99,116,101,100,76,97,110,103,117,97,103,101,100,105,115,116,97,110,99,101,114,101,109,101,109,98,101,114,116,114,97,99,107,105,110,103,112,97,115,115,119,111,114,100,109,111,100,105,102,105,101,100,115,116,117,100,101,110,116,115,100,105,114,101,99,116,108,121,102,105,103,104,116,105,110,103,110,111,114,116,104,101,114,110,100,97,116,97,98,97,115,101,102,101,115,116,105,118,97,108,98,114,101,97,107,105,110,103,108,111,99,97,116,105,111,110,105,110,116,101,114,110,101,116,100,114,111,112,100,111,119,110,112,114,97,99,116,105,99,101,101,118,105,100,101,110,99,101,102,117,110,99,116,105,111,110,109,97,114,114,105,97,103,101,114,101,115,112,111,110,115,101,112,114,111,98,108,101,109,115,110,101,103,97,116,105,118,101,112,114,111,103,114,97,109,115,97,110,97,108,121,115,105,115,114,101,108,101,97,115,101,100,98,97,110,110,101,114,34,62,112,117,114,99,104,97,115,101,112,111,108,105,99,105,101,115,114,101,103,105,111,110,97,108,99,114,101,97,116,105,118,101,97,114,103,117,109,101,110,116,98,111,111,107,109,97,114,107,114,101,102,101,114,114,101,114,99,104,101,109,105,99,97,108,100,105,118,105,115,105,111,110,99,97,108,108,98,97,99,107,115,101,112,97,114,97,116,101,112,114,111,106,101,99,116,115,99,111,110,102,108,105,99,116,104,97,114,100,119,97,114,101,105,110,116,101,114,101,115,116,100,101,108,105,118,101,114,121,109,111,117,110,116,97,105,110,111,98,116,97,105,110,101,100,61,32,102,97,108,115,101,59,102,111,114,40,118,97,114,32,97,99,99,101,112,116,101,100,99,97,112,97,99,105,116,121,99,111,109,112,117,116,101,114,105,100,101,110,116,105,116,121,97,105,114,99,114,97,102,116,101,109,112,108,111,121,101,100,112,114,111,112,111,115,101,100,100,111,109,101,115,116,105,99,105,110,99,108,117,100,101,115,112,114,111,118,105,100,101,100,104,111,115,112,105,116,97,108,118,101,114,116,105,99,97,108,99,111,108,108,97,112,115,101,97,112,112,114,111,97,99,104,112,97,114,116,110,101,114,115,108,111,103,111,34,62,60,97,100,97,117,103,104,116,101,114,97,117,116,104,111,114,34,32,99,117,108,116,117,114,97,108,102,97,109,105,108,105,101,115,47,105,109,97,103,101,115,47,97,115,115,101,109,98,108,121,112,111,119,101,114,102,117,108,116,101,97,99,104,105,110,103,102,105,110,105,115,104,101,100,100,105,115,116,114,105,99,116,99,114,105,116,105,99,97,108,99,103,105,45,98,105,110,47,112,117,114,112,111,115,101,115,114,101,113,117,105,114,101,115,101,108,101,99,116,105,111,110,98,101,99,111,109,105,110,103,112,114,111,118,105,100,101,115,97,99,97,100,101,109,105,99,101,120,101,114,99,105,115,101,97,99,116,117,97,108,108,121,109,101,100,105,99,105,110,101,99,111,110,115,116,97,110,116,97,99,99,105,100,101,110,116,77,97,103,97,122,105,110,101,100,111,99,117,109,101,110,116,115,116,97,114,116,105,110,103,98,111,116,116,111,109,34,62,111,98,115,101,114,118,101,100,58,32,38,113,117,111,116,59,101,120,116,101,110,100,101,100,112,114,101,118,105,111,117,115,83,111,102,116,119,97,114,101,99,117,115,116,111,109,101,114,100,101,99,105,115,105,111,110,115,116,114,101,110,103,116,104,100,101,116,97,105,108,101,100,115,108,105,103,104,116,108,121,112,108,97,110,110,105,110,103,116,101,120,116,97,114,101,97,99,117,114,114,101,110,99,121,101,118,101,114,121,111,110,101,115,116,114,97,105,103,104,116,116,114,97,110,115,102,101,114,112,111,115,105,116,105,118,101,112,114,111,100,117,99,101,100,104,101,114,105,116,97,103,101,115,104,105,112,112,105,110,103,97,98,115,111,108,117,116,101,114,101,99,101,105,118,101,100,114,101,108,101,118,97,110,116,98,117,116,116,111,110,34,32,118,105,111,108,101,110,99,101,97,110,121,119,104,101,114,101,98,101,110,101,102,105,116,115,108,97,117,110,99,104,101,100,114,101,99,101,110,116,108,121,97,108,108,105,97,110,99,101,102,111,108,108,111,119,101,100,109,117,108,116,105,112,108,101,98,117,108,108,101,116,105,110,105,110,99,108,117,100,101,100,111,99,99,117,114,114,101,100,105,110,116,101,114,110,97,108,36,40,116,104,105,115,41,46,114,101,112,117,98,108,105,99,62,60,116,114,62,60,116,100,99,111,110,103,114,101,115,115,114,101,99,111,114,100,101,100,117,108,116,105,109,97,116,101,115,111,108,117,116,105,111,110,60,117,108,32,105,100,61,34,100,105,115,99,111,118,101,114,72,111,109,101,60,47,97,62,119,101,98,115,105,116,101,115,110,101,116,119,111,114,107,115,97,108,116,104,111,117,103,104,101,110,116,105,114,101,108,121,109,101,109,111,114,105,97,108,109,101,115,115,97,103,101,115,99,111,110,116,105,110,117,101,97,99,116,105,118,101,34,62,115,111,109,101,119,104,97,116,118,105,99,116,111,114,105,97,87,101,115,116,101,114,110,32,32,116,105,116,108,101,61,34,76,111,99,97,116,105,111,110,99,111,110,116,114,97,99,116,118,105,115,105,116,111,114,115,68,111,119,110,108,111,97,100,119,105,116,104,111,117,116,32,114,105,103,104,116,34,62,10,109,101,97,115,117,114,101,115,119,105,100,116,104,32,61,32,118,97,114,105,97,98,108,101,105,110,118,111,108,118,101,100,118,105,114,103,105,110,105,97,110,111,114,109,97,108,108,121,104,97,112,112,101,110,101,100,97,99,99,111,117,110,116,115,115,116,97,110,100,105,110,103,110,97,116,105,111,110,97,108,82,101,103,105,115,116,101,114,112,114,101,112,97,114,101,100,99,111,110,116,114,111,108,115,97,99,99,117,114,97,116,101,98,105,114,116,104,100,97,121,115,116,114,97,116,101,103,121,111,102,102,105,99,105,97,108,103,114,97,112,104,105,99,115,99,114,105,109,105,110,97,108,112,111,115,115,105,98,108,121,99,111,110,115,117,109,101,114,80,101,114,115,111,110,97,108,115,112,101,97,107,105,110,103,118,97,108,105,100,97,116,101,97,99,104,105,101,118,101,100,46,106,112,103,34,32,47,62,109,97,99,104,105,110,101,115,60,47,104,50,62,10,32,32,107,101,121,119,111,114,100,115,102,114,105,101,110,100,108,121,98,114,111,116,104,101,114,115,99,111,109,98,105,110,101,100,111,114,105,103,105,110,97,108,99,111,109,112,111,115,101,100,101,120,112,101,99,116,101,100,97,100,101,113,117,97,116,101,112,97,107,105,115,116,97,110,102,111,108,108,111,119,34,32,118,97,108,117,97,98,108,101,60,47,108,97,98,101,108,62,114,101,108,97,116,105,118,101,98,114,105,110,103,105,110,103,105,110,99,114,101,97,115,101,103,111,118,101,114,110,111,114,112,108,117,103,105,110,115,47,76,105,115,116,32,111,102,32,72,101,97,100,101,114,34,62,34,32,110,97,109,101,61,34,32,40,38,113,117,111,116,59,103,114,97,100,117,97,116,101,60,47,104,101,97,100,62,10,99,111,109,109,101,114,99,101,109,97,108,97,121,115,105,97,100,105,114,101,99,116,111,114,109,97,105,110,116,97,105,110,59,104,101,105,103,104,116,58,115,99,104,101,100,117,108,101,99,104,97,110,103,105,110,103,98,97,99,107,32,116,111,32,99,97,116,104,111,108,105,99,112,97,116,116,101,114,110,115,99,111,108,111,114,58,32,35,103,114,101,97,116,101,115,116,115,117,112,112,108,105,101,115,114,101,108,105,97,98,108,101,60,47,117,108,62,10,9,9,60,115,101,108,101,99,116,32,99,105,116,105,122,101,110,115,99,108,111,116,104,105,110,103,119,97,116,99,104,105,110,103,60,108,105,32,105,100,61,34,115,112,101,99,105,102,105,99,99,97,114,114,121,105,110,103,115,101,110,116,101,110,99,101,60,99,101,110,116,101,114,62,99,111,110,116,114,97,115,116,116,104,105,110,107,105,110,103,99,97,116,99,104,40,101,41,115,111,117,116,104,101,114,110,77,105,99,104,97,101,108,32,109,101,114,99,104,97,110,116,99,97,114,111,117,115,101,108,112,97,100,100,105,110,103,58,105,110,116,101,114,105,111,114,46,115,112,108,105,116,40,34,108,105,122,97,116,105,111,110,79,99,116,111,98,101,114,32,41,123,114,101,116,117,114,110,105,109,112,114,111,118,101,100,45,45,38,103,116,59,10,10,99,111,118,101,114,97,103,101,99,104,97,105,114,109,97,110,46,112,110,103,34,32,47,62,115,117,98,106,101,99,116,115,82,105,99,104,97,114,100,32,119,104,97,116,101,118,101,114,112,114,111,98,97,98,108,121,114,101,99,111,118,101,114,121,98,97,115,101,98,97,108,108,106,117,100,103,109,101,110,116,99,111,110,110,101,99,116,46,46,99,115,115,34,32,47,62,32,119,101,98,115,105,116,101,114,101,112,111,114,116,101,100,100,101,102,97,117,108,116,34,47,62,60,47,97,62,13,10,101,108,101,99,116,114,105,99,115,99,111,116,108,97,110,100,99,114,101,97,116,105,111,110,113,117,97,110,116,105,116,121,46,32,73,83,66,78,32,48,100,105,100,32,110,111,116,32,105,110,115,116,97,110,99,101,45,115,101,97,114,99,104,45,34,32,108,97,110,103,61,34,115,112,101,97,107,101,114,115,67,111,109,112,117,116,101,114,99,111,110,116,97,105,110,115,97,114,99,104,105,118,101,115,109,105,110,105,115,116,101,114,114,101,97,99,116,105,111,110,100,105,115,99,111,117,110,116,73,116,97,108,105,97,110,111,99,114,105,116,101,114,105,97,115,116,114,111,110,103,108,121,58,32,39,104,116,116,112,58,39,115,99,114,105,112,116,39,99,111,118,101,114,105,110,103,111,102,102,101,114,105,110,103,97,112,112,101,97,114,101,100,66,114,105,116,105,115,104,32,105,100,101,110,116,105,102,121,70,97,99,101,98,111,111,107,110,117,109,101,114,111,117,115,118,101,104,105,99,108,101,115,99,111,110,99,101,114,110,115,65,109,101,114,105,99,97,110,104,97,110,100,108,105,110,103,100,105,118,32,105,100,61,34,87,105,108,108,105,97,109,32,112,114,111,118,105,100,101,114,95,99,111,110,116,101,110,116,97,99,99,117,114,97,99,121,115,101,99,116,105,111,110,32,97,110,100,101,114,115,111,110,102,108,101,120,105,98,108,101,67,97,116,101,103,111,114,121,108,97,119,114,101,110,99,101,60,115,99,114,105,112,116,62,108,97,121,111,117,116,61,34,97,112,112,114,111,118,101,100,32,109,97,120,105,109,117,109,104,101,97,100,101,114,34,62,60,47,116,97,98,108,101,62,83,101,114,118,105,99,101,115,104,97,109,105,108,116,111,110,99,117,114,114,101,110,116,32,99,97,110,97,100,105,97,110,99,104,97,110,110,101,108,115,47,116,104,101,109,101,115,47,47,97,114,116,105,99,108,101,111,112,116,105,111,110,97,108,112,111,114,116,117,103,97,108,118,97,108,117,101,61,34,34,105,110,116,101,114,118,97,108,119,105,114,101,108,101,115,115,101,110,116,105,116,108,101,100,97,103,101,110,99,105,101,115,83,101,97,114,99,104,34,32,109,101,97,115,117,114,101,100,116,104,111,117,115,97,110,100,115,112,101,110,100,105,110,103,38,104,101,108,108,105,112,59,110,101,119,32,68,97,116,101,34,32,115,105,122,101,61,34,112,97,103,101,78,97,109,101,109,105,100,100,108,101,34,32,34,32,47,62,60,47,97,62,104,105,100,100,101,110,34,62,115,101,113,117,101,110,99,101,112,101,114,115,111,110,97,108,111,118,101,114,102,108,111,119,111,112,105,110,105,111,110,115,105,108,108,105,110,111,105,115,108,105,110,107,115,34,62,10,9,60,116,105,116,108,101,62,118,101,114,115,105,111,110,115,115,97,116,117,114,100,97,121,116,101,114,109,105,110,97,108,105,116,101,109,112,114,111,112,101,110,103,105,110,101,101,114,115,101,99,116,105,111,110,115,100,101,115,105,103,110,101,114,112,114,111,112,111,115,97,108,61,34,102,97,108,115,101,34,69,115,112,97,195,177,111,108,114,101,108,101,97,115,101,115,115,117,98,109,105,116,34,32,101,114,38,113,117,111,116,59,97,100,100,105,116,105,111,110,115,121,109,112,116,111,109,115,111,114,105,101,110,116,101,100,114,101,115,111,117,114,99,101,114,105,103,104,116,34,62,60,112,108,101,97,115,117,114,101,115,116,97,116,105,111,110,115,104,105,115,116,111,114,121,46,108,101,97,118,105,110,103,32,32,98,111,114,100,101,114,61,99,111,110,116,101,110,116,115,99,101,110,116,101,114,34,62,46,10,10,83,111,109,101,32,100,105,114,101,99,116,101,100,115,117,105,116,97,98,108,101,98,117,108,103,97,114,105,97,46,115,104,111,119,40,41,59,100,101,115,105,103,110,101,100,71,101,110,101,114,97,108,32,99,111,110,99,101,112,116,115,69,120,97,109,112,108,101,115,119,105,108,108,105,97,109,115,79,114,105,103,105,110,97,108,34,62,60,115,112,97,110,62,115,101,97,114,99,104,34,62,111,112,101,114,97,116,111,114,114,101,113,117,101,115,116,115,97,32,38,113,117,111,116,59,97,108,108,111,119,105,110,103,68,111,99,117,109,101,110,116,114,101,118,105,115,105,111,110,46,32,10,10,84,104,101,32,121,111,117,114,115,101,108,102,67,111,110,116,97,99,116,32,109,105,99,104,105,103,97,110,69,110,103,108,105,115,104,32,99,111,108,117,109,98,105,97,112,114,105,111,114,105,116,121,112,114,105,110,116,105,110,103,100,114,105,110,107,105,110,103,102,97,99,105,108,105,116,121,114,101,116,117,114,110,101,100,67,111,110,116,101,110,116,32,111,102,102,105,99,101,114,115,82,117,115,115,105,97,110,32,103,101,110,101,114,97,116,101,45,56,56,53,57,45,49,34,105,110,100,105,99,97,116,101,102,97,109,105,108,105,97,114,32,113,117,97,108,105,116,121,109,97,114,103,105,110,58,48,32,99,111,110,116,101,110,116,118,105,101,119,112,111,114,116,99,111,110,116,97,99,116,115,45,116,105,116,108,101,34,62,112,111,114,116,97,98,108,101,46,108,101,110,103,116,104,32,101,108,105,103,105,98,108,101,105,110,118,111,108,118,101,115,97,116,108,97,110,116,105,99,111,110,108,111,97,100,61,34,100,101,102,97,117,108,116,46,115,117,112,112,108,105,101,100,112,97,121,109,101,110,116,115,103,108,111,115,115,97,114,121,10,10,65,102,116,101,114,32,103,117,105,100,97,110,99,101,60,47,116,100,62,60,116,100,101,110,99,111,100,105,110,103,109,105,100,100,108,101,34,62,99,97,109,101,32,116,111,32,100,105,115,112,108,97,121,115,115,99,111,116,116,105,115,104,106,111,110,97,116,104,97,110,109,97,106,111,114,105,116,121,119,105,100,103,101,116,115,46,99,108,105,110,105,99,97,108,116,104,97,105,108,97,110,100,116,101,97,99,104,101,114,115,60,104,101,97,100,62,10,9,97,102,102,101,99,116,101,100,115,117,112,112,111,114,116,115,112,111,105,110,116,101,114,59,116,111,83,116,114,105,110,103,60,47,115,109,97,108,108,62,111,107,108,97,104,111,109,97,119,105,108,108,32,98,101,32,105,110,118,101,115,116,111,114,48,34,32,97,108,116,61,34,104,111,108,105,100,97,121,115,82,101,115,111,117,114,99,101,108,105,99,101,110,115,101,100,32,40,119,104,105,99,104,32,46,32,65,102,116,101,114,32,99,111,110,115,105,100,101,114,118,105,115,105,116,105,110,103,101,120,112,108,111,114,101,114,112,114,105,109,97,114,121,32,115,101,97,114,99,104,34,32,97,110,100,114,111,105,100,34,113,117,105,99,107,108,121,32,109,101,101,116,105,110,103,115,101,115,116,105,109,97,116,101,59,114,101,116,117,114,110,32,59,99,111,108,111,114,58,35,32,104,101,105,103,104,116,61,97,112,112,114,111,118,97,108,44,32,38,113,117,111,116,59,32,99,104,101,99,107,101,100,46,109,105,110,46,106,115,34,109,97,103,110,101,116,105,99,62,60,47,97,62,60,47,104,102,111,114,101,99,97,115,116,46,32,87,104,105,108,101,32,116,104,117,114,115,100,97,121,100,118,101,114,116,105,115,101,38,101,97,99,117,116,101,59,104,97,115,67,108,97,115,115,101,118,97,108,117,97,116,101,111,114,100,101,114,105,110,103,101,120,105,115,116,105,110,103,112,97,116,105,101,110,116,115,32,79,110,108,105,110,101,32,99,111,108,111,114,97,100,111,79,112,116,105,111,110,115,34,99,97,109,112,98,101,108,108,60,33,45,45,32,101,110,100,60,47,115,112,97,110,62,60,60,98,114,32,47,62,13,10,95,112,111,112,117,112,115,124,115,99,105,101,110,99,101,115,44,38,113,117,111,116,59,32,113,117,97,108,105,116,121,32,87,105,110,100,111,119,115,32,97,115,115,105,103,110,101,100,104,101,105,103,104,116,58,32,60,98,32,99,108,97,115,115,108,101,38,113,117,111,116,59,32,118,97,108,117,101,61,34,32,67,111,109,112,97,110,121,101,120,97,109,112,108,101,115,60,105,102,114,97,109,101,32,98,101,108,105,101,118,101,115,112,114,101,115,101,110,116,115,109,97,114,115,104,97,108,108,112,97,114,116,32,111,102,32,112,114,111,112,101,114,108,121,41,46,10,10,84,104,101,32,116,97,120,111,110,111,109,121,109,117,99,104,32,111,102,32,60,47,115,112,97,110,62,10,34,32,100,97,116,97,45,115,114,116,117,103,117,195,170,115,115,99,114,111,108,108,84,111,32,112,114,111,106,101,99,116,60,104,101,97,100,62,13,10,97,116,116,111,114,110,101,121,101,109,112,104,97,115,105,115,115,112,111,110,115,111,114,115,102,97,110,99,121,98,111,120,119,111,114,108,100,39,115,32,119,105,108,100,108,105,102,101,99,104,101,99,107,101,100,61,115,101,115,115,105,111,110,115,112,114,111,103,114,97,109,109,112,120,59,102,111,110,116,45,32,80,114,111,106,101,99,116,106,111,117,114,110,97,108,115,98,101,108,105,101,118,101,100,118,97,99,97,116,105,111,110,116,104,111,109,112,115,111,110,108,105,103,104,116,105,110,103,97,110,100,32,116,104,101,32,115,112,101,99,105,97,108,32,98,111,114,100,101,114,61,48,99,104,101,99,107,105,110,103,60,47,116,98,111,100,121,62,60,98,117,116,116,111,110,32,67,111,109,112,108,101,116,101,99,108,101,97,114,102,105,120,10,60,104,101,97,100,62,10,97,114,116,105,99,108,101,32,60,115,101,99,116,105,111,110,102,105,110,100,105,110,103,115,114,111,108,101,32,105,110,32,112,111,112,117,108,97,114,32,32,79,99,116,111,98,101,114,119,101,98,115,105,116,101,32,101,120,112,111,115,117,114,101,117,115,101,100,32,116,111,32,32,99,104,97,110,103,101,115,111,112,101,114,97,116,101,100,99,108,105,99,107,105,110,103,101,110,116,101,114,105,110,103,99,111,109,109,97,110,100,115,105,110,102,111,114,109,101,100,32,110,117,109,98,101,114,115,32,32,60,47,100,105,118,62,99,114,101,97,116,105,110,103,111,110,83,117,98,109,105,116,109,97,114,121,108,97,110,100,99,111,108,108,101,103,101,115,97,110,97,108,121,116,105,99,108,105,115,116,105,110,103,115,99,111,110,116,97,99,116,46,108,111,103,103,101,100,73,110,97,100,118,105,115,111,114,121,115,105,98,108,105,110,103,115,99,111,110,116,101,110,116,34,115,38,113,117,111,116,59,41,115,46,32,84,104,105,115,32,112,97,99,107,97,103,101,115,99,104,101,99,107,98,111,120,115,117,103,103,101,115,116,115,112,114,101,103,110,97,110,116,116,111,109,111,114,114,111,119,115,112,97,99,105,110,103,61,105,99,111,110,46,112,110,103,106,97,112,97,110,101,115,101,99,111,100,101,98,97,115,101,98,117,116,116,111,110,34,62,103,97,109,98,108,105,110,103,115,117,99,104,32,97,115,32,44,32,119,104,105,108,101,32,60,47,115,112,97,110,62,32,109,105,115,115,111,117,114,105,115,112,111,114,116,105,110,103,116,111,112,58,49,112,120,32,46,60,47,115,112,97,110,62,116,101,110,115,105,111,110,115,119,105,100,116,104,61,34,50,108,97,122,121,108,111,97,100,110,111,118,101,109,98,101,114,117,115,101,100,32,105,110,32,104,101,105,103,104,116,61,34,99,114,105,112,116,34,62,10,38,110,98,115,112,59,60,47,60,116,114,62,60,116,100,32,104,101,105,103,104,116,58,50,47,112,114,111,100,117,99,116,99,111,117,110,116,114,121,32,105,110,99,108,117,100,101,32,102,111,111,116,101,114,34,32,38,108,116,59,33,45,45,32,116,105,116,108,101,34,62,60,47,106,113,117,101,114,121,46,60,47,102,111,114,109,62,10,40,231,174,128,228,189,147,41,40,231,185,129,233,171,148,41,104,114,118,97,116,115,107,105,105,116,97,108,105,97,110,111,114,111,109,195,162,110,196,131,116,195,188,114,107,195,167,101,216,167,216,177,216,175,217,136,116,97,109,98,105,195,169,110,110,111,116,105,99,105,97,115,109,101,110,115,97,106,101,115,112,101,114,115,111,110,97,115,100,101,114,101,99,104,111,115,110,97,99,105,111,110,97,108,115,101,114,118,105,99,105,111,99,111,110,116,97,99,116,111,117,115,117,97,114,105,111,115,112,114,111,103,114,97,109,97,103,111,98,105,101,114,110,111,101,109,112,114,101,115,97,115,97,110,117,110,99,105,111,115,118,97,108,101,110,99,105,97,99,111,108,111,109,98,105,97,100,101,115,112,117,195,169,115,100,101,112,111,114,116,101,115,112,114,111,121,101,99,116,111,112,114,111,100,117,99,116,111,112,195,186,98,108,105,99,111,110,111,115,111,116,114,111,115,104,105,115,116,111,114,105,97,112,114,101,115,101,110,116,101,109,105,108,108,111,110,101,115,109,101,100,105,97,110,116,101,112,114,101,103,117,110,116,97,97,110,116,101,114,105,111,114,114,101,99,117,114,115,111,115,112,114,111,98,108,101,109,97,115,97,110,116,105,97,103,111,110,117,101,115,116,114,111,115,111,112,105,110,105,195,179,110,105,109,112,114,105,109,105,114,109,105,101,110,116,114,97,115,97,109,195,169,114,105,99,97,118,101,110,100,101,100,111,114,115,111,99,105,101,100,97,100,114,101,115,112,101,99,116,111,114,101,97,108,105,122,97,114,114,101,103,105,115,116,114,111,112,97,108,97,98,114,97,115,105,110,116,101,114,195,169,115,101,110,116,111,110,99,101,115,101,115,112,101,99,105,97,108,109,105,101,109,98,114,111,115,114,101,97,108,105,100,97,100,99,195,179,114,100,111,98,97,122,97,114,97,103,111,122,97,112,195,161,103,105,110,97,115,115,111,99,105,97,108,101,115,98,108,111,113,117,101,97,114,103,101,115,116,105,195,179,110,97,108,113,117,105,108,101,114,115,105,115,116,101,109,97,115,99,105,101,110,99,105,97,115,99,111,109,112,108,101,116,111,118,101,114,115,105,195,179,110,99,111,109,112,108,101,116,97,101,115,116,117,100,105,111,115,112,195,186,98,108,105,99,97,111,98,106,101,116,105,118,111,97,108,105,99,97,110,116,101,98,117,115,99,97,100,111,114,99,97,110,116,105,100,97,100,101,110,116,114,97,100,97,115,97,99,99,105,111,110,101,115,97,114,99,104,105,118,111,115,115,117,112,101,114,105,111,114,109,97,121,111,114,195,173,97,97,108,101,109,97,110,105,97,102,117,110,99,105,195,179,110,195,186,108,116,105,109,111,115,104,97,99,105,101,110,100,111,97,113,117,101,108,108,111,115,101,100,105,99,105,195,179,110,102,101,114,110,97,110,100,111,97,109,98,105,101,110,116,101,102,97,99,101,98,111,111,107,110,117,101,115,116,114,97,115,99,108,105,101,110,116,101,115,112,114,111,99,101,115,111,115,98,97,115,116,97,110,116,101,112,114,101,115,101,110,116,97,114,101,112,111,114,116,97,114,99,111,110,103,114,101,115,111,112,117,98,108,105,99,97,114,99,111,109,101,114,99,105,111,99,111,110,116,114,97,116,111,106,195,179,118,101,110,101,115,100,105,115,116,114,105,116,111,116,195,169,99,110,105,99,97,99,111,110,106,117,110,116,111,101,110,101,114,103,195,173,97,116,114,97,98,97,106,97,114,97,115,116,117,114,105,97,115,114,101,99,105,101,110,116,101,117,116,105,108,105,122,97,114,98,111,108,101,116,195,173,110,115,97,108,118,97,100,111,114,99,111,114,114,101,99,116,97,116,114,97,98,97,106,111,115,112,114,105,109,101,114,111,115,110,101,103,111,99,105,111,115,108,105,98,101,114,116,97,100,100,101,116,97,108,108,101,115,112,97,110,116,97,108,108,97,112,114,195,179,120,105,109,111,97,108,109,101,114,195,173,97,97,110,105,109,97,108,101,115,113,117,105,195,169,110,101,115,99,111,114,97,122,195,179,110,115,101,99,99,105,195,179,110,98,117,115,99,97,110,100,111,111,112,99,105,111,110,101,115,101,120,116,101,114,105,111,114,99,111,110,99,101,112,116,111,116,111,100,97,118,195,173,97,103,97,108,101,114,195,173,97,101,115,99,114,105,98,105,114,109,101,100,105,99,105,110,97,108,105,99,101,110,99,105,97,99,111,110,115,117,108,116,97,97,115,112,101,99,116,111,115,99,114,195,173,116,105,99,97,100,195,179,108,97,114,101,115,106,117,115,116,105,99,105,97,100,101,98,101,114,195,161,110,112,101,114,195,173,111,100,111,110,101,99,101,115,105,116,97,109,97,110,116,101,110,101,114,112,101,113,117,101,195,177,111,114,101,99,105,98,105,100,97,116,114,105,98,117,110,97,108,116,101,110,101,114,105,102,101,99,97,110,99,105,195,179,110,99,97,110,97,114,105,97,115,100,101,115,99,97,114,103,97,100,105,118,101,114,115,111,115,109,97,108,108,111,114,99,97,114,101,113,117,105,101,114,101,116,195,169,99,110,105,99,111,100,101,98,101,114,195,173,97,118,105,118,105,101,110,100,97,102,105,110,97,110,122,97,115,97,100,101,108,97,110,116,101,102,117,110,99,105,111,110,97,99,111,110,115,101,106,111,115,100,105,102,195,173,99,105,108,99,105,117,100,97,100,101,115,97,110,116,105,103,117,97,115,97,118,97,110,122,97,100,97,116,195,169,114,109,105,110,111,117,110,105,100,97,100,101,115,115,195,161,110,99,104,101,122,99,97,109,112,97,195,177,97,115,111,102,116,111,110,105,99,114,101,118,105,115,116,97,115,99,111,110,116,105,101,110,101,115,101,99,116,111,114,101,115,109,111,109,101,110,116,111,115,102,97,99,117,108,116,97,100,99,114,195,169,100,105,116,111,100,105,118,101,114,115,97,115,115,117,112,117,101,115,116,111,102,97,99,116,111,114,101,115,115,101,103,117,110,100,111,115,112,101,113,117,101,195,177,97,208,179,208,190,208,180,208,176,208,181,209,129,208,187,208,184,208,181,209,129,209,130,209,140,208,177,209,139,208,187,208,190,208,177,209,139,209,130,209,140,209,141,209,130,208,190,208,188,208,149,209,129,208,187,208,184,209,130,208,190,208,179,208,190,208,188,208,181,208,189,209,143,208,178,209,129,208,181,209,133,209,141,209,130,208,190,208,185,208,180,208,176,208,182,208,181,208,177,209,139,208,187,208,184,208,179,208,190,208,180,209,131,208,180,208,181,208,189,209,140,209,141,209,130,208,190,209,130,208,177,209,139,208,187,208,176,209,129,208,181,208,177,209,143,208,190,208,180,208,184,208,189,209,129,208,181,208,177,208,181,208,189,208,176,208,180,208,190,209,129,208,176,208,185,209,130,209,132,208,190,209,130,208,190,208,189,208,181,208,179,208,190,209,129,208,178,208,190,208,184,209,129,208,178,208,190,208,185,208,184,208,179,209,128,209,139,209,130,208,190,208,182,208,181,208,178,209,129,208,181,208,188,209,129,208,178,208,190,209,142,208,187,208,184,209,136,209,140,209,141,209,130,208,184,209,133,208,191,208,190,208,186,208,176,208,180,208,189,208,181,208,185,208,180,208,190,208,188,208,176,208,188,208,184,209,128,208,176,208,187,208,184,208,177,208,190,209,130,208,181,208,188,209,131,209,133,208,190,209,130,209,143,208,180,208,178,209,131,209,133,209,129,208,181,209,130,208,184,208,187,209,142,208,180,208,184,208,180,208,181,208,187,208,190,208,188,208,184,209,128,208,181,209,130,208,181,208,177,209,143,209,129,208,178,208,190,208,181,208,178,208,184,208,180,208,181,209,135,208,181,208,179,208,190,209,141,209,130,208,184,208,188,209,129,209,135,208,181,209,130,209,130,208,181,208,188,209,139,209,134,208,181,208,189,209,139,209,129,209,130,208,176,208,187,208,178,208,181,208,180,209,140,209,130,208,181,208,188,208,181,208,178,208,190,208,180,209,139,209,130,208,181,208,177,208,181,208,178,209,139,209,136,208,181,208,189,208,176,208,188,208,184,209,130,208,184,208,191,208,176,209,130,208,190,208,188,209,131,208,191,209,128,208,176,208,178,208,187,208,184,209,134,208,176,208,190,208,180,208,189,208,176,208,179,208,190,208,180,209,139,208,183,208,189,208,176,209,142,208,188,208,190,208,179,209,131,208,180,209,128,209,131,208,179,208,178,209,129,208,181,208,185,208,184,208,180,208,181,209,130,208,186,208,184,208,189,208,190,208,190,208,180,208,189,208,190,208,180,208,181,208,187,208,176,208,180,208,181,208,187,208,181,209,129,209,128,208,190,208,186,208,184,209,142,208,189,209,143,208,178,208,181,209,129,209,140,208,149,209,129,209,130,209,140,209,128,208,176,208,183,208,176,208,189,208,176,209,136,208,184,216,167,217,132,217,132,217,135,216,167,217,132,216,170,217,138,216,172,217,133,217,138,216,185,216,174,216,167,216,181,216,169,216,167,217,132,216,176,217,138,216,185,217,132,217,138,217,135,216,172,216,175,217,138,216,175,216,167,217,132,216,162,217,134,216,167,217,132,216,177,216,175,216,170,216,173,217,131,217,133,216,181,217,129,216,173,216,169,217,131,216,167,217,134,216,170,216,167,217,132,217,132,217,138,217,138,217,131,217,136,217,134,216,180,216,168,217,131,216,169,217,129,217,138,217,135,216,167,216,168,217,134,216,167,216,170,216,173,217,136,216,167,216,161,216,163,217,131,216,171,216,177,216,174,217,132,216,167,217,132,216,167,217,132,216,173,216,168,216,175,217,132,217,138,217,132,216,175,216,177,217,136,216,179,216,167,216,182,216,186,216,183,216,170,217,131,217,136,217,134,217,135,217,134,216,167,217,131,216,179,216,167,216,173,216,169,217,134,216,167,216,175,217,138,216,167,217,132,216,183,216,168,216,185,217,132,217,138,217,131,216,180,217,131,216,177,216,167,217,138,217,133,217,131,217,134,217,133,217,134,217,135,216,167,216,180,216,177,217,131,216,169,216,177,216,166,217,138,216,179,217,134,216,180,217,138,216,183,217,133,216,167,216,176,216,167,216,167,217,132,217,129,217,134,216,180,216,168,216,167,216,168,216,170,216,185,216,168,216,177,216,177,216,173,217,133,216,169,217,131,216,167,217,129,216,169,217,138,217,130,217,136,217,132,217,133,216,177,217,131,216,178,217,131,217,132,217,133,216,169,216,163,216,173,217,133,216,175,217,130,217,132,216,168,217,138,217,138,216,185,217,134,217,138,216,181,217,136,216,177,216,169,216,183,216,177,217,138,217,130,216,180,216,167,216,177,217,131,216,172,217,136,216,167,217,132,216,163,216,174,216,177,217,137,217,133,216,185,217,134,216,167,216,167,216,168,216,173,216,171,216,185,216,177,217,136,216,182,216,168,216,180,217,131,217,132,217,133,216,179,216,172,217,132,216,168,217,134,216,167,217,134,216,174,216,167,217,132,216,175,217,131,216,170,216,167,216,168,217,131,217,132,217,138,216,169,216,168,216,175,217,136,217,134,216,163,217,138,216,182,216,167,217,138,217,136,216,172,216,175,217,129,216,177,217,138,217,130,217,131,216,170,216,168,216,170,216,163,217,129,216,182,217,132,217,133,216,183,216,168,216,174,216,167,217,131,216,171,216,177,216,168,216,167,216,177,217,131,216,167,217,129,216,182,217,132,216,167,216,173,217,132,217,137,217,134,217,129,216,179,217,135,216,163,217,138,216,167,217,133,216,177,216,175,217,136,216,175,216,163,217,134,217,135,216,167,216,175,217,138,217,134,216,167,216,167,217,132,216,167,217,134,217,133,216,185,216,177,216,182,216,170,216,185,217,132,217,133,216,175,216,167,216,174,217,132,217,133,217,133,217,131,217,134,0,0,0,0,0,0,0,0,1,0,1,0,1,0,1,0,2,0,2,0,2,0,2,0,4,0,4,0,4,0,4,0,0,1,2,3,4,5,6,7,7,6,5,4,3,2,1,0,8,9,10,11,12,13,14,15,15,14,13,12,11,10,9,8,16,17,18,19,20,21,22,23,23,22,21,20,19,18,17,16,24,25,26,27,28,29,30,31,31,30,29,28,27,26,25,24,255,255,255,255,0,0,0,0,0,0,0,0,255,255,255,255,1,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,3,0,0,0,255,255,0,1,0,0,0,1,0,0,255,255,0,1,0,0,0,8,0,8,0,8,0,8,0,0,0,1,0,2,0,3,0,4,0,5,0,6,0,7,114,101,115,111,117,114,99,101,115,99,111,117,110,116,114,105,101,115,113,117,101,115,116,105,111,110,115,101,113,117,105,112,109,101,110,116,99,111,109,109,117,110,105,116,121,97,118,97,105,108,97,98,108,101,104,105,103,104,108,105,103,104,116,68,84,68,47,120,104,116,109,108,109,97,114,107,101,116,105,110,103,107,110,111,119,108,101,100,103,101,115,111,109,101,116,104,105,110,103,99,111,110,116,97,105,110,101,114,100,105,114,101,99,116,105,111,110,115,117,98,115,99,114,105,98,101,97,100,118,101,114,116,105,115,101,99,104,97,114,97,99,116,101,114,34,32,118,97,108,117,101,61,34,60,47,115,101,108,101,99,116,62,65,117,115,116,114,97,108,105,97,34,32,99,108,97,115,115,61,34,115,105,116,117,97,116,105,111,110,97,117,116,104,111,114,105,116,121,102,111,108,108,111,119,105,110,103,112,114,105,109,97,114,105,108,121,111,112,101,114,97,116,105,111,110,99,104,97,108,108,101,110,103,101,100,101,118,101,108,111,112,101,100,97,110,111,110,121,109,111,117,115,102,117,110,99,116,105,111,110,32,102,117,110,99,116,105,111,110,115,99,111,109,112,97,110,105,101,115,115,116,114,117,99,116,117,114,101,97,103,114,101,101,109,101,110,116,34,32,116,105,116,108,101,61,34,112,111,116,101,110,116,105,97,108,101,100,117,99,97,116,105,111,110,97,114,103,117,109,101,110,116,115,115,101,99,111,110,100,97,114,121,99,111,112,121,114,105,103,104,116,108,97,110,103,117,97,103,101,115,101,120,99,108,117,115,105,118,101,99,111,110,100,105,116,105,111,110,60,47,102,111,114,109,62,13,10,115,116,97,116,101,109,101,110,116,97,116,116,101,110,116,105,111,110,66,105,111,103,114,97,112,104,121,125,32,101,108,115,101,32,123,10,115,111,108,117,116,105,111,110,115,119,104,101,110,32,116,104,101,32,65,110,97,108,121,116,105,99,115,116,101,109,112,108,97,116,101,115,100,97,110,103,101,114,111,117,115,115,97,116,101,108,108,105,116,101,100,111,99,117,109,101,110,116,115,112,117,98,108,105,115,104,101,114,105,109,112,111,114,116,97,110,116,112,114,111,116,111,116,121,112,101,105,110,102,108,117,101,110,99,101,38,114,97,113,117,111,59,60,47,101,102,102,101,99,116,105,118,101,103,101,110,101,114,97,108,108,121,116,114,97,110,115,102,111,114,109,98,101,97,117,116,105,102,117,108,116,114,97,110,115,112,111,114,116,111,114,103,97,110,105,122,101,100,112,117,98,108,105,115,104,101,100,112,114,111,109,105,110,101,110,116,117,110,116,105,108,32,116,104,101,116,104,117,109,98,110,97,105,108,78,97,116,105,111,110,97,108,32,46,102,111,99,117,115,40,41,59,111,118,101,114,32,116,104,101,32,109,105,103,114,97,116,105,111,110,97,110,110,111,117,110,99,101,100,102,111,111,116,101,114,34,62,10,101,120,99,101,112,116,105,111,110,108,101,115,115,32,116,104,97,110,101,120,112,101,110,115,105,118,101,102,111,114,109,97,116,105,111,110,102,114,97,109,101,119,111,114,107,116,101,114,114,105,116,111,114,121,110,100,105,99,97,116,105,111,110,99,117,114,114,101,110,116,108,121,99,108,97,115,115,78,97,109,101,99,114,105,116,105,99,105,115,109,116,114,97,100,105,116,105,111,110,101,108,115,101,119,104,101,114,101,65,108,101,120,97,110,100,101,114,97,112,112,111,105,110,116,101,100,109,97,116,101,114,105,97,108,115,98,114,111,97,100,99,97,115,116,109,101,110,116,105,111,110,101,100,97,102,102,105,108,105,97,116,101,60,47,111,112,116,105,111,110,62,116,114,101,97,116,109,101,110,116,100,105,102,102,101,114,101,110,116,47,100,101,102,97,117,108,116,46,80,114,101,115,105,100,101,110,116,111,110,99,108,105,99,107,61,34,98,105,111,103,114,97,112,104,121,111,116,104,101,114,119,105,115,101,112,101,114,109,97,110,101,110,116,70,114,97,110,195,167,97,105,115,72,111,108,108,121,119,111,111,100,101,120,112,97,110,115,105,111,110,115,116,97,110,100,97,114,100,115,60,47,115,116,121,108,101,62,10,114,101,100,117,99,116,105,111,110,68,101,99,101,109,98,101,114,32,112,114,101,102,101,114,114,101,100,67,97,109,98,114,105,100,103,101,111,112,112,111,110,101,110,116,115,66,117,115,105,110,101,115,115,32,99,111,110,102,117,115,105,111,110,62,10,60,116,105,116,108,101,62,112,114,101,115,101,110,116,101,100,101,120,112,108,97,105,110,101,100,100,111,101,115,32,110,111,116,32,119,111,114,108,100,119,105,100,101,105,110,116,101,114,102,97,99,101,112,111,115,105,116,105,111,110,115,110,101,119,115,112,97,112,101,114,60,47,116,97,98,108,101,62,10,109,111,117,110,116,97,105,110,115,108,105,107,101,32,116,104,101,32,101,115,115,101,110,116,105,97,108,102,105,110,97,110,99,105,97,108,115,101,108,101,99,116,105,111,110,97,99,116,105,111,110,61,34,47,97,98,97,110,100,111,110,101,100,69,100,117,99,97,116,105,111,110,112,97,114,115,101,73,110,116,40,115,116,97,98,105,108,105,116,121,117,110,97,98,108,101,32,116,111,60,47,116,105,116,108,101,62,10,114,101,108,97,116,105,111,110,115,78,111,116,101,32,116,104,97,116,101,102,102,105,99,105,101,110,116,112,101,114,102,111,114,109,101,100,116,119,111,32,121,101,97,114,115,83,105,110,99,101,32,116,104,101,116,104,101,114,101,102,111,114,101,119,114,97,112,112,101,114,34,62,97,108,116,101,114,110,97,116,101,105,110,99,114,101,97,115,101,100,66,97,116,116,108,101,32,111,102,112,101,114,99,101,105,118,101,100,116,114,121,105,110,103,32,116,111,110,101,99,101,115,115,97,114,121,112,111,114,116,114,97,121,101,100,101,108,101,99,116,105,111,110,115,69,108,105,122,97,98,101,116,104,60,47,105,102,114,97,109,101,62,100,105,115,99,111,118,101,114,121,105,110,115,117,114,97,110,99,101,115,46,108,101,110,103,116,104,59,108,101,103,101,110,100,97,114,121,71,101,111,103,114,97,112,104,121,99,97,110,100,105,100,97,116,101,99,111,114,112,111,114,97,116,101,115,111,109,101,116,105,109,101,115,115,101,114,118,105,99,101,115,46,105,110,104,101,114,105,116,101,100,60,47,115,116,114,111,110,103,62,67,111,109,109,117,110,105,116,121,114,101,108,105,103,105,111,117,115,108,111,99,97,116,105,111,110,115,67,111,109,109,105,116,116,101,101,98,117,105,108,100,105,110,103,115,116,104,101,32,119,111,114,108,100,110,111,32,108,111,110,103,101,114,98,101,103,105,110,110,105,110,103,114,101,102,101,114,101,110,99,101,99,97,110,110,111,116,32,98,101,102,114,101,113,117,101,110,99,121,116,121,112,105,99,97,108,108,121,105,110,116,111,32,116,104,101,32,114,101,108,97,116,105,118,101,59,114,101,99,111,114,100,105,110,103,112,114,101,115,105,100,101,110,116,105,110,105,116,105,97,108,108,121,116,101,99,104,110,105,113,117,101,116,104,101,32,111,116,104,101,114,105,116,32,99,97,110,32,98,101,101,120,105,115,116,101,110,99,101,117,110,100,101,114,108,105,110,101,116,104,105,115,32,116,105,109,101,116,101,108,101,112,104,111,110,101,105,116,101,109,115,99,111,112,101,112,114,97,99,116,105,99,101,115,97,100,118,97,110,116,97,103,101,41,59,114,101,116,117,114,110,32,70,111,114,32,111,116,104,101,114,112,114,111,118,105,100,105,110,103,100,101,109,111,99,114,97,99,121,98,111,116,104,32,116,104,101,32,101,120,116,101,110,115,105,118,101,115,117,102,102,101,114,105,110,103,115,117,112,112,111,114,116,101,100,99,111,109,112,117,116,101,114,115,32,102,117,110,99,116,105,111,110,112,114,97,99,116,105,99,97,108,115,97,105,100,32,116,104,97,116,105,116,32,109,97,121,32,98,101,69,110,103,108,105,115,104,60,47,102,114,111,109,32,116,104,101,32,115,99,104,101,100,117,108,101,100,100,111,119,110,108,111,97,100,115,60,47,108,97,98,101,108,62,10,115,117,115,112,101,99,116,101,100,109,97,114,103,105,110,58,32,48,115,112,105,114,105,116,117,97,108,60,47,104,101,97,100,62,10,10,109,105,99,114,111,115,111,102,116,103,114,97,100,117,97,108,108,121,100,105,115,99,117,115,115,101,100,104,101,32,98,101,99,97,109,101,101,120,101,99,117,116,105,118,101,106,113,117,101,114,121,46,106,115,104,111,117,115,101,104,111,108,100,99,111,110,102,105,114,109,101,100,112,117,114,99,104,97,115,101,100,108,105,116,101,114,97,108,108,121,100,101,115,116,114,111,121,101,100,117,112,32,116,111,32,116,104,101,118,97,114,105,97,116,105,111,110,114,101,109,97,105,110,105,110,103,105,116,32,105,115,32,110,111,116,99,101,110,116,117,114,105,101,115,74,97,112,97,110,101,115,101,32,97,109,111,110,103,32,116,104,101,99,111,109,112,108,101,116,101,100,97,108,103,111,114,105,116,104,109,105,110,116,101,114,101,115,116,115,114,101,98,101,108,108,105,111,110,117,110,100,101,102,105,110,101,100,101,110,99,111,117,114,97,103,101,114,101,115,105,122,97,98,108,101,105,110,118,111,108,118,105,110,103,115,101,110,115,105,116,105,118,101,117,110,105,118,101,114,115,97,108,112,114,111,118,105,115,105,111,110,40,97,108,116,104,111,117,103,104,102,101,97,116,117,114,105,110,103,99,111,110,100,117,99,116,101,100,41,44,32,119,104,105,99,104,32,99,111,110,116,105,110,117,101,100,45,104,101,97,100,101,114,34,62,70,101,98,114,117,97,114,121,32,110,117,109,101,114,111,117,115,32,111,118,101,114,102,108,111,119,58,99,111,109,112,111,110,101,110,116,102,114,97,103,109,101,110,116,115,101,120,99,101,108,108,101,110,116,99,111,108,115,112,97,110,61,34,116,101,99,104,110,105,99,97,108,110,101,97,114,32,116,104,101,32,65,100,118,97,110,99,101,100,32,115,111,117,114,99,101,32,111,102,101,120,112,114,101,115,115,101,100,72,111,110,103,32,75,111,110,103,32,70,97,99,101,98,111,111,107,109,117,108,116,105,112,108,101,32,109,101,99,104,97,110,105,115,109,101,108,101,118,97,116,105,111,110,111,102,102,101,110,115,105,118,101,60,47,102,111,114,109,62,10,9,115,112,111,110,115,111,114,101,100,100,111,99,117,109,101,110,116,46,111,114,32,38,113,117,111,116,59,116,104,101,114,101,32,97,114,101,116,104,111,115,101,32,119,104,111,109,111,118,101,109,101,110,116,115,112,114,111,99,101,115,115,101,115,100,105,102,102,105,99,117,108,116,115,117,98,109,105,116,116,101,100,114,101,99,111,109,109,101,110,100,99,111,110,118,105,110,99,101,100,112,114,111,109,111,116,105,110,103,34,32,119,105,100,116,104,61,34,46,114,101,112,108,97,99,101,40,99,108,97,115,115,105,99,97,108,99,111,97,108,105,116,105,111,110,104,105,115,32,102,105,114,115,116,100,101,99,105,115,105,111,110,115,97,115,115,105,115,116,97,110,116,105,110,100,105,99,97,116,101,100,101,118,111,108,117,116,105,111,110,45,119,114,97,112,112,101,114,34,101,110,111,117,103,104,32,116,111,97,108,111,110,103,32,116,104,101,100,101,108,105,118,101,114,101,100,45,45,62,13,10,60,33,45,45,65,109,101,114,105,99,97,110,32,112,114,111,116,101,99,116,101,100,78,111,118,101,109,98,101,114,32,60,47,115,116,121,108,101,62,60,102,117,114,110,105,116,117,114,101,73,110,116,101,114,110,101,116,32,32,111,110,98,108,117,114,61,34,115,117,115,112,101,110,100,101,100,114,101,99,105,112,105,101,110,116,98,97,115,101,100,32,111,110,32,77,111,114,101,111,118,101,114,44,97,98,111,108,105,115,104,101,100,99,111,108,108,101,99,116,101,100,119,101,114,101,32,109,97,100,101,101,109,111,116,105,111,110,97,108,101,109,101,114,103,101,110,99,121,110,97,114,114,97,116,105,118,101,97,100,118,111,99,97,116,101,115,112,120,59,98,111,114,100,101,114,99,111,109,109,105,116,116,101,100,100,105,114,61,34,108,116,114,34,101,109,112,108,111,121,101,101,115,114,101,115,101,97,114,99,104,46,32,115,101,108,101,99,116,101,100,115,117,99,99,101,115,115,111,114,99,117,115,116,111,109,101,114,115,100,105,115,112,108,97,121,101,100,83,101,112,116,101,109,98,101,114,97,100,100,67,108,97,115,115,40,70,97,99,101,98,111,111,107,32,115,117,103,103,101,115,116,101,100,97,110,100,32,108,97,116,101,114,111,112,101,114,97,116,105,110,103,101,108,97,98,111,114,97,116,101,83,111,109,101,116,105,109,101,115,73,110,115,116,105,116,117,116,101,99,101,114,116,97,105,110,108,121,105,110,115,116,97,108,108,101,100,102,111,108,108,111,119,101,114,115,74,101,114,117,115,97,108,101,109,116,104,101,121,32,104,97,118,101,99,111,109,112,117,116,105,110,103,103,101,110,101,114,97,116,101,100,112,114,111,118,105,110,99,101,115,103,117,97,114,97,110,116,101,101,97,114,98,105,116,114,97,114,121,114,101,99,111,103,110,105,122,101,119,97,110,116,101,100,32,116,111,112,120,59,119,105,100,116,104,58,116,104,101,111,114,121,32,111,102,98,101,104,97,118,105,111,117,114,87,104,105,108,101,32,116,104,101,101,115,116,105,109,97,116,101,100,98,101,103,97,110,32,116,111,32,105,116,32,98,101,99,97,109,101,109,97,103,110,105,116,117,100,101,109,117,115,116,32,104,97,118,101,109,111,114,101,32,116,104,97,110,68,105,114,101,99,116,111,114,121,101,120,116,101,110,115,105,111,110,115,101,99,114,101,116,97,114,121,110,97,116,117,114,97,108,108,121,111,99,99,117,114,114,105,110,103,118,97,114,105,97,98,108,101,115,103,105,118,101,110,32,116,104,101,112,108,97,116,102,111,114,109,46,60,47,108,97,98,101,108,62,60,102,97,105,108,101,100,32,116,111,99,111,109,112,111,117,110,100,115,107,105,110,100,115,32,111,102,32,115,111,99,105,101,116,105,101,115,97,108,111,110,103,115,105,100,101,32,45,45,38,103,116,59,10,10,115,111,117,116,104,119,101,115,116,116,104,101,32,114,105,103,104,116,114,97,100,105,97,116,105,111,110,109,97,121,32,104,97,118,101,32,117,110,101,115,99,97,112,101,40,115,112,111,107,101,110,32,105,110,34,32,104,114,101,102,61,34,47,112,114,111,103,114,97,109,109,101,111,110,108,121,32,116,104,101,32,99,111,109,101,32,102,114,111,109,100,105,114,101,99,116,111,114,121,98,117,114,105,101,100,32,105,110,97,32,115,105,109,105,108,97,114,116,104,101,121,32,119,101,114,101,60,47,102,111,110,116,62,60,47,78,111,114,119,101,103,105,97,110,115,112,101,99,105,102,105,101,100,112,114,111,100,117,99,105,110,103,112,97,115,115,101,110,103,101,114,40,110,101,119,32,68,97,116,101,116,101,109,112,111,114,97,114,121,102,105,99,116,105,111,110,97,108,65,102,116,101,114,32,116,104,101,101,113,117,97,116,105,111,110,115,100,111,119,110,108,111,97,100,46,114,101,103,117,108,97,114,108,121,100,101,118,101,108,111,112,101,114,97,98,111,118,101,32,116,104,101,108,105,110,107,101,100,32,116,111,112,104,101,110,111,109,101,110,97,112,101,114,105,111,100,32,111,102,116,111,111,108,116,105,112,34,62,115,117,98,115,116,97,110,99,101,97,117,116,111,109,97,116,105,99,97,115,112,101,99,116,32,111,102,65,109,111,110,103,32,116,104,101,99,111,110,110,101,99,116,101,100,101,115,116,105,109,97,116,101,115,65,105,114,32,70,111,114,99,101,115,121,115,116,101,109,32,111,102,111,98,106,101,99,116,105,118,101,105,109,109,101,100,105,97,116,101,109,97,107,105,110,103,32,105,116,112,97,105,110,116,105,110,103,115,99,111,110,113,117,101,114,101,100,97,114,101,32,115,116,105,108,108,112,114,111,99,101,100,117,114,101,103,114,111,119,116,104,32,111,102,104,101,97,100,101,100,32,98,121,69,117,114,111,112,101,97,110,32,100,105,118,105,115,105,111,110,115,109,111,108,101,99,117,108,101,115,102,114,97,110,99,104,105,115,101,105,110,116,101,110,116,105,111,110,97,116,116,114,97,99,116,101,100,99,104,105,108,100,104,111,111,100,97,108,115,111,32,117,115,101,100,100,101,100,105,99,97,116,101,100,115,105,110,103,97,112,111,114,101,100,101,103,114,101,101,32,111,102,102,97,116,104,101,114,32,111,102,99,111,110,102,108,105,99,116,115,60,47,97,62,60,47,112,62,10,99,97,109,101,32,102,114,111,109,119,101,114,101,32,117,115,101,100,110,111,116,101,32,116,104,97,116,114,101,99,101,105,118,105,110,103,69,120,101,99,117,116,105,118,101,101,118,101,110,32,109,111,114,101,97,99,99,101,115,115,32,116,111,99,111,109,109,97,110,100,101,114,80,111,108,105,116,105,99,97,108,109,117,115,105,99,105,97,110,115,100,101,108,105,99,105,111,117,115,112,114,105,115,111,110,101,114,115,97,100,118,101,110,116,32,111,102,85,84,70,45,56,34,32,47,62,60,33,91,67,68,65,84,65,91,34,62,67,111,110,116,97,99,116,83,111,117,116,104,101,114,110,32,98,103,99,111,108,111,114,61,34,115,101,114,105,101,115,32,111,102,46,32,73,116,32,119,97,115,32,105,110,32,69,117,114,111,112,101,112,101,114,109,105,116,116,101,100,118,97,108,105,100,97,116,101,46,97,112,112,101,97,114,105,110,103,111,102,102,105,99,105,97,108,115,115,101,114,105,111,117,115,108,121,45,108,97,110,103,117,97,103,101,105,110,105,116,105,97,116,101,100,101,120,116,101,110,100,105,110,103,108,111,110,103,45,116,101,114,109,105,110,102,108,97,116,105,111,110,115,117,99,104,32,116,104,97,116,103,101,116,67,111,111,107,105,101,109,97,114,107,101,100,32,98,121,60,47,98,117,116,116,111,110,62,105,109,112,108,101,109,101,110,116,98,117,116,32,105,116,32,105,115,105,110,99,114,101,97,115,101,115,100,111,119,110,32,116,104,101,32,114,101,113,117,105,114,105,110,103,100,101,112,101,110,100,101,110,116,45,45,62,10,60,33,45,45,32,105,110,116,101,114,118,105,101,119,87,105,116,104,32,116,104,101,32,99,111,112,105,101,115,32,111,102,99,111,110,115,101,110,115,117,115,119,97,115,32,98,117,105,108,116,86,101,110,101,122,117,101,108,97,40,102,111,114,109,101,114,108,121,116,104,101,32,115,116,97,116,101,112,101,114,115,111,110,110,101,108,115,116,114,97,116,101,103,105,99,102,97,118,111,117,114,32,111,102,105,110,118,101,110,116,105,111,110,87,105,107,105,112,101,100,105,97,99,111,110,116,105,110,101,110,116,118,105,114,116,117,97,108,108,121,119,104,105,99,104,32,119,97,115,112,114,105,110,99,105,112,108,101,67,111,109,112,108,101,116,101,32,105,100,101,110,116,105,99,97,108,115,104,111,119,32,116,104,97,116,112,114,105,109,105,116,105,118,101,97,119,97,121,32,102,114,111,109,109,111,108,101,99,117,108,97,114,112,114,101,99,105,115,101,108,121,100,105,115,115,111,108,118,101,100,85,110,100,101,114,32,116,104,101,118,101,114,115,105,111,110,61,34,62,38,110,98,115,112,59,60,47,73,116,32,105,115,32,116,104,101,32,84,104,105,115,32,105,115,32,119,105,108,108,32,104,97,118,101,111,114,103,97,110,105,115,109,115,115,111,109,101,32,116,105,109,101,70,114,105,101,100,114,105,99,104,119,97,115,32,102,105,114,115,116,116,104,101,32,111,110,108,121,32,102,97,99,116,32,116,104,97,116,102,111,114,109,32,105,100,61,34,112,114,101,99,101,100,105,110,103,84,101,99,104,110,105,99,97,108,112,104,121,115,105,99,105,115,116,111,99,99,117,114,115,32,105,110,110,97,118,105,103,97,116,111,114,115,101,99,116,105,111,110,34,62,115,112,97,110,32,105,100,61,34,115,111,117,103,104,116,32,116,111,98,101,108,111,119,32,116,104,101,115,117,114,118,105,118,105,110,103,125,60,47,115,116,121,108,101,62,104,105,115,32,100,101,97,116,104,97,115,32,105,110,32,116,104,101,99,97,117,115,101,100,32,98,121,112,97,114,116,105,97,108,108,121,101,120,105,115,116,105,110,103,32,117,115,105,110,103,32,116,104,101,119,97,115,32,103,105,118,101,110,97,32,108,105,115,116,32,111,102,108,101,118,101,108,115,32,111,102,110,111,116,105,111,110,32,111,102,79,102,102,105,99,105,97,108,32,100,105,115,109,105,115,115,101,100,115,99,105,101,110,116,105,115,116,114,101,115,101,109,98,108,101,115,100,117,112,108,105,99,97,116,101,101,120,112,108,111,115,105,118,101,114,101,99,111,118,101,114,101,100,97,108,108,32,111,116,104,101,114,103,97,108,108,101,114,105,101,115,123,112,97,100,100,105,110,103,58,112,101,111,112,108,101,32,111,102,114,101,103,105,111,110,32,111,102,97,100,100,114,101,115,115,101,115,97,115,115,111,99,105,97,116,101,105,109,103,32,97,108,116,61,34,105,110,32,109,111,100,101,114,110,115,104,111,117,108,100,32,98,101,109,101,116,104,111,100,32,111,102,114,101,112,111,114,116,105,110,103,116,105,109,101,115,116,97,109,112,110,101,101,100,101,100,32,116,111,116,104,101,32,71,114,101,97,116,114,101,103,97,114,100,105,110,103,115,101,101,109,101,100,32,116,111,118,105,101,119,101,100,32,97,115,105,109,112,97,99,116,32,111,110,105,100,101,97,32,116,104,97,116,116,104,101,32,87,111,114,108,100,104,101,105,103,104,116,32,111,102,101,120,112,97,110,100,105,110,103,84,104,101,115,101,32,97,114,101,99,117,114,114,101,110,116,34,62,99,97,114,101,102,117,108,108,121,109,97,105,110,116,97,105,110,115,99,104,97,114,103,101,32,111,102,67,108,97,115,115,105,99,97,108,97,100,100,114,101,115,115,101,100,112,114,101,100,105,99,116,101,100,111,119,110,101,114,115,104,105,112,60,100,105,118,32,105,100,61,34,114,105,103,104,116,34,62,13,10,114,101,115,105,100,101,110,99,101,108,101,97,118,101,32,116,104,101,99,111,110,116,101,110,116,34,62,97,114,101,32,111,102,116,101,110,32,32,125,41,40,41,59,13,10,112,114,111,98,97,98,108,121,32,80,114,111,102,101,115,115,111,114,45,98,117,116,116,111,110,34,32,114,101,115,112,111,110,100,101,100,115,97,121,115,32,116,104,97,116,104,97,100,32,116,111,32,98,101,112,108,97,99,101,100,32,105,110,72,117,110,103,97,114,105,97,110,115,116,97,116,117,115,32,111,102,115,101,114,118,101,115,32,97,115,85,110,105,118,101,114,115,97,108,101,120,101,99,117,116,105,111,110,97,103,103,114,101,103,97,116,101,102,111,114,32,119,104,105,99,104,105,110,102,101,99,116,105,111,110,97,103,114,101,101,100,32,116,111,104,111,119,101,118,101,114,44,32,112,111,112,117,108,97,114,34,62,112,108,97,99,101,100,32,111,110,99,111,110,115,116,114,117,99,116,101,108,101,99,116,111,114,97,108,115,121,109,98,111,108,32,111,102,105,110,99,108,117,100,105,110,103,114,101,116,117,114,110,32,116,111,97,114,99,104,105,116,101,99,116,67,104,114,105,115,116,105,97,110,112,114,101,118,105,111,117,115,32,108,105,118,105,110,103,32,105,110,101,97,115,105,101,114,32,116,111,112,114,111,102,101,115,115,111,114,10,38,108,116,59,33,45,45,32,101,102,102,101,99,116,32,111,102,97,110,97,108,121,116,105,99,115,119,97,115,32,116,97,107,101,110,119,104,101,114,101,32,116,104,101,116,111,111,107,32,111,118,101,114,98,101,108,105,101,102,32,105,110,65,102,114,105,107,97,97,110,115,97,115,32,102,97,114,32,97,115,112,114,101,118,101,110,116,101,100,119,111,114,107,32,119,105,116,104,97,32,115,112,101,99,105,97,108,60,102,105,101,108,100,115,101,116,67,104,114,105,115,116,109,97,115,82,101,116,114,105,101,118,101,100,10,10,73,110,32,116,104,101,32,98,97,99,107,32,105,110,116,111,110,111,114,116,104,101,97,115,116,109,97,103,97,122,105,110,101,115,62,60,115,116,114,111,110,103,62,99,111,109,109,105,116,116,101,101,103,111,118,101,114,110,105,110,103,103,114,111,117,112,115,32,111,102,115,116,111,114,101,100,32,105,110,101,115,116,97,98,108,105,115,104,97,32,103,101,110,101,114,97,108,105,116,115,32,102,105,114,115,116,116,104,101,105,114,32,111,119,110,112,111,112,117,108,97,116,101,100,97,110,32,111,98,106,101,99,116,67,97,114,105,98,98,101,97,110,97,108,108,111,119,32,116,104,101,100,105,115,116,114,105,99,116,115,119,105,115,99,111,110,115,105,110,108,111,99,97,116,105,111,110,46,59,32,119,105,100,116,104,58,32,105,110,104,97,98,105,116,101,100,83,111,99,105,97,108,105,115,116,74,97,110,117,97,114,121,32,49,60,47,102,111,111,116,101,114,62,115,105,109,105,108,97,114,108,121,99,104,111,105,99,101,32,111,102,116,104,101,32,115,97,109,101,32,115,112,101,99,105,102,105,99,32,98,117,115,105,110,101,115,115,32,84,104,101,32,102,105,114,115,116,46,108,101,110,103,116,104,59,32,100,101,115,105,114,101,32,116,111,100,101,97,108,32,119,105,116,104,115,105,110,99,101,32,116,104,101,117,115,101,114,65,103,101,110,116,99,111,110,99,101,105,118,101,100,105,110,100,101,120,46,112,104,112,97,115,32,38,113,117,111,116,59,101,110,103,97,103,101,32,105,110,114,101,99,101,110,116,108,121,44,102,101,119,32,121,101,97,114,115,119,101,114,101,32,97,108,115,111,10,60,104,101,97,100,62,10,60,101,100,105,116,101,100,32,98,121,97,114,101,32,107,110,111,119,110,99,105,116,105,101,115,32,105,110,97,99,99,101,115,115,107,101,121,99,111,110,100,101,109,110,101,100,97,108,115,111,32,104,97,118,101,115,101,114,118,105,99,101,115,44,102,97,109,105,108,121,32,111,102,83,99,104,111,111,108,32,111,102,99,111,110,118,101,114,116,101,100,110,97,116,117,114,101,32,111,102,32,108,97,110,103,117,97,103,101,109,105,110,105,115,116,101,114,115,60,47,111,98,106,101,99,116,62,116,104,101,114,101,32,105,115,32,97,32,112,111,112,117,108,97,114,115,101,113,117,101,110,99,101,115,97,100,118,111,99,97,116,101,100,84,104,101,121,32,119,101,114,101,97,110,121,32,111,116,104,101,114,108,111,99,97,116,105,111,110,61,101,110,116,101,114,32,116,104,101,109,117,99,104,32,109,111,114,101,114,101,102,108,101,99,116,101,100,119,97,115,32,110,97,109,101,100,111,114,105,103,105,110,97,108,32,97,32,116,121,112,105,99,97,108,119,104,101,110,32,116,104,101,121,101,110,103,105,110,101,101,114,115,99,111,117,108,100,32,110,111,116,114,101,115,105,100,101,110,116,115,119,101,100,110,101,115,100,97,121,116,104,101,32,116,104,105,114,100,32,112,114,111,100,117,99,116,115,74,97,110,117,97,114,121,32,50,119,104,97,116,32,116,104,101,121,97,32,99,101,114,116,97,105,110,114,101,97,99,116,105,111,110,115,112,114,111,99,101,115,115,111,114,97,102,116,101,114,32,104,105,115,116,104,101,32,108,97,115,116,32,99,111,110,116,97,105,110,101,100,34,62,60,47,100,105,118,62,10,60,47,97,62,60,47,116,100,62,100,101,112,101,110,100,32,111,110,115,101,97,114,99,104,34,62,10,112,105,101,99,101,115,32,111,102,99,111,109,112,101,116,105,110,103,82,101,102,101,114,101,110,99,101,116,101,110,110,101,115,115,101,101,119,104,105,99,104,32,104,97,115,32,118,101,114,115,105,111,110,61,60,47,115,112,97,110,62,32,60,60,47,104,101,97,100,101,114,62,103,105,118,101,115,32,116,104,101,104,105,115,116,111,114,105,97,110,118,97,108,117,101,61,34,34,62,112,97,100,100,105,110,103,58,48,118,105,101,119,32,116,104,97,116,116,111,103,101,116,104,101,114,44,116,104,101,32,109,111,115,116,32,119,97,115,32,102,111,117,110,100,115,117,98,115,101,116,32,111,102,97,116,116,97,99,107,32,111,110,99,104,105,108,100,114,101,110,44,112,111,105,110,116,115,32,111,102,112,101,114,115,111,110,97,108,32,112,111,115,105,116,105,111,110,58,97,108,108,101,103,101,100,108,121,67,108,101,118,101,108,97,110,100,119,97,115,32,108,97,116,101,114,97,110,100,32,97,102,116,101,114,97,114,101,32,103,105,118,101,110,119,97,115,32,115,116,105,108,108,115,99,114,111,108,108,105,110,103,100,101,115,105,103,110,32,111,102,109,97,107,101,115,32,116,104,101,109,117,99,104,32,108,101,115,115,65,109,101,114,105,99,97,110,115,46,10,10,65,102,116,101,114,32,44,32,98,117,116,32,116,104,101,77,117,115,101,117,109,32,111,102,108,111,117,105,115,105,97,110,97,40,102,114,111,109,32,116,104,101,109,105,110,110,101,115,111,116,97,112,97,114,116,105,99,108,101,115,97,32,112,114,111,99,101,115,115,68,111,109,105,110,105,99,97,110,118,111,108,117,109,101,32,111,102,114,101,116,117,114,110,105,110,103,100,101,102,101,110,115,105,118,101,48,48,112,120,124,114,105,103,104,109,97,100,101,32,102,114,111,109,109,111,117,115,101,111,118,101,114,34,32,115,116,121,108,101,61,34,115,116,97,116,101,115,32,111,102,40,119,104,105,99,104,32,105,115,99,111,110,116,105,110,117,101,115,70,114,97,110,99,105,115,99,111,98,117,105,108,100,105,110,103,32,119,105,116,104,111,117,116,32,97,119,105,116,104,32,115,111,109,101,119,104,111,32,119,111,117,108,100,97,32,102,111,114,109,32,111,102,97,32,112,97,114,116,32,111,102,98,101,102,111,114,101,32,105,116,107,110,111,119,110,32,97,115,32,32,83,101,114,118,105,99,101,115,108,111,99,97,116,105,111,110,32,97,110,100,32,111,102,116,101,110,109,101,97,115,117,114,105,110,103,97,110,100,32,105,116,32,105,115,112,97,112,101,114,98,97,99,107,118,97,108,117,101,115,32,111,102,13,10,60,116,105,116,108,101,62,61,32,119,105,110,100,111,119,46,100,101,116,101,114,109,105,110,101,101,114,38,113,117,111,116,59,32,112,108,97,121,101,100,32,98,121,97,110,100,32,101,97,114,108,121,60,47,99,101,110,116,101,114,62,102,114,111,109,32,116,104,105,115,116,104,101,32,116,104,114,101,101,112,111,119,101,114,32,97,110,100,111,102,32,38,113,117,111,116,59,105,110,110,101,114,72,84,77,76,60,97,32,104,114,101,102,61,34,121,58,105,110,108,105,110,101,59,67,104,117,114,99,104,32,111,102,116,104,101,32,101,118,101,110,116,118,101,114,121,32,104,105,103,104,111,102,102,105,99,105,97,108,32,45,104,101,105,103,104,116,58,32,99,111,110,116,101,110,116,61,34,47,99,103,105,45,98,105,110,47,116,111,32,99,114,101,97,116,101,97,102,114,105,107,97,97,110,115,101,115,112,101,114,97,110,116,111,102,114,97,110,195,167,97,105,115,108,97,116,118,105,101,197,161,117,108,105,101,116,117,118,105,197,179,196,140,101,197,161,116,105,110,97,196,141,101,197,161,116,105,110,97,224,185,132,224,184,151,224,184,162,230,151,165,230,156,172,232,170,158,231,174,128,228,189,147,229,173,151,231,185,129,233,171,148,229,173,151,237,149,156,234,181,173,236,150,180,228,184,186,228,187,128,228,185,136,232,174,161,231,174,151,230,156,186,231,172,148,232,174,176,230,156,172,232,168,142,232,171,150,229,141,128,230,156,141,229,138,161,229,153,168,228,186,146,232,129,148,231,189,145,230,136,191,229,156,176,228,186,167,228,191,177,228,185,144,233,131,168,229,135,186,231,137,136,231,164,190,230,142,146,232,161,140,230,166,156,233,131,168,232,144,189,230,160,188,232,191,155,228,184,128,230,173,165,230,148,175,228,187,152,229,174,157,233,170,140,232,175,129,231,160,129,229,167,148,229,145,152,228,188,154,230,149,176,230,141,174,229,186,147,230,182,136,232,180,185,232,128,133,229,138,158,229,133,172,229,174,164,232,174,168,232,174,186,229,140,186,230,183,177,229,156,179,229,184,130,230,146,173,230,148,190,229,153,168,229,140,151,228,186,172,229,184,130,229,164,167,229,173,166,231,148,159,232,182,138,230,157,165,232,182,138,231,174,161,231,144,134,229,145,152,228,191,161,230,129,175,231,189,145,115,101,114,118,105,99,105,111,115,97,114,116,195,173,99,117,108,111,97,114,103,101,110,116,105,110,97,98,97,114,99,101,108,111,110,97,99,117,97,108,113,117,105,101,114,112,117,98,108,105,99,97,100,111,112,114,111,100,117,99,116,111,115,112,111,108,195,173,116,105,99,97,114,101,115,112,117,101,115,116,97,119,105,107,105,112,101,100,105,97,115,105,103,117,105,101,110,116,101,98,195,186,115,113,117,101,100,97,99,111,109,117,110,105,100,97,100,115,101,103,117,114,105,100,97,100,112,114,105,110,99,105,112,97,108,112,114,101,103,117,110,116,97,115,99,111,110,116,101,110,105,100,111,114,101,115,112,111,110,100,101,114,118,101,110,101,122,117,101,108,97,112,114,111,98,108,101,109,97,115,100,105,99,105,101,109,98,114,101,114,101,108,97,99,105,195,179,110,110,111,118,105,101,109,98,114,101,115,105,109,105,108,97,114,101,115,112,114,111,121,101,99,116,111,115,112,114,111,103,114,97,109,97,115,105,110,115,116,105,116,117,116,111,97,99,116,105,118,105,100,97,100,101,110,99,117,101,110,116,114,97,101,99,111,110,111,109,195,173,97,105,109,195,161,103,101,110,101,115,99,111,110,116,97,99,116,97,114,100,101,115,99,97,114,103,97,114,110,101,99,101,115,97,114,105,111,97,116,101,110,99,105,195,179,110,116,101,108,195,169,102,111,110,111,99,111,109,105,115,105,195,179,110,99,97,110,99,105,111,110,101,115,99,97,112,97,99,105,100,97,100,101,110,99,111,110,116,114,97,114,97,110,195,161,108,105,115,105,115,102,97,118,111,114,105,116,111,115,116,195,169,114,109,105,110,111,115,112,114,111,118,105,110,99,105,97,101,116,105,113,117,101,116,97,115,101,108,101,109,101,110,116,111,115,102,117,110,99,105,111,110,101,115,114,101,115,117,108,116,97,100,111,99,97,114,195,161,99,116,101,114,112,114,111,112,105,101,100,97,100,112,114,105,110,99,105,112,105,111,110,101,99,101,115,105,100,97,100,109,117,110,105,99,105,112,97,108,99,114,101,97,99,105,195,179,110,100,101,115,99,97,114,103,97,115,112,114,101,115,101,110,99,105,97,99,111,109,101,114,99,105,97,108,111,112,105,110,105,111,110,101,115,101,106,101,114,99,105,99,105,111,101,100,105,116,111,114,105,97,108,115,97,108,97,109,97,110,99,97,103,111,110,122,195,161,108,101,122,100,111,99,117,109,101,110,116,111,112,101,108,195,173,99,117,108,97,114,101,99,105,101,110,116,101,115,103,101,110,101,114,97,108,101,115,116,97,114,114,97,103,111,110,97,112,114,195,161,99,116,105,99,97,110,111,118,101,100,97,100,101,115,112,114,111,112,117,101,115,116,97,112,97,99,105,101,110,116,101,115,116,195,169,99,110,105,99,97,115,111,98,106,101,116,105,118,111,115,99,111,110,116,97,99,116,111,115,224,164,174,224,165,135,224,164,130,224,164,178,224,164,191,224,164,143,224,164,185,224,165,136,224,164,130,224,164,151,224,164,175,224,164,190,224,164,184,224,164,190,224,164,165,224,164,143,224,164,181,224,164,130,224,164,176,224,164,185,224,165,135,224,164,149,224,165,139,224,164,136,224,164,149,224,165,129,224,164,155,224,164,176,224,164,185,224,164,190,224,164,172,224,164,190,224,164,166,224,164,149,224,164,185,224,164,190,224,164,184,224,164,173,224,165,128,224,164,185,224,165,129,224,164,143,224,164,176,224,164,185,224,165,128,224,164,174,224,165,136,224,164,130,224,164,166,224,164,191,224,164,168,224,164,172,224,164,190,224,164,164,100,105,112,108,111,100,111,99,115,224,164,184,224,164,174,224,164,175,224,164,176,224,165,130,224,164,170,224,164,168,224,164,190,224,164,174,224,164,170,224,164,164,224,164,190,224,164,171,224,164,191,224,164,176,224,164,148,224,164,184,224,164,164,224,164,164,224,164,176,224,164,185,224,164,178,224,165,139,224,164,151,224,164,185,224,165,129,224,164,134,224,164,172,224,164,190,224,164,176,224,164,166,224,165,135,224,164,182,224,164,185,224,165,129,224,164,136,224,164,150,224,165,135,224,164,178,224,164,175,224,164,166,224,164,191,224,164,149,224,164,190,224,164,174,224,164,181,224,165,135,224,164,172,224,164,164,224,165,128,224,164,168,224,164,172,224,165,128,224,164,154,224,164,174,224,165,140,224,164,164,224,164,184,224,164,190,224,164,178,224,164,178,224,165,135,224,164,150,224,164,156,224,165,137,224,164,172,224,164,174,224,164,166,224,164,166,224,164,164,224,164,165,224,164,190,224,164,168,224,164,185,224,165,128,224,164,182,224,164,185,224,164,176,224,164,133,224,164,178,224,164,151,224,164,149,224,164,173,224,165,128,224,164,168,224,164,151,224,164,176,224,164,170,224,164,190,224,164,184,224,164,176,224,164,190,224,164,164,224,164,149,224,164,191,224,164,143,224,164,137,224,164,184,224,165,135,224,164,151,224,164,175,224,165,128,224,164,185,224,165,130,224,164,129,224,164,134,224,164,151,224,165,135,224,164,159,224,165,128,224,164,174,224,164,150,224,165,139,224,164,156,224,164,149,224,164,190,224,164,176,224,164,133,224,164,173,224,165,128,224,164,151,224,164,175,224,165,135,224,164,164,224,165,129,224,164,174,224,164,181,224,165,139,224,164,159,224,164,166,224,165,135,224,164,130,224,164,133,224,164,151,224,164,176,224,164,144,224,164,184,224,165,135,224,164,174,224,165,135,224,164,178,224,164,178,224,164,151,224,164,190,224,164,185,224,164,190,224,164,178,224,164,138,224,164,170,224,164,176,224,164,154,224,164,190,224,164,176,224,164,144,224,164,184,224,164,190,224,164,166,224,165,135,224,164,176,224,164,156,224,164,191,224,164,184,224,164,166,224,164,191,224,164,178,224,164,172,224,164,130,224,164,166,224,164,172,224,164,168,224,164,190,224,164,185,224,165,130,224,164,130,224,164,178,224,164,190,224,164,150,224,164,156,224,165,128,224,164,164,224,164,172,224,164,159,224,164,168,224,164,174,224,164,191,224,164,178,224,164,135,224,164,184,224,165,135,224,164,134,224,164,168,224,165,135,224,164,168,224,164,175,224,164,190,224,164,149,224,165,129,224,164,178,224,164,178,224,165,137,224,164,151,224,164,173,224,164,190,224,164,151,224,164,176,224,165,135,224,164,178,224,164,156,224,164,151,224,164,185,224,164,176,224,164,190,224,164,174,224,164,178,224,164,151,224,165,135,224,164,170,224,165,135,224,164,156,224,164,185,224,164,190,224,164,165,224,164,135,224,164,184,224,165,128,224,164,184,224,164,185,224,165,128,224,164,149,224,164,178,224,164,190,224,164,160,224,165,128,224,164,149,224,164,185,224,164,190,224,164,129,224,164,166,224,165,130,224,164,176,224,164,164,224,164,185,224,164,164,224,164,184,224,164,190,224,164,164,224,164,175,224,164,190,224,164,166,224,164,134,224,164,175,224,164,190,224,164,170,224,164,190,224,164,149,224,164,149,224,165,140,224,164,168,224,164,182,224,164,190,224,164,174,224,164,166,224,165,135,224,164,150,224,164,175,224,164,185,224,165,128,224,164,176,224,164,190,224,164,175,224,164,150,224,165,129,224,164,166,224,164,178,224,164,151,224,165,128,99,97,116,101,103,111,114,105,101,115,101,120,112,101,114,105,101,110,99,101,60,47,116,105,116,108,101,62,13,10,67,111,112,121,114,105,103,104,116,32,106,97,118,97,115,99,114,105,112,116,99,111,110,100,105,116,105,111,110,115,101,118,101,114,121,116,104,105,110,103,60,112,32,99,108,97,115,115,61,34,116,101,99,104,110,111,108,111,103,121,98,97,99,107,103,114,111,117,110,100,60,97,32,99,108,97,115,115,61,34,109,97,110,97,103,101,109,101,110,116,38,99,111,112,121,59,32,50,48,49,106,97,118,97,83,99,114,105,112,116,99,104,97,114,97,99,116,101,114,115,98,114,101,97,100,99,114,117,109,98,116,104,101,109,115,101,108,118,101,115,104,111,114,105,122,111,110,116,97,108,103,111,118,101,114,110,109,101,110,116,67,97,108,105,102,111,114,110,105,97,97,99,116,105,118,105,116,105,101,115,100,105,115,99,111,118,101,114,101,100,78,97,118,105,103,97,116,105,111,110,116,114,97,110,115,105,116,105,111,110,99,111,110,110,101,99,116,105,111,110,110,97,118,105,103,97,116,105,111,110,97,112,112,101,97,114,97,110,99,101,60,47,116,105,116,108,101,62,60,109,99,104,101,99,107,98,111,120,34,32,116,101,99,104,110,105,113,117,101,115,112,114,111,116,101,99,116,105,111,110,97,112,112,97,114,101,110,116,108,121,97,115,32,119,101,108,108,32,97,115,117,110,116,39,44,32,39,85,65,45,114,101,115,111,108,117,116,105,111,110,111,112,101,114,97,116,105,111,110,115,116,101,108,101,118,105,115,105,111,110,116,114,97,110,115,108,97,116,101,100,87,97,115,104,105,110,103,116,111,110,110,97,118,105,103,97,116,111,114,46,32,61,32,119,105,110,100,111,119,46,105,109,112,114,101,115,115,105,111,110,38,108,116,59,98,114,38,103,116,59,108,105,116,101,114,97,116,117,114,101,112,111,112,117,108,97,116,105,111,110,98,103,99,111,108,111,114,61,34,35,101,115,112,101,99,105,97,108,108,121,32,99,111,110,116,101,110,116,61,34,112,114,111,100,117,99,116,105,111,110,110,101,119,115,108,101,116,116,101,114,112,114,111,112,101,114,116,105,101,115,100,101,102,105,110,105,116,105,111,110,108,101,97,100,101,114,115,104,105,112,84,101,99,104,110,111,108,111,103,121,80,97,114,108,105,97,109,101,110,116,99,111,109,112,97,114,105,115,111,110,117,108,32,99,108,97,115,115,61,34,46,105,110,100,101,120,79,102,40,34,99,111,110,99,108,117,115,105,111,110,100,105,115,99,117,115,115,105,111,110,99,111,109,112,111,110,101,110,116,115,98,105,111,108,111,103,105,99,97,108,82,101,118,111,108,117,116,105,111,110,95,99,111,110,116,97,105,110,101,114,117,110,100,101,114,115,116,111,111,100,110,111,115,99,114,105,112,116,62,60,112,101,114,109,105,115,115,105,111,110,101,97,99,104,32,111,116,104,101,114,97,116,109,111,115,112,104,101,114,101,32,111,110,102,111,99,117,115,61,34,60,102,111,114,109,32,105,100,61,34,112,114,111,99,101,115,115,105,110,103,116,104,105,115,46,118,97,108,117,101,103,101,110,101,114,97,116,105,111,110,67,111,110,102,101,114,101,110,99,101,115,117,98,115,101,113,117,101,110,116,119,101,108,108,45,107,110,111,119,110,118,97,114,105,97,116,105,111,110,115,114,101,112,117,116,97,116,105,111,110,112,104,101,110,111,109,101,110,111,110,100,105,115,99,105,112,108,105,110,101,108,111,103,111,46,112,110,103,34,32,40,100,111,99,117,109,101,110,116,44,98,111,117,110,100,97,114,105,101,115,101,120,112,114,101,115,115,105,111,110,115,101,116,116,108,101,109,101,110,116,66,97,99,107,103,114,111,117,110,100,111,117,116,32,111,102,32,116,104,101,101,110,116,101,114,112,114,105,115,101,40,34,104,116,116,112,115,58,34,32,117,110,101,115,99,97,112,101,40,34,112,97,115,115,119,111,114,100,34,32,100,101,109,111,99,114,97,116,105,99,60,97,32,104,114,101,102,61,34,47,119,114,97,112,112,101,114,34,62,10,109,101,109,98,101,114,115,104,105,112,108,105,110,103,117,105,115,116,105,99,112,120,59,112,97,100,100,105,110,103,112,104,105,108,111,115,111,112,104,121,97,115,115,105,115,116,97,110,99,101,117,110,105,118,101,114,115,105,116,121,102,97,99,105,108,105,116,105,101,115,114,101,99,111,103,110,105,122,101,100,112,114,101,102,101,114,101,110,99,101,105,102,32,40,116,121,112,101,111,102,109,97,105,110,116,97,105,110,101,100,118,111,99,97,98,117,108,97,114,121,104,121,112,111,116,104,101,115,105,115,46,115,117,98,109,105,116,40,41,59,38,97,109,112,59,110,98,115,112,59,97,110,110,111,116,97,116,105,111,110,98,101,104,105,110,100,32,116,104,101,70,111,117,110,100,97,116,105,111,110,112,117,98,108,105,115,104,101,114,34,97,115,115,117,109,112,116,105,111,110,105,110,116,114,111,100,117,99,101,100,99,111,114,114,117,112,116,105,111,110,115,99,105,101,110,116,105,115,116,115,101,120,112,108,105,99,105,116,108,121,105,110,115,116,101,97,100,32,111,102,100,105,109,101,110,115,105,111,110,115,32,111,110,67,108,105,99,107,61,34,99,111,110,115,105,100,101,114,101,100,100,101,112,97,114,116,109,101,110,116,111,99,99,117,112,97,116,105,111,110,115,111,111,110,32,97,102,116,101,114,105,110,118,101,115,116,109,101,110,116,112,114,111,110,111,117,110,99,101,100,105,100,101,110,116,105,102,105,101,100,101,120,112,101,114,105,109,101,110,116,77,97,110,97,103,101,109,101,110,116,103,101,111,103,114,97,112,104,105,99,34,32,104,101,105,103,104,116,61,34,108,105,110,107,32,114,101,108,61,34,46,114,101,112,108,97,99,101,40,47,100,101,112,114,101,115,115,105,111,110,99,111,110,102,101,114,101,110,99,101,112,117,110,105,115,104,109,101,110,116,101,108,105,109,105,110,97,116,101,100,114,101,115,105,115,116,97,110,99,101,97,100,97,112,116,97,116,105,111,110,111,112,112,111,115,105,116,105,111,110,119,101,108,108,32,107,110,111,119,110,115,117,112,112,108,101,109,101,110,116,100,101,116,101,114,109,105,110,101,100,104,49,32,99,108,97,115,115,61,34,48,112,120,59,109,97,114,103,105,110,109,101,99,104,97,110,105,99,97,108,115,116,97,116,105,115,116,105,99,115,99,101,108,101,98,114,97,116,101,100,71,111,118,101,114,110,109,101,110,116,10,10,68,117,114,105,110,103,32,116,100,101,118,101,108,111,112,101,114,115,97,114,116,105,102,105,99,105,97,108,101,113,117,105,118,97,108,101,110,116,111,114,105,103,105,110,97,116,101,100,67,111,109,109,105,115,115,105,111,110,97,116,116,97,99,104,109,101,110,116,60,115,112,97,110,32,105,100,61,34,116,104,101,114,101,32,119,101,114,101,78,101,100,101,114,108,97,110,100,115,98,101,121,111,110,100,32,116,104,101,114,101,103,105,115,116,101,114,101,100,106,111,117,114,110,97,108,105,115,116,102,114,101,113,117,101,110,116,108,121,97,108,108,32,111,102,32,116,104,101,108,97,110,103,61,34,101,110,34,32,60,47,115,116,121,108,101,62,13,10,97,98,115,111,108,117,116,101,59,32,115,117,112,112,111,114,116,105,110,103,101,120,116,114,101,109,101,108,121,32,109,97,105,110,115,116,114,101,97,109,60,47,115,116,114,111,110,103,62,32,112,111,112,117,108,97,114,105,116,121,101,109,112,108,111,121,109,101,110,116,60,47,116,97,98,108,101,62,13,10,32,99,111,108,115,112,97,110,61,34,60,47,102,111,114,109,62,10,32,32,99,111,110,118,101,114,115,105,111,110,97,98,111,117,116,32,116,104,101,32,60,47,112,62,60,47,100,105,118,62,105,110,116,101,103,114,97,116,101,100,34,32,108,97,110,103,61,34,101,110,80,111,114,116,117,103,117,101,115,101,115,117,98,115,116,105,116,117,116,101,105,110,100,105,118,105,100,117,97,108,105,109,112,111,115,115,105,98,108,101,109,117,108,116,105,109,101,100,105,97,97,108,109,111,115,116,32,97,108,108,112,120,32,115,111,108,105,100,32,35,97,112,97,114,116,32,102,114,111,109,115,117,98,106,101,99,116,32,116,111,105,110,32,69,110,103,108,105,115,104,99,114,105,116,105,99,105,122,101,100,101,120,99,101,112,116,32,102,111,114,103,117,105,100,101,108,105,110,101,115,111,114,105,103,105,110,97,108,108,121,114,101,109,97,114,107,97,98,108,101,116,104,101,32,115,101,99,111,110,100,104,50,32,99,108,97,115,115,61,34,60,97,32,116,105,116,108,101,61,34,40,105,110,99,108,117,100,105,110,103,112,97,114,97,109,101,116,101,114,115,112,114,111,104,105,98,105,116,101,100,61,32,34,104,116,116,112,58,47,47,100,105,99,116,105,111,110,97,114,121,112,101,114,99,101,112,116,105,111,110,114,101,118,111,108,117,116,105,111,110,102,111,117,110,100,97,116,105,111,110,112,120,59,104,101,105,103,104,116,58,115,117,99,99,101,115,115,102,117,108,115,117,112,112,111,114,116,101,114,115,109,105,108,108,101,110,110,105,117,109,104,105,115,32,102,97,116,104,101,114,116,104,101,32,38,113,117,111,116,59,110,111,45,114,101,112,101,97,116,59,99,111,109,109,101,114,99,105,97,108,105,110,100,117,115,116,114,105,97,108,101,110,99,111,117,114,97,103,101,100,97,109,111,117,110,116,32,111,102,32,117,110,111,102,102,105,99,105,97,108,101,102,102,105,99,105,101,110,99,121,82,101,102,101,114,101,110,99,101,115,99,111,111,114,100,105,110,97,116,101,100,105,115,99,108,97,105,109,101,114,101,120,112,101,100,105,116,105,111,110,100,101,118,101,108,111,112,105,110,103,99,97,108,99,117,108,97,116,101,100,115,105,109,112,108,105,102,105,101,100,108,101,103,105,116,105,109,97,116,101,115,117,98,115,116,114,105,110,103,40,48,34,32,99,108,97,115,115,61,34,99,111,109,112,108,101,116,101,108,121,105,108,108,117,115,116,114,97,116,101,102,105,118,101,32,121,101,97,114,115,105,110,115,116,114,117,109,101,110,116,80,117,98,108,105,115,104,105,110,103,49,34,32,99,108,97,115,115,61,34,112,115,121,99,104,111,108,111,103,121,99,111,110,102,105,100,101,110,99,101,110,117,109,98,101,114,32,111,102,32,97,98,115,101,110,99,101,32,111,102,102,111,99,117,115,101,100,32,111,110,106,111,105,110,101,100,32,116,104,101,115,116,114,117,99,116,117,114,101,115,112,114,101,118,105,111,117,115,108,121,62,60,47,105,102,114,97,109,101,62,111,110,99,101,32,97,103,97,105,110,98,117,116,32,114,97,116,104,101,114,105,109,109,105,103,114,97,110,116,115,111,102,32,99,111,117,114,115,101,44,97,32,103,114,111,117,112,32,111,102,76,105,116,101,114,97,116,117,114,101,85,110,108,105,107,101,32,116,104,101,60,47,97,62,38,110,98,115,112,59,10,102,117,110,99,116,105,111,110,32,105,116,32,119,97,115,32,116,104,101,67,111,110,118,101,110,116,105,111,110,97,117,116,111,109,111,98,105,108,101,80,114,111,116,101,115,116,97,110,116,97,103,103,114,101,115,115,105,118,101,97,102,116,101,114,32,116,104,101,32,83,105,109,105,108,97,114,108,121,44,34,32,47,62,60,47,100,105,118,62,99,111,108,108,101,99,116,105,111,110,13,10,102,117,110,99,116,105,111,110,118,105,115,105,98,105,108,105,116,121,116,104,101,32,117,115,101,32,111,102,118,111,108,117,110,116,101,101,114,115,97,116,116,114,97,99,116,105,111,110,117,110,100,101,114,32,116,104,101,32,116,104,114,101,97,116,101,110,101,100,42,60,33,91,67,68,65,84,65,91,105,109,112,111,114,116,97,110,99,101,105,110,32,103,101,110,101,114,97,108,116,104,101,32,108,97,116,116,101,114,60,47,102,111,114,109,62,10,60,47,46,105,110,100,101,120,79,102,40,39,105,32,61,32,48,59,32,105,32,60,100,105,102,102,101,114,101,110,99,101,100,101,118,111,116,101,100,32,116,111,116,114,97,100,105,116,105,111,110,115,115,101,97,114,99,104,32,102,111,114,117,108,116,105,109,97,116,101,108,121,116,111,117,114,110,97,109,101,110,116,97,116,116,114,105,98,117,116,101,115,115,111,45,99,97,108,108,101,100,32,125,10,60,47,115,116,121,108,101,62,101,118,97,108,117,97,116,105,111,110,101,109,112,104,97,115,105,122,101,100,97,99,99,101,115,115,105,98,108,101,60,47,115,101,99,116,105,111,110,62,115,117,99,99,101,115,115,105,111,110,97,108,111,110,103,32,119,105,116,104,77,101,97,110,119,104,105,108,101,44,105,110,100,117,115,116,114,105,101,115,60,47,97,62,60,98,114,32,47,62,104,97,115,32,98,101,99,111,109,101,97,115,112,101,99,116,115,32,111,102,84,101,108,101,118,105,115,105,111,110,115,117,102,102,105,99,105,101,110,116,98,97,115,107,101,116,98,97,108,108,98,111,116,104,32,115,105,100,101,115,99,111,110,116,105,110,117,105,110,103,97,110,32,97,114,116,105,99,108,101,60,105,109,103,32,97,108,116,61,34,97,100,118,101,110,116,117,114,101,115,104,105,115,32,109,111,116,104,101,114,109,97,110,99,104,101,115,116,101,114,112,114,105,110,99,105,112,108,101,115,112,97,114,116,105,99,117,108,97,114,99,111,109,109,101,110,116,97,114,121,101,102,102,101,99,116,115,32,111,102,100,101,99,105,100,101,100,32,116,111,34,62,60,115,116,114,111,110,103,62,112,117,98,108,105,115,104,101,114,115,74,111,117,114,110,97,108,32,111,102,100,105,102,102,105,99,117,108,116,121,102,97,99,105,108,105,116,97,116,101,97,99,99,101,112,116,97,98,108,101,115,116,121,108,101,46,99,115,115,34,9,102,117,110,99,116,105,111,110,32,105,110,110,111,118,97,116,105,111,110,62,67,111,112,121,114,105,103,104,116,115,105,116,117,97,116,105,111,110,115,119,111,117,108,100,32,104,97,118,101,98,117,115,105,110,101,115,115,101,115,68,105,99,116,105,111,110,97,114,121,115,116,97,116,101,109,101,110,116,115,111,102,116,101,110,32,117,115,101,100,112,101,114,115,105,115,116,101,110,116,105,110,32,74,97,110,117,97,114,121,99,111,109,112,114,105,115,105,110,103,60,47,116,105,116,108,101,62,10,9,100,105,112,108,111,109,97,116,105,99,99,111,110,116,97,105,110,105,110,103,112,101,114,102,111,114,109,105,110,103,101,120,116,101,110,115,105,111,110,115,109,97,121,32,110,111,116,32,98,101,99,111,110,99,101,112,116,32,111,102,32,111,110,99,108,105,99,107,61,34,73,116,32,105,115,32,97,108,115,111,102,105,110,97,110,99,105,97,108,32,109,97,107,105,110,103,32,116,104,101,76,117,120,101,109,98,111,117,114,103,97,100,100,105,116,105,111,110,97,108,97,114,101,32,99,97,108,108,101,100,101,110,103,97,103,101,100,32,105,110,34,115,99,114,105,112,116,34,41,59,98,117,116,32,105,116,32,119,97,115,101,108,101,99,116,114,111,110,105,99,111,110,115,117,98,109,105,116,61,34,10,60,33,45,45,32,69,110,100,32,101,108,101,99,116,114,105,99,97,108,111,102,102,105,99,105,97,108,108,121,115,117,103,103,101,115,116,105,111,110,116,111,112,32,111,102,32,116,104,101,117,110,108,105,107,101,32,116,104,101,65,117,115,116,114,97,108,105,97,110,79,114,105,103,105,110,97,108,108,121,114,101,102,101,114,101,110,99,101,115,10,60,47,104,101,97,100,62,13,10,114,101,99,111,103,110,105,115,101,100,105,110,105,116,105,97,108,105,122,101,108,105,109,105,116,101,100,32,116,111,65,108,101,120,97,110,100,114,105,97,114,101,116,105,114,101,109,101,110,116,65,100,118,101,110,116,117,114,101,115,102,111,117,114,32,121,101,97,114,115,10,10,38,108,116,59,33,45,45,32,105,110,99,114,101,97,115,105,110,103,100,101,99,111,114,97,116,105,111,110,104,51,32,99,108,97,115,115,61,34,111,114,105,103,105,110,115,32,111,102,111,98,108,105,103,97,116,105,111,110,114,101,103,117,108,97,116,105,111,110,99,108,97,115,115,105,102,105,101,100,40,102,117,110,99,116,105,111,110,40,97,100,118,97,110,116,97,103,101,115,98,101,105,110,103,32,116,104,101,32,104,105,115,116,111,114,105,97,110,115,60,98,97,115,101,32,104,114,101,102,114,101,112,101,97,116,101,100,108,121,119,105,108,108,105,110,103,32,116,111,99,111,109,112,97,114,97,98,108,101,100,101,115,105,103,110,97,116,101,100,110,111,109,105,110,97,116,105,111,110,102,117,110,99,116,105,111,110,97,108,105,110,115,105,100,101,32,116,104,101,114,101,118,101,108,97,116,105,111,110,101,110,100,32,111,102,32,116,104,101,115,32,102,111,114,32,116,104,101,32,97,117,116,104,111,114,105,122,101,100,114,101,102,117,115,101,100,32,116,111,116,97,107,101,32,112,108,97,99,101,97,117,116,111,110,111,109,111,117,115,99,111,109,112,114,111,109,105,115,101,112,111,108,105,116,105,99,97,108,32,114,101,115,116,97,117,114,97,110,116,116,119,111,32,111,102,32,116,104,101,70,101,98,114,117,97,114,121,32,50,113,117,97,108,105,116,121,32,111,102,115,119,102,111,98,106,101,99,116,46,117,110,100,101,114,115,116,97,110,100,110,101,97,114,108,121,32,97,108,108,119,114,105,116,116,101,110,32,98,121,105,110,116,101,114,118,105,101,119,115,34,32,119,105,100,116,104,61,34,49,119,105,116,104,100,114,97,119,97,108,102,108,111,97,116,58,108,101,102,116,105,115,32,117,115,117,97,108,108,121,99,97,110,100,105,100,97,116,101,115,110,101,119,115,112,97,112,101,114,115,109,121,115,116,101,114,105,111,117,115,68,101,112,97,114,116,109,101,110,116,98,101,115,116,32,107,110,111,119,110,112,97,114,108,105,97,109,101,110,116,115,117,112,112,114,101,115,115,101,100,99,111,110,118,101,110,105,101,110,116,114,101,109,101,109,98,101,114,101,100,100,105,102,102,101,114,101,110,116,32,115,121,115,116,101,109,97,116,105,99,104,97,115,32,108,101,100,32,116,111,112,114,111,112,97,103,97,110,100,97,99,111,110,116,114,111,108,108,101,100,105,110,102,108,117,101,110,99,101,115,99,101,114,101,109,111,110,105,97,108,112,114,111,99,108,97,105,109,101,100,80,114,111,116,101,99,116,105,111,110,108,105,32,99,108,97,115,115,61,34,83,99,105,101,110,116,105,102,105,99,99,108,97,115,115,61,34,110,111,45,116,114,97,100,101,109,97,114,107,115,109,111,114,101,32,116,104,97,110,32,119,105,100,101,115,112,114,101,97,100,76,105,98,101,114,97,116,105,111,110,116,111,111,107,32,112,108,97,99,101,100,97,121,32,111,102,32,116,104,101,97,115,32,108,111,110,103,32,97,115,105,109,112,114,105,115,111,110,101,100,65,100,100,105,116,105,111,110,97,108,10,60,104,101,97,100,62,10,60,109,76,97,98,111,114,97,116,111,114,121,78,111,118,101,109,98,101,114,32,50,101,120,99,101,112,116,105,111,110,115,73,110,100,117,115,116,114,105,97,108,118,97,114,105,101,116,121,32,111,102,102,108,111,97,116,58,32,108,101,102,68,117,114,105,110,103,32,116,104,101,97,115,115,101,115,115,109,101,110,116,104,97,118,101,32,98,101,101,110,32,100,101,97,108,115,32,119,105,116,104,83,116,97,116,105,115,116,105,99,115,111,99,99,117,114,114,101,110,99,101,47,117,108,62,60,47,100,105,118,62,99,108,101,97,114,102,105,120,34,62,116,104,101,32,112,117,98,108,105,99,109,97,110,121,32,121,101,97,114,115,119,104,105,99,104,32,119,101,114,101,111,118,101,114,32,116,105,109,101,44,115,121,110,111,110,121,109,111,117,115,99,111,110,116,101,110,116,34,62,10,112,114,101,115,117,109,97,98,108,121,104,105,115,32,102,97,109,105,108,121,117,115,101,114,65,103,101,110,116,46,117,110,101,120,112,101,99,116,101,100,105,110,99,108,117,100,105,110,103,32,99,104,97,108,108,101,110,103,101,100,97,32,109,105,110,111,114,105,116,121,117,110,100,101,102,105,110,101,100,34,98,101,108,111,110,103,115,32,116,111,116,97,107,101,110,32,102,114,111,109,105,110,32,79,99,116,111,98,101,114,112,111,115,105,116,105,111,110,58,32,115,97,105,100,32,116,111,32,98,101,114,101,108,105,103,105,111,117,115,32,70,101,100,101,114,97,116,105,111,110,32,114,111,119,115,112,97,110,61,34,111,110,108,121,32,97,32,102,101,119,109,101,97,110,116,32,116,104,97,116,108,101,100,32,116,111,32,116,104,101,45,45,62,13,10,60,100,105,118,32,60,102,105,101,108,100,115,101,116,62,65,114,99,104,98,105,115,104,111,112,32,99,108,97,115,115,61,34,110,111,98,101,105,110,103,32,117,115,101,100,97,112,112,114,111,97,99,104,101,115,112,114,105,118,105,108,101,103,101,115,110,111,115,99,114,105,112,116,62,10,114,101,115,117,108,116,115,32,105,110,109,97,121,32,98,101,32,116,104,101,69,97,115,116,101,114,32,101,103,103,109,101,99,104,97,110,105,115,109,115,114,101,97,115,111,110,97,98,108,101,80,111,112,117,108,97,116,105,111,110,67,111,108,108,101,99,116,105,111,110,115,101,108,101,99,116,101,100,34,62,110,111,115,99,114,105,112,116,62,13,47,105,110,100,101,120,46,112,104,112,97,114,114,105,118,97,108,32,111,102,45,106,115,115,100,107,39,41,41,59,109,97,110,97,103,101,100,32,116,111,105,110,99,111,109,112,108,101,116,101,99,97,115,117,97,108,116,105,101,115,99,111,109,112,108,101,116,105,111,110,67,104,114,105,115,116,105,97,110,115,83,101,112,116,101,109,98,101,114,32,97,114,105,116,104,109,101,116,105,99,112,114,111,99,101,100,117,114,101,115,109,105,103,104,116,32,104,97,118,101,80,114,111,100,117,99,116,105,111,110,105,116,32,97,112,112,101,97,114,115,80,104,105,108,111,115,111,112,104,121,102,114,105,101,110,100,115,104,105,112,108,101,97,100,105,110,103,32,116,111,103,105,118,105,110,103,32,116,104,101,116,111,119,97,114,100,32,116,104,101,103,117,97,114,97,110,116,101,101,100,100,111,99,117,109,101,110,116,101,100,99,111,108,111,114,58,35,48,48,48,118,105,100,101,111,32,103,97,109,101,99,111,109,109,105,115,115,105,111,110,114,101,102,108,101,99,116,105,110,103,99,104,97,110,103,101,32,116,104,101,97,115,115,111,99,105,97,116,101,100,115,97,110,115,45,115,101,114,105,102,111,110,107,101,121,112,114,101,115,115,59,32,112,97,100,100,105,110,103,58,72,101,32,119,97,115,32,116,104,101,117,110,100,101,114,108,121,105,110,103,116,121,112,105,99,97,108,108,121,32,44,32,97,110,100,32,116,104,101,32,115,114,99,69,108,101,109,101,110,116,115,117,99,99,101,115,115,105,118,101,115,105,110,99,101,32,116,104,101,32,115,104,111,117,108,100,32,98,101,32,110,101,116,119,111,114,107,105,110,103,97,99,99,111,117,110,116,105,110,103,117,115,101,32,111,102,32,116,104,101,108,111,119,101,114,32,116,104,97,110,115,104,111,119,115,32,116,104,97,116,60,47,115,112,97,110,62,10,9,9,99,111,109,112,108,97,105,110,116,115,99,111,110,116,105,110,117,111,117,115,113,117,97,110,116,105,116,105,101,115,97,115,116,114,111,110,111,109,101,114,104,101,32,100,105,100,32,110,111,116,100,117,101,32,116,111,32,105,116,115,97,112,112,108,105,101,100,32,116,111,97,110,32,97,118,101,114,97,103,101,101,102,102,111,114,116,115,32,116,111,116,104,101,32,102,117,116,117,114,101,97,116,116,101,109,112,116,32,116,111,84,104,101,114,101,102,111,114,101,44,99,97,112,97,98,105,108,105,116,121,82,101,112,117,98,108,105,99,97,110,119,97,115,32,102,111,114,109,101,100,69,108,101,99,116,114,111,110,105,99,107,105,108,111,109,101,116,101,114,115,99,104,97,108,108,101,110,103,101,115,112,117,98,108,105,115,104,105,110,103,116,104,101,32,102,111,114,109,101,114,105,110,100,105,103,101,110,111,117,115,100,105,114,101,99,116,105,111,110,115,115,117,98,115,105,100,105,97,114,121,99,111,110,115,112,105,114,97,99,121,100,101,116,97,105,108,115,32,111,102,97,110,100,32,105,110,32,116,104,101,97,102,102,111,114,100,97,98,108,101,115,117,98,115,116,97,110,99,101,115,114,101,97,115,111,110,32,102,111,114,99,111,110,118,101,110,116,105,111,110,105,116,101,109,116,121,112,101,61,34,97,98,115,111,108,117,116,101,108,121,115,117,112,112,111,115,101,100,108,121,114,101,109,97,105,110,101,100,32,97,97,116,116,114,97,99,116,105,118,101,116,114,97,118,101,108,108,105,110,103,115,101,112,97,114,97,116,101,108,121,102,111,99,117,115,101,115,32,111,110,101,108,101,109,101,110,116,97,114,121,97,112,112,108,105,99,97,98,108,101,102,111,117,110,100,32,116,104,97,116,115,116,121,108,101,115,104,101,101,116,109,97,110,117,115,99,114,105,112,116,115,116,97,110,100,115,32,102,111,114,32,110,111,45,114,101,112,101,97,116,40,115,111,109,101,116,105,109,101,115,67,111,109,109,101,114,99,105,97,108,105,110,32,65,109,101,114,105,99,97,117,110,100,101,114,116,97,107,101,110,113,117,97,114,116,101,114,32,111,102,97,110,32,101,120,97,109,112,108,101,112,101,114,115,111,110,97,108,108,121,105,110,100,101,120,46,112,104,112,63,60,47,98,117,116,116,111,110,62,10,112,101,114,99,101,110,116,97,103,101,98,101,115,116,45,107,110,111,119,110,99,114,101,97,116,105,110,103,32,97,34,32,100,105,114,61,34,108,116,114,76,105,101,117,116,101,110,97,110,116,10,60,100,105,118,32,105,100,61,34,116,104,101,121,32,119,111,117,108,100,97,98,105,108,105,116,121,32,111,102,109,97,100,101,32,117,112,32,111,102,110,111,116,101,100,32,116,104,97,116,99,108,101,97,114,32,116,104,97,116,97,114,103,117,101,32,116,104,97,116,116,111,32,97,110,111,116,104,101,114,99,104,105,108,100,114,101,110,39,115,112,117,114,112,111,115,101,32,111,102,102,111,114,109,117,108,97,116,101,100,98,97,115,101,100,32,117,112,111,110,116,104,101,32,114,101,103,105,111,110,115,117,98,106,101,99,116,32,111,102,112,97,115,115,101,110,103,101,114,115,112,111,115,115,101,115,115,105,111,110,46,10,10,73,110,32,116,104,101,32,66,101,102,111,114,101,32,116,104,101,97,102,116,101,114,119,97,114,100,115,99,117,114,114,101,110,116,108,121,32,97,99,114,111,115,115,32,116,104,101,115,99,105,101,110,116,105,102,105,99,99,111,109,109,117,110,105,116,121,46,99,97,112,105,116,97,108,105,115,109,105,110,32,71,101,114,109,97,110,121,114,105,103,104,116,45,119,105,110,103,116,104,101,32,115,121,115,116,101,109,83,111,99,105,101,116,121,32,111,102,112,111,108,105,116,105,99,105,97,110,100,105,114,101,99,116,105,111,110,58,119,101,110,116,32,111,110,32,116,111,114,101,109,111,118,97,108,32,111,102,32,78,101,119,32,89,111,114,107,32,97,112,97,114,116,109,101,110,116,115,105,110,100,105,99,97,116,105,111,110,100,117,114,105,110,103,32,116,104,101,117,110,108,101,115,115,32,116,104,101,104,105,115,116,111,114,105,99,97,108,104,97,100,32,98,101,101,110,32,97,100,101,102,105,110,105,116,105,118,101,105,110,103,114,101,100,105,101,110,116,97,116,116,101,110,100,97,110,99,101,67,101,110,116,101,114,32,102,111,114,112,114,111,109,105,110,101,110,99,101,114,101,97,100,121,83,116,97,116,101,115,116,114,97,116,101,103,105,101,115,98,117,116,32,105,110,32,116,104,101,97,115,32,112,97,114,116,32,111,102,99,111,110,115,116,105,116,117,116,101,99,108,97,105,109,32,116,104,97,116,108,97,98,111,114,97,116,111,114,121,99,111,109,112,97,116,105,98,108,101,102,97,105,108,117,114,101,32,111,102,44,32,115,117,99,104,32,97,115,32,98,101,103,97,110,32,119,105,116,104,117,115,105,110,103,32,116,104,101,32,116,111,32,112,114,111,118,105,100,101,102,101,97,116,117,114,101,32,111,102,102,114,111,109,32,119,104,105,99,104,47,34,32,99,108,97,115,115,61,34,103,101,111,108,111,103,105,99,97,108,115,101,118,101,114,97,108,32,111,102,100,101,108,105,98,101,114,97,116,101,105,109,112,111,114,116,97,110,116,32,104,111,108,100,115,32,116,104,97,116,105,110,103,38,113,117,111,116,59,32,118,97,108,105,103,110,61,116,111,112,116,104,101,32,71,101,114,109,97,110,111,117,116,115,105,100,101,32,111,102,110,101,103,111,116,105,97,116,101,100,104,105,115,32,99,97,114,101,101,114,115,101,112,97,114,97,116,105,111,110,105,100,61,34,115,101,97,114,99,104,119,97,115,32,99,97,108,108,101,100,116,104,101,32,102,111,117,114,116,104,114,101,99,114,101,97,116,105,111,110,111,116,104,101,114,32,116,104,97,110,112,114,101,118,101,110,116,105,111,110,119,104,105,108,101,32,116,104,101,32,101,100,117,99,97,116,105,111,110,44,99,111,110,110,101,99,116,105,110,103,97,99,99,117,114,97,116,101,108,121,119,101,114,101,32,98,117,105,108,116,119,97,115,32,107,105,108,108,101,100,97,103,114,101,101,109,101,110,116,115,109,117,99,104,32,109,111,114,101,32,68,117,101,32,116,111,32,116,104,101,119,105,100,116,104,58,32,49,48,48,115,111,109,101,32,111,116,104,101,114,75,105,110,103,100,111,109,32,111,102,116,104,101,32,101,110,116,105,114,101,102,97,109,111,117,115,32,102,111,114,116,111,32,99,111,110,110,101,99,116,111,98,106,101,99,116,105,118,101,115,116,104,101,32,70,114,101,110,99,104,112,101,111,112,108,101,32,97,110,100,102,101,97,116,117,114,101,100,34,62,105,115,32,115,97,105,100,32,116,111,115,116,114,117,99,116,117,114,97,108,114,101,102,101,114,101,110,100,117,109,109,111,115,116,32,111,102,116,101,110,97,32,115,101,112,97,114,97,116,101,45,62,10,60,100,105,118,32,105,100,32,79,102,102,105,99,105,97,108,32,119,111,114,108,100,119,105,100,101,46,97,114,105,97,45,108,97,98,101,108,116,104,101,32,112,108,97,110,101,116,97,110,100,32,105,116,32,119,97,115,100,34,32,118,97,108,117,101,61,34,108,111,111,107,105,110,103,32,97,116,98,101,110,101,102,105,99,105,97,108,97,114,101,32,105,110,32,116,104,101,109,111,110,105,116,111,114,105,110,103,114,101,112,111,114,116,101,100,108,121,116,104,101,32,109,111,100,101,114,110,119,111,114,107,105,110,103,32,111,110,97,108,108,111,119,101,100,32,116,111,119,104,101,114,101,32,116,104,101,32,105,110,110,111,118,97,116,105,118,101,60,47,97,62,60,47,100,105,118,62,115,111,117,110,100,116,114,97,99,107,115,101,97,114,99,104,70,111,114,109,116,101,110,100,32,116,111,32,98,101,105,110,112,117,116,32,105,100,61,34,111,112,101,110,105,110,103,32,111,102,114,101,115,116,114,105,99,116,101,100,97,100,111,112,116,101,100,32,98,121,97,100,100,114,101,115,115,105,110,103,116,104,101,111,108,111,103,105,97,110,109,101,116,104,111,100,115,32,111,102,118,97,114,105,97,110,116,32,111,102,67,104,114,105,115,116,105,97,110,32,118,101,114,121,32,108,97,114,103,101,97,117,116,111,109,111,116,105,118,101,98,121,32,102,97,114,32,116,104,101,114,97,110,103,101,32,102,114,111,109,112,117,114,115,117,105,116,32,111,102,102,111,108,108,111,119,32,116,104,101,98,114,111,117,103,104,116,32,116,111,105,110,32,69,110,103,108,97,110,100,97,103,114,101,101,32,116,104,97,116,97,99,99,117,115,101,100,32,111,102,99,111,109,101,115,32,102,114,111,109,112,114,101,118,101,110,116,105,110,103,100,105,118,32,115,116,121,108,101,61,104,105,115,32,111,114,32,104,101,114,116,114,101,109,101,110,100,111,117,115,102,114,101,101,100,111,109,32,111,102,99,111,110,99,101,114,110,105,110,103,48,32,49,101,109,32,49,101,109,59,66,97,115,107,101,116,98,97,108,108,47,115,116,121,108,101,46,99,115,115,97,110,32,101,97,114,108,105,101,114,101,118,101,110,32,97,102,116,101,114,47,34,32,116,105,116,108,101,61,34,46,99,111,109,47,105,110,100,101,120,116,97,107,105,110,103,32,116,104,101,112,105,116,116,115,98,117,114,103,104,99,111,110,116,101,110,116,34,62,13,60,115,99,114,105,112,116,62,40,102,116,117,114,110,101,100,32,111,117,116,104,97,118,105,110,103,32,116,104,101,60,47,115,112,97,110,62,13,10,32,111,99,99,97,115,105,111,110,97,108,98,101,99,97,117,115,101,32,105,116,115,116,97,114,116,101,100,32,116,111,112,104,121,115,105,99,97,108,108,121,62,60,47,100,105,118,62,10,32,32,99,114,101,97,116,101,100,32,98,121,67,117,114,114,101,110,116,108,121,44,32,98,103,99,111,108,111,114,61,34,116,97,98,105,110,100,101,120,61,34,100,105,115,97,115,116,114,111,117,115,65,110,97,108,121,116,105,99,115,32,97,108,115,111,32,104,97,115,32,97,62,60,100,105,118,32,105,100,61,34,60,47,115,116,121,108,101,62,10,60,99,97,108,108,101,100,32,102,111,114,115,105,110,103,101,114,32,97,110,100,46,115,114,99,32,61,32,34,47,47,118,105,111,108,97,116,105,111,110,115,116,104,105,115,32,112,111,105,110,116,99,111,110,115,116,97,110,116,108,121,105,115,32,108,111,99,97,116,101,100,114,101,99,111,114,100,105,110,103,115,100,32,102,114,111,109,32,116,104,101,110,101,100,101,114,108,97,110,100,115,112,111,114,116,117,103,117,195,170,115,215,162,215,145,215,168,215,153,215,170,217,129,216,167,216,177,216,179,219,140,100,101,115,97,114,114,111,108,108,111,99,111,109,101,110,116,97,114,105,111,101,100,117,99,97,99,105,195,179,110,115,101,112,116,105,101,109,98,114,101,114,101,103,105,115,116,114,97,100,111,100,105,114,101,99,99,105,195,179,110,117,98,105,99,97,99,105,195,179,110,112,117,98,108,105,99,105,100,97,100,114,101,115,112,117,101,115,116,97,115,114,101,115,117,108,116,97,100,111,115,105,109,112,111,114,116,97,110,116,101,114,101,115,101,114,118,97,100,111,115,97,114,116,195,173,99,117,108,111,115,100,105,102,101,114,101,110,116,101,115,115,105,103,117,105,101,110,116,101,115,114,101,112,195,186,98,108,105,99,97,115,105,116,117,97,99,105,195,179,110,109,105,110,105,115,116,101,114,105,111,112,114,105,118,97,99,105,100,97,100,100,105,114,101,99,116,111,114,105,111,102,111,114,109,97,99,105,195,179,110,112,111,98,108,97,99,105,195,179,110,112,114,101,115,105,100,101,110,116,101,99,111,110,116,101,110,105,100,111,115,97,99,99,101,115,111,114,105,111,115,116,101,99,104,110,111,114,97,116,105,112,101,114,115,111,110,97,108,101,115,99,97,116,101,103,111,114,195,173,97,101,115,112,101,99,105,97,108,101,115,100,105,115,112,111,110,105,98,108,101,97,99,116,117,97,108,105,100,97,100,114,101,102,101,114,101,110,99,105,97,118,97,108,108,97,100,111,108,105,100,98,105,98,108,105,111,116,101,99,97,114,101,108,97,99,105,111,110,101,115,99,97,108,101,110,100,97,114,105,111,112,111,108,195,173,116,105,99,97,115,97,110,116,101,114,105,111,114,101,115,100,111,99,117,109,101,110,116,111,115,110,97,116,117,114,97,108,101,122,97,109,97,116,101,114,105,97,108,101,115,100,105,102,101,114,101,110,99,105,97,101,99,111,110,195,179,109,105,99,97,116,114,97,110,115,112,111,114,116,101,114,111,100,114,195,173,103,117,101,122,112,97,114,116,105,99,105,112,97,114,101,110,99,117,101,110,116,114,97,110,100,105,115,99,117,115,105,195,179,110,101,115,116,114,117,99,116,117,114,97,102,117,110,100,97,99,105,195,179,110,102,114,101,99,117,101,110,116,101,115,112,101,114,109,97,110,101,110,116,101,116,111,116,97,108,109,101,110,116,101,208,188,208,190,208,182,208,189,208,190,208,177,209,131,208,180,208,181,209,130,208,188,208,190,208,182,208,181,209,130,208,178,209,128,208,181,208,188,209,143,209,130,208,176,208,186,208,182,208,181,209,135,209,130,208,190,208,177,209,139,208,177,208,190,208,187,208,181,208,181,208,190,209,135,208,181,208,189,209,140,209,141,209,130,208,190,208,179,208,190,208,186,208,190,208,179,208,180,208,176,208,191,208,190,209,129,208,187,208,181,208,178,209,129,208,181,208,179,208,190,209,129,208,176,208,185,209,130,208,181,209,135,208,181,209,128,208,181,208,183,208,188,208,190,208,179,209,131,209,130,209,129,208,176,208,185,209,130,208,176,208,182,208,184,208,183,208,189,208,184,208,188,208,181,208,182,208,180,209,131,208,177,209,131,208,180,209,131,209,130,208,159,208,190,208,184,209,129,208,186,208,183,208,180,208,181,209,129,209,140,208,178,208,184,208,180,208,181,208,190,209,129,208,178,209,143,208,183,208,184,208,189,209,131,208,182,208,189,208,190,209,129,208,178,208,190,208,181,208,185,208,187,209,142,208,180,208,181,208,185,208,191,208,190,209,128,208,189,208,190,208,188,208,189,208,190,208,179,208,190,208,180,208,181,209,130,208,181,208,185,209,129,208,178,208,190,208,184,209,133,208,191,209,128,208,176,208,178,208,176,209,130,208,176,208,186,208,190,208,185,208,188,208,181,209,129,209,130,208,190,208,184,208,188,208,181,208,181,209,130,208,182,208,184,208,183,208,189,209,140,208,190,208,180,208,189,208,190,208,185,208,187,209,131,209,135,209,136,208,181,208,191,208,181,209,128,208,181,208,180,209,135,208,176,209,129,209,130,208,184,209,135,208,176,209,129,209,130,209,140,209,128,208,176,208,177,208,190,209,130,208,189,208,190,208,178,209,139,209,133,208,191,209,128,208,176,208,178,208,190,209,129,208,190,208,177,208,190,208,185,208,191,208,190,209,130,208,190,208,188,208,188,208,181,208,189,208,181,208,181,209,135,208,184,209,129,208,187,208,181,208,189,208,190,208,178,209,139,208,181,209,131,209,129,208,187,209,131,208,179,208,190,208,186,208,190,208,187,208,190,208,189,208,176,208,183,208,176,208,180,209,130,208,176,208,186,208,190,208,181,209,130,208,190,208,179,208,180,208,176,208,191,208,190,209,135,209,130,208,184,208,159,208,190,209,129,208,187,208,181,209,130,208,176,208,186,208,184,208,181,208,189,208,190,208,178,209,139,208,185,209,129,209,130,208,190,208,184,209,130,209,130,208,176,208,186,208,184,209,133,209,129,209,128,208,176,208,183,209,131,208,161,208,176,208,189,208,186,209,130,209,132,208,190,209,128,209,131,208,188,208,154,208,190,208,179,208,180,208,176,208,186,208,189,208,184,208,179,208,184,209,129,208,187,208,190,208,178,208,176,208,189,208,176,209,136,208,181,208,185,208,189,208,176,208,185,209,130,208,184,209,129,208,178,208,190,208,184,208,188,209,129,208,178,209,143,208,183,209,140,208,187,209,142,208,177,208,190,208,185,209,135,208,176,209,129,209,130,208,190,209,129,209,128,208,181,208,180,208,184,208,154,209,128,208,190,208,188,208,181,208,164,208,190,209,128,209,131,208,188,209,128,209,139,208,189,208,186,208,181,209,129,209,130,208,176,208,187,208,184,208,191,208,190,208,184,209,129,208,186,209,130,209,139,209,129,209,143,209,135,208,188,208,181,209,129,209,143,209,134,209,134,208,181,208,189,209,130,209,128,209,130,209,128,209,131,208,180,208,176,209,129,208,176,208,188,209,139,209,133,209,128,209,139,208,189,208,186,208,176,208,157,208,190,208,178,209,139,208,185,209,135,208,176,209,129,208,190,208,178,208,188,208,181,209,129,209,130,208,176,209,132,208,184,208,187,209,140,208,188,208,188,208,176,209,128,209,130,208,176,209,129,209,130,209,128,208,176,208,189,208,188,208,181,209,129,209,130,208,181,209,130,208,181,208,186,209,129,209,130,208,189,208,176,209,136,208,184,209,133,208,188,208,184,208,189,209,131,209,130,208,184,208,188,208,181,208,189,208,184,208,184,208,188,208,181,209,142,209,130,208,189,208,190,208,188,208,181,209,128,208,179,208,190,209,128,208,190,208,180,209,129,208,176,208,188,208,190,208,188,209,141,209,130,208,190,208,188,209,131,208,186,208,190,208,189,209,134,208,181,209,129,208,178,208,190,208,181,208,188,208,186,208,176,208,186,208,190,208,185,208,144,209,128,209,133,208,184,208,178,217,133,217,134,216,170,216,175,217,137,216,165,216,177,216,179,216,167,217,132,216,177,216,179,216,167,217,132,216,169,216,167,217,132,216,185,216,167,217,133,217,131,216,170,216,168,217,135,216,167,216,168,216,177,216,167,217,133,216,172,216,167,217,132,217,138,217,136,217,133,216,167,217,132,216,181,217,136,216,177,216,172,216,175,217,138,216,175,216,169,216,167,217,132,216,185,216,182,217,136,216,165,216,182,216,167,217,129,216,169,216,167,217,132,217,130,216,179,217,133,216,167,217,132,216,185,216,167,216,168,216,170,216,173,217,133,217,138,217,132,217,133,217,132,217,129,216,167,216,170,217,133,217,132,216,170,217,130,217,137,216,170,216,185,216,175,217,138,217,132,216,167,217,132,216,180,216,185,216,177,216,163,216,174,216,168,216,167,216,177,216,170,216,183,217,136,217,138,216,177,216,185,217,132,217,138,217,131,217,133,216,165,216,177,217,129,216,167,217,130,216,183,217,132,216,168,216,167,216,170,216,167,217,132,217,132,216,186,216,169,216,170,216,177,216,170,217,138,216,168,216,167,217,132,217,134,216,167,216,179,216,167,217,132,216,180,217,138,216,174,217,133,217,134,216,170,216,175,217,138,216,167,217,132,216,185,216,177,216,168,216,167,217,132,217,130,216,181,216,181,216,167,217,129,217,132,216,167,217,133,216,185,217,132,217,138,217,135,216,167,216,170,216,173,216,175,217,138,216,171,216,167,217,132,217,132,217,135,217,133,216,167,217,132,216,185,217,133,217,132,217,133,217,131,216,170,216,168,216,169,217,138,217,133,217,131,217,134,217,131,216,167,217,132,216,183,217,129,217,132,217,129,217,138,216,175,217,138,217,136,216,165,216,175,216,167,216,177,216,169,216,170,216,167,216,177,217,138,216,174,216,167,217,132,216,181,216,173,216,169,216,170,216,179,216,172,217,138,217,132,216,167,217,132,217,136,217,130,216,170,216,185,217,134,216,175,217,133,216,167,217,133,216,175,217,138,217,134,216,169,216,170,216,181,217,133,217,138,217,133,216,163,216,177,216,180,217,138,217,129,216,167,217,132,216,176,217,138,217,134,216,185,216,177,216,168,217,138,216,169,216,168,217,136,216,167,216,168,216,169,216,163,217,132,216,185,216,167,216,168,216,167,217,132,216,179,217,129,216,177,217,133,216,180,216,167,217,131,217,132,216,170,216,185,216,167,217,132,217,137,216,167,217,132,216,163,217,136,217,132,216,167,217,132,216,179,217,134,216,169,216,172,216,167,217,133,216,185,216,169,216,167,217,132,216,181,216,173,217,129,216,167,217,132,216,175,217,138,217,134,217,131,217,132,217,133,216,167,216,170,216,167,217,132,216,174,216,167,216,181,216,167,217,132,217,133,217,132,217,129,216,163,216,185,216,182,216,167,216,161,217,131,216,170,216,167,216,168,216,169,216,167,217,132,216,174,217,138,216,177,216,177,216,179,216,167,216,166,217,132,216,167,217,132,217,130,217,132,216,168,216,167,217,132,216,163,216,175,216,168,217,133,217,130,216,167,216,183,216,185,217,133,216,177,216,167,216,179,217,132,217,133,217,134,216,183,217,130,216,169,216,167,217,132,217,131,216,170,216,168,216,167,217,132,216,177,216,172,217,132,216,167,216,180,216,170,216,177,217,131,216,167,217,132,217,130,216,175,217,133,217,138,216,185,216,183,217,138,217,131,115,66,121,84,97,103,78,97,109,101,40,46,106,112,103,34,32,97,108,116,61,34,49,112,120,32,115,111,108,105,100,32,35,46,103,105,102,34,32,97,108,116,61,34,116,114,97,110,115,112,97,114,101,110,116,105,110,102,111,114,109,97,116,105,111,110,97,112,112,108,105,99,97,116,105,111,110,34,32,111,110,99,108,105,99,107,61,34,101,115,116,97,98,108,105,115,104,101,100,97,100,118,101,114,116,105,115,105,110,103,46,112,110,103,34,32,97,108,116,61,34,101,110,118,105,114,111,110,109,101,110,116,112,101,114,102,111,114,109,97,110,99,101,97,112,112,114,111,112,114,105,97,116,101,38,97,109,112,59,109,100,97,115,104,59,105,109,109,101,100,105,97,116,101,108,121,60,47,115,116,114,111,110,103,62,60,47,114,97,116,104,101,114,32,116,104,97,110,116,101,109,112,101,114,97,116,117,114,101,100,101,118,101,108,111,112,109,101,110,116,99,111,109,112,101,116,105,116,105,111,110,112,108,97,99,101,104,111,108,100,101,114,118,105,115,105,98,105,108,105,116,121,58,99,111,112,121,114,105,103,104,116,34,62,48,34,32,104,101,105,103,104,116,61,34,101,118,101,110,32,116,104,111,117,103,104,114,101,112,108,97,99,101,109,101,110,116,100,101,115,116,105,110,97,116,105,111,110,67,111,114,112,111,114,97,116,105,111,110,60,117,108,32,99,108,97,115,115,61,34,65,115,115,111,99,105,97,116,105,111,110,105,110,100,105,118,105,100,117,97,108,115,112,101,114,115,112,101,99,116,105,118,101,115,101,116,84,105,109,101,111,117,116,40,117,114,108,40,104,116,116,112,58,47,47,109,97,116,104,101,109,97,116,105,99,115,109,97,114,103,105,110,45,116,111,112,58,101,118,101,110,116,117,97,108,108,121,32,100,101,115,99,114,105,112,116,105,111,110,41,32,110,111,45,114,101,112,101,97,116,99,111,108,108,101,99,116,105,111,110,115,46,74,80,71,124,116,104,117,109,98,124,112,97,114,116,105,99,105,112,97,116,101,47,104,101,97,100,62,60,98,111,100,121,102,108,111,97,116,58,108,101,102,116,59,60,108,105,32,99,108,97,115,115,61,34,104,117,110,100,114,101,100,115,32,111,102,10,10,72,111,119,101,118,101,114,44,32,99,111,109,112,111,115,105,116,105,111,110,99,108,101,97,114,58,98,111,116,104,59,99,111,111,112,101,114,97,116,105,111,110,119,105,116,104,105,110,32,116,104,101,32,108,97,98,101,108,32,102,111,114,61,34,98,111,114,100,101,114,45,116,111,112,58,78,101,119,32,90,101,97,108,97,110,100,114,101,99,111,109,109,101,110,100,101,100,112,104,111,116,111,103,114,97,112,104,121,105,110,116,101,114,101,115,116,105,110,103,38,108,116,59,115,117,112,38,103,116,59,99,111,110,116,114,111,118,101,114,115,121,78,101,116,104,101,114,108,97,110,100,115,97,108,116,101,114,110,97,116,105,118,101,109,97,120,108,101,110,103,116,104,61,34,115,119,105,116,122,101,114,108,97,110,100,68,101,118,101,108,111,112,109,101,110,116,101,115,115,101,110,116,105,97,108,108,121,10,10,65,108,116,104,111,117,103,104,32,60,47,116,101,120,116,97,114,101,97,62,116,104,117,110,100,101,114,98,105,114,100,114,101,112,114,101,115,101,110,116,101,100,38,97,109,112,59,110,100,97,115,104,59,115,112,101,99,117,108,97,116,105,111,110,99,111,109,109,117,110,105,116,105,101,115,108,101,103,105,115,108,97,116,105,111,110,101,108,101,99,116,114,111,110,105,99,115,10,9,60,100,105,118,32,105,100,61,34,105,108,108,117,115,116,114,97,116,101,100,101,110,103,105,110,101,101,114,105,110,103,116,101,114,114,105,116,111,114,105,101,115,97,117,116,104,111,114,105,116,105,101,115,100,105,115,116,114,105,98,117,116,101,100,54,34,32,104,101,105,103,104,116,61,34,115,97,110,115,45,115,101,114,105,102,59,99,97,112,97,98,108,101,32,111,102,32,100,105,115,97,112,112,101,97,114,101,100,105,110,116,101,114,97,99,116,105,118,101,108,111,111,107,105,110,103,32,102,111,114,105,116,32,119,111,117,108,100,32,98,101,65,102,103,104,97,110,105,115,116,97,110,119,97,115,32,99,114,101,97,116,101,100,77,97,116,104,46,102,108,111,111,114,40,115,117,114,114,111,117,110,100,105,110,103,99,97,110,32,97,108,115,111,32,98,101,111,98,115,101,114,118,97,116,105,111,110,109,97,105,110,116,101,110,97,110,99,101,101,110,99,111,117,110,116,101,114,101,100,60,104,50,32,99,108,97,115,115,61,34,109,111,114,101,32,114,101,99,101,110,116,105,116,32,104,97,115,32,98,101,101,110,105,110,118,97,115,105,111,110,32,111,102,41,46,103,101,116,84,105,109,101,40,41,102,117,110,100,97,109,101,110,116,97,108,68,101,115,112,105,116,101,32,116,104,101,34,62,60,100,105,118,32,105,100,61,34,105,110,115,112,105,114,97,116,105,111,110,101,120,97,109,105,110,97,116,105,111,110,112,114,101,112,97,114,97,116,105,111,110,101,120,112,108,97,110,97,116,105,111,110,60,105,110,112,117,116,32,105,100,61,34,60,47,97,62,60,47,115,112,97,110,62,118,101,114,115,105,111,110,115,32,111,102,105,110,115,116,114,117,109,101,110,116,115,98,101,102,111,114,101,32,116,104,101,32,32,61,32,39,104,116,116,112,58,47,47,68,101,115,99,114,105,112,116,105,111,110,114,101,108,97,116,105,118,101,108,121,32,46,115,117,98,115,116,114,105,110,103,40,101,97,99,104,32,111,102,32,116,104,101,101,120,112,101,114,105,109,101,110,116,115,105,110,102,108,117,101,110,116,105,97,108,105,110,116,101,103,114,97,116,105,111,110,109,97,110,121,32,112,101,111,112,108,101,100,117,101,32,116,111,32,116,104,101,32,99,111,109,98,105,110,97,116,105,111,110,100,111,32,110,111,116,32,104,97,118,101,77,105,100,100,108,101,32,69,97,115,116,60,110,111,115,99,114,105,112,116,62,60,99,111,112,121,114,105,103,104,116,34,32,112,101,114,104,97,112,115,32,116,104,101,105,110,115,116,105,116,117,116,105,111,110,105,110,32,68,101,99,101,109,98,101,114,97,114,114,97,110,103,101,109,101,110,116,109,111,115,116,32,102,97,109,111,117,115,112,101,114,115,111,110,97,108,105,116,121,99,114,101,97,116,105,111,110,32,111,102,108,105,109,105,116,97,116,105,111,110,115,101,120,99,108,117,115,105,118,101,108,121,115,111,118,101,114,101,105,103,110,116,121,45,99,111,110,116,101,110,116,34,62,10,60,116,100,32,99,108,97,115,115,61,34,117,110,100,101,114,103,114,111,117,110,100,112,97,114,97,108,108,101,108,32,116,111,100,111,99,116,114,105,110,101,32,111,102,111,99,99,117,112,105,101,100,32,98,121,116,101,114,109,105,110,111,108,111,103,121,82,101,110,97,105,115,115,97,110,99,101,97,32,110,117,109,98,101,114,32,111,102,115,117,112,112,111,114,116,32,102,111,114,101,120,112,108,111,114,97,116,105,111,110,114,101,99,111,103,110,105,116,105,111,110,112,114,101,100,101,99,101,115,115,111,114,60,105,109,103,32,115,114,99,61,34,47,60,104,49,32,99,108,97,115,115,61,34,112,117,98,108,105,99,97,116,105,111,110,109,97,121,32,97,108,115,111,32,98,101,115,112,101,99,105,97,108,105,122,101,100,60,47,102,105,101,108,100,115,101,116,62,112,114,111,103,114,101,115,115,105,118,101,109,105,108,108,105,111,110,115,32,111,102,115,116,97,116,101,115,32,116,104,97,116,101,110,102,111,114,99,101,109,101,110,116,97,114,111,117,110,100,32,116,104,101,32,111,110,101,32,97,110,111,116,104,101,114,46,112,97,114,101,110,116,78,111,100,101,97,103,114,105,99,117,108,116,117,114,101,65,108,116,101,114,110,97,116,105,118,101,114,101,115,101,97,114,99,104,101,114,115,116,111,119,97,114,100,115,32,116,104,101,77,111,115,116,32,111,102,32,116,104,101,109,97,110,121,32,111,116,104,101,114,32,40,101,115,112,101,99,105,97,108,108,121,60,116,100,32,119,105,100,116,104,61,34,59,119,105,100,116,104,58,49,48,48,37,105,110,100,101,112,101,110,100,101,110,116,60,104,51,32,99,108,97,115,115,61,34,32,111,110,99,104,97,110,103,101,61,34,41,46,97,100,100,67,108,97,115,115,40,105,110,116,101,114,97,99,116,105,111,110,79,110,101,32,111,102,32,116,104,101,32,100,97,117,103,104,116,101,114,32,111,102,97,99,99,101,115,115,111,114,105,101,115,98,114,97,110,99,104,101,115,32,111,102,13,10,60,100,105,118,32,105,100,61,34,116,104,101,32,108,97,114,103,101,115,116,100,101,99,108,97,114,97,116,105,111,110,114,101,103,117,108,97,116,105,111,110,115,73,110,102,111,114,109,97,116,105,111,110,116,114,97,110,115,108,97,116,105,111,110,100,111,99,117,109,101,110,116,97,114,121,105,110,32,111,114,100,101,114,32,116,111,34,62,10,60,104,101,97,100,62,10,60,34,32,104,101,105,103,104,116,61,34,49,97,99,114,111,115,115,32,116,104,101,32,111,114,105,101,110,116,97,116,105,111,110,41,59,60,47,115,99,114,105,112,116,62,105,109,112,108,101,109,101,110,116,101,100,99,97,110,32,98,101,32,115,101,101,110,116,104,101,114,101,32,119,97,115,32,97,100,101,109,111,110,115,116,114,97,116,101,99,111,110,116,97,105,110,101,114,34,62,99,111,110,110,101,99,116,105,111,110,115,116,104,101,32,66,114,105,116,105,115,104,119,97,115,32,119,114,105,116,116,101,110,33,105,109,112,111,114,116,97,110,116,59,112,120,59,32,109,97,114,103,105,110,45,102,111,108,108,111,119,101,100,32,98,121,97,98,105,108,105,116,121,32,116,111,32,99,111,109,112,108,105,99,97,116,101,100,100,117,114,105,110,103,32,116,104,101,32,105,109,109,105,103,114,97,116,105,111,110,97,108,115,111,32,99,97,108,108,101,100,60,104,52,32,99,108,97,115,115,61,34,100,105,115,116,105,110,99,116,105,111,110,114,101,112,108,97,99,101,100,32,98,121,103,111,118,101,114,110,109,101,110,116,115,108,111,99,97,116,105,111,110,32,111,102,105,110,32,78,111,118,101,109,98,101,114,119,104,101,116,104,101,114,32,116,104,101,60,47,112,62,10,60,47,100,105,118,62,97,99,113,117,105,115,105,116,105,111,110,99,97,108,108,101,100,32,116,104,101,32,112,101,114,115,101,99,117,116,105,111,110,100,101,115,105,103,110,97,116,105,111,110,123,102,111,110,116,45,115,105,122,101,58,97,112,112,101,97,114,101,100,32,105,110,105,110,118,101,115,116,105,103,97,116,101,101,120,112,101,114,105,101,110,99,101,100,109,111,115,116,32,108,105,107,101,108,121,119,105,100,101,108,121,32,117,115,101,100,100,105,115,99,117,115,115,105,111,110,115,112,114,101,115,101,110,99,101,32,111,102,32,40,100,111,99,117,109,101,110,116,46,101,120,116,101,110,115,105,118,101,108,121,73,116,32,104,97,115,32,98,101,101,110,105,116,32,100,111,101,115,32,110,111,116,99,111,110,116,114,97,114,121,32,116,111,105,110,104,97,98,105,116,97,110,116,115,105,109,112,114,111,118,101,109,101,110,116,115,99,104,111,108,97,114,115,104,105,112,99,111,110,115,117,109,112,116,105,111,110,105,110,115,116,114,117,99,116,105,111,110,102,111,114,32,101,120,97,109,112,108,101,111,110,101,32,111,114,32,109,111,114,101,112,120,59,32,112,97,100,100,105,110,103,116,104,101,32,99,117,114,114,101,110,116,97,32,115,101,114,105,101,115,32,111,102,97,114,101,32,117,115,117,97,108,108,121,114,111,108,101,32,105,110,32,116,104,101,112,114,101,118,105,111,117,115,108,121,32,100,101,114,105,118,97,116,105,118,101,115,101,118,105,100,101,110,99,101,32,111,102,101,120,112,101,114,105,101,110,99,101,115,99,111,108,111,114,115,99,104,101,109,101,115,116,97,116,101,100,32,116,104,97,116,99,101,114,116,105,102,105,99,97,116,101,60,47,97,62,60,47,100,105,118,62,10,32,115,101,108,101,99,116,101,100,61,34,104,105,103,104,32,115,99,104,111,111,108,114,101,115,112,111,110,115,101,32,116,111,99,111,109,102,111,114,116,97,98,108,101,97,100,111,112,116,105,111,110,32,111,102,116,104,114,101,101,32,121,101,97,114,115,116,104,101,32,99,111,117,110,116,114,121,105,110,32,70,101,98,114,117,97,114,121,115,111,32,116,104,97,116,32,116,104,101,112,101,111,112,108,101,32,119,104,111,32,112,114,111,118,105,100,101,100,32,98,121,60,112,97,114,97,109,32,110,97,109,101,97,102,102,101,99,116,101,100,32,98,121,105,110,32,116,101,114,109,115,32,111,102,97,112,112,111,105,110,116,109,101,110,116,73,83,79,45,56,56,53,57,45,49,34,119,97,115,32,98,111,114,110,32,105,110,104,105,115,116,111,114,105,99,97,108,32,114,101,103,97,114,100,101,100,32,97,115,109,101,97,115,117,114,101,109,101,110,116,105,115,32,98,97,115,101,100,32,111,110,32,97,110,100,32,111,116,104,101,114,32,58,32,102,117,110,99,116,105,111,110,40,115,105,103,110,105,102,105,99,97,110,116,99,101,108,101,98,114,97,116,105,111,110,116,114,97,110,115,109,105,116,116,101,100,47,106,115,47,106,113,117,101,114,121,46,105,115,32,107,110,111,119,110,32,97,115,116,104,101,111,114,101,116,105,99,97,108,32,116,97,98,105,110,100,101,120,61,34,105,116,32,99,111,117,108,100,32,98,101,60,110,111,115,99,114,105,112,116,62,10,104,97,118,105,110,103,32,98,101,101,110,13,10,60,104,101,97,100,62,13,10,60,32,38,113,117,111,116,59,84,104,101,32,99,111,109,112,105,108,97,116,105,111,110,104,101,32,104,97,100,32,98,101,101,110,112,114,111,100,117,99,101,100,32,98,121,112,104,105,108,111,115,111,112,104,101,114,99,111,110,115,116,114,117,99,116,101,100,105,110,116,101,110,100,101,100,32,116,111,97,109,111,110,103,32,111,116,104,101,114,99,111,109,112,97,114,101,100,32,116,111,116,111,32,115,97,121,32,116,104,97,116,69,110,103,105,110,101,101,114,105,110,103,97,32,100,105,102,102,101,114,101,110,116,114,101,102,101,114,114,101,100,32,116,111,100,105,102,102,101,114,101,110,99,101,115,98,101,108,105,101,102,32,116,104,97,116,112,104,111,116,111,103,114,97,112,104,115,105,100,101,110,116,105,102,121,105,110,103,72,105,115,116,111,114,121,32,111,102,32,82,101,112,117,98,108,105,99,32,111,102,110,101,99,101,115,115,97,114,105,108,121,112,114,111,98,97,98,105,108,105,116,121,116,101,99,104,110,105,99,97,108,108,121,108,101,97,118,105,110,103,32,116,104,101,115,112,101,99,116,97,99,117,108,97,114,102,114,97,99,116,105,111,110,32,111,102,101,108,101,99,116,114,105,99,105,116,121,104,101,97,100,32,111,102,32,116,104,101,114,101,115,116,97,117,114,97,110,116,115,112,97,114,116,110,101,114,115,104,105,112,101,109,112,104,97,115,105,115,32,111,110,109,111,115,116,32,114,101,99,101,110,116,115,104,97,114,101,32,119,105,116,104,32,115,97,121,105,110,103,32,116,104,97,116,102,105,108,108,101,100,32,119,105,116,104,100,101,115,105,103,110,101,100,32,116,111,105,116,32,105,115,32,111,102,116,101,110,34,62,60,47,105,102,114,97,109,101,62,97,115,32,102,111,108,108,111,119,115,58,109,101,114,103,101,100,32,119,105,116,104,116,104,114,111,117,103,104,32,116,104,101,99,111,109,109,101,114,99,105,97,108,32,112,111,105,110,116,101,100,32,111,117,116,111,112,112,111,114,116,117,110,105,116,121,118,105,101,119,32,111,102,32,116,104,101,114,101,113,117,105,114,101,109,101,110,116,100,105,118,105,115,105,111,110,32,111,102,112,114,111,103,114,97,109,109,105,110,103,104,101,32,114,101,99,101,105,118,101,100,115,101,116,73,110,116,101,114,118,97,108,34,62,60,47,115,112,97,110,62,60,47,105,110,32,78,101,119,32,89,111,114,107,97,100,100,105,116,105,111,110,97,108,32,99,111,109,112,114,101,115,115,105,111,110,10,10,60,100,105,118,32,105,100,61,34,105,110,99,111,114,112,111,114,97,116,101,59,60,47,115,99,114,105,112,116,62,60,97,116,116,97,99,104,69,118,101,110,116,98,101,99,97,109,101,32,116,104,101,32,34,32,116,97,114,103,101,116,61,34,95,99,97,114,114,105,101,100,32,111,117,116,83,111,109,101,32,111,102,32,116,104,101,115,99,105,101,110,99,101,32,97,110,100,116,104,101,32,116,105,109,101,32,111,102,67,111,110,116,97,105,110,101,114,34,62,109,97,105,110,116,97,105,110,105,110,103,67,104,114,105,115,116,111,112,104,101,114,77,117,99,104,32,111,102,32,116,104,101,119,114,105,116,105,110,103,115,32,111,102,34,32,104,101,105,103,104,116,61,34,50,115,105,122,101,32,111,102,32,116,104,101,118,101,114,115,105,111,110,32,111,102,32,109,105,120,116,117,114,101,32,111,102,32,98,101,116,119,101,101,110,32,116,104,101,69,120,97,109,112,108,101,115,32,111,102,101,100,117,99,97,116,105,111,110,97,108,99,111,109,112,101,116,105,116,105,118,101,32,111,110,115,117,98,109,105,116,61,34,100,105,114,101,99,116,111,114,32,111,102,100,105,115,116,105,110,99,116,105,118,101,47,68,84,68,32,88,72,84,77,76,32,114,101,108,97,116,105,110,103,32,116,111,116,101,110,100,101,110,99,121,32,116,111,112,114,111,118,105,110,99,101,32,111,102,119,104,105,99,104,32,119,111,117,108,100,100,101,115,112,105,116,101,32,116,104,101,115,99,105,101,110,116,105,102,105,99,32,108,101,103,105,115,108,97,116,117,114,101,46,105,110,110,101,114,72,84,77,76,32,97,108,108,101,103,97,116,105,111,110,115,65,103,114,105,99,117,108,116,117,114,101,119,97,115,32,117,115,101,100,32,105,110,97,112,112,114,111,97,99,104,32,116,111,105,110,116,101,108,108,105,103,101,110,116,121,101,97,114,115,32,108,97,116,101,114,44,115,97,110,115,45,115,101,114,105,102,100,101,116,101,114,109,105,110,105,110,103,80,101,114,102,111,114,109,97,110,99,101,97,112,112,101,97,114,97,110,99,101,115,44,32,119,104,105,99,104,32,105,115,32,102,111,117,110,100,97,116,105,111,110,115,97,98,98,114,101,118,105,97,116,101,100,104,105,103,104,101,114,32,116,104,97,110,115,32,102,114,111,109,32,116,104,101,32,105,110,100,105,118,105,100,117,97,108,32,99,111,109,112,111,115,101,100,32,111,102,115,117,112,112,111,115,101,100,32,116,111,99,108,97,105,109,115,32,116,104,97,116,97,116,116,114,105,98,117,116,105,111,110,102,111,110,116,45,115,105,122,101,58,49,101,108,101,109,101,110,116,115,32,111,102,72,105,115,116,111,114,105,99,97,108,32,104,105,115,32,98,114,111,116,104,101,114,97,116,32,116,104,101,32,116,105,109,101,97,110,110,105,118,101,114,115,97,114,121,103,111,118,101,114,110,101,100,32,98,121,114,101,108,97,116,101,100,32,116,111,32,117,108,116,105,109,97,116,101,108,121,32,105,110,110,111,118,97,116,105,111,110,115,105,116,32,105,115,32,115,116,105,108,108,99,97,110,32,111,110,108,121,32,98,101,100,101,102,105,110,105,116,105,111,110,115,116,111,71,77,84,83,116,114,105,110,103,65,32,110,117,109,98,101,114,32,111,102,105,109,103,32,99,108,97,115,115,61,34,69,118,101,110,116,117,97,108,108,121,44,119,97,115,32,99,104,97,110,103,101,100,111,99,99,117,114,114,101,100,32,105,110,110,101,105,103,104,98,111,114,105,110,103,100,105,115,116,105,110,103,117,105,115,104,119,104,101,110,32,104,101,32,119,97,115,105,110,116,114,111,100,117,99,105,110,103,116,101,114,114,101,115,116,114,105,97,108,77,97,110,121,32,111,102,32,116,104,101,97,114,103,117,101,115,32,116,104,97,116,97,110,32,65,109,101,114,105,99,97,110,99,111,110,113,117,101,115,116,32,111,102,119,105,100,101,115,112,114,101,97,100,32,119,101,114,101,32,107,105,108,108,101,100,115,99,114,101,101,110,32,97,110,100,32,73,110,32,111,114,100,101,114,32,116,111,101,120,112,101,99,116,101,100,32,116,111,100,101,115,99,101,110,100,97,110,116,115,97,114,101,32,108,111,99,97,116,101,100,108,101,103,105,115,108,97,116,105,118,101,103,101,110,101,114,97,116,105,111,110,115,32,98,97,99,107,103,114,111,117,110,100,109,111,115,116,32,112,101,111,112,108,101,121,101,97,114,115,32,97,102,116,101,114,116,104,101,114,101,32,105,115,32,110,111,116,104,101,32,104,105,103,104,101,115,116,102,114,101,113,117,101,110,116,108,121,32,116,104,101,121,32,100,111,32,110,111,116,97,114,103,117,101,100,32,116,104,97,116,115,104,111,119,101,100,32,116,104,97,116,112,114,101,100,111,109,105,110,97,110,116,116,104,101,111,108,111,103,105,99,97,108,98,121,32,116,104,101,32,116,105,109,101,99,111,110,115,105,100,101,114,105,110,103,115,104,111,114,116,45,108,105,118,101,100,60,47,115,112,97,110,62,60,47,97,62,99,97,110,32,98,101,32,117,115,101,100,118,101,114,121,32,108,105,116,116,108,101,111,110,101,32,111,102,32,116,104,101,32,104,97,100,32,97,108,114,101,97,100,121,105,110,116,101,114,112,114,101,116,101,100,99,111,109,109,117,110,105,99,97,116,101,102,101,97,116,117,114,101,115,32,111,102,103,111,118,101,114,110,109,101,110,116,44,60,47,110,111,115,99,114,105,112,116,62,101,110,116,101,114,101,100,32,116,104,101,34,32,104,101,105,103,104,116,61,34,51,73,110,100,101,112,101,110,100,101,110,116,112,111,112,117,108,97,116,105,111,110,115,108,97,114,103,101,45,115,99,97,108,101,46,32,65,108,116,104,111,117,103,104,32,117,115,101,100,32,105,110,32,116,104,101,100,101,115,116,114,117,99,116,105,111,110,112,111,115,115,105,98,105,108,105,116,121,115,116,97,114,116,105,110,103,32,105,110,116,119,111,32,111,114,32,109,111,114,101,101,120,112,114,101,115,115,105,111,110,115,115,117,98,111,114,100,105,110,97,116,101,108,97,114,103,101,114,32,116,104,97,110,104,105,115,116,111,114,121,32,97,110,100,60,47,111,112,116,105,111,110,62,13,10,67,111,110,116,105,110,101,110,116,97,108,101,108,105,109,105,110,97,116,105,110,103,119,105,108,108,32,110,111,116,32,98,101,112,114,97,99,116,105,99,101,32,111,102,105,110,32,102,114,111,110,116,32,111,102,115,105,116,101,32,111,102,32,116,104,101,101,110,115,117,114,101,32,116,104,97,116,116,111,32,99,114,101,97,116,101,32,97,109,105,115,115,105,115,115,105,112,112,105,112,111,116,101,110,116,105,97,108,108,121,111,117,116,115,116,97,110,100,105,110,103,98,101,116,116,101,114,32,116,104,97,110,119,104,97,116,32,105,115,32,110,111,119,115,105,116,117,97,116,101,100,32,105,110,109,101,116,97,32,110,97,109,101,61,34,84,114,97,100,105,116,105,111,110,97,108,115,117,103,103,101,115,116,105,111,110,115,84,114,97,110,115,108,97,116,105,111,110,116,104,101,32,102,111,114,109,32,111,102,97,116,109,111,115,112,104,101,114,105,99,105,100,101,111,108,111,103,105,99,97,108,101,110,116,101,114,112,114,105,115,101,115,99,97,108,99,117,108,97,116,105,110,103,101,97,115,116,32,111,102,32,116,104,101,114,101,109,110,97,110,116,115,32,111,102,112,108,117,103,105,110,115,112,97,103,101,47,105,110,100,101,120,46,112,104,112,63,114,101,109,97,105,110,101,100,32,105,110,116,114,97,110,115,102,111,114,109,101,100,72,101,32,119,97,115,32,97,108,115,111,119,97,115,32,97,108,114,101,97,100,121,115,116,97,116,105,115,116,105,99,97,108,105,110,32,102,97,118,111,114,32,111,102,77,105,110,105,115,116,114,121,32,111,102,109,111,118,101,109,101,110,116,32,111,102,102,111,114,109,117,108,97,116,105,111,110,105,115,32,114,101,113,117,105,114,101,100,60,108,105,110,107,32,114,101,108,61,34,84,104,105,115,32,105,115,32,116,104,101,32,60,97,32,104,114,101,102,61,34,47,112,111,112,117,108,97,114,105,122,101,100,105,110,118,111,108,118,101,100,32,105,110,97,114,101,32,117,115,101,100,32,116,111,97,110,100,32,115,101,118,101,114,97,108,109,97,100,101,32,98,121,32,116,104,101,115,101,101,109,115,32,116,111,32,98,101,108,105,107,101,108,121,32,116,104,97,116,80,97,108,101,115,116,105,110,105,97,110,110,97,109,101,100,32,97,102,116,101,114,105,116,32,104,97,100,32,98,101,101,110,109,111,115,116,32,99,111,109,109,111,110,116,111,32,114,101,102,101,114,32,116,111,98,117,116,32,116,104,105,115,32,105,115,99,111,110,115,101,99,117,116,105,118,101,116,101,109,112,111,114,97,114,105,108,121,73,110,32,103,101,110,101,114,97,108,44,99,111,110,118,101,110,116,105,111,110,115,116,97,107,101,115,32,112,108,97,99,101,115,117,98,100,105,118,105,115,105,111,110,116,101,114,114,105,116,111,114,105,97,108,111,112,101,114,97,116,105,111,110,97,108,112,101,114,109,97,110,101,110,116,108,121,119,97,115,32,108,97,114,103,101,108,121,111,117,116,98,114,101,97,107,32,111,102,105,110,32,116,104,101,32,112,97,115,116,102,111,108,108,111,119,105,110,103,32,97,32,120,109,108,110,115,58,111,103,61,34,62,60,97,32,99,108,97,115,115,61,34,99,108,97,115,115,61,34,116,101,120,116,67,111,110,118,101,114,115,105,111,110,32,109,97,121,32,98,101,32,117,115,101,100,109,97,110,117,102,97,99,116,117,114,101,97,102,116,101,114,32,98,101,105,110,103,99,108,101,97,114,102,105,120,34,62,10,113,117,101,115,116,105,111,110,32,111,102,119,97,115,32,101,108,101,99,116,101,100,116,111,32,98,101,99,111,109,101,32,97,98,101,99,97,117,115,101,32,111,102,32,115,111,109,101,32,112,101,111,112,108,101,105,110,115,112,105,114,101,100,32,98,121,115,117,99,99,101,115,115,102,117,108,32,97,32,116,105,109,101,32,119,104,101,110,109,111,114,101,32,99,111,109,109,111,110,97,109,111,110,103,115,116,32,116,104,101,97,110,32,111,102,102,105,99,105,97,108,119,105,100,116,104,58,49,48,48,37,59,116,101,99,104,110,111,108,111,103,121,44,119,97,115,32,97,100,111,112,116,101,100,116,111,32,107,101,101,112,32,116,104,101,115,101,116,116,108,101,109,101,110,116,115,108,105,118,101,32,98,105,114,116,104,115,105,110,100,101,120,46,104,116,109,108,34,67,111,110,110,101,99,116,105,99,117,116,97,115,115,105,103,110,101,100,32,116,111,38,97,109,112,59,116,105,109,101,115,59,97,99,99,111,117,110,116,32,102,111,114,97,108,105,103,110,61,114,105,103,104,116,116,104,101,32,99,111,109,112,97,110,121,97,108,119,97,121,115,32,98,101,101,110,114,101,116,117,114,110,101,100,32,116,111,105,110,118,111,108,118,101,109,101,110,116,66,101,99,97,117,115,101,32,116,104,101,116,104,105,115,32,112,101,114,105,111,100,34,32,110,97,109,101,61,34,113,34,32,99,111,110,102,105,110,101,100,32,116,111,97,32,114,101,115,117,108,116,32,111,102,118,97,108,117,101,61,34,34,32,47,62,105,115,32,97,99,116,117,97,108,108,121,69,110,118,105,114,111,110,109,101,110,116,13,10,60,47,104,101,97,100,62,13,10,67,111,110,118,101,114,115,101,108,121,44,62,10,60,100,105,118,32,105,100,61,34,48,34,32,119,105,100,116,104,61,34,49,105,115,32,112,114,111,98,97,98,108,121,104,97,118,101,32,98,101,99,111,109,101,99,111,110,116,114,111,108,108,105,110,103,116,104,101,32,112,114,111,98,108,101,109,99,105,116,105,122,101,110,115,32,111,102,112,111,108,105,116,105,99,105,97,110,115,114,101,97,99,104,101,100,32,116,104,101,97,115,32,101,97,114,108,121,32,97,115,58,110,111,110,101,59,32,111,118,101,114,60,116,97,98,108,101,32,99,101,108,108,118,97,108,105,100,105,116,121,32,111,102,100,105,114,101,99,116,108,121,32,116,111,111,110,109,111,117,115,101,100,111,119,110,119,104,101,114,101,32,105,116,32,105,115,119,104,101,110,32,105,116,32,119,97,115,109,101,109,98,101,114,115,32,111,102,32,114,101,108,97,116,105,111,110,32,116,111,97,99,99,111,109,109,111,100,97,116,101,97,108,111,110,103,32,119,105,116,104,32,73,110,32,116,104,101,32,108,97,116,101,116,104,101,32,69,110,103,108,105,115,104,100,101,108,105,99,105,111,117,115,34,62,116,104,105,115,32,105,115,32,110,111,116,116,104,101,32,112,114,101,115,101,110,116,105,102,32,116,104,101,121,32,97,114,101,97,110,100,32,102,105,110,97,108,108,121,97,32,109,97,116,116,101,114,32,111,102,13,10,9,60,47,100,105,118,62,13,10,13,10,60,47,115,99,114,105,112,116,62,102,97,115,116,101,114,32,116,104,97,110,109,97,106,111,114,105,116,121,32,111,102,97,102,116,101,114,32,119,104,105,99,104,99,111,109,112,97,114,97,116,105,118,101,116,111,32,109,97,105,110,116,97,105,110,105,109,112,114,111,118,101,32,116,104,101,97,119,97,114,100,101,100,32,116,104,101,101,114,34,32,99,108,97,115,115,61,34,102,114,97,109,101,98,111,114,100,101,114,114,101,115,116,111,114,97,116,105,111,110,105,110,32,116,104,101,32,115,97,109,101,97,110,97,108,121,115,105,115,32,111,102,116,104,101,105,114,32,102,105,114,115,116,68,117,114,105,110,103,32,116,104,101,32,99,111,110,116,105,110,101,110,116,97,108,115,101,113,117,101,110,99,101,32,111,102,102,117,110,99,116,105,111,110,40,41,123,102,111,110,116,45,115,105,122,101,58,32,119,111,114,107,32,111,110,32,116,104,101,60,47,115,99,114,105,112,116,62,10,60,98,101,103,105,110,115,32,119,105,116,104,106,97,118,97,115,99,114,105,112,116,58,99,111,110,115,116,105,116,117,101,110,116,119,97,115,32,102,111,117,110,100,101,100,101,113,117,105,108,105,98,114,105,117,109,97,115,115,117,109,101,32,116,104,97,116,105,115,32,103,105,118,101,110,32,98,121,110,101,101,100,115,32,116,111,32,98,101,99,111,111,114,100,105,110,97,116,101,115,116,104,101,32,118,97,114,105,111,117,115,97,114,101,32,112,97,114,116,32,111,102,111,110,108,121,32,105,110,32,116,104,101,115,101,99,116,105,111,110,115,32,111,102,105,115,32,97,32,99,111,109,109,111,110,116,104,101,111,114,105,101,115,32,111,102,100,105,115,99,111,118,101,114,105,101,115,97,115,115,111,99,105,97,116,105,111,110,101,100,103,101,32,111,102,32,116,104,101,115,116,114,101,110,103,116,104,32,111,102,112,111,115,105,116,105,111,110,32,105,110,112,114,101,115,101,110,116,45,100,97,121,117,110,105,118,101,114,115,97,108,108,121,116,111,32,102,111,114,109,32,116,104,101,98,117,116,32,105,110,115,116,101,97,100,99,111,114,112,111,114,97,116,105,111,110,97,116,116,97,99,104,101,100,32,116,111,105,115,32,99,111,109,109,111,110,108,121,114,101,97,115,111,110,115,32,102,111,114,32,38,113,117,111,116,59,116,104,101,32,99,97,110,32,98,101,32,109,97,100,101,119,97,115,32,97,98,108,101,32,116,111,119,104,105,99,104,32,109,101,97,110,115,98,117,116,32,100,105,100,32,110,111,116,111,110,77,111,117,115,101,79,118,101,114,97,115,32,112,111,115,115,105,98,108,101,111,112,101,114,97,116,101,100,32,98,121,99,111,109,105,110,103,32,102,114,111,109,116,104,101,32,112,114,105,109,97,114,121,97,100,100,105,116,105,111,110,32,111,102,102,111,114,32,115,101,118,101,114,97,108,116,114,97,110,115,102,101,114,114,101,100,97,32,112,101,114,105,111,100,32,111,102,97,114,101,32,97,98,108,101,32,116,111,104,111,119,101,118,101,114,44,32,105,116,115,104,111,117,108,100,32,104,97,118,101,109,117,99,104,32,108,97,114,103,101,114,10,9,60,47,115,99,114,105,112,116,62,97,100,111,112,116,101,100,32,116,104,101,112,114,111,112,101,114,116,121,32,111,102,100,105,114,101,99,116,101,100,32,98,121,101,102,102,101,99,116,105,118,101,108,121,119,97,115,32,98,114,111,117,103,104,116,99,104,105,108,100,114,101,110,32,111,102,80,114,111,103,114,97,109,109,105,110,103,108,111,110,103,101,114,32,116,104,97,110,109,97,110,117,115,99,114,105,112,116,115,119,97,114,32,97,103,97,105,110,115,116,98,121,32,109,101,97,110,115,32,111,102,97,110,100,32,109,111,115,116,32,111,102,115,105,109,105,108,97,114,32,116,111,32,112,114,111,112,114,105,101,116,97,114,121,111,114,105,103,105,110,97,116,105,110,103,112,114,101,115,116,105,103,105,111,117,115,103,114,97,109,109,97,116,105,99,97,108,101,120,112,101,114,105,101,110,99,101,46,116,111,32,109,97,107,101,32,116,104,101,73,116,32,119,97,115,32,97,108,115,111,105,115,32,102,111,117,110,100,32,105,110,99,111,109,112,101,116,105,116,111,114,115,105,110,32,116,104,101,32,85,46,83,46,114,101,112,108,97,99,101,32,116,104,101,98,114,111,117,103,104,116,32,116,104,101,99,97,108,99,117,108,97,116,105,111,110,102,97,108,108,32,111,102,32,116,104,101,116,104,101,32,103,101,110,101,114,97,108,112,114,97,99,116,105,99,97,108,108,121,105,110,32,104,111,110,111,114,32,111,102,114,101,108,101,97,115,101,100,32,105,110,114,101,115,105,100,101,110,116,105,97,108,97,110,100,32,115,111,109,101,32,111,102,107,105,110,103,32,111,102,32,116,104,101,114,101,97,99,116,105,111,110,32,116,111,49,115,116,32,69,97,114,108,32,111,102,99,117,108,116,117,114,101,32,97,110,100,112,114,105,110,99,105,112,97,108,108,121,60,47,116,105,116,108,101,62,10,32,32,116,104,101,121,32,99,97,110,32,98,101,98,97,99,107,32,116,111,32,116,104,101,115,111,109,101,32,111,102,32,104,105,115,101,120,112,111,115,117,114,101,32,116,111,97,114,101,32,115,105,109,105,108,97,114,102,111,114,109,32,111,102,32,116,104,101,97,100,100,70,97,118,111,114,105,116,101,99,105,116,105,122,101,110,115,104,105,112,112,97,114,116,32,105,110,32,116,104,101,112,101,111,112,108,101,32,119,105,116,104,105,110,32,112,114,97,99,116,105,99,101,116,111,32,99,111,110,116,105,110,117,101,38,97,109,112,59,109,105,110,117,115,59,97,112,112,114,111,118,101,100,32,98,121,32,116,104,101,32,102,105,114,115,116,32,97,108,108,111,119,101,100,32,116,104,101,97,110,100,32,102,111,114,32,116,104,101,102,117,110,99,116,105,111,110,105,110,103,112,108,97,121,105,110,103,32,116,104,101,115,111,108,117,116,105,111,110,32,116,111,104,101,105,103,104,116,61,34,48,34,32,105,110,32,104,105,115,32,98,111,111,107,109,111,114,101,32,116,104,97,110,32,97,102,111,108,108,111,119,115,32,116,104,101,99,114,101,97,116,101,100,32,116,104,101,112,114,101,115,101,110,99,101,32,105,110,38,110,98,115,112,59,60,47,116,100,62,110,97,116,105,111,110,97,108,105,115,116,116,104,101,32,105,100,101,97,32,111,102,97,32,99,104,97,114,97,99,116,101,114,119,101,114,101,32,102,111,114,99,101,100,32,99,108,97,115,115,61,34,98,116,110,100,97,121,115,32,111,102,32,116,104,101,102,101,97,116,117,114,101,100,32,105,110,115,104,111,119,105,110,103,32,116,104,101,105,110,116,101,114,101,115,116,32,105,110,105,110,32,112,108,97,99,101,32,111,102,116,117,114,110,32,111,102,32,116,104,101,116,104,101,32,104,101,97,100,32,111,102,76,111,114,100,32,111,102,32,116,104,101,112,111,108,105,116,105,99,97,108,108,121,104,97,115,32,105,116,115,32,111,119,110,69,100,117,99,97,116,105,111,110,97,108,97,112,112,114,111,118,97,108,32,111,102,115,111,109,101,32,111,102,32,116,104,101,101,97,99,104,32,111,116,104,101,114,44,98,101,104,97,118,105,111,114,32,111,102,97,110,100,32,98,101,99,97,117,115,101,97,110,100,32,97,110,111,116,104,101,114,97,112,112,101,97,114,101,100,32,111,110,114,101,99,111,114,100,101,100,32,105,110,98,108,97,99,107,38,113,117,111,116,59,109,97,121,32,105,110,99,108,117,100,101,116,104,101,32,119,111,114,108,100,39,115,99,97,110,32,108,101,97,100,32,116,111,114,101,102,101,114,115,32,116,111,32,97,98,111,114,100,101,114,61,34,48,34,32,103,111,118,101,114,110,109,101,110,116,32,119,105,110,110,105,110,103,32,116,104,101,114,101,115,117,108,116,101,100,32,105,110,32,119,104,105,108,101,32,116,104,101,32,87,97,115,104,105,110,103,116,111,110,44,116,104,101,32,115,117,98,106,101,99,116,99,105,116,121,32,105,110,32,116,104,101,62,60,47,100,105,118,62,13,10,9,9,114,101,102,108,101,99,116,32,116,104,101,116,111,32,99,111,109,112,108,101,116,101,98,101,99,97,109,101,32,109,111,114,101,114,97,100,105,111,97,99,116,105,118,101,114,101,106,101,99,116,101,100,32,98,121,119,105,116,104,111,117,116,32,97,110,121,104,105,115,32,102,97,116,104,101,114,44,119,104,105,99,104,32,99,111,117,108,100,99,111,112,121,32,111,102,32,116,104,101,116,111,32,105,110,100,105,99,97,116,101,97,32,112,111,108,105,116,105,99,97,108,97,99,99,111,117,110,116,115,32,111,102,99,111,110,115,116,105,116,117,116,101,115,119,111,114,107,101,100,32,119,105,116,104,101,114,60,47,97,62,60,47,108,105,62,111,102,32,104,105,115,32,108,105,102,101,97,99,99,111,109,112,97,110,105,101,100,99,108,105,101,110,116,87,105,100,116,104,112,114,101,118,101,110,116,32,116,104,101,76,101,103,105,115,108,97,116,105,118,101,100,105,102,102,101,114,101,110,116,108,121,116,111,103,101,116,104,101,114,32,105,110,104,97,115,32,115,101,118,101,114,97,108,102,111,114,32,97,110,111,116,104,101,114,116,101,120,116,32,111,102,32,116,104,101,102,111,117,110,100,101,100,32,116,104,101,101,32,119,105,116,104,32,116,104,101,32,105,115,32,117,115,101,100,32,102,111,114,99,104,97,110,103,101,100,32,116,104,101,117,115,117,97,108,108,121,32,116,104,101,112,108,97,99,101,32,119,104,101,114,101,119,104,101,114,101,97,115,32,116,104,101,62,32,60,97,32,104,114,101,102,61,34,34,62,60,97,32,104,114,101,102,61,34,116,104,101,109,115,101,108,118,101,115,44,97,108,116,104,111,117,103,104,32,104,101,116,104,97,116,32,99,97,110,32,98,101,116,114,97,100,105,116,105,111,110,97,108,114,111,108,101,32,111,102,32,116,104,101,97,115,32,97,32,114,101,115,117,108,116,114,101,109,111,118,101,67,104,105,108,100,100,101,115,105,103,110,101,100,32,98,121,119,101,115,116,32,111,102,32,116,104,101,83,111,109,101,32,112,101,111,112,108,101,112,114,111,100,117,99,116,105,111,110,44,115,105,100,101,32,111,102,32,116,104,101,110,101,119,115,108,101,116,116,101,114,115,117,115,101,100,32,98,121,32,116,104,101,100,111,119,110,32,116,111,32,116,104,101,97,99,99,101,112,116,101,100,32,98,121,108,105,118,101,32,105,110,32,116,104,101,97,116,116,101,109,112,116,115,32,116,111,111,117,116,115,105,100,101,32,116,104,101,102,114,101,113,117,101,110,99,105,101,115,72,111,119,101,118,101,114,44,32,105,110,112,114,111,103,114,97,109,109,101,114,115,97,116,32,108,101,97,115,116,32,105,110,97,112,112,114,111,120,105,109,97,116,101,97,108,116,104,111,117,103,104,32,105,116,119,97,115,32,112,97,114,116,32,111,102,97,110,100,32,118,97,114,105,111,117,115,71,111,118,101,114,110,111,114,32,111,102,116,104,101,32,97,114,116,105,99,108,101,116,117,114,110,101,100,32,105,110,116,111,62,60,97,32,104,114,101,102,61,34,47,116,104,101,32,101,99,111,110,111,109,121,105,115,32,116,104,101,32,109,111,115,116,109,111,115,116,32,119,105,100,101,108,121,119,111,117,108,100,32,108,97,116,101,114,97,110,100,32,112,101,114,104,97,112,115,114,105,115,101,32,116,111,32,116,104,101,111,99,99,117,114,115,32,119,104,101,110,117,110,100,101,114,32,119,104,105,99,104,99,111,110,100,105,116,105,111,110,115,46,116,104,101,32,119,101,115,116,101,114,110,116,104,101,111,114,121,32,116,104,97,116,105,115,32,112,114,111,100,117,99,101,100,116,104,101,32,99,105,116,121,32,111,102,105,110,32,119,104,105,99,104,32,104,101,115,101,101,110,32,105,110,32,116,104,101,116,104,101,32,99,101,110,116,114,97,108,98,117,105,108,100,105,110,103,32,111,102,109,97,110,121,32,111,102,32,104,105,115,97,114,101,97,32,111,102,32,116,104,101,105,115,32,116,104,101,32,111,110,108,121,109,111,115,116,32,111,102,32,116,104,101,109,97,110,121,32,111,102,32,116,104,101,116,104,101,32,87,101,115,116,101,114,110,84,104,101,114,101,32,105,115,32,110,111,101,120,116,101,110,100,101,100,32,116,111,83,116,97,116,105,115,116,105,99,97,108,99,111,108,115,112,97,110,61,50,32,124,115,104,111,114,116,32,115,116,111,114,121,112,111,115,115,105,98,108,101,32,116,111,116,111,112,111,108,111,103,105,99,97,108,99,114,105,116,105,99,97,108,32,111,102,114,101,112,111,114,116,101,100,32,116,111,97,32,67,104,114,105,115,116,105,97,110,100,101,99,105,115,105,111,110,32,116,111,105,115,32,101,113,117,97,108,32,116,111,112,114,111,98,108,101,109,115,32,111,102,84,104,105,115,32,99,97,110,32,98,101,109,101,114,99,104,97,110,100,105,115,101,102,111,114,32,109,111,115,116,32,111,102,110,111,32,101,118,105,100,101,110,99,101,101,100,105,116,105,111,110,115,32,111,102,101,108,101,109,101,110,116,115,32,105,110,38,113,117,111,116,59,46,32,84,104,101,99,111,109,47,105,109,97,103,101,115,47,119,104,105,99,104,32,109,97,107,101,115,116,104,101,32,112,114,111,99,101,115,115,114,101,109,97,105,110,115,32,116,104,101,108,105,116,101,114,97,116,117,114,101,44,105,115,32,97,32,109,101,109,98,101,114,116,104,101,32,112,111,112,117,108,97,114,116,104,101,32,97,110,99,105,101,110,116,112,114,111,98,108,101,109,115,32,105,110,116,105,109,101,32,111,102,32,116,104,101,100,101,102,101,97,116,101,100,32,98,121,98,111,100,121,32,111,102,32,116,104,101,97,32,102,101,119,32,121,101,97,114,115,109,117,99,104,32,111,102,32,116,104,101,116,104,101,32,119,111,114,107,32,111,102,67,97,108,105,102,111,114,110,105,97,44,115,101,114,118,101,100,32,97,115,32,97,103,111,118,101,114,110,109,101,110,116,46,99,111,110,99,101,112,116,115,32,111,102,109,111,118,101,109,101,110,116,32,105,110,9,9,60,100,105,118,32,105,100,61,34,105,116,34,32,118,97,108,117,101,61,34,108,97,110,103,117,97,103,101,32,111,102,97,115,32,116,104,101,121,32,97,114,101,112,114,111,100,117,99,101,100,32,105,110,105,115,32,116,104,97,116,32,116,104,101,101,120,112,108,97,105,110,32,116,104,101,100,105,118,62,60,47,100,105,118,62,10,72,111,119,101,118,101,114,32,116,104,101,108,101,97,100,32,116,111,32,116,104,101,9,60,97,32,104,114,101,102,61,34,47,119,97,115,32,103,114,97,110,116,101,100,112,101,111,112,108,101,32,104,97,118,101,99,111,110,116,105,110,117,97,108,108,121,119,97,115,32,115,101,101,110,32,97,115,97,110,100,32,114,101,108,97,116,101,100,116,104,101,32,114,111,108,101,32,111,102,112,114,111,112,111,115,101,100,32,98,121,111,102,32,116,104,101,32,98,101,115,116,101,97,99,104,32,111,116,104,101,114,46,67,111,110,115,116,97,110,116,105,110,101,112,101,111,112,108,101,32,102,114,111,109,100,105,97,108,101,99,116,115,32,111,102,116,111,32,114,101,118,105,115,105,111,110,119,97,115,32,114,101,110,97,109,101,100,97,32,115,111,117,114,99,101,32,111,102,116,104,101,32,105,110,105,116,105,97,108,108,97,117,110,99,104,101,100,32,105,110,112,114,111,118,105,100,101,32,116,104,101,116,111,32,116,104,101,32,119,101,115,116,119,104,101,114,101,32,116,104,101,114,101,97,110,100,32,115,105,109,105,108,97,114,98,101,116,119,101,101,110,32,116,119,111,105,115,32,97,108,115,111,32,116,104,101,69,110,103,108,105,115,104,32,97,110,100,99,111,110,100,105,116,105,111,110,115,44,116,104,97,116,32,105,116,32,119,97,115,101,110,116,105,116,108,101,100,32,116,111,116,104,101,109,115,101,108,118,101,115,46,113,117,97,110,116,105,116,121,32,111,102,114,97,110,115,112,97,114,101,110,99,121,116,104,101,32,115,97,109,101,32,97,115,116,111,32,106,111,105,110,32,116,104,101,99,111,117,110,116,114,121,32,97,110,100,116,104,105,115,32,105,115,32,116,104,101,84,104,105,115,32,108,101,100,32,116,111,97,32,115,116,97,116,101,109,101,110,116,99,111,110,116,114,97,115,116,32,116,111,108,97,115,116,73,110,100,101,120,79,102,116,104,114,111,117,103,104,32,104,105,115,105,115,32,100,101,115,105,103,110,101,100,116,104,101,32,116,101,114,109,32,105,115,105,115,32,112,114,111,118,105,100,101,100,112,114,111,116,101,99,116,32,116,104,101,110,103,60,47,97,62,60,47,108,105,62,84,104,101,32,99,117,114,114,101,110,116,116,104,101,32,115,105,116,101,32,111,102,115,117,98,115,116,97,110,116,105,97,108,101,120,112,101,114,105,101,110,99,101,44,105,110,32,116,104,101,32,87,101,115,116,116,104,101,121,32,115,104,111,117,108,100,115,108,111,118,101,110,196,141,105,110,97,99,111,109,101,110,116,97,114,105,111,115,117,110,105,118,101,114,115,105,100,97,100,99,111,110,100,105,99,105,111,110,101,115,97,99,116,105,118,105,100,97,100,101,115,101,120,112,101,114,105,101,110,99,105,97,116,101,99,110,111,108,111,103,195,173,97,112,114,111,100,117,99,99,105,195,179,110,112,117,110,116,117,97,99,105,195,179,110,97,112,108,105,99,97,99,105,195,179,110,99,111,110,116,114,97,115,101,195,177,97,99,97,116,101,103,111,114,195,173,97,115,114,101,103,105,115,116,114,97,114,115,101,112,114,111,102,101,115,105,111,110,97,108,116,114,97,116,97,109,105,101,110,116,111,114,101,103,195,173,115,116,114,97,116,101,115,101,99,114,101,116,97,114,195,173,97,112,114,105,110,99,105,112,97,108,101,115,112,114,111,116,101,99,99,105,195,179,110,105,109,112,111,114,116,97,110,116,101,115,105,109,112,111,114,116,97,110,99,105,97,112,111,115,105,98,105,108,105,100,97,100,105,110,116,101,114,101,115,97,110,116,101,99,114,101,99,105,109,105,101,110,116,111,110,101,99,101,115,105,100,97,100,101,115,115,117,115,99,114,105,98,105,114,115,101,97,115,111,99,105,97,99,105,195,179,110,100,105,115,112,111,110,105,98,108,101,115,101,118,97,108,117,97,99,105,195,179,110,101,115,116,117,100,105,97,110,116,101,115,114,101,115,112,111,110,115,97,98,108,101,114,101,115,111,108,117,99,105,195,179,110,103,117,97,100,97,108,97,106,97,114,97,114,101,103,105,115,116,114,97,100,111,115,111,112,111,114,116,117,110,105,100,97,100,99,111,109,101,114,99,105,97,108,101,115,102,111,116,111,103,114,97,102,195,173,97,97,117,116,111,114,105,100,97,100,101,115,105,110,103,101,110,105,101,114,195,173,97,116,101,108,101,118,105,115,105,195,179,110,99,111,109,112,101,116,101,110,99,105,97,111,112,101,114,97,99,105,111,110,101,115,101,115,116,97,98,108,101,99,105,100,111,115,105,109,112,108,101,109,101,110,116,101,97,99,116,117,97,108,109,101,110,116,101,110,97,118,101,103,97,99,105,195,179,110,99,111,110,102,111,114,109,105,100,97,100,108,105,110,101,45,104,101,105,103,104,116,58,102,111,110,116,45,102,97,109,105,108,121,58,34,32,58,32,34,104,116,116,112,58,47,47,97,112,112,108,105,99,97,116,105,111,110,115,108,105,110,107,34,32,104,114,101,102,61,34,115,112,101,99,105,102,105,99,97,108,108,121,47,47,60,33,91,67,68,65,84,65,91,10,79,114,103,97,110,105,122,97,116,105,111,110,100,105,115,116,114,105,98,117,116,105,111,110,48,112,120,59,32,104,101,105,103,104,116,58,114,101,108,97,116,105,111,110,115,104,105,112,100,101,118,105,99,101,45,119,105,100,116,104,60,100,105,118,32,99,108,97,115,115,61,34,60,108,97,98,101,108,32,102,111,114,61,34,114,101,103,105,115,116,114,97,116,105,111,110,60,47,110,111,115,99,114,105,112,116,62,10,47,105,110,100,101,120,46,104,116,109,108,34,119,105,110,100,111,119,46,111,112,101,110,40,32,33,105,109,112,111,114,116,97,110,116,59,97,112,112,108,105,99,97,116,105,111,110,47,105,110,100,101,112,101,110,100,101,110,99,101,47,47,119,119,119,46,103,111,111,103,108,101,111,114,103,97,110,105,122,97,116,105,111,110,97,117,116,111,99,111,109,112,108,101,116,101,114,101,113,117,105,114,101,109,101,110,116,115,99,111,110,115,101,114,118,97,116,105,118,101,60,102,111,114,109,32,110,97,109,101,61,34,105,110,116,101,108,108,101,99,116,117,97,108,109,97,114,103,105,110,45,108,101,102,116,58,49,56,116,104,32,99,101,110,116,117,114,121,97,110,32,105,109,112,111,114,116,97,110,116,105,110,115,116,105,116,117,116,105,111,110,115,97,98,98,114,101,118,105,97,116,105,111,110,60,105,109,103,32,99,108,97,115,115,61,34,111,114,103,97,110,105,115,97,116,105,111,110,99,105,118,105,108,105,122,97,116,105,111,110,49,57,116,104,32,99,101,110,116,117,114,121,97,114,99,104,105,116,101,99,116,117,114,101,105,110,99,111,114,112,111,114,97,116,101,100,50,48,116,104,32,99,101,110,116,117,114,121,45,99,111,110,116,97,105,110,101,114,34,62,109,111,115,116,32,110,111,116,97,98,108,121,47,62,60,47,97,62,60,47,100,105,118,62,110,111,116,105,102,105,99,97,116,105,111,110,39,117,110,100,101,102,105,110,101,100,39,41,70,117,114,116,104,101,114,109,111,114,101,44,98,101,108,105,101,118,101,32,116,104,97,116,105,110,110,101,114,72,84,77,76,32,61,32,112,114,105,111,114,32,116,111,32,116,104,101,100,114,97,109,97,116,105,99,97,108,108,121,114,101,102,101,114,114,105,110,103,32,116,111,110,101,103,111,116,105,97,116,105,111,110,115,104,101,97,100,113,117,97,114,116,101,114,115,83,111,117,116,104,32,65,102,114,105,99,97,117,110,115,117,99,99,101,115,115,102,117,108,80,101,110,110,115,121,108,118,97,110,105,97,65,115,32,97,32,114,101,115,117,108,116,44,60,104,116,109,108,32,108,97,110,103,61,34,38,108,116,59,47,115,117,112,38,103,116,59,100,101,97,108,105,110,103,32,119,105,116,104,112,104,105,108,97,100,101,108,112,104,105,97,104,105,115,116,111,114,105,99,97,108,108,121,41,59,60,47,115,99,114,105,112,116,62,10,112,97,100,100,105,110,103,45,116,111,112,58,101,120,112,101,114,105,109,101,110,116,97,108,103,101,116,65,116,116,114,105,98,117,116,101,105,110,115,116,114,117,99,116,105,111,110,115,116,101,99,104,110,111,108,111,103,105,101,115,112,97,114,116,32,111,102,32,116,104,101,32,61,102,117,110,99,116,105,111,110,40,41,123,115,117,98,115,99,114,105,112,116,105,111,110,108,46,100,116,100,34,62,13,10,60,104,116,103,101,111,103,114,97,112,104,105,99,97,108,67,111,110,115,116,105,116,117,116,105,111,110,39,44,32,102,117,110,99,116,105,111,110,40,115,117,112,112,111,114,116,101,100,32,98,121,97,103,114,105,99,117,108,116,117,114,97,108,99,111,110,115,116,114,117,99,116,105,111,110,112,117,98,108,105,99,97,116,105,111,110,115,102,111,110,116,45,115,105,122,101,58,32,49,97,32,118,97,114,105,101,116,121,32,111,102,60,100,105,118,32,115,116,121,108,101,61,34,69,110,99,121,99,108,111,112,101,100,105,97,105,102,114,97,109,101,32,115,114,99,61,34,100,101,109,111,110,115,116,114,97,116,101,100,97,99,99,111,109,112,108,105,115,104,101,100,117,110,105,118,101,114,115,105,116,105,101,115,68,101,109,111,103,114,97,112,104,105,99,115,41,59,60,47,115,99,114,105,112,116,62,60,100,101,100,105,99,97,116,101,100,32,116,111,107,110,111,119,108,101,100,103,101,32,111,102,115,97,116,105,115,102,97,99,116,105,111,110,112,97,114,116,105,99,117,108,97,114,108,121,60,47,100,105,118,62,60,47,100,105,118,62,69,110,103,108,105,115,104,32,40,85,83,41,97,112,112,101,110,100,67,104,105,108,100,40,116,114,97,110,115,109,105,115,115,105,111,110,115,46,32,72,111,119,101,118,101,114,44,32,105,110,116,101,108,108,105,103,101,110,99,101,34,32,116,97,98,105,110,100,101,120,61,34,102,108,111,97,116,58,114,105,103,104,116,59,67,111,109,109,111,110,119,101,97,108,116,104,114,97,110,103,105,110,103,32,102,114,111,109,105,110,32,119,104,105,99,104,32,116,104,101,97,116,32,108,101,97,115,116,32,111,110,101,114,101,112,114,111,100,117,99,116,105,111,110,101,110,99,121,99,108,111,112,101,100,105,97,59,102,111,110,116,45,115,105,122,101,58,49,106,117,114,105,115,100,105,99,116,105,111,110,97,116,32,116,104,97,116,32,116,105,109,101,34,62,60,97,32,99,108,97,115,115,61,34,73,110,32,97,100,100,105,116,105,111,110,44,100,101,115,99,114,105,112,116,105,111,110,43,99,111,110,118,101,114,115,97,116,105,111,110,99,111,110,116,97,99,116,32,119,105,116,104,105,115,32,103,101,110,101,114,97,108,108,121,114,34,32,99,111,110,116,101,110,116,61,34,114,101,112,114,101,115,101,110,116,105,110,103,38,108,116,59,109,97,116,104,38,103,116,59,112,114,101,115,101,110,116,97,116,105,111,110,111,99,99,97,115,105,111,110,97,108,108,121,60,105,109,103,32,119,105,100,116,104,61,34,110,97,118,105,103,97,116,105,111,110,34,62,99,111,109,112,101,110,115,97,116,105,111,110,99,104,97,109,112,105,111,110,115,104,105,112,109,101,100,105,97,61,34,97,108,108,34,32,118,105,111,108,97,116,105,111,110,32,111,102,114,101,102,101,114,101,110,99,101,32,116,111,114,101,116,117,114,110,32,116,114,117,101,59,83,116,114,105,99,116,47,47,69,78,34,32,116,114,97,110,115,97,99,116,105,111,110,115,105,110,116,101,114,118,101,110,116,105,111,110,118,101,114,105,102,105,99,97,116,105,111,110,73,110,102,111,114,109,97,116,105,111,110,32,100,105,102,102,105,99,117,108,116,105,101,115,67,104,97,109,112,105,111,110,115,104,105,112,99,97,112,97,98,105,108,105,116,105,101,115,60,33,91,101,110,100,105,102,93,45,45,62,125,10,60,47,115,99,114,105,112,116,62,10,67,104,114,105,115,116,105,97,110,105,116,121,102,111,114,32,101,120,97,109,112,108,101,44,80,114,111,102,101,115,115,105,111,110,97,108,114,101,115,116,114,105,99,116,105,111,110,115,115,117,103,103,101,115,116,32,116,104,97,116,119,97,115,32,114,101,108,101,97,115,101,100,40,115,117,99,104,32,97,115,32,116,104,101,114,101,109,111,118,101,67,108,97,115,115,40,117,110,101,109,112,108,111,121,109,101,110,116,116,104,101,32,65,109,101,114,105,99,97,110,115,116,114,117,99,116,117,114,101,32,111,102,47,105,110,100,101,120,46,104,116,109,108,32,112,117,98,108,105,115,104,101,100,32,105,110,115,112,97,110,32,99,108,97,115,115,61,34,34,62,60,97,32,104,114,101,102,61,34,47,105,110,116,114,111,100,117,99,116,105,111,110,98,101,108,111,110,103,105,110,103,32,116,111,99,108,97,105,109,101,100,32,116,104,97,116,99,111,110,115,101,113,117,101,110,99,101,115,60,109,101,116,97,32,110,97,109,101,61,34,71,117,105,100,101,32,116,111,32,116,104,101,111,118,101,114,119,104,101,108,109,105,110,103,97,103,97,105,110,115,116,32,116,104,101,32,99,111,110,99,101,110,116,114,97,116,101,100,44,10,46,110,111,110,116,111,117,99,104,32,111,98,115,101,114,118,97,116,105,111,110,115,60,47,97,62,10,60,47,100,105,118,62,10,102,32,40,100,111,99,117,109,101,110,116,46,98,111,114,100,101,114,58,32,49,112,120,32,123,102,111,110,116,45,115,105,122,101,58,49,116,114,101,97,116,109,101,110,116,32,111,102,48,34,32,104,101,105,103,104,116,61,34,49,109,111,100,105,102,105,99,97,116,105,111,110,73,110,100,101,112,101,110,100,101,110,99,101,100,105,118,105,100,101,100,32,105,110,116,111,103,114,101,97,116,101,114,32,116,104,97,110,97,99,104,105,101,118,101,109,101,110,116,115,101,115,116,97,98,108,105,115,104,105,110,103,74,97,118,97,83,99,114,105,112,116,34,32,110,101,118,101,114,116,104,101,108,101,115,115,115,105,103,110,105,102,105,99,97,110,99,101,66,114,111,97,100,99,97,115,116,105,110,103,62,38,110,98,115,112,59,60,47,116,100,62,99,111,110,116,97,105,110,101,114,34,62,10,115,117,99,104,32,97,115,32,116,104,101,32,105,110,102,108,117,101,110,99,101,32,111,102,97,32,112,97,114,116,105,99,117,108,97,114,115,114,99,61,39,104,116,116,112,58,47,47,110,97,118,105,103,97,116,105,111,110,34,32,104,97,108,102,32,111,102,32,116,104,101,32,115,117,98,115,116,97,110,116,105,97,108,32,38,110,98,115,112,59,60,47,100,105,118,62,97,100,118,97,110,116,97,103,101,32,111,102,100,105,115,99,111,118,101,114,121,32,111,102,102,117,110,100,97,109,101,110,116,97,108,32,109,101,116,114,111,112,111,108,105,116,97,110,116,104,101,32,111,112,112,111,115,105,116,101,34,32,120,109,108,58,108,97,110,103,61,34,100,101,108,105,98,101,114,97,116,101,108,121,97,108,105,103,110,61,99,101,110,116,101,114,101,118,111,108,117,116,105,111,110,32,111,102,112,114,101,115,101,114,118,97,116,105,111,110,105,109,112,114,111,118,101,109,101,110,116,115,98,101,103,105,110,110,105,110,103,32,105,110,74,101,115,117,115,32,67,104,114,105,115,116,80,117,98,108,105,99,97,116,105,111,110,115,100,105,115,97,103,114,101,101,109,101,110,116,116,101,120,116,45,97,108,105,103,110,58,114,44,32,102,117,110,99,116,105,111,110,40,41,115,105,109,105,108,97,114,105,116,105,101,115,98,111,100,121,62,60,47,104,116,109,108,62,105,115,32,99,117,114,114,101,110,116,108,121,97,108,112,104,97,98,101,116,105,99,97,108,105,115,32,115,111,109,101,116,105,109,101,115,116,121,112,101,61,34,105,109,97,103,101,47,109,97,110,121,32,111,102,32,116,104,101,32,102,108,111,119,58,104,105,100,100,101,110,59,97,118,97,105,108,97,98,108,101,32,105,110,100,101,115,99,114,105,98,101,32,116,104,101,101,120,105,115,116,101,110,99,101,32,111,102,97,108,108,32,111,118,101,114,32,116,104,101,116,104,101,32,73,110,116,101,114,110,101,116,9,60,117,108,32,99,108,97,115,115,61,34,105,110,115,116,97,108,108,97,116,105,111,110,110,101,105,103,104,98,111,114,104,111,111,100,97,114,109,101,100,32,102,111,114,99,101,115,114,101,100,117,99,105,110,103,32,116,104,101,99,111,110,116,105,110,117,101,115,32,116,111,78,111,110,101,116,104,101,108,101,115,115,44,116,101,109,112,101,114,97,116,117,114,101,115,10,9,9,60,97,32,104,114,101,102,61,34,99,108,111,115,101,32,116,111,32,116,104,101,101,120,97,109,112,108,101,115,32,111,102,32,105,115,32,97,98,111,117,116,32,116,104,101,40,115,101,101,32,98,101,108,111,119,41,46,34,32,105,100,61,34,115,101,97,114,99,104,112,114,111,102,101,115,115,105,111,110,97,108,105,115,32,97,118,97,105,108,97,98,108,101,116,104,101,32,111,102,102,105,99,105,97,108,9,9,60,47,115,99,114,105,112,116,62,10,10,9,9,60,100,105,118,32,105,100,61,34,97,99,99,101,108,101,114,97,116,105,111,110,116,104,114,111,117,103,104,32,116,104,101,32,72,97,108,108,32,111,102,32,70,97,109,101,100,101,115,99,114,105,112,116,105,111,110,115,116,114,97,110,115,108,97,116,105,111,110,115,105,110,116,101,114,102,101,114,101,110,99,101,32,116,121,112,101,61,39,116,101,120,116,47,114,101,99,101,110,116,32,121,101,97,114,115,105,110,32,116,104,101,32,119,111,114,108,100,118,101,114,121,32,112,111,112,117,108,97,114,123,98,97,99,107,103,114,111,117,110,100,58,116,114,97,100,105,116,105,111,110,97,108,32,115,111,109,101,32,111,102,32,116,104,101,32,99,111,110,110,101,99,116,101,100,32,116,111,101,120,112,108,111,105,116,97,116,105,111,110,101,109,101,114,103,101,110,99,101,32,111,102,99,111,110,115,116,105,116,117,116,105,111,110,65,32,72,105,115,116,111,114,121,32,111,102,115,105,103,110,105,102,105,99,97,110,116,32,109,97,110,117,102,97,99,116,117,114,101,100,101,120,112,101,99,116,97,116,105,111,110,115,62,60,110,111,115,99,114,105,112,116,62,60,99,97,110,32,98,101,32,102,111,117,110,100,98,101,99,97,117,115,101,32,116,104,101,32,104,97,115,32,110,111,116,32,98,101,101,110,110,101,105,103,104,98,111,117,114,105,110,103,119,105,116,104,111,117,116,32,116,104,101,32,97,100,100,101,100,32,116,111,32,116,104,101,9,60,108,105,32,99,108,97,115,115,61,34,105,110,115,116,114,117,109,101,110,116,97,108,83,111,118,105,101,116,32,85,110,105,111,110,97,99,107,110,111,119,108,101,100,103,101,100,119,104,105,99,104,32,99,97,110,32,98,101,110,97,109,101,32,102,111,114,32,116,104,101,97,116,116,101,110,116,105,111,110,32,116,111,97,116,116,101,109,112,116,115,32,116,111,32,100,101,118,101,108,111,112,109,101,110,116,115,73,110,32,102,97,99,116,44,32,116,104,101,60,108,105,32,99,108,97,115,115,61,34,97,105,109,112,108,105,99,97,116,105,111,110,115,115,117,105,116,97,98,108,101,32,102,111,114,109,117,99,104,32,111,102,32,116,104,101,32,99,111,108,111,110,105,122,97,116,105,111,110,112,114,101,115,105,100,101,110,116,105,97,108,99,97,110,99,101,108,66,117,98,98,108,101,32,73,110,102,111,114,109,97,116,105,111,110,109,111,115,116,32,111,102,32,116,104,101,32,105,115,32,100,101,115,99,114,105,98,101,100,114,101,115,116,32,111,102,32,116,104,101,32,109,111,114,101,32,111,114,32,108,101,115,115,105,110,32,83,101,112,116,101,109,98,101,114,73,110,116,101,108,108,105,103,101,110,99,101,115,114,99,61,34,104,116,116,112,58,47,47,112,120,59,32,104,101,105,103,104,116,58,32,97,118,97,105,108,97,98,108,101,32,116,111,109,97,110,117,102,97,99,116,117,114,101,114,104,117,109,97,110,32,114,105,103,104,116,115,108,105,110,107,32,104,114,101,102,61,34,47,97,118,97,105,108,97,98,105,108,105,116,121,112,114,111,112,111,114,116,105,111,110,97,108,111,117,116,115,105,100,101,32,116,104,101,32,97,115,116,114,111,110,111,109,105,99,97,108,104,117,109,97,110,32,98,101,105,110,103,115,110,97,109,101,32,111,102,32,116,104,101,32,97,114,101,32,102,111,117,110,100,32,105,110,97,114,101,32,98,97,115,101,100,32,111,110,115,109,97,108,108,101,114,32,116,104,97,110,97,32,112,101,114,115,111,110,32,119,104,111,101,120,112,97,110,115,105,111,110,32,111,102,97,114,103,117,105,110,103,32,116,104,97,116,110,111,119,32,107,110,111,119,110,32,97,115,73,110,32,116,104,101,32,101,97,114,108,121,105,110,116,101,114,109,101,100,105,97,116,101,100,101,114,105,118,101,100,32,102,114,111,109,83,99,97,110,100,105,110,97,118,105,97,110,60,47,97,62,60,47,100,105,118,62,13,10,99,111,110,115,105,100,101,114,32,116,104,101,97,110,32,101,115,116,105,109,97,116,101,100,116,104,101,32,78,97,116,105,111,110,97,108,60,100,105,118,32,105,100,61,34,112,97,103,114,101,115,117,108,116,105,110,103,32,105,110,99,111,109,109,105,115,115,105,111,110,101,100,97,110,97,108,111,103,111,117,115,32,116,111,97,114,101,32,114,101,113,117,105,114,101,100,47,117,108,62,10,60,47,100,105,118,62,10,119,97,115,32,98,97,115,101,100,32,111,110,97,110,100,32,98,101,99,97,109,101,32,97,38,110,98,115,112,59,38,110,98,115,112,59,116,34,32,118,97,108,117,101,61,34,34,32,119,97,115,32,99,97,112,116,117,114,101,100,110,111,32,109,111,114,101,32,116,104,97,110,114,101,115,112,101,99,116,105,118,101,108,121,99,111,110,116,105,110,117,101,32,116,111,32,62,13,10,60,104,101,97,100,62,13,10,60,119,101,114,101,32,99,114,101,97,116,101,100,109,111,114,101,32,103,101,110,101,114,97,108,105,110,102,111,114,109,97,116,105,111,110,32,117,115,101,100,32,102,111,114,32,116,104,101,105,110,100,101,112,101,110,100,101,110,116,32,116,104,101,32,73,109,112,101,114,105,97,108,99,111,109,112,111,110,101,110,116,32,111,102,116,111,32,116,104,101,32,110,111,114,116,104,105,110,99,108,117,100,101,32,116,104,101,32,67,111,110,115,116,114,117,99,116,105,111,110,115,105,100,101,32,111,102,32,116,104,101,32,119,111,117,108,100,32,110,111,116,32,98,101,102,111,114,32,105,110,115,116,97,110,99,101,105,110,118,101,110,116,105,111,110,32,111,102,109,111,114,101,32,99,111,109,112,108,101,120,99,111,108,108,101,99,116,105,118,101,108,121,98,97,99,107,103,114,111,117,110,100,58,32,116,101,120,116,45,97,108,105,103,110,58,32,105,116,115,32,111,114,105,103,105,110,97,108,105,110,116,111,32,97,99,99,111,117,110,116,116,104,105,115,32,112,114,111,99,101,115,115,97,110,32,101,120,116,101,110,115,105,118,101,104,111,119,101,118,101,114,44,32,116,104,101,116,104,101,121,32,97,114,101,32,110,111,116,114,101,106,101,99,116,101,100,32,116,104,101,99,114,105,116,105,99,105,115,109,32,111,102,100,117,114,105,110,103,32,119,104,105,99,104,112,114,111,98,97,98,108,121,32,116,104,101,116,104,105,115,32,97,114,116,105,99,108,101,40,102,117,110,99,116,105,111,110,40,41,123,73,116,32,115,104,111,117,108,100,32,98,101,97,110,32,97,103,114,101,101,109,101,110,116,97,99,99,105,100,101,110,116,97,108,108,121,100,105,102,102,101,114,115,32,102,114,111,109,65,114,99,104,105,116,101,99,116,117,114,101,98,101,116,116,101,114,32,107,110,111,119,110,97,114,114,97,110,103,101,109,101,110,116,115,105,110,102,108,117,101,110,99,101,32,111,110,97,116,116,101,110,100,101,100,32,116,104,101,105,100,101,110,116,105,99,97,108,32,116,111,115,111,117,116,104,32,111,102,32,116,104,101,112,97,115,115,32,116,104,114,111,117,103,104,120,109,108,34,32,116,105,116,108,101,61,34,119,101,105,103,104,116,58,98,111,108,100,59,99,114,101,97,116,105,110,103,32,116,104,101,100,105,115,112,108,97,121,58,110,111,110,101,114,101,112,108,97,99,101,100,32,116,104,101,60,105,109,103,32,115,114,99,61,34,47,105,104,116,116,112,115,58,47,47,119,119,119,46,87,111,114,108,100,32,87,97,114,32,73,73,116,101,115,116,105,109,111,110,105,97,108,115,102,111,117,110,100,32,105,110,32,116,104,101,114,101,113,117,105,114,101,100,32,116,111,32,97,110,100,32,116,104,97,116,32,116,104,101,98,101,116,119,101,101,110,32,116,104,101,32,119,97,115,32,100,101,115,105,103,110,101,100,99,111,110,115,105,115,116,115,32,111,102,32,99,111,110,115,105,100,101,114,97,98,108,121,112,117,98,108,105,115,104,101,100,32,98,121,116,104,101,32,108,97,110,103,117,97,103,101,67,111,110,115,101,114,118,97,116,105,111,110,99,111,110,115,105,115,116,101,100,32,111,102,114,101,102,101,114,32,116,111,32,116,104,101,98,97,99,107,32,116,111,32,116,104,101,32,99,115,115,34,32,109,101,100,105,97,61,34,80,101,111,112,108,101,32,102,114,111,109,32,97,118,97,105,108,97,98,108,101,32,111,110,112,114,111,118,101,100,32,116,111,32,98,101,115,117,103,103,101,115,116,105,111,110,115,34,119,97,115,32,107,110,111,119,110,32,97,115,118,97,114,105,101,116,105,101,115,32,111,102,108,105,107,101,108,121,32,116,111,32,98,101,99,111,109,112,114,105,115,101,100,32,111,102,115,117,112,112,111,114,116,32,116,104,101,32,104,97,110,100,115,32,111,102,32,116,104,101,99,111,117,112,108,101,100,32,119,105,116,104,99,111,110,110,101,99,116,32,97,110,100,32,98,111,114,100,101,114,58,110,111,110,101,59,112,101,114,102,111,114,109,97,110,99,101,115,98,101,102,111,114,101,32,98,101,105,110,103,108,97,116,101,114,32,98,101,99,97,109,101,99,97,108,99,117,108,97,116,105,111,110,115,111,102,116,101,110,32,99,97,108,108,101,100,114,101,115,105,100,101,110,116,115,32,111,102,109,101,97,110,105,110,103,32,116,104,97,116,62,60,108,105,32,99,108,97,115,115,61,34,101,118,105,100,101,110,99,101,32,102,111,114,101,120,112,108,97,110,97,116,105,111,110,115,101,110,118,105,114,111,110,109,101,110,116,115,34,62,60,47,97,62,60,47,100,105,118,62,119,104,105,99,104,32,97,108,108,111,119,115,73,110,116,114,111,100,117,99,116,105,111,110,100,101,118,101,108,111,112,101,100,32,98,121,97,32,119,105,100,101,32,114,97,110,103,101,111,110,32,98,101,104,97,108,102,32,111,102,118,97,108,105,103,110,61,34,116,111,112,34,112,114,105,110,99,105,112,108,101,32,111,102,97,116,32,116,104,101,32,116,105,109,101,44,60,47,110,111,115,99,114,105,112,116,62,13,115,97,105,100,32,116,111,32,104,97,118,101,105,110,32,116,104,101,32,102,105,114,115,116,119,104,105,108,101,32,111,116,104,101,114,115,104,121,112,111,116,104,101,116,105,99,97,108,112,104,105,108,111,115,111,112,104,101,114,115,112,111,119,101,114,32,111,102,32,116,104,101,99,111,110,116,97,105,110,101,100,32,105,110,112,101,114,102,111,114,109,101,100,32,98,121,105,110,97,98,105,108,105,116,121,32,116,111,119,101,114,101,32,119,114,105,116,116,101,110,115,112,97,110,32,115,116,121,108,101,61,34,105,110,112,117,116,32,110,97,109,101,61,34,116,104,101,32,113,117,101,115,116,105,111,110,105,110,116,101,110,100,101,100,32,102,111,114,114,101,106,101,99,116,105,111,110,32,111,102,105,109,112,108,105,101,115,32,116,104,97,116,105,110,118,101,110,116,101,100,32,116,104,101,116,104,101,32,115,116,97,110,100,97,114,100,119,97,115,32,112,114,111,98,97,98,108,121,108,105,110,107,32,98,101,116,119,101,101,110,112,114,111,102,101,115,115,111,114,32,111,102,105,110,116,101,114,97,99,116,105,111,110,115,99,104,97,110,103,105,110,103,32,116,104,101,73,110,100,105,97,110,32,79,99,101,97,110,32,99,108,97,115,115,61,34,108,97,115,116,119,111,114,107,105,110,103,32,119,105,116,104,39,104,116,116,112,58,47,47,119,119,119,46,121,101,97,114,115,32,98,101,102,111,114,101,84,104,105,115,32,119,97,115,32,116,104,101,114,101,99,114,101,97,116,105,111,110,97,108,101,110,116,101,114,105,110,103,32,116,104,101,109,101,97,115,117,114,101,109,101,110,116,115,97,110,32,101,120,116,114,101,109,101,108,121,118,97,108,117,101,32,111,102,32,116,104,101,115,116,97,114,116,32,111,102,32,116,104,101,10,60,47,115,99,114,105,112,116,62,10,10,97,110,32,101,102,102,111,114,116,32,116,111,105,110,99,114,101,97,115,101,32,116,104,101,116,111,32,116,104,101,32,115,111,117,116,104,115,112,97,99,105,110,103,61,34,48,34,62,115,117,102,102,105,99,105,101,110,116,108,121,116,104,101,32,69,117,114,111,112,101,97,110,99,111,110,118,101,114,116,101,100,32,116,111,99,108,101,97,114,84,105,109,101,111,117,116,100,105,100,32,110,111,116,32,104,97,118,101,99,111,110,115,101,113,117,101,110,116,108,121,102,111,114,32,116,104,101,32,110,101,120,116,101,120,116,101,110,115,105,111,110,32,111,102,101,99,111,110,111,109,105,99,32,97,110,100,97,108,116,104,111,117,103,104,32,116,104,101,97,114,101,32,112,114,111,100,117,99,101,100,97,110,100,32,119,105,116,104,32,116,104,101,105,110,115,117,102,102,105,99,105,101,110,116,103,105,118,101,110,32,98,121,32,116,104,101,115,116,97,116,105,110,103,32,116,104,97,116,101,120,112,101,110,100,105,116,117,114,101,115,60,47,115,112,97,110,62,60,47,97,62,10,116,104,111,117,103,104,116,32,116,104,97,116,111,110,32,116,104,101,32,98,97,115,105,115,99,101,108,108,112,97,100,100,105,110,103,61,105,109,97,103,101,32,111,102,32,116,104,101,114,101,116,117,114,110,105,110,103,32,116,111,105,110,102,111,114,109,97,116,105,111,110,44,115,101,112,97,114,97,116,101,100,32,98,121,97,115,115,97,115,115,105,110,97,116,101,100,115,34,32,99,111,110,116,101,110,116,61,34,97,117,116,104,111,114,105,116,121,32,111,102,110,111,114,116,104,119,101,115,116,101,114,110,60,47,100,105,118,62,10,60,100,105,118,32,34,62,60,47,100,105,118,62,13,10,32,32,99,111,110,115,117,108,116,97,116,105,111,110,99,111,109,109,117,110,105,116,121,32,111,102,116,104,101,32,110,97,116,105,111,110,97,108,105,116,32,115,104,111,117,108,100,32,98,101,112,97,114,116,105,99,105,112,97,110,116,115,32,97,108,105,103,110,61,34,108,101,102,116,116,104,101,32,103,114,101,97,116,101,115,116,115,101,108,101,99,116,105,111,110,32,111,102,115,117,112,101,114,110,97,116,117,114,97,108,100,101,112,101,110,100,101,110,116,32,111,110,105,115,32,109,101,110,116,105,111,110,101,100,97,108,108,111,119,105,110,103,32,116,104,101,119,97,115,32,105,110,118,101,110,116,101,100,97,99,99,111,109,112,97,110,121,105,110,103,104,105,115,32,112,101,114,115,111,110,97,108,97,118,97,105,108,97,98,108,101,32,97,116,115,116,117,100,121,32,111,102,32,116,104,101,111,110,32,116,104,101,32,111,116,104,101,114,101,120,101,99,117,116,105,111,110,32,111,102,72,117,109,97,110,32,82,105,103,104,116,115,116,101,114,109,115,32,111,102,32,116,104,101,97,115,115,111,99,105,97,116,105,111,110,115,114,101,115,101,97,114,99,104,32,97,110,100,115,117,99,99,101,101,100,101,100,32,98,121,100,101,102,101,97,116,101,100,32,116,104,101,97,110,100,32,102,114,111,109,32,116,104,101,98,117,116,32,116,104,101,121,32,97,114,101,99,111,109,109,97,110,100,101,114,32,111,102,115,116,97,116,101,32,111,102,32,116,104,101,121,101,97,114,115,32,111,102,32,97,103,101,116,104,101,32,115,116,117,100,121,32,111,102,60,117,108,32,99,108,97,115,115,61,34,115,112,108,97,99,101,32,105,110,32,116,104,101,119,104,101,114,101,32,104,101,32,119,97,115,60,108,105,32,99,108,97,115,115,61,34,102,116,104,101,114,101,32,97,114,101,32,110,111,119,104,105,99,104,32,98,101,99,97,109,101,104,101,32,112,117,98,108,105,115,104,101,100,101,120,112,114,101,115,115,101,100,32,105,110,116,111,32,119,104,105,99,104,32,116,104,101,99,111,109,109,105,115,115,105,111,110,101,114,102,111,110,116,45,119,101,105,103,104,116,58,116,101,114,114,105,116,111,114,121,32,111,102,101,120,116,101,110,115,105,111,110,115,34,62,82,111,109,97,110,32,69,109,112,105,114,101,101,113,117,97,108,32,116,111,32,116,104,101,73,110,32,99,111,110,116,114,97,115,116,44,104,111,119,101,118,101,114,44,32,97,110,100,105,115,32,116,121,112,105,99,97,108,108,121,97,110,100,32,104,105,115,32,119,105,102,101,40,97,108,115,111,32,99,97,108,108,101,100,62,60,117,108,32,99,108,97,115,115,61,34,101,102,102,101,99,116,105,118,101,108,121,32,101,118,111,108,118,101,100,32,105,110,116,111,115,101,101,109,32,116,111,32,104,97,118,101,119,104,105,99,104,32,105,115,32,116,104,101,116,104,101,114,101,32,119,97,115,32,110,111,97,110,32,101,120,99,101,108,108,101,110,116,97,108,108,32,111,102,32,116,104,101,115,101,100,101,115,99,114,105,98,101,100,32,98,121,73,110,32,112,114,97,99,116,105,99,101,44,98,114,111,97,100,99,97,115,116,105,110,103,99,104,97,114,103,101,100,32,119,105,116,104,114,101,102,108,101,99,116,101,100,32,105,110,115,117,98,106,101,99,116,101,100,32,116,111,109,105,108,105,116,97,114,121,32,97,110,100,116,111,32,116,104,101,32,112,111,105,110,116,101,99,111,110,111,109,105,99,97,108,108,121,115,101,116,84,97,114,103,101,116,105,110,103,97,114,101,32,97,99,116,117,97,108,108,121,118,105,99,116,111,114,121,32,111,118,101,114,40,41,59,60,47,115,99,114,105,112,116,62,99,111,110,116,105,110,117,111,117,115,108,121,114,101,113,117,105,114,101,100,32,102,111,114,101,118,111,108,117,116,105,111,110,97,114,121,97,110,32,101,102,102,101,99,116,105,118,101,110,111,114,116,104,32,111,102,32,116,104,101,44,32,119,104,105,99,104,32,119,97,115,32,102,114,111,110,116,32,111,102,32,116,104,101,111,114,32,111,116,104,101,114,119,105,115,101,115,111,109,101,32,102,111,114,109,32,111,102,104,97,100,32,110,111,116,32,98,101,101,110,103,101,110,101,114,97,116,101,100,32,98,121,105,110,102,111,114,109,97,116,105,111,110,46,112,101,114,109,105,116,116,101,100,32,116,111,105,110,99,108,117,100,101,115,32,116,104,101,100,101,118,101,108,111,112,109,101,110,116,44,101,110,116,101,114,101,100,32,105,110,116,111,116,104,101,32,112,114,101,118,105,111,117,115,99,111,110,115,105,115,116,101,110,116,108,121,97,114,101,32,107,110,111,119,110,32,97,115,116,104,101,32,102,105,101,108,100,32,111,102,116,104,105,115,32,116,121,112,101,32,111,102,103,105,118,101,110,32,116,111,32,116,104,101,116,104,101,32,116,105,116,108,101,32,111,102,99,111,110,116,97,105,110,115,32,116,104,101,105,110,115,116,97,110,99,101,115,32,111,102,105,110,32,116,104,101,32,110,111,114,116,104,100,117,101,32,116,111,32,116,104,101,105,114,97,114,101,32,100,101,115,105,103,110,101,100,99,111,114,112,111,114,97,116,105,111,110,115,119,97,115,32,116,104,97,116,32,116,104,101,111,110,101,32,111,102,32,116,104,101,115,101,109,111,114,101,32,112,111,112,117,108,97,114,115,117,99,99,101,101,100,101,100,32,105,110,115,117,112,112,111,114,116,32,102,114,111,109,105,110,32,100,105,102,102,101,114,101,110,116,100,111,109,105,110,97,116,101,100,32,98,121,100,101,115,105,103,110,101,100,32,102,111,114,111,119,110,101,114,115,104,105,112,32,111,102,97,110,100,32,112,111,115,115,105,98,108,121,115,116,97,110,100,97,114,100,105,122,101,100,114,101,115,112,111,110,115,101,84,101,120,116,119,97,115,32,105,110,116,101,110,100,101,100,114,101,99,101,105,118,101,100,32,116,104,101,97,115,115,117,109,101,100,32,116,104,97,116,97,114,101,97,115,32,111,102,32,116,104,101,112,114,105,109,97,114,105,108,121,32,105,110,116,104,101,32,98,97,115,105,115,32,111,102,105,110,32,116,104,101,32,115,101,110,115,101,97,99,99,111,117,110,116,115,32,102,111,114,100,101,115,116,114,111,121,101,100,32,98,121,97,116,32,108,101,97,115,116,32,116,119,111,119,97,115,32,100,101,99,108,97,114,101,100,99,111,117,108,100,32,110,111,116,32,98,101,83,101,99,114,101,116,97,114,121,32,111,102,97,112,112,101,97,114,32,116,111,32,98,101,109,97,114,103,105,110,45,116,111,112,58,49,47,94,92,115,43,124,92,115,43,36,47,103,101,41,123,116,104,114,111,119,32,101,125,59,116,104,101,32,115,116,97,114,116,32,111,102,116,119,111,32,115,101,112,97,114,97,116,101,108,97,110,103,117,97,103,101,32,97,110,100,119,104,111,32,104,97,100,32,98,101,101,110,111,112,101,114,97,116,105,111,110,32,111,102,100,101,97,116,104,32,111,102,32,116,104,101,114,101,97,108,32,110,117,109,98,101,114,115,9,60,108,105,110,107,32,114,101,108,61,34,112,114,111,118,105,100,101,100,32,116,104,101,116,104,101,32,115,116,111,114,121,32,111,102,99,111,109,112,101,116,105,116,105,111,110,115,101,110,103,108,105,115,104,32,40,85,75,41,101,110,103,108,105,115,104,32,40,85,83,41,208,156,208,190,208,189,208,179,208,190,208,187,208,161,209,128,208,191,209,129,208,186,208,184,209,129,209,128,208,191,209,129,208,186,208,184,209,129,209,128,208,191,209,129,208,186,208,190,217,132,216,185,216,177,216,168,217,138,216,169,230,173,163,233,171,148,228,184,173,230,150,135,231,174,128,228,189,147,228,184,173,230,150,135,231,185,129,228,189,147,228,184,173,230,150,135,230,156,137,233,153,144,229,133,172,229,143,184,228,186,186,230,176,145,230,148,191,229,186,156,233,152,191,233,135,140,229,183,180,229,183,180,231,164,190,228,188,154,228,184,187,228,185,137,230,147,141,228,189,156,231,179,187,231,187,159,230,148,191,231,173,150,230,179,149,232,167,132,105,110,102,111,114,109,97,99,105,195,179,110,104,101,114,114,97,109,105,101,110,116,97,115,101,108,101,99,116,114,195,179,110,105,99,111,100,101,115,99,114,105,112,99,105,195,179,110,99,108,97,115,105,102,105,99,97,100,111,115,99,111,110,111,99,105,109,105,101,110,116,111,112,117,98,108,105,99,97,99,105,195,179,110,114,101,108,97,99,105,111,110,97,100,97,115,105,110,102,111,114,109,195,161,116,105,99,97,114,101,108,97,99,105,111,110,97,100,111,115,100,101,112,97,114,116,97,109,101,110,116,111,116,114,97,98,97,106,97,100,111,114,101,115,100,105,114,101,99,116,97,109,101,110,116,101,97,121,117,110,116,97,109,105,101,110,116,111,109,101,114,99,97,100,111,76,105,98,114,101,99,111,110,116,195,161,99,116,101,110,111,115,104,97,98,105,116,97,99,105,111,110,101,115,99,117,109,112,108,105,109,105,101,110,116,111,114,101,115,116,97,117,114,97,110,116,101,115,100,105,115,112,111,115,105,99,105,195,179,110,99,111,110,115,101,99,117,101,110,99,105,97,101,108,101,99,116,114,195,179,110,105,99,97,97,112,108,105,99,97,99,105,111,110,101,115,100,101,115,99,111,110,101,99,116,97,100,111,105,110,115,116,97,108,97,99,105,195,179,110,114,101,97,108,105,122,97,99,105,195,179,110,117,116,105,108,105,122,97,99,105,195,179,110,101,110,99,105,99,108,111,112,101,100,105,97,101,110,102,101,114,109,101,100,97,100,101,115,105,110,115,116,114,117,109,101,110,116,111,115,101,120,112,101,114,105,101,110,99,105,97,115,105,110,115,116,105,116,117,99,105,195,179,110,112,97,114,116,105,99,117,108,97,114,101,115,115,117,98,99,97,116,101,103,111,114,105,97,209,130,208,190,208,187,209,140,208,186,208,190,208,160,208,190,209,129,209,129,208,184,208,184,209,128,208,176,208,177,208,190,209,130,209,139,208,177,208,190,208,187,209,140,209,136,208,181,208,191,209,128,208,190,209,129,209,130,208,190,208,188,208,190,208,182,208,181,209,130,208,181,208,180,209,128,209,131,208,179,208,184,209,133,209,129,208,187,209,131,209,135,208,176,208,181,209,129,208,181,208,185,209,135,208,176,209,129,208,178,209,129,208,181,208,179,208,180,208,176,208,160,208,190,209,129,209,129,208,184,209,143,208,156,208,190,209,129,208,186,208,178,208,181,208,180,209,128,209,131,208,179,208,184,208,181,208,179,208,190,209,128,208,190,208,180,208,176,208,178,208,190,208,191,209,128,208,190,209,129,208,180,208,176,208,189,208,189,209,139,209,133,208,180,208,190,208,187,208,182,208,189,209,139,208,184,208,188,208,181,208,189,208,189,208,190,208,156,208,190,209,129,208,186,208,178,209,139,209,128,209,131,208,177,208,187,208,181,208,185,208,156,208,190,209,129,208,186,208,178,208,176,209,129,209,130,209,128,208,176,208,189,209,139,208,189,208,184,209,135,208,181,208,179,208,190,209,128,208,176,208,177,208,190,209,130,208,181,208,180,208,190,208,187,208,182,208,181,208,189,209,131,209,129,208,187,209,131,208,179,208,184,209,130,208,181,208,191,208,181,209,128,209,140,208,158,208,180,208,189,208,176,208,186,208,190,208,191,208,190,209,130,208,190,208,188,209,131,209,128,208,176,208,177,208,190,209,130,209,131,208,176,208,191,209,128,208,181,208,187,209,143,208,178,208,190,208,190,208,177,209,137,208,181,208,190,208,180,208,189,208,190,208,179,208,190,209,129,208,178,208,190,208,181,208,179,208,190,209,129,209,130,208,176,209,130,209,140,208,184,208,180,209,128,209,131,208,179,208,190,208,185,209,132,208,190,209,128,209,131,208,188,208,181,209,133,208,190,209,128,208,190,209,136,208,190,208,191,209,128,208,190,209,130,208,184,208,178,209,129,209,129,209,139,208,187,208,186,208,176,208,186,208,176,208,182,208,180,209,139,208,185,208,178,208,187,208,176,209,129,209,130,208,184,208,179,209,128,209,131,208,191,208,191,209,139,208,178,208,188,208,181,209,129,209,130,208,181,209,128,208,176,208,177,208,190,209,130,208,176,209,129,208,186,208,176,208,183,208,176,208,187,208,191,208,181,209,128,208,178,209,139,208,185,208,180,208,181,208,187,208,176,209,130,209,140,208,180,208,181,208,189,209,140,208,179,208,184,208,191,208,181,209,128,208,184,208,190,208,180,208,177,208,184,208,183,208,189,208,181,209,129,208,190,209,129,208,189,208,190,208,178,208,181,208,188,208,190,208,188,208,181,208,189,209,130,208,186,209,131,208,191,208,184,209,130,209,140,208,180,208,190,208,187,208,182,208,189,208,176,209,128,208,176,208,188,208,186,208,176,209,133,208,189,208,176,209,135,208,176,208,187,208,190,208,160,208,176,208,177,208,190,209,130,208,176,208,162,208,190,208,187,209,140,208,186,208,190,209,129,208,190,208,178,209,129,208,181,208,188,208,178,209,130,208,190,209,128,208,190,208,185,208,189,208,176,209,135,208,176,208,187,208,176,209,129,208,191,208,184,209,129,208,190,208,186,209,129,208,187,209,131,208,182,208,177,209,139,209,129,208,184,209,129,209,130,208,181,208,188,208,191,208,181,209,135,208,176,209,130,208,184,208,189,208,190,208,178,208,190,208,179,208,190,208,191,208,190,208,188,208,190,209,137,208,184,209,129,208,176,208,185,209,130,208,190,208,178,208,191,208,190,209,135,208,181,208,188,209,131,208,191,208,190,208,188,208,190,209,137,209,140,208,180,208,190,208,187,208,182,208,189,208,190,209,129,209,129,209,139,208,187,208,186,208,184,208,177,209,139,209,129,209,130,209,128,208,190,208,180,208,176,208,189,208,189,209,139,208,181,208,188,208,189,208,190,208,179,208,184,208,181,208,191,209,128,208,190,208,181,208,186,209,130,208,161,208,181,208,185,209,135,208,176,209,129,208,188,208,190,208,180,208,181,208,187,208,184,209,130,208,176,208,186,208,190,208,179,208,190,208,190,208,189,208,187,208,176,208,185,208,189,208,179,208,190,209,128,208,190,208,180,208,181,208,178,208,181,209,128,209,129,208,184,209,143,209,129,209,130,209,128,208,176,208,189,208,181,209,132,208,184,208,187,209,140,208,188,209,139,209,131,209,128,208,190,208,178,208,189,209,143,209,128,208,176,208,183,208,189,209,139,209,133,208,184,209,129,208,186,208,176,209,130,209,140,208,189,208,181,208,180,208,181,208,187,209,142,209,143,208,189,208,178,208,176,209,128,209,143,208,188,208,181,208,189,209,140,209,136,208,181,208,188,208,189,208,190,208,179,208,184,209,133,208,180,208,176,208,189,208,189,208,190,208,185,208,183,208,189,208,176,209,135,208,184,209,130,208,189,208,181,208,187,209,140,208,183,209,143,209,132,208,190,209,128,209,131,208,188,208,176,208,162,208,181,208,191,208,181,209,128,209,140,208,188,208,181,209,129,209,143,209,134,208,176,208,183,208,176,209,137,208,184,209,130,209,139,208,155,209,131,209,135,209,136,208,184,208,181,224,164,168,224,164,185,224,165,128,224,164,130,224,164,149,224,164,176,224,164,168,224,165,135,224,164,133,224,164,170,224,164,168,224,165,135,224,164,149,224,164,191,224,164,175,224,164,190,224,164,149,224,164,176,224,165,135,224,164,130,224,164,133,224,164,168,224,165,141,224,164,175,224,164,149,224,165,141,224,164,175,224,164,190,224,164,151,224,164,190,224,164,135,224,164,161,224,164,172,224,164,190,224,164,176,224,165,135,224,164,149,224,164,191,224,164,184,224,165,128,224,164,166,224,164,191,224,164,175,224,164,190,224,164,170,224,164,185,224,164,178,224,165,135,224,164,184,224,164,191,224,164,130,224,164,185,224,164,173,224,164,190,224,164,176,224,164,164,224,164,133,224,164,170,224,164,168,224,165,128,224,164,181,224,164,190,224,164,178,224,165,135,224,164,184,224,165,135,224,164,181,224,164,190,224,164,149,224,164,176,224,164,164,224,165,135,224,164,174,224,165,135,224,164,176,224,165,135,224,164,185,224,165,139,224,164,168,224,165,135,224,164,184,224,164,149,224,164,164,224,165,135,224,164,172,224,164,185,224,165,129,224,164,164,224,164,184,224,164,190,224,164,135,224,164,159,224,164,185,224,165,139,224,164,151,224,164,190,224,164,156,224,164,190,224,164,168,224,165,135,224,164,174,224,164,191,224,164,168,224,164,159,224,164,149,224,164,176,224,164,164,224,164,190,224,164,149,224,164,176,224,164,168,224,164,190,224,164,137,224,164,168,224,164,149,224,165,135,224,164,175,224,164,185,224,164,190,224,164,129,224,164,184,224,164,172,224,164,184,224,165,135,224,164,173,224,164,190,224,164,183,224,164,190,224,164,134,224,164,170,224,164,149,224,165,135,224,164,178,224,164,191,224,164,175,224,165,135,224,164,182,224,165,129,224,164,176,224,165,130,224,164,135,224,164,184,224,164,149,224,165,135,224,164,152,224,164,130,224,164,159,224,165,135,224,164,174,224,165,135,224,164,176,224,165,128,224,164,184,224,164,149,224,164,164,224,164,190,224,164,174,224,165,135,224,164,176,224,164,190,224,164,178,224,165,135,224,164,149,224,164,176,224,164,133,224,164,167,224,164,191,224,164,149,224,164,133,224,164,170,224,164,168,224,164,190,224,164,184,224,164,174,224,164,190,224,164,156,224,164,174,224,165,129,224,164,157,224,165,135,224,164,149,224,164,190,224,164,176,224,164,163,224,164,185,224,165,139,224,164,164,224,164,190,224,164,149,224,164,161,224,164,188,224,165,128,224,164,175,224,164,185,224,164,190,224,164,130,224,164,185,224,165,139,224,164,159,224,164,178,224,164,182,224,164,172,224,165,141,224,164,166,224,164,178,224,164,191,224,164,175,224,164,190,224,164,156,224,165,128,224,164,181,224,164,168,224,164,156,224,164,190,224,164,164,224,164,190,224,164,149,224,165,136,224,164,184,224,165,135,224,164,134,224,164,170,224,164,149,224,164,190,224,164,181,224,164,190,224,164,178,224,165,128,224,164,166,224,165,135,224,164,168,224,165,135,224,164,170,224,165,130,224,164,176,224,165,128,224,164,170,224,164,190,224,164,168,224,165,128,224,164,137,224,164,184,224,164,149,224,165,135,224,164,185,224,165,139,224,164,151,224,165,128,224,164,172,224,165,136,224,164,160,224,164,149,224,164,134,224,164,170,224,164,149,224,165,128,224,164,181,224,164,176,224,165,141,224,164,183,224,164,151,224,164,190,224,164,130,224,164,181,224,164,134,224,164,170,224,164,149,224,165,139,224,164,156,224,164,191,224,164,178,224,164,190,224,164,156,224,164,190,224,164,168,224,164,190,224,164,184,224,164,185,224,164,174,224,164,164,224,164,185,224,164,174,224,165,135,224,164,130,224,164,137,224,164,168,224,164,149,224,165,128,224,164,175,224,164,190,224,164,185,224,165,130,224,164,166,224,164,176,224,165,141,224,164,156,224,164,184,224,165,130,224,164,154,224,165,128,224,164,170,224,164,184,224,164,130,224,164,166,224,164,184,224,164,181,224,164,190,224,164,178,224,164,185,224,165,139,224,164,168,224,164,190,224,164,185,224,165,139,224,164,164,224,165,128,224,164,156,224,165,136,224,164,184,224,165,135,224,164,181,224,164,190,224,164,170,224,164,184,224,164,156,224,164,168,224,164,164,224,164,190,224,164,168,224,165,135,224,164,164,224,164,190,224,164,156,224,164,190,224,164,176,224,165,128,224,164,152,224,164,190,224,164,175,224,164,178,224,164,156,224,164,191,224,164,178,224,165,135,224,164,168,224,165,128,224,164,154,224,165,135,224,164,156,224,164,190,224,164,130,224,164,154,224,164,170,224,164,164,224,165,141,224,164,176,224,164,151,224,165,130,224,164,151,224,164,178,224,164,156,224,164,190,224,164,164,224,165,135,224,164,172,224,164,190,224,164,185,224,164,176,224,164,134,224,164,170,224,164,168,224,165,135,224,164,181,224,164,190,224,164,185,224,164,168,224,164,135,224,164,184,224,164,149,224,164,190,224,164,184,224,165,129,224,164,172,224,164,185,224,164,176,224,164,185,224,164,168,224,165,135,224,164,135,224,164,184,224,164,184,224,165,135,224,164,184,224,164,185,224,164,191,224,164,164,224,164,172,224,164,161,224,164,188,224,165,135,224,164,152,224,164,159,224,164,168,224,164,190,224,164,164,224,164,178,224,164,190,224,164,182,224,164,170,224,164,190,224,164,130,224,164,154,224,164,182,224,165,141,224,164,176,224,165,128,224,164,172,224,164,161,224,164,188,224,165,128,224,164,185,224,165,139,224,164,164,224,165,135,224,164,184,224,164,190,224,164,136,224,164,159,224,164,182,224,164,190,224,164,175,224,164,166,224,164,184,224,164,149,224,164,164,224,165,128,224,164,156,224,164,190,224,164,164,224,165,128,224,164,181,224,164,190,224,164,178,224,164,190,224,164,185,224,164,156,224,164,190,224,164,176,224,164,170,224,164,159,224,164,168,224,164,190,224,164,176,224,164,150,224,164,168,224,165,135,224,164,184,224,164,161,224,164,188,224,164,149,224,164,174,224,164,191,224,164,178,224,164,190,224,164,137,224,164,184,224,164,149,224,165,128,224,164,149,224,165,135,224,164,181,224,164,178,224,164,178,224,164,151,224,164,164,224,164,190,224,164,150,224,164,190,224,164,168,224,164,190,224,164,133,224,164,176,224,165,141,224,164,165,224,164,156,224,164,185,224,164,190,224,164,130,224,164,166,224,165,135,224,164,150,224,164,190,224,164,170,224,164,185,224,164,178,224,165,128,224,164,168,224,164,191,224,164,175,224,164,174,224,164,172,224,164,191,224,164,168,224,164,190,224,164,172,224,165,136,224,164,130,224,164,149,224,164,149,224,164,185,224,165,128,224,164,130,224,164,149,224,164,185,224,164,168,224,164,190,224,164,166,224,165,135,224,164,164,224,164,190,224,164,185,224,164,174,224,164,178,224,165,135,224,164,149,224,164,190,224,164,171,224,165,128,224,164,156,224,164,172,224,164,149,224,164,191,224,164,164,224,165,129,224,164,176,224,164,164,224,164,174,224,164,190,224,164,130,224,164,151,224,164,181,224,164,185,224,165,128,224,164,130,224,164,176,224,165,139,224,164,156,224,164,188,224,164,174,224,164,191,224,164,178,224,165,128,224,164,134,224,164,176,224,165,139,224,164,170,224,164,184,224,165,135,224,164,168,224,164,190,224,164,175,224,164,190,224,164,166,224,164,181,224,164,178,224,165,135,224,164,168,224,165,135,224,164,150,224,164,190,224,164,164,224,164,190,224,164,149,224,164,176,224,165,128,224,164,172,224,164,137,224,164,168,224,164,149,224,164,190,224,164,156,224,164,181,224,164,190,224,164,172,224,164,170,224,165,130,224,164,176,224,164,190,224,164,172,224,164,161,224,164,188,224,164,190,224,164,184,224,165,140,224,164,166,224,164,190,224,164,182,224,165,135,224,164,175,224,164,176,224,164,149,224,164,191,224,164,175,224,165,135,224,164,149,224,164,185,224,164,190,224,164,130,224,164,133,224,164,149,224,164,184,224,164,176,224,164,172,224,164,168,224,164,190,224,164,143,224,164,181,224,164,185,224,164,190,224,164,130,224,164,184,224,165,141,224,164,165,224,164,178,224,164,174,224,164,191,224,164,178,224,165,135,224,164,178,224,165,135,224,164,150,224,164,149,224,164,181,224,164,191,224,164,183,224,164,175,224,164,149,224,165,141,224,164,176,224,164,130,224,164,184,224,164,174,224,165,130,224,164,185,224,164,165,224,164,190,224,164,168,224,164,190,216,170,216,179,216,170,216,183,217,138,216,185,217,133,216,180,216,167,216,177,217,131,216,169,216,168,217,136,216,167,216,179,216,183,216,169,216,167,217,132,216,181,217,129,216,173,216,169,217,133,217,136,216,167,216,182,217,138,216,185,216,167,217,132,216,174,216,167,216,181,216,169,216,167,217,132,217,133,216,178,217,138,216,175,216,167,217,132,216,185,216,167,217,133,216,169,216,167,217,132,217,131,216,167,216,170,216,168,216,167,217,132,216,177,216,175,217,136,216,175,216,168,216,177,217,134,216,167,217,133,216,172,216,167,217,132,216,175,217,136,217,132,216,169,216,167,217,132,216,185,216,167,217,132,217,133,216,167,217,132,217,133,217,136,217,130,216,185,216,167,217,132,216,185,216,177,216,168,217,138,216,167,217,132,216,179,216,177,217,138,216,185,216,167,217,132,216,172,217,136,216,167,217,132,216,167,217,132,216,176,217,135,216,167,216,168,216,167,217,132,216,173,217,138,216,167,216,169,216,167,217,132,216,173,217,130,217,136,217,130,216,167,217,132,217,131,216,177,217,138,217,133,216,167,217,132,216,185,216,177,216,167,217,130,217,133,216,173,217,129,217,136,216,184,216,169,216,167,217,132,216,171,216,167,217,134,217,138,217,133,216,180,216,167,217,135,216,175,216,169,216,167,217,132,217,133,216,177,216,163,216,169,216,167,217,132,217,130,216,177,216,162,217,134,216,167,217,132,216,180,216,168,216,167,216,168,216,167,217,132,216,173,217,136,216,167,216,177,216,167,217,132,216,172,216,175,217,138,216,175,216,167,217,132,216,163,216,179,216,177,216,169,216,167,217,132,216,185,217,132,217,136,217,133,217,133,216,172,217,133,217,136,216,185,216,169,216,167,217,132,216,177,216,173,217,133,217,134,216,167,217,132,217,134,217,130,216,167,216,183,217,129,217,132,216,179,216,183,217,138,217,134,216,167,217,132,217,131,217,136,217,138,216,170,216,167,217,132,216,175,217,134,217,138,216,167,216,168,216,177,217,131,216,167,216,170,217,135,216,167,217,132,216,177,217,138,216,167,216,182,216,170,216,173,217,138,216,167,216,170,217,138,216,168,216,170,217,136,217,130,217,138,216,170,216,167,217,132,216,163,217,136,217,132,217,137,216,167,217,132,216,168,216,177,217,138,216,175,216,167,217,132,217,131,217,132,216,167,217,133,216,167,217,132,216,177,216,167,216,168,216,183,216,167,217,132,216,180,216,174,216,181,217,138,216,179,217,138,216,167,216,177,216,167,216,170,216,167,217,132,216,171,216,167,217,132,216,171,216,167,217,132,216,181,217,132,216,167,216,169,216,167,217,132,216,173,216,175,217,138,216,171,216,167,217,132,216,178,217,136,216,167,216,177,216,167,217,132,216,174,217,132,217,138,216,172,216,167,217,132,216,172,217,133,217,138,216,185,216,167,217,132,216,185,216,167,217,133,217,135,216,167,217,132,216,172,217,133,216,167,217,132,216,167,217,132,216,179,216,167,216,185,216,169,217,133,216,180,216,167,217,135,216,175,217,135,216,167,217,132,216,177,216,166,217,138,216,179,216,167,217,132,216,175,216,174,217,136,217,132,216,167,217,132,217,129,217,134,217,138,216,169,216,167,217,132,217,131,216,170,216,167,216,168,216,167,217,132,216,175,217,136,216,177,217,138,216,167,217,132,216,175,216,177,217,136,216,179,216,167,216,179,216,170,216,186,216,177,217,130,216,170,216,181,216,167,217,133,217,138,217,133,216,167,217,132,216,168,217,134,216,167,216,170,216,167,217,132,216,185,216,184,217,138,217,133,101,110,116,101,114,116,97,105,110,109,101,110,116,117,110,100,101,114,115,116,97,110,100,105,110,103,32,61,32,102,117,110,99,116,105,111,110,40,41,46,106,112,103,34,32,119,105,100,116,104,61,34,99,111,110,102,105,103,117,114,97,116,105,111,110,46,112,110,103,34,32,119,105,100,116,104,61,34,60,98,111,100,121,32,99,108,97,115,115,61,34,77,97,116,104,46,114,97,110,100,111,109,40,41,99,111,110,116,101,109,112,111,114,97,114,121,32,85,110,105,116,101,100,32,83,116,97,116,101,115,99,105,114,99,117,109,115,116,97,110,99,101,115,46,97,112,112,101,110,100,67,104,105,108,100,40,111,114,103,97,110,105,122,97,116,105,111,110,115,60,115,112,97,110,32,99,108,97,115,115,61,34,34,62,60,105,109,103,32,115,114,99,61,34,47,100,105,115,116,105,110,103,117,105,115,104,101,100,116,104,111,117,115,97,110,100,115,32,111,102,32,99,111,109,109,117,110,105,99,97,116,105,111,110,99,108,101,97,114,34,62,60,47,100,105,118,62,105,110,118,101,115,116,105,103,97,116,105,111,110,102,97,118,105,99,111,110,46,105,99,111,34,32,109,97,114,103,105,110,45,114,105,103,104,116,58,98,97,115,101,100,32,111,110,32,116,104,101,32,77,97,115,115,97,99,104,117,115,101,116,116,115,116,97,98,108,101,32,98,111,114,100,101,114,61,105,110,116,101,114,110,97,116,105,111,110,97,108,97,108,115,111,32,107,110,111,119,110,32,97,115,112,114,111,110,117,110,99,105,97,116,105,111,110,98,97,99,107,103,114,111,117,110,100,58,35,102,112,97,100,100,105,110,103,45,108,101,102,116,58,70,111,114,32,101,120,97,109,112,108,101,44,32,109,105,115,99,101,108,108,97,110,101,111,117,115,38,108,116,59,47,109,97,116,104,38,103,116,59,112,115,121,99,104,111,108,111,103,105,99,97,108,105,110,32,112,97,114,116,105,99,117,108,97,114,101,97,114,99,104,34,32,116,121,112,101,61,34,102,111,114,109,32,109,101,116,104,111,100,61,34,97,115,32,111,112,112,111,115,101,100,32,116,111,83,117,112,114,101,109,101,32,67,111,117,114,116,111,99,99,97,115,105,111,110,97,108,108,121,32,65,100,100,105,116,105,111,110,97,108,108,121,44,78,111,114,116,104,32,65,109,101,114,105,99,97,112,120,59,98,97,99,107,103,114,111,117,110,100,111,112,112,111,114,116,117,110,105,116,105,101,115,69,110,116,101,114,116,97,105,110,109,101,110,116,46,116,111,76,111,119,101,114,67,97,115,101,40,109,97,110,117,102,97,99,116,117,114,105,110,103,112,114,111,102,101,115,115,105,111,110,97,108,32,99,111,109,98,105,110,101,100,32,119,105,116,104,70,111,114,32,105,110,115,116,97,110,99,101,44,99,111,110,115,105,115,116,105,110,103,32,111,102,34,32,109,97,120,108,101,110,103,116,104,61,34,114,101,116,117,114,110,32,102,97,108,115,101,59,99,111,110,115,99,105,111,117,115,110,101,115,115,77,101,100,105,116,101,114,114,97,110,101,97,110,101,120,116,114,97,111,114,100,105,110,97,114,121,97,115,115,97,115,115,105,110,97,116,105,111,110,115,117,98,115,101,113,117,101,110,116,108,121,32,98,117,116,116,111,110,32,116,121,112,101,61,34,116,104,101,32,110,117,109,98,101,114,32,111,102,116,104,101,32,111,114,105,103,105,110,97,108,32,99,111,109,112,114,101,104,101,110,115,105,118,101,114,101,102,101,114,115,32,116,111,32,116,104,101,60,47,117,108,62,10,60,47,100,105,118,62,10,112,104,105,108,111,115,111,112,104,105,99,97,108,108,111,99,97,116,105,111,110,46,104,114,101,102,119,97,115,32,112,117,98,108,105,115,104,101,100,83,97,110,32,70,114,97,110,99,105,115,99,111,40,102,117,110,99,116,105,111,110,40,41,123,10,60,100,105,118,32,105,100,61,34,109,97,105,110,115,111,112,104,105,115,116,105,99,97,116,101,100,109,97,116,104,101,109,97,116,105,99,97,108,32,47,104,101,97,100,62,13,10,60,98,111,100,121,115,117,103,103,101,115,116,115,32,116,104,97,116,100,111,99,117,109,101,110,116,97,116,105,111,110,99,111,110,99,101,110,116,114,97,116,105,111,110,114,101,108,97,116,105,111,110,115,104,105,112,115,109,97,121,32,104,97,118,101,32,98,101,101,110,40,102,111,114,32,101,120,97,109,112,108,101,44,84,104,105,115,32,97,114,116,105,99,108,101,32,105,110,32,115,111,109,101,32,99,97,115,101,115,112,97,114,116,115,32,111,102,32,116,104,101,32,100,101,102,105,110,105,116,105,111,110,32,111,102,71,114,101,97,116,32,66,114,105,116,97,105,110,32,99,101,108,108,112,97,100,100,105,110,103,61,101,113,117,105,118,97,108,101,110,116,32,116,111,112,108,97,99,101,104,111,108,100,101,114,61,34,59,32,102,111,110,116,45,115,105,122,101,58,32,106,117,115,116,105,102,105,99,97,116,105,111,110,98,101,108,105,101,118,101,100,32,116,104,97,116,115,117,102,102,101,114,101,100,32,102,114,111,109,97,116,116,101,109,112,116,101,100,32,116,111,32,108,101,97,100,101,114,32,111,102,32,116,104,101,99,114,105,112,116,34,32,115,114,99,61,34,47,40,102,117,110,99,116,105,111,110,40,41,32,123,97,114,101,32,97,118,97,105,108,97,98,108,101,10,9,60,108,105,110,107,32,114,101,108,61,34,32,115,114,99,61,39,104,116,116,112,58,47,47,105,110,116,101,114,101,115,116,101,100,32,105,110,99,111,110,118,101,110,116,105,111,110,97,108,32,34,32,97,108,116,61,34,34,32,47,62,60,47,97,114,101,32,103,101,110,101,114,97,108,108,121,104,97,115,32,97,108,115,111,32,98,101,101,110,109,111,115,116,32,112,111,112,117,108,97,114,32,99,111,114,114,101,115,112,111,110,100,105,110,103,99,114,101,100,105,116,101,100,32,119,105,116,104,116,121,108,101,61,34,98,111,114,100,101,114,58,60,47,97,62,60,47,115,112,97,110,62,60,47,46,103,105,102,34,32,119,105,100,116,104,61,34,60,105,102,114,97,109,101,32,115,114,99,61,34,116,97,98,108,101,32,99,108,97,115,115,61,34,105,110,108,105,110,101,45,98,108,111,99,107,59,97,99,99,111,114,100,105,110,103,32,116,111,32,116,111,103,101,116,104,101,114,32,119,105,116,104,97,112,112,114,111,120,105,109,97,116,101,108,121,112,97,114,108,105,97,109,101,110,116,97,114,121,109,111,114,101,32,97,110,100,32,109,111,114,101,100,105,115,112,108,97,121,58,110,111,110,101,59,116,114,97,100,105,116,105,111,110,97,108,108,121,112,114,101,100,111,109,105,110,97,110,116,108,121,38,110,98,115,112,59,124,38,110,98,115,112,59,38,110,98,115,112,59,60,47,115,112,97,110,62,32,99,101,108,108,115,112,97,99,105,110,103,61,60,105,110,112,117,116,32,110,97,109,101,61,34,111,114,34,32,99,111,110,116,101,110,116,61,34,99,111,110,116,114,111,118,101,114,115,105,97,108,112,114,111,112,101,114,116,121,61,34,111,103,58,47,120,45,115,104,111,99,107,119,97,118,101,45,100,101,109,111,110,115,116,114,97,116,105,111,110,115,117,114,114,111,117,110,100,101,100,32,98,121,78,101,118,101,114,116,104,101,108,101,115,115,44,119,97,115,32,116,104,101,32,102,105,114,115,116,99,111,110,115,105,100,101,114,97,98,108,101,32,65,108,116,104,111,117,103,104,32,116,104,101,32,99,111,108,108,97,98,111,114,97,116,105,111,110,115,104,111,117,108,100,32,110,111,116,32,98,101,112,114,111,112,111,114,116,105,111,110,32,111,102,60,115,112,97,110,32,115,116,121,108,101,61,34,107,110,111,119,110,32,97,115,32,116,104,101,32,115,104,111,114,116,108,121,32,97,102,116,101,114,102,111,114,32,105,110,115,116,97,110,99,101,44,100,101,115,99,114,105,98,101,100,32,97,115,32,47,104,101,97,100,62,10,60,98,111,100,121,32,115,116,97,114,116,105,110,103,32,119,105,116,104,105,110,99,114,101,97,115,105,110,103,108,121,32,116,104,101,32,102,97,99,116,32,116,104,97,116,100,105,115,99,117,115,115,105,111,110,32,111,102,109,105,100,100,108,101,32,111,102,32,116,104,101,97,110,32,105,110,100,105,118,105,100,117,97,108,100,105,102,102,105,99,117,108,116,32,116,111,32,112,111,105,110,116,32,111,102,32,118,105,101,119,104,111,109,111,115,101,120,117,97,108,105,116,121,97,99,99,101,112,116,97,110,99,101,32,111,102,60,47,115,112,97,110,62,60,47,100,105,118,62,109,97,110,117,102,97,99,116,117,114,101,114,115,111,114,105,103,105,110,32,111,102,32,116,104,101,99,111,109,109,111,110,108,121,32,117,115,101,100,105,109,112,111,114,116,97,110,99,101,32,111,102,100,101,110,111,109,105,110,97,116,105,111,110,115,98,97,99,107,103,114,111,117,110,100,58,32,35,108,101,110,103,116,104,32,111,102,32,116,104,101,100,101,116,101,114,109,105,110,97,116,105,111,110,97,32,115,105,103,110,105,102,105,99,97,110,116,34,32,98,111,114,100,101,114,61,34,48,34,62,114,101,118,111,108,117,116,105,111,110,97,114,121,112,114,105,110,99,105,112,108,101,115,32,111,102,105,115,32,99,111,110,115,105,100,101,114,101,100,119,97,115,32,100,101,118,101,108,111,112,101,100,73,110,100,111,45,69,117,114,111,112,101,97,110,118,117,108,110,101,114,97,98,108,101,32,116,111,112,114,111,112,111,110,101,110,116,115,32,111,102,97,114,101,32,115,111,109,101,116,105,109,101,115,99,108,111,115,101,114,32,116,111,32,116,104,101,78,101,119,32,89,111,114,107,32,67,105,116,121,32,110,97,109,101,61,34,115,101,97,114,99,104,97,116,116,114,105,98,117,116,101,100,32,116,111,99,111,117,114,115,101,32,111,102,32,116,104,101,109,97,116,104,101,109,97,116,105,99,105,97,110,98,121,32,116,104,101,32,101,110,100,32,111,102,97,116,32,116,104,101,32,101,110,100,32,111,102,34,32,98,111,114,100,101,114,61,34,48,34,32,116,101,99,104,110,111,108,111,103,105,99,97,108,46,114,101,109,111,118,101,67,108,97,115,115,40,98,114,97,110,99,104,32,111,102,32,116,104,101,101,118,105,100,101,110,99,101,32,116,104,97,116,33,91,101,110,100,105,102,93,45,45,62,13,10,73,110,115,116,105,116,117,116,101,32,111,102,32,105,110,116,111,32,97,32,115,105,110,103,108,101,114,101,115,112,101,99,116,105,118,101,108,121,46,97,110,100,32,116,104,101,114,101,102,111,114,101,112,114,111,112,101,114,116,105,101,115,32,111,102,105,115,32,108,111,99,97,116,101,100,32,105,110,115,111,109,101,32,111,102,32,119,104,105,99,104,84,104,101,114,101,32,105,115,32,97,108,115,111,99,111,110,116,105,110,117,101,100,32,116,111,32,97,112,112,101,97,114,97,110,99,101,32,111,102,32,38,97,109,112,59,110,100,97,115,104,59,32,100,101,115,99,114,105,98,101,115,32,116,104,101,99,111,110,115,105,100,101,114,97,116,105,111,110,97,117,116,104,111,114,32,111,102,32,116,104,101,105,110,100,101,112,101,110,100,101,110,116,108,121,101,113,117,105,112,112,101,100,32,119,105,116,104,100,111,101,115,32,110,111,116,32,104,97,118,101,60,47,97,62,60,97,32,104,114,101,102,61,34,99,111,110,102,117,115,101,100,32,119,105,116,104,60,108,105,110,107,32,104,114,101,102,61,34,47,97,116,32,116,104,101,32,97,103,101,32,111,102,97,112,112,101,97,114,32,105,110,32,116,104,101,84,104,101,115,101,32,105,110,99,108,117,100,101,114,101,103,97,114,100,108,101,115,115,32,111,102,99,111,117,108,100,32,98,101,32,117,115,101,100,32,115,116,121,108,101,61,38,113,117,111,116,59,115,101,118,101,114,97,108,32,116,105,109,101,115,114,101,112,114,101,115,101,110,116,32,116,104,101,98,111,100,121,62,10,60,47,104,116,109,108,62,116,104,111,117,103,104,116,32,116,111,32,98,101,112,111,112,117,108,97,116,105,111,110,32,111,102,112,111,115,115,105,98,105,108,105,116,105,101,115,112,101,114,99,101,110,116,97,103,101,32,111,102,97,99,99,101,115,115,32,116,111,32,116,104,101,97,110,32,97,116,116,101,109,112,116,32,116,111,112,114,111,100,117,99,116,105,111,110,32,111,102,106,113,117,101,114,121,47,106,113,117,101,114,121,116,119,111,32,100,105,102,102,101,114,101,110,116,98,101,108,111,110,103,32,116,111,32,116,104,101,101,115,116,97,98,108,105,115,104,109,101,110,116,114,101,112,108,97,99,105,110,103,32,116,104,101,100,101,115,99,114,105,112,116,105,111,110,34,32,100,101,116,101,114,109,105,110,101,32,116,104,101,97,118,97,105,108,97,98,108,101,32,102,111,114,65,99,99,111,114,100,105,110,103,32,116,111,32,119,105,100,101,32,114,97,110,103,101,32,111,102,9,60,100,105,118,32,99,108,97,115,115,61,34,109,111,114,101,32,99,111,109,109,111,110,108,121,111,114,103,97,110,105,115,97,116,105,111,110,115,102,117,110,99,116,105,111,110,97,108,105,116,121,119,97,115,32,99,111,109,112,108,101,116,101,100,32,38,97,109,112,59,109,100,97,115,104,59,32,112,97,114,116,105,99,105,112,97,116,105,111,110,116,104,101,32,99,104,97,114,97,99,116,101,114,97,110,32,97,100,100,105,116,105,111,110,97,108,97,112,112,101,97,114,115,32,116,111,32,98,101,102,97,99,116,32,116,104,97,116,32,116,104,101,97,110,32,101,120,97,109,112,108,101,32,111,102,115,105,103,110,105,102,105,99,97,110,116,108,121,111,110,109,111,117,115,101,111,118,101,114,61,34,98,101,99,97,117,115,101,32,116,104,101,121,32,97,115,121,110,99,32,61,32,116,114,117,101,59,112,114,111,98,108,101,109,115,32,119,105,116,104,115,101,101,109,115,32,116,111,32,104,97,118,101,116,104,101,32,114,101,115,117,108,116,32,111,102,32,115,114,99,61,34,104,116,116,112,58,47,47,102,97,109,105,108,105,97,114,32,119,105,116,104,112,111,115,115,101,115,115,105,111,110,32,111,102,102,117,110,99,116,105,111,110,32,40,41,32,123,116,111,111,107,32,112,108,97,99,101,32,105,110,97,110,100,32,115,111,109,101,116,105,109,101,115,115,117,98,115,116,97,110,116,105,97,108,108,121,60,115,112,97,110,62,60,47,115,112,97,110,62,105,115,32,111,102,116,101,110,32,117,115,101,100,105,110,32,97,110,32,97,116,116,101,109,112,116,103,114,101,97,116,32,100,101,97,108,32,111,102,69,110,118,105,114,111,110,109,101,110,116,97,108,115,117,99,99,101,115,115,102,117,108,108,121,32,118,105,114,116,117,97,108,108,121,32,97,108,108,50,48,116,104,32,99,101,110,116,117,114,121,44,112,114,111,102,101,115,115,105,111,110,97,108,115,110,101,99,101,115,115,97,114,121,32,116,111,32,100,101,116,101,114,109,105,110,101,100,32,98,121,99,111,109,112,97,116,105,98,105,108,105,116,121,98,101,99,97,117,115,101,32,105,116,32,105,115,68,105,99,116,105,111,110,97,114,121,32,111,102,109,111,100,105,102,105,99,97,116,105,111,110,115,84,104,101,32,102,111,108,108,111,119,105,110,103,109,97,121,32,114,101,102,101,114,32,116,111,58,67,111,110,115,101,113,117,101,110,116,108,121,44,73,110,116,101,114,110,97,116,105,111,110,97,108,97,108,116,104,111,117,103,104,32,115,111,109,101,116,104,97,116,32,119,111,117,108,100,32,98,101,119,111,114,108,100,39,115,32,102,105,114,115,116,99,108,97,115,115,105,102,105,101,100,32,97,115,98,111,116,116,111,109,32,111,102,32,116,104,101,40,112,97,114,116,105,99,117,108,97,114,108,121,97,108,105,103,110,61,34,108,101,102,116,34,32,109,111,115,116,32,99,111,109,109,111,110,108,121,98,97,115,105,115,32,102,111,114,32,116,104,101,102,111,117,110,100,97,116,105,111,110,32,111,102,99,111,110,116,114,105,98,117,116,105,111,110,115,112,111,112,117,108,97,114,105,116,121,32,111,102,99,101,110,116,101,114,32,111,102,32,116,104,101,116,111,32,114,101,100,117,99,101,32,116,104,101,106,117,114,105,115,100,105,99,116,105,111,110,115,97,112,112,114,111,120,105,109,97,116,105,111,110,32,111,110,109,111,117,115,101,111,117,116,61,34,78,101,119,32,84,101,115,116,97,109,101,110,116,99,111,108,108,101,99,116,105,111,110,32,111,102,60,47,115,112,97,110,62,60,47,97,62,60,47,105,110,32,116,104,101,32,85,110,105,116,101,100,102,105,108,109,32,100,105,114,101,99,116,111,114,45,115,116,114,105,99,116,46,100,116,100,34,62,104,97,115,32,98,101,101,110,32,117,115,101,100,114,101,116,117,114,110,32,116,111,32,116,104,101,97,108,116,104,111,117,103,104,32,116,104,105,115,99,104,97,110,103,101,32,105,110,32,116,104,101,115,101,118,101,114,97,108,32,111,116,104,101,114,98,117,116,32,116,104,101,114,101,32,97,114,101,117,110,112,114,101,99,101,100,101,110,116,101,100,105,115,32,115,105,109,105,108,97,114,32,116,111,101,115,112,101,99,105,97,108,108,121,32,105,110,119,101,105,103,104,116,58,32,98,111,108,100,59,105,115,32,99,97,108,108,101,100,32,116,104,101,99,111,109,112,117,116,97,116,105,111,110,97,108,105,110,100,105,99,97,116,101,32,116,104,97,116,114,101,115,116,114,105,99,116,101,100,32,116,111,9,60,109,101,116,97,32,110,97,109,101,61,34,97,114,101,32,116,121,112,105,99,97,108,108,121,99,111,110,102,108,105,99,116,32,119,105,116,104,72,111,119,101,118,101,114,44,32,116,104,101,32,65,110,32,101,120,97,109,112,108,101,32,111,102,99,111,109,112,97,114,101,100,32,119,105,116,104,113,117,97,110,116,105,116,105,101,115,32,111,102,114,97,116,104,101,114,32,116,104,97,110,32,97,99,111,110,115,116,101,108,108,97,116,105,111,110,110,101,99,101,115,115,97,114,121,32,102,111,114,114,101,112,111,114,116,101,100,32,116,104,97,116,115,112,101,99,105,102,105,99,97,116,105,111,110,112,111,108,105,116,105,99,97,108,32,97,110,100,38,110,98,115,112,59,38,110,98,115,112,59,60,114,101,102,101,114,101,110,99,101,115,32,116,111,116,104,101,32,115,97,109,101,32,121,101,97,114,71,111,118,101,114,110,109,101,110,116,32,111,102,103,101,110,101,114,97,116,105,111,110,32,111,102,104,97,118,101,32,110,111,116,32,98,101,101,110,115,101,118,101,114,97,108,32,121,101,97,114,115,99,111,109,109,105,116,109,101,110,116,32,116,111,9,9,60,117,108,32,99,108,97,115,115,61,34,118,105,115,117,97,108,105,122,97,116,105,111,110,49,57,116,104,32,99,101,110,116,117,114,121,44,112,114,97,99,116,105,116,105,111,110,101,114,115,116,104,97,116,32,104,101,32,119,111,117,108,100,97,110,100,32,99,111,110,116,105,110,117,101,100,111,99,99,117,112,97,116,105,111,110,32,111,102,105,115,32,100,101,102,105,110,101,100,32,97,115,99,101,110,116,114,101,32,111,102,32,116,104,101,116,104,101,32,97,109,111,117,110,116,32,111,102,62,60,100,105,118,32,115,116,121,108,101,61,34,101,113,117,105,118,97,108,101,110,116,32,111,102,100,105,102,102,101,114,101,110,116,105,97,116,101,98,114,111,117,103,104,116,32,97,98,111,117,116,109,97,114,103,105,110,45,108,101,102,116,58,32,97,117,116,111,109,97,116,105,99,97,108,108,121,116,104,111,117,103,104,116,32,111,102,32,97,115,83,111,109,101,32,111,102,32,116,104,101,115,101,10,60,100,105,118,32,99,108,97,115,115,61,34,105,110,112,117,116,32,99,108,97,115,115,61,34,114,101,112,108,97,99,101,100,32,119,105,116,104,105,115,32,111,110,101,32,111,102,32,116,104,101,101,100,117,99,97,116,105,111,110,32,97,110,100,105,110,102,108,117,101,110,99,101,100,32,98,121,114,101,112,117,116,97,116,105,111,110,32,97,115,10,60,109,101,116,97,32,110,97,109,101,61,34,97,99,99,111,109,109,111,100,97,116,105,111,110,60,47,100,105,118,62,10,60,47,100,105,118,62,108,97,114,103,101,32,112,97,114,116,32,111,102,73,110,115,116,105,116,117,116,101,32,102,111,114,116,104,101,32,115,111,45,99,97,108,108,101,100,32,97,103,97,105,110,115,116,32,116,104,101,32,73,110,32,116,104,105,115,32,99,97,115,101,44,119,97,115,32,97,112,112,111,105,110,116,101,100,99,108,97,105,109,101,100,32,116,111,32,98,101,72,111,119,101,118,101,114,44,32,116,104,105,115,68,101,112,97,114,116,109,101,110,116,32,111,102,116,104,101,32,114,101,109,97,105,110,105,110,103,101,102,102,101,99,116,32,111,110,32,116,104,101,112,97,114,116,105,99,117,108,97,114,108,121,32,100,101,97,108,32,119,105,116,104,32,116,104,101,10,60,100,105,118,32,115,116,121,108,101,61,34,97,108,109,111,115,116,32,97,108,119,97,121,115,97,114,101,32,99,117,114,114,101,110,116,108,121,101,120,112,114,101,115,115,105,111,110,32,111,102,112,104,105,108,111,115,111,112,104,121,32,111,102,102,111,114,32,109,111,114,101,32,116,104,97,110,99,105,118,105,108,105,122,97,116,105,111,110,115,111,110,32,116,104,101,32,105,115,108,97,110,100,115,101,108,101,99,116,101,100,73,110,100,101,120,99,97,110,32,114,101,115,117,108,116,32,105,110,34,32,118,97,108,117,101,61,34,34,32,47,62,116,104,101,32,115,116,114,117,99,116,117,114,101,32,47,62,60,47,97,62,60,47,100,105,118,62,77,97,110,121,32,111,102,32,116,104,101,115,101,99,97,117,115,101,100,32,98,121,32,116,104,101,111,102,32,116,104,101,32,85,110,105,116,101,100,115,112,97,110,32,99,108,97,115,115,61,34,109,99,97,110,32,98,101,32,116,114,97,99,101,100,105,115,32,114,101,108,97,116,101,100,32,116,111,98,101,99,97,109,101,32,111,110,101,32,111,102,105,115,32,102,114,101,113,117,101,110,116,108,121,108,105,118,105,110,103,32,105,110,32,116,104,101,116,104,101,111,114,101,116,105,99,97,108,108,121,70,111,108,108,111,119,105,110,103,32,116,104,101,82,101,118,111,108,117,116,105,111,110,97,114,121,103,111,118,101,114,110,109,101,110,116,32,105,110,105,115,32,100,101,116,101,114,109,105,110,101,100,116,104,101,32,112,111,108,105,116,105,99,97,108,105,110,116,114,111,100,117,99,101,100,32,105,110,115,117,102,102,105,99,105,101,110,116,32,116,111,100,101,115,99,114,105,112,116,105,111,110,34,62,115,104,111,114,116,32,115,116,111,114,105,101,115,115,101,112,97,114,97,116,105,111,110,32,111,102,97,115,32,116,111,32,119,104,101,116,104,101,114,107,110,111,119,110,32,102,111,114,32,105,116,115,119,97,115,32,105,110,105,116,105,97,108,108,121,100,105,115,112,108,97,121,58,98,108,111,99,107,105,115,32,97,110,32,101,120,97,109,112,108,101,116,104,101,32,112,114,105,110,99,105,112,97,108,99,111,110,115,105,115,116,115,32,111,102,32,97,114,101,99,111,103,110,105,122,101,100,32,97,115,47,98,111,100,121,62,60,47,104,116,109,108,62,97,32,115,117,98,115,116,97,110,116,105,97,108,114,101,99,111,110,115,116,114,117,99,116,101,100,104,101,97,100,32,111,102,32,115,116,97,116,101,114,101,115,105,115,116,97,110,99,101,32,116,111,117,110,100,101,114,103,114,97,100,117,97,116,101,84,104,101,114,101,32,97,114,101,32,116,119,111,103,114,97,118,105,116,97,116,105,111,110,97,108,97,114,101,32,100,101,115,99,114,105,98,101,100,105,110,116,101,110,116,105,111,110,97,108,108,121,115,101,114,118,101,100,32,97,115,32,116,104,101,99,108,97,115,115,61,34,104,101,97,100,101,114,111,112,112,111,115,105,116,105,111,110,32,116,111,102,117,110,100,97,109,101,110,116,97,108,108,121,100,111,109,105,110,97,116,101,100,32,116,104,101,97,110,100,32,116,104,101,32,111,116,104,101,114,97,108,108,105,97,110,99,101,32,119,105,116,104,119,97,115,32,102,111,114,99,101,100,32,116,111,114,101,115,112,101,99,116,105,118,101,108,121,44,97,110,100,32,112,111,108,105,116,105,99,97,108,105,110,32,115,117,112,112,111,114,116,32,111,102,112,101,111,112,108,101,32,105,110,32,116,104,101,50,48,116,104,32,99,101,110,116,117,114,121,46,97,110,100,32,112,117,98,108,105,115,104,101,100,108,111,97,100,67,104,97,114,116,98,101,97,116,116,111,32,117,110,100,101,114,115,116,97,110,100,109,101,109,98,101,114,32,115,116,97,116,101,115,101,110,118,105,114,111,110,109,101,110,116,97,108,102,105,114,115,116,32,104,97,108,102,32,111,102,99,111,117,110,116,114,105,101,115,32,97,110,100,97,114,99,104,105,116,101,99,116,117,114,97,108,98,101,32,99,111,110,115,105,100,101,114,101,100,99,104,97,114,97,99,116,101,114,105,122,101,100,99,108,101,97,114,73,110,116,101,114,118,97,108,97,117,116,104,111,114,105,116,97,116,105,118,101,70,101,100,101,114,97,116,105,111,110,32,111,102,119,97,115,32,115,117,99,99,101,101,100,101,100,97,110,100,32,116,104,101,114,101,32,97,114,101,97,32,99,111,110,115,101,113,117,101,110,99,101,116,104,101,32,80,114,101,115,105,100,101,110,116,97,108,115,111,32,105,110,99,108,117,100,101,100,102,114,101,101,32,115,111,102,116,119,97,114,101,115,117,99,99,101,115,115,105,111,110,32,111,102,100,101,118,101,108,111,112,101,100,32,116,104,101,119,97,115,32,100,101,115,116,114,111,121,101,100,97,119,97,121,32,102,114,111,109,32,116,104,101,59,10,60,47,115,99,114,105,112,116,62,10,60,97,108,116,104,111,117,103,104,32,116,104,101,121,102,111,108,108,111,119,101,100,32,98,121,32,97,109,111,114,101,32,112,111,119,101,114,102,117,108,114,101,115,117,108,116,101,100,32,105,110,32,97,85,110,105,118,101,114,115,105,116,121,32,111,102,72,111,119,101,118,101,114,44,32,109,97,110,121,116,104,101,32,112,114,101,115,105,100,101,110,116,72,111,119,101,118,101,114,44,32,115,111,109,101,105,115,32,116,104,111,117,103,104,116,32,116,111,117,110,116,105,108,32,116,104,101,32,101,110,100,119,97,115,32,97,110,110,111,117,110,99,101,100,97,114,101,32,105,109,112,111,114,116,97,110,116,97,108,115,111,32,105,110,99,108,117,100,101,115,62,60,105,110,112,117,116,32,116,121,112,101,61,116,104,101,32,99,101,110,116,101,114,32,111,102,32,68,79,32,78,79,84,32,65,76,84,69,82,117,115,101,100,32,116,111,32,114,101,102,101,114,116,104,101,109,101,115,47,63,115,111,114,116,61,116,104,97,116,32,104,97,100,32,98,101,101,110,116,104,101,32,98,97,115,105,115,32,102,111,114,104,97,115,32,100,101,118,101,108,111,112,101,100,105,110,32,116,104,101,32,115,117,109,109,101,114,99,111,109,112,97,114,97,116,105,118,101,108,121,100,101,115,99,114,105,98,101,100,32,116,104,101,115,117,99,104,32,97,115,32,116,104,111,115,101,116,104,101,32,114,101,115,117,108,116,105,110,103,105,115,32,105,109,112,111,115,115,105,98,108,101,118,97,114,105,111,117,115,32,111,116,104,101,114,83,111,117,116,104,32,65,102,114,105,99,97,110,104,97,118,101,32,116,104,101,32,115,97,109,101,101,102,102,101,99,116,105,118,101,110,101,115,115,105,110,32,119,104,105,99,104,32,99,97,115,101,59,32,116,101,120,116,45,97,108,105,103,110,58,115,116,114,117,99,116,117,114,101,32,97,110,100,59,32,98,97,99,107,103,114,111,117,110,100,58,114,101,103,97,114,100,105,110,103,32,116,104,101,115,117,112,112,111,114,116,101,100,32,116,104,101,105,115,32,97,108,115,111,32,107,110,111,119,110,115,116,121,108,101,61,34,109,97,114,103,105,110,105,110,99,108,117,100,105,110,103,32,116,104,101,98,97,104,97,115,97,32,77,101,108,97,121,117,110,111,114,115,107,32,98,111,107,109,195,165,108,110,111,114,115,107,32,110,121,110,111,114,115,107,115,108,111,118,101,110,197,161,196,141,105,110,97,105,110,116,101,114,110,97,99,105,111,110,97,108,99,97,108,105,102,105,99,97,99,105,195,179,110,99,111,109,117,110,105,99,97,99,105,195,179,110,99,111,110,115,116,114,117,99,99,105,195,179,110,34,62,60,100,105,118,32,99,108,97,115,115,61,34,100,105,115,97,109,98,105,103,117,97,116,105,111,110,68,111,109,97,105,110,78,97,109,101,39,44,32,39,97,100,109,105,110,105,115,116,114,97,116,105,111,110,115,105,109,117,108,116,97,110,101,111,117,115,108,121,116,114,97,110,115,112,111,114,116,97,116,105,111,110,73,110,116,101,114,110,97,116,105,111,110,97,108,32,109,97,114,103,105,110,45,98,111,116,116,111,109,58,114,101,115,112,111,110,115,105,98,105,108,105,116,121,60,33,91,101,110,100,105,102,93,45,45,62,10,60,47,62,60,109,101,116,97,32,110,97,109,101,61,34,105,109,112,108,101,109,101,110,116,97,116,105,111,110,105,110,102,114,97,115,116,114,117,99,116,117,114,101,114,101,112,114,101,115,101,110,116,97,116,105,111,110,98,111,114,100,101,114,45,98,111,116,116,111,109,58,60,47,104,101,97,100,62,10,60,98,111,100,121,62,61,104,116,116,112,37,51,65,37,50,70,37,50,70,60,102,111,114,109,32,109,101,116,104,111,100,61,34,109,101,116,104,111,100,61,34,112,111,115,116,34,32,47,102,97,118,105,99,111,110,46,105,99,111,34,32,125,41,59,10,60,47,115,99,114,105,112,116,62,10,46,115,101,116,65,116,116,114,105,98,117,116,101,40,65,100,109,105,110,105,115,116,114,97,116,105,111,110,61,32,110,101,119,32,65,114,114,97,121,40,41,59,60,33,91,101,110,100,105,102,93,45,45,62,13,10,100,105,115,112,108,97,121,58,98,108,111,99,107,59,85,110,102,111,114,116,117,110,97,116,101,108,121,44,34,62,38,110,98,115,112,59,60,47,100,105,118,62,47,102,97,118,105,99,111,110,46,105,99,111,34,62,61,39,115,116,121,108,101,115,104,101,101,116,39,32,105,100,101,110,116,105,102,105,99,97,116,105,111,110,44,32,102,111,114,32,101,120,97,109,112,108,101,44,60,108,105,62,60,97,32,104,114,101,102,61,34,47,97,110,32,97,108,116,101,114,110,97,116,105,118,101,97,115,32,97,32,114,101,115,117,108,116,32,111,102,112,116,34,62,60,47,115,99,114,105,112,116,62,10,116,121,112,101,61,34,115,117,98,109,105,116,34,32,10,40,102,117,110,99,116,105,111,110,40,41,32,123,114,101,99,111,109,109,101,110,100,97,116,105,111,110,102,111,114,109,32,97,99,116,105,111,110,61,34,47,116,114,97,110,115,102,111,114,109,97,116,105,111,110,114,101,99,111,110,115,116,114,117,99,116,105,111,110,46,115,116,121,108,101,46,100,105,115,112,108,97,121,32,65,99,99,111,114,100,105,110,103,32,116,111,32,104,105,100,100,101,110,34,32,110,97,109,101,61,34,97,108,111,110,103,32,119,105,116,104,32,116,104,101,100,111,99,117,109,101,110,116,46,98,111,100,121,46,97,112,112,114,111,120,105,109,97,116,101,108,121,32,67,111,109,109,117,110,105,99,97,116,105,111,110,115,112,111,115,116,34,32,97,99,116,105,111,110,61,34,109,101,97,110,105,110,103,32,38,113,117,111,116,59,45,45,60,33,91,101,110,100,105,102,93,45,45,62,80,114,105,109,101,32,77,105,110,105,115,116,101,114,99,104,97,114,97,99,116,101,114,105,115,116,105,99,60,47,97,62,32,60,97,32,99,108,97,115,115,61,116,104,101,32,104,105,115,116,111,114,121,32,111,102,32,111,110,109,111,117,115,101,111,118,101,114,61,34,116,104,101,32,103,111,118,101,114,110,109,101,110,116,104,114,101,102,61,34,104,116,116,112,115,58,47,47,119,97,115,32,111,114,105,103,105,110,97,108,108,121,119,97,115,32,105,110,116,114,111,100,117,99,101,100,99,108,97,115,115,105,102,105,99,97,116,105,111,110,114,101,112,114,101,115,101,110,116,97,116,105,118,101,97,114,101,32,99,111,110,115,105,100,101,114,101,100,60,33,91,101,110,100,105,102,93,45,45,62,10,10,100,101,112,101,110,100,115,32,111,110,32,116,104,101,85,110,105,118,101,114,115,105,116,121,32,111,102,32,105,110,32,99,111,110,116,114,97,115,116,32,116,111,32,112,108,97,99,101,104,111,108,100,101,114,61,34,105,110,32,116,104,101,32,99,97,115,101,32,111,102,105,110,116,101,114,110,97,116,105,111,110,97,108,32,99,111,110,115,116,105,116,117,116,105,111,110,97,108,115,116,121,108,101,61,34,98,111,114,100,101,114,45,58,32,102,117,110,99,116,105,111,110,40,41,32,123,66,101,99,97,117,115,101,32,111,102,32,116,104,101,45,115,116,114,105,99,116,46,100,116,100,34,62,10,60,116,97,98,108,101,32,99,108,97,115,115,61,34,97,99,99,111,109,112,97,110,105,101,100,32,98,121,97,99,99,111,117,110,116,32,111,102,32,116,104,101,60,115,99,114,105,112,116,32,115,114,99,61,34,47,110,97,116,117,114,101,32,111,102,32,116,104,101,32,116,104,101,32,112,101,111,112,108,101,32,105,110,32,105,110,32,97,100,100,105,116,105,111,110,32,116,111,115,41,59,32,106,115,46,105,100,32,61,32,105,100,34,32,119,105,100,116,104,61,34,49,48,48,37,34,114,101,103,97,114,100,105,110,103,32,116,104,101,32,82,111,109,97,110,32,67,97,116,104,111,108,105,99,97,110,32,105,110,100,101,112,101,110,100,101,110,116,102,111,108,108,111,119,105,110,103,32,116,104,101,32,46,103,105,102,34,32,119,105,100,116,104,61,34,49,116,104,101,32,102,111,108,108,111,119,105,110,103,32,100,105,115,99,114,105,109,105,110,97,116,105,111,110,97,114,99,104,97,101,111,108,111,103,105,99,97,108,112,114,105,109,101,32,109,105,110,105,115,116,101,114,46,106,115,34,62,60,47,115,99,114,105,112,116,62,99,111,109,98,105,110,97,116,105,111,110,32,111,102,32,109,97,114,103,105,110,119,105,100,116,104,61,34,99,114,101,97,116,101,69,108,101,109,101,110,116,40,119,46,97,116,116,97,99,104,69,118,101,110,116,40,60,47,97,62,60,47,116,100,62,60,47,116,114,62,115,114,99,61,34,104,116,116,112,115,58,47,47,97,73,110,32,112,97,114,116,105,99,117,108,97,114,44,32,97,108,105,103,110,61,34,108,101,102,116,34,32,67,122,101,99,104,32,82,101,112,117,98,108,105,99,85,110,105,116,101,100,32,75,105,110,103,100,111,109,99,111,114,114,101,115,112,111,110,100,101,110,99,101,99,111,110,99,108,117,100,101,100,32,116,104,97,116,46,104,116,109,108,34,32,116,105,116,108,101,61,34,40,102,117,110,99,116,105,111,110,32,40,41,32,123,99,111,109,101,115,32,102,114,111,109,32,116,104,101,97,112,112,108,105,99,97,116,105,111,110,32,111,102,60,115,112,97,110,32,99,108,97,115,115,61,34,115,98,101,108,105,101,118,101,100,32,116,111,32,98,101,101,109,101,110,116,40,39,115,99,114,105,112,116,39,60,47,97,62,10,60,47,108,105,62,10,60,108,105,118,101,114,121,32,100,105,102,102,101,114,101,110,116,62,60,115,112,97,110,32,99,108,97,115,115,61,34,111,112,116,105,111,110,32,118,97,108,117,101,61,34,40,97,108,115,111,32,107,110,111,119,110,32,97,115,9,60,108,105,62,60,97,32,104,114,101,102,61,34,62,60,105,110,112,117,116,32,110,97,109,101,61,34,115,101,112,97,114,97,116,101,100,32,102,114,111,109,114,101,102,101,114,114,101,100,32,116,111,32,97,115,32,118,97,108,105,103,110,61,34,116,111,112,34,62,102,111,117,110,100,101,114,32,111,102,32,116,104,101,97,116,116,101,109,112,116,105,110,103,32,116,111,32,99,97,114,98,111,110,32,100,105,111,120,105,100,101,10,10,60,100,105,118,32,99,108,97,115,115,61,34,99,108,97,115,115,61,34,115,101,97,114,99,104,45,47,98,111,100,121,62,10,60,47,104,116,109,108,62,111,112,112,111,114,116,117,110,105,116,121,32,116,111,99,111,109,109,117,110,105,99,97,116,105,111,110,115,60,47,104,101,97,100,62,13,10,60,98,111,100,121,32,115,116,121,108,101,61,34,119,105,100,116,104,58,84,105,225,186,191,110,103,32,86,105,225,187,135,116,99,104,97,110,103,101,115,32,105,110,32,116,104,101,98,111,114,100,101,114,45,99,111,108,111,114,58,35,48,34,32,98,111,114,100,101,114,61,34,48,34,32,60,47,115,112,97,110,62,60,47,100,105,118,62,60,119,97,115,32,100,105,115,99,111,118,101,114,101,100,34,32,116,121,112,101,61,34,116,101,120,116,34,32,41,59,10,60,47,115,99,114,105,112,116,62,10,10,68,101,112,97,114,116,109,101,110,116,32,111,102,32,101,99,99,108,101,115,105,97,115,116,105,99,97,108,116,104,101,114,101,32,104,97,115,32,98,101,101,110,114,101,115,117,108,116,105,110,103,32,102,114,111,109,60,47,98,111,100,121,62,60,47,104,116,109,108,62,104,97,115,32,110,101,118,101,114,32,98,101,101,110,116,104,101,32,102,105,114,115,116,32,116,105,109,101,105,110,32,114,101,115,112,111,110,115,101,32,116,111,97,117,116,111,109,97,116,105,99,97,108,108,121,32,60,47,100,105,118,62,10,10,60,100,105,118,32,105,119,97,115,32,99,111,110,115,105,100,101,114,101,100,112,101,114,99,101,110,116,32,111,102,32,116,104,101,34,32,47,62,60,47,97,62,60,47,100,105,118,62,99,111,108,108,101,99,116,105,111,110,32,111,102,32,100,101,115,99,101,110,100,101,100,32,102,114,111,109,115,101,99,116,105,111,110,32,111,102,32,116,104,101,97,99,99,101,112,116,45,99,104,97,114,115,101,116,116,111,32,98,101,32,99,111,110,102,117,115,101,100,109,101,109,98,101,114,32,111,102,32,116,104,101,32,112,97,100,100,105,110,103,45,114,105,103,104,116,58,116,114,97,110,115,108,97,116,105,111,110,32,111,102,105,110,116,101,114,112,114,101,116,97,116,105,111,110,32,104,114,101,102,61,39,104,116,116,112,58,47,47,119,104,101,116,104,101,114,32,111,114,32,110,111,116,84,104,101,114,101,32,97,114,101,32,97,108,115,111,116,104,101,114,101,32,97,114,101,32,109,97,110,121,97,32,115,109,97,108,108,32,110,117,109,98,101,114,111,116,104,101,114,32,112,97,114,116,115,32,111,102,105,109,112,111,115,115,105,98,108,101,32,116,111,32,32,99,108,97,115,115,61,34,98,117,116,116,111,110,108,111,99,97,116,101,100,32,105,110,32,116,104,101,46,32,72,111,119,101,118,101,114,44,32,116,104,101,97,110,100,32,101,118,101,110,116,117,97,108,108,121,65,116,32,116,104,101,32,101,110,100,32,111,102,32,98,101,99,97,117,115,101,32,111,102,32,105,116,115,114,101,112,114,101,115,101,110,116,115,32,116,104,101,60,102,111,114,109,32,97,99,116,105,111,110,61,34,32,109,101,116,104,111,100,61,34,112,111,115,116,34,105,116,32,105,115,32,112,111,115,115,105,98,108,101,109,111,114,101,32,108,105,107,101,108,121,32,116,111,97,110,32,105,110,99,114,101,97,115,101,32,105,110,104,97,118,101,32,97,108,115,111,32,98,101,101,110,99,111,114,114,101,115,112,111,110,100,115,32,116,111,97,110,110,111,117,110,99,101,100,32,116,104,97,116,97,108,105,103,110,61,34,114,105,103,104,116,34,62,109,97,110,121,32,99,111,117,110,116,114,105,101,115,102,111,114,32,109,97,110,121,32,121,101,97,114,115,101,97,114,108,105,101,115,116,32,107,110,111,119,110,98,101,99,97,117,115,101,32,105,116,32,119,97,115,112,116,34,62,60,47,115,99,114,105,112,116,62,13,32,118,97,108,105,103,110,61,34,116,111,112,34,32,105,110,104,97,98,105,116,97,110,116,115,32,111,102,102,111,108,108,111,119,105,110,103,32,121,101,97,114,13,10,60,100,105,118,32,99,108,97,115,115,61,34,109,105,108,108,105,111,110,32,112,101,111,112,108,101,99,111,110,116,114,111,118,101,114,115,105,97,108,32,99,111,110,99,101,114,110,105,110,103,32,116,104,101,97,114,103,117,101,32,116,104,97,116,32,116,104,101,103,111,118,101,114,110,109,101,110,116,32,97,110,100,97,32,114,101,102,101,114,101,110,99,101,32,116,111,116,114,97,110,115,102,101,114,114,101,100,32,116,111,100,101,115,99,114,105,98,105,110,103,32,116,104,101,32,115,116,121,108,101,61,34,99,111,108,111,114,58,97,108,116,104,111,117,103,104,32,116,104,101,114,101,98,101,115,116,32,107,110,111,119,110,32,102,111,114,115,117,98,109,105,116,34,32,110,97,109,101,61,34,109,117,108,116,105,112,108,105,99,97,116,105,111,110,109,111,114,101,32,116,104,97,110,32,111,110,101,32,114,101,99,111,103,110,105,116,105,111,110,32,111,102,67,111,117,110,99,105,108,32,111,102,32,116,104,101,101,100,105,116,105,111,110,32,111,102,32,116,104,101,32,32,60,109,101,116,97,32,110,97,109,101,61,34,69,110,116,101,114,116,97,105,110,109,101,110,116,32,97,119,97,121,32,102,114,111,109,32,116,104,101,32,59,109,97,114,103,105,110,45,114,105,103,104,116,58,97,116,32,116,104,101,32,116,105,109,101,32,111,102,105,110,118,101,115,116,105,103,97,116,105,111,110,115,99,111,110,110,101,99,116,101,100,32,119,105,116,104,97,110,100,32,109,97,110,121,32,111,116,104,101,114,97,108,116,104,111,117,103,104,32,105,116,32,105,115,98,101,103,105,110,110,105,110,103,32,119,105,116,104,32,60,115,112,97,110,32,99,108,97,115,115,61,34,100,101,115,99,101,110,100,97,110,116,115,32,111,102,60,115,112,97,110,32,99,108,97,115,115,61,34,105,32,97,108,105,103,110,61,34,114,105,103,104,116,34,60,47,104,101,97,100,62,10,60,98,111,100,121,32,97,115,112,101,99,116,115,32,111,102,32,116,104,101,104,97,115,32,115,105,110,99,101,32,98,101,101,110,69,117,114,111,112,101,97,110,32,85,110,105,111,110,114,101,109,105,110,105,115,99,101,110,116,32,111,102,109,111,114,101,32,100,105,102,102,105,99,117,108,116,86,105,99,101,32,80,114,101,115,105,100,101,110,116,99,111,109,112,111,115,105,116,105,111,110,32,111,102,112,97,115,115,101,100,32,116,104,114,111,117,103,104,109,111,114,101,32,105,109,112,111,114,116,97,110,116,102,111,110,116,45,115,105,122,101,58,49,49,112,120,101,120,112,108,97,110,97,116,105,111,110,32,111,102,116,104,101,32,99,111,110,99,101,112,116,32,111,102,119,114,105,116,116,101,110,32,105,110,32,116,104,101,9,60,115,112,97,110,32,99,108,97,115,115,61,34,105,115,32,111,110,101,32,111,102,32,116,104,101,32,114,101,115,101,109,98,108,97,110,99,101,32,116,111,111,110,32,116,104,101,32,103,114,111,117,110,100,115,119,104,105,99,104,32,99,111,110,116,97,105,110,115,105,110,99,108,117,100,105,110,103,32,116,104,101,32,100,101,102,105,110,101,100,32,98,121,32,116,104,101,112,117,98,108,105,99,97,116,105,111,110,32,111,102,109,101,97,110,115,32,116,104,97,116,32,116,104,101,111,117,116,115,105,100,101,32,111,102,32,116,104,101,115,117,112,112,111,114,116,32,111,102,32,116,104,101,60,105,110,112,117,116,32,99,108,97,115,115,61,34,60,115,112,97,110,32,99,108,97,115,115,61,34,116,40,77,97,116,104,46,114,97,110,100,111,109,40,41,109,111,115,116,32,112,114,111,109,105,110,101,110,116,100,101,115,99,114,105,112,116,105,111,110,32,111,102,67,111,110,115,116,97,110,116,105,110,111,112,108,101,119,101,114,101,32,112,117,98,108,105,115,104,101,100,60,100,105,118,32,99,108,97,115,115,61,34,115,101,97,112,112,101,97,114,115,32,105,110,32,116,104,101,49,34,32,104,101,105,103,104,116,61,34,49,34,32,109,111,115,116,32,105,109,112,111,114,116,97,110,116,119,104,105,99,104,32,105,110,99,108,117,100,101,115,119,104,105,99,104,32,104,97,100,32,98,101,101,110,100,101,115,116,114,117,99,116,105,111,110,32,111,102,116,104,101,32,112,111,112,117,108,97,116,105,111,110,10,9,60,100,105,118,32,99,108,97,115,115,61,34,112,111,115,115,105,98,105,108,105,116,121,32,111,102,115,111,109,101,116,105,109,101,115,32,117,115,101,100,97,112,112,101,97,114,32,116,111,32,104,97,118,101,115,117,99,99,101,115,115,32,111,102,32,116,104,101,105,110,116,101,110,100,101,100,32,116,111,32,98,101,112,114,101,115,101,110,116,32,105,110,32,116,104,101,115,116,121,108,101,61,34,99,108,101,97,114,58,98,13,10,60,47,115,99,114,105,112,116,62,13,10,60,119,97,115,32,102,111,117,110,100,101,100,32,105,110,105,110,116,101,114,118,105,101,119,32,119,105,116,104,95,105,100,34,32,99,111,110,116,101,110,116,61,34,99,97,112,105,116,97,108,32,111,102,32,116,104,101,13,10,60,108,105,110,107,32,114,101,108,61,34,115,114,101,108,101,97,115,101,32,111,102,32,116,104,101,112,111,105,110,116,32,111,117,116,32,116,104,97,116,120,77,76,72,116,116,112,82,101,113,117,101,115,116,97,110,100,32,115,117,98,115,101,113,117,101,110,116,115,101,99,111,110,100,32,108,97,114,103,101,115,116,118,101,114,121,32,105,109,112,111,114,116,97,110,116,115,112,101,99,105,102,105,99,97,116,105,111,110,115,115,117,114,102,97,99,101,32,111,102,32,116,104,101,97,112,112,108,105,101,100,32,116,111,32,116,104,101,102,111,114,101,105,103,110,32,112,111,108,105,99,121,95,115,101,116,68,111,109,97,105,110,78,97,109,101,101,115,116,97,98,108,105,115,104,101,100,32,105,110,105,115,32,98,101,108,105,101,118,101,100,32,116,111,73,110,32,97,100,100,105,116,105,111,110,32,116,111,109,101,97,110,105,110,103,32,111,102,32,116,104,101,105,115,32,110,97,109,101,100,32,97,102,116,101,114,116,111,32,112,114,111,116,101,99,116,32,116,104,101,105,115,32,114,101,112,114,101,115,101,110,116,101,100,68,101,99,108,97,114,97,116,105,111,110,32,111,102,109,111,114,101,32,101,102,102,105,99,105,101,110,116,67,108,97,115,115,105,102,105,99,97,116,105,111,110,111,116,104,101,114,32,102,111,114,109,115,32,111,102,104,101,32,114,101,116,117,114,110,101,100,32,116,111,60,115,112,97,110,32,99,108,97,115,115,61,34,99,112,101,114,102,111,114,109,97,110,99,101,32,111,102,40,102,117,110,99,116,105,111,110,40,41,32,123,13,105,102,32,97,110,100,32,111,110,108,121,32,105,102,114,101,103,105,111,110,115,32,111,102,32,116,104,101,108,101,97,100,105,110,103,32,116,111,32,116,104,101,114,101,108,97,116,105,111,110,115,32,119,105,116,104,85,110,105,116,101,100,32,78,97,116,105,111,110,115,115,116,121,108,101,61,34,104,101,105,103,104,116,58,111,116,104,101,114,32,116,104,97,110,32,116,104,101,121,112,101,34,32,99,111,110,116,101,110,116,61,34,65,115,115,111,99,105,97,116,105,111,110,32,111,102,10,60,47,104,101,97,100,62,10,60,98,111,100,121,108,111,99,97,116,101,100,32,111,110,32,116,104,101,105,115,32,114,101,102,101,114,114,101,100,32,116,111,40,105,110,99,108,117,100,105,110,103,32,116,104,101,99,111,110,99,101,110,116,114,97,116,105,111,110,115,116,104,101,32,105,110,100,105,118,105,100,117,97,108,97,109,111,110,103,32,116,104,101,32,109,111,115,116,116,104,97,110,32,97,110,121,32,111,116,104,101,114,47,62,10,60,108,105,110,107,32,114,101,108,61,34,32,114,101,116,117,114,110,32,102,97,108,115,101,59,116,104,101,32,112,117,114,112,111,115,101,32,111,102,116,104,101,32,97,98,105,108,105,116,121,32,116,111,59,99,111,108,111,114,58,35,102,102,102,125,10,46,10,60,115,112,97,110,32,99,108,97,115,115,61,34,116,104,101,32,115,117,98,106,101,99,116,32,111,102,100,101,102,105,110,105,116,105,111,110,115,32,111,102,62,13,10,60,108,105,110,107,32,114,101,108,61,34,99,108,97,105,109,32,116,104,97,116,32,116,104,101,104,97,118,101,32,100,101,118,101,108,111,112,101,100,60,116,97,98,108,101,32,119,105,100,116,104,61,34,99,101,108,101,98,114,97,116,105,111,110,32,111,102,70,111,108,108,111,119,105,110,103,32,116,104,101,32,116,111,32,100,105,115,116,105,110,103,117,105,115,104,60,115,112,97,110,32,99,108,97,115,115,61,34,98,116,97,107,101,115,32,112,108,97,99,101,32,105,110,117,110,100,101,114,32,116,104,101,32,110,97,109,101,110,111,116,101,100,32,116,104,97,116,32,116,104,101,62,60,33,91,101,110,100,105,102,93,45,45,62,10,115,116,121,108,101,61,34,109,97,114,103,105,110,45,105,110,115,116,101,97,100,32,111,102,32,116,104,101,105,110,116,114,111,100,117,99,101,100,32,116,104,101,116,104,101,32,112,114,111,99,101,115,115,32,111,102,105,110,99,114,101,97,115,105,110,103,32,116,104,101,100,105,102,102,101,114,101,110,99,101,115,32,105,110,101,115,116,105,109,97,116,101,100,32,116,104,97,116,101,115,112,101,99,105,97,108,108,121,32,116,104,101,47,100,105,118,62,60,100,105,118,32,105,100,61,34,119,97,115,32,101,118,101,110,116,117,97,108,108,121,116,104,114,111,117,103,104,111,117,116,32,104,105,115,116,104,101,32,100,105,102,102,101,114,101,110,99,101,115,111,109,101,116,104,105,110,103,32,116,104,97,116,115,112,97,110,62,60,47,115,112,97,110,62,60,47,115,105,103,110,105,102,105,99,97,110,116,108,121,32,62,60,47,115,99,114,105,112,116,62,13,10,13,10,101,110,118,105,114,111,110,109,101,110,116,97,108,32,116,111,32,112,114,101,118,101,110,116,32,116,104,101,104,97,118,101,32,98,101,101,110,32,117,115,101,100,101,115,112,101,99,105,97,108,108,121,32,102,111,114,117,110,100,101,114,115,116,97,110,100,32,116,104,101,105,115,32,101,115,115,101,110,116,105,97,108,108,121,119,101,114,101,32,116,104,101,32,102,105,114,115,116,105,115,32,116,104,101,32,108,97,114,103,101,115,116,104,97,118,101,32,98,101,101,110,32,109,97,100,101,34,32,115,114,99,61,34,104,116,116,112,58,47,47,105,110,116,101,114,112,114,101,116,101,100,32,97,115,115,101,99,111,110,100,32,104,97,108,102,32,111,102,99,114,111,108,108,105,110,103,61,34,110,111,34,32,105,115,32,99,111,109,112,111,115,101,100,32,111,102,73,73,44,32,72,111,108,121,32,82,111,109,97,110,105,115,32,101,120,112,101,99,116,101,100,32,116,111,104,97,118,101,32,116,104,101,105,114,32,111,119,110,100,101,102,105,110,101,100,32,97,115,32,116,104,101,116,114,97,100,105,116,105,111,110,97,108,108,121,32,104,97,118,101,32,100,105,102,102,101,114,101,110,116,97,114,101,32,111,102,116,101,110,32,117,115,101,100,116,111,32,101,110,115,117,114,101,32,116,104,97,116,97,103,114,101,101,109,101,110,116,32,119,105,116,104,99,111,110,116,97,105,110,105,110,103,32,116,104,101,97,114,101,32,102,114,101,113,117,101,110,116,108,121,105,110,102,111,114,109,97,116,105,111,110,32,111,110,101,120,97,109,112,108,101,32,105,115,32,116,104,101,114,101,115,117,108,116,105,110,103,32,105,110,32,97,60,47,97,62,60,47,108,105,62,60,47,117,108,62,32,99,108,97,115,115,61,34,102,111,111,116,101,114,97,110,100,32,101,115,112,101,99,105,97,108,108,121,116,121,112,101,61,34,98,117,116,116,111,110,34,32,60,47,115,112,97,110,62,60,47,115,112,97,110,62,119,104,105,99,104,32,105,110,99,108,117,100,101,100,62,10,60,109,101,116,97,32,110,97,109,101,61,34,99,111,110,115,105,100,101,114,101,100,32,116,104,101,99,97,114,114,105,101,100,32,111,117,116,32,98,121,72,111,119,101,118,101,114,44,32,105,116,32,105,115,98,101,99,97,109,101,32,112,97,114,116,32,111,102,105,110,32,114,101,108,97,116,105,111,110,32,116,111,112,111,112,117,108,97,114,32,105,110,32,116,104,101,116,104,101,32,99,97,112,105,116,97,108,32,111,102,119,97,115,32,111,102,102,105,99,105,97,108,108,121,119,104,105,99,104,32,104,97,115,32,98,101,101,110,116,104,101,32,72,105,115,116,111,114,121,32,111,102,97,108,116,101,114,110,97,116,105,118,101,32,116,111,100,105,102,102,101,114,101,110,116,32,102,114,111,109,116,111,32,115,117,112,112,111,114,116,32,116,104,101,115,117,103,103,101,115,116,101,100,32,116,104,97,116,105,110,32,116,104,101,32,112,114,111,99,101,115,115,32,32,60,100,105,118,32,99,108,97,115,115,61,34,116,104,101,32,102,111,117,110,100,97,116,105,111,110,98,101,99,97,117,115,101,32,111,102,32,104,105,115,99,111,110,99,101,114,110,101,100,32,119,105,116,104,116,104,101,32,117,110,105,118,101,114,115,105,116,121,111,112,112,111,115,101,100,32,116,111,32,116,104,101,116,104,101,32,99,111,110,116,101,120,116,32,111,102,60,115,112,97,110,32,99,108,97,115,115,61,34,112,116,101,120,116,34,32,110,97,109,101,61,34,113,34,9,9,60,100,105,118,32,99,108,97,115,115,61,34,116,104,101,32,115,99,105,101,110,116,105,102,105,99,114,101,112,114,101,115,101,110,116,101,100,32,98,121,109,97,116,104,101,109,97,116,105,99,105,97,110,115,101,108,101,99,116,101,100,32,98,121,32,116,104,101,116,104,97,116,32,104,97,118,101,32,98,101,101,110,62,60,100,105,118,32,99,108,97,115,115,61,34,99,100,105,118,32,105,100,61,34,104,101,97,100,101,114,105,110,32,112,97,114,116,105,99,117,108,97,114,44,99,111,110,118,101,114,116,101,100,32,105,110,116,111,41,59,10,60,47,115,99,114,105,112,116,62,10,60,112,104,105,108,111,115,111,112,104,105,99,97,108,32,115,114,112,115,107,111,104,114,118,97,116,115,107,105,116,105,225,186,191,110,103,32,86,105,225,187,135,116,208,160,209,131,209,129,209,129,208,186,208,184,208,185,209,128,209,131,209,129,209,129,208,186,208,184,208,185,105,110,118,101,115,116,105,103,97,99,105,195,179,110,112,97,114,116,105,99,105,112,97,99,105,195,179,110,208,186,208,190,209,130,208,190,209,128,209,139,208,181,208,190,208,177,208,187,208,176,209,129,209,130,208,184,208,186,208,190,209,130,208,190,209,128,209,139,208,185,209,135,208,181,208,187,208,190,208,178,208,181,208,186,209,129,208,184,209,129,209,130,208,181,208,188,209,139,208,157,208,190,208,178,208,190,209,129,209,130,208,184,208,186,208,190,209,130,208,190,209,128,209,139,209,133,208,190,208,177,208,187,208,176,209,129,209,130,209,140,208,178,209,128,208,181,208,188,208,181,208,189,208,184,208,186,208,190,209,130,208,190,209,128,208,176,209,143,209,129,208,181,208,179,208,190,208,180,208,189,209,143,209,129,208,186,208,176,209,135,208,176,209,130,209,140,208,189,208,190,208,178,208,190,209,129,209,130,208,184,208,163,208,186,209,128,208,176,208,184,208,189,209,139,208,178,208,190,208,191,209,128,208,190,209,129,209,139,208,186,208,190,209,130,208,190,209,128,208,190,208,185,209,129,208,180,208,181,208,187,208,176,209,130,209,140,208,191,208,190,208,188,208,190,209,137,209,140,209,142,209,129,209,128,208,181,208,180,209,129,209,130,208,178,208,190,208,177,209,128,208,176,208,183,208,190,208,188,209,129,209,130,208,190,209,128,208,190,208,189,209,139,209,131,209,135,208,176,209,129,209,130,208,184,208,181,209,130,208,181,209,135,208,181,208,189,208,184,208,181,208,147,208,187,208,176,208,178,208,189,208,176,209,143,208,184,209,129,209,130,208,190,209,128,208,184,208,184,209,129,208,184,209,129,209,130,208,181,208,188,208,176,209,128,208,181,209,136,208,181,208,189,208,184,209,143,208,161,208,186,208,176,209,135,208,176,209,130,209,140,208,191,208,190,209,141,209,130,208,190,208,188,209,131,209,129,208,187,208,181,208,180,209,131,208,181,209,130,209,129,208,186,208,176,208,183,208,176,209,130,209,140,209,130,208,190,208,178,208,176,209,128,208,190,208,178,208,186,208,190,208,189,208,181,209,135,208,189,208,190,209,128,208,181,209,136,208,181,208,189,208,184,208,181,208,186,208,190,209,130,208,190,209,128,208,190,208,181,208,190,209,128,208,179,208,176,208,189,208,190,208,178,208,186,208,190,209,130,208,190,209,128,208,190,208,188,208,160,208,181,208,186,208,187,208,176,208,188,208,176,216,167,217,132,217,133,217,134,216,170,216,175,217,137,217,133,217,134,216,170,216,175,217,138,216,167,216,170,216,167,217,132,217,133,217,136,216,182,217,136,216,185,216,167,217,132,216,168,216,177,216,167,217,133,216,172,216,167,217,132,217,133,217,136,216,167,217,130,216,185,216,167,217,132,216,177,216,179,216,167,216,166,217,132,217,133,216,180,216,167,216,177,217,131,216,167,216,170,216,167,217,132,216,163,216,185,216,182,216,167,216,161,216,167,217,132,216,177,217,138,216,167,216,182,216,169,216,167,217,132,216,170,216,181,217,133,217,138,217,133,216,167,217,132,216,167,216,185,216,182,216,167,216,161,216,167,217,132,217,134,216,170,216,167,216,166,216,172,216,167,217,132,216,163,217,132,216,185,216,167,216,168,216,167,217,132,216,170,216,179,216,172,217,138,217,132,216,167,217,132,216,163,217,130,216,179,216,167,217,133,216,167,217,132,216,182,216,186,216,183,216,167,216,170,216,167,217,132,217,129,217,138,216,175,217,138,217,136,216,167,217,132,216,170,216,177,216,173,217,138,216,168,216,167,217,132,216,172,216,175,217,138,216,175,216,169,216,167,217,132,216,170,216,185,217,132,217,138,217,133,216,167,217,132,216,163,216,174,216,168,216,167,216,177,216,167,217,132,216,167,217,129,217,132,216,167,217,133,216,167,217,132,216,163,217,129,217,132,216,167,217,133,216,167,217,132,216,170,216,167,216,177,217,138,216,174,216,167,217,132,216,170,217,130,217,134,217,138,216,169,216,167,217,132,216,167,217,132,216,185,216,167,216,168,216,167,217,132,216,174,217,136,216,167,216,183,216,177,216,167,217,132,217,133,216,172,216,170,217,133,216,185,216,167,217,132,216,175,217,138,217,131,217,136,216,177,216,167,217,132,216,179,217,138,216,167,216,173,216,169,216,185,216,168,216,175,216,167,217,132,217,132,217,135,216,167,217,132,216,170,216,177,216,168,217,138,216,169,216,167,217,132,216,177,217,136,216,167,216,168,216,183,216,167,217,132,216,163,216,175,216,168,217,138,216,169,216,167,217,132,216,167,216,174,216,168,216,167,216,177,216,167,217,132,217,133,216,170,216,173,216,175,216,169,216,167,217,132,216,167,216,186,216,167,217,134,217,138,99,117,114,115,111,114,58,112,111,105,110,116,101,114,59,60,47,116,105,116,108,101,62,10,60,109,101,116,97,32,34,32,104,114,101,102,61,34,104,116,116,112,58,47,47,34,62,60,115,112,97,110,32,99,108,97,115,115,61,34,109,101,109,98,101,114,115,32,111,102,32,116,104,101,32,119,105,110,100,111,119,46,108,111,99,97,116,105,111,110,118,101,114,116,105,99,97,108,45,97,108,105,103,110,58,47,97,62,32,124,32,60,97,32,104,114,101,102,61,34,60,33,100,111,99,116,121,112,101,32,104,116,109,108,62,109,101,100,105,97,61,34,115,99,114,101,101,110,34,32,60,111,112,116,105,111,110,32,118,97,108,117,101,61,34,102,97,118,105,99,111,110,46,105,99,111,34,32,47,62,10,9,9,60,100,105,118,32,99,108,97,115,115,61,34,99,104,97,114,97,99,116,101,114,105,115,116,105,99,115,34,32,109,101,116,104,111,100,61,34,103,101,116,34,32,47,98,111,100,121,62,10,60,47,104,116,109,108,62,10,115,104,111,114,116,99,117,116,32,105,99,111,110,34,32,100,111,99,117,109,101,110,116,46,119,114,105,116,101,40,112,97,100,100,105,110,103,45,98,111,116,116,111,109,58,114,101,112,114,101,115,101,110,116,97,116,105,118,101,115,115,117,98,109,105,116,34,32,118,97,108,117,101,61,34,97,108,105,103,110,61,34,99,101,110,116,101,114,34,32,116,104,114,111,117,103,104,111,117,116,32,116,104,101,32,115,99,105,101,110,99,101,32,102,105,99,116,105,111,110,10,32,32,60,100,105,118,32,99,108,97,115,115,61,34,115,117,98,109,105,116,34,32,99,108,97,115,115,61,34,111,110,101,32,111,102,32,116,104,101,32,109,111,115,116,32,118,97,108,105,103,110,61,34,116,111,112,34,62,60,119,97,115,32,101,115,116,97,98,108,105,115,104,101,100,41,59,13,10,60,47,115,99,114,105,112,116,62,13,10,114,101,116,117,114,110,32,102,97,108,115,101,59,34,62,41,46,115,116,121,108,101,46,100,105,115,112,108,97,121,98,101,99,97,117,115,101,32,111,102,32,116,104,101,32,100,111,99,117,109,101,110,116,46,99,111,111,107,105,101,60,102,111,114,109,32,97,99,116,105,111,110,61,34,47,125,98,111,100,121,123,109,97,114,103,105,110,58,48,59,69,110,99,121,99,108,111,112,101,100,105,97,32,111,102,118,101,114,115,105,111,110,32,111,102,32,116,104,101,32,46,99,114,101,97,116,101,69,108,101,109,101,110,116,40,110,97,109,101,34,32,99,111,110,116,101,110,116,61,34,60,47,100,105,118,62,10,60,47,100,105,118,62,10,10,97,100,109,105,110,105,115,116,114,97,116,105,118,101,32,60,47,98,111,100,121,62,10,60,47,104,116,109,108,62,104,105,115,116,111,114,121,32,111,102,32,116,104,101,32,34,62,60,105,110,112,117,116,32,116,121,112,101,61,34,112,111,114,116,105,111,110,32,111,102,32,116,104,101,32,97,115,32,112,97,114,116,32,111,102,32,116,104,101,32,38,110,98,115,112,59,60,97,32,104,114,101,102,61,34,111,116,104,101,114,32,99,111,117,110,116,114,105,101,115,34,62,10,60,100,105,118,32,99,108,97,115,115,61,34,60,47,115,112,97,110,62,60,47,115,112,97,110,62,60,73,110,32,111,116,104,101,114,32,119,111,114,100,115,44,100,105,115,112,108,97,121,58,32,98,108,111,99,107,59,99,111,110,116,114,111,108,32,111,102,32,116,104,101,32,105,110,116,114,111,100,117,99,116,105,111,110,32,111,102,47,62,10,60,109,101,116,97,32,110,97,109,101,61,34,97,115,32,119,101,108,108,32,97,115,32,116,104,101,32,105,110,32,114,101,99,101,110,116,32,121,101,97,114,115,13,10,9,60,100,105,118,32,99,108,97,115,115,61,34,60,47,100,105,118,62,10,9,60,47,100,105,118,62,10,105,110,115,112,105,114,101,100,32,98,121,32,116,104,101,116,104,101,32,101,110,100,32,111,102,32,116,104,101,32,99,111,109,112,97,116,105,98,108,101,32,119,105,116,104,98,101,99,97,109,101,32,107,110,111,119,110,32,97,115,32,115,116,121,108,101,61,34,109,97,114,103,105,110,58,46,106,115,34,62,60,47,115,99,114,105,112,116,62,60,32,73,110,116,101,114,110,97,116,105,111,110,97,108,32,116,104,101,114,101,32,104,97,118,101,32,98,101,101,110,71,101,114,109,97,110,32,108,97,110,103,117,97,103,101,32,115,116,121,108,101,61,34,99,111,108,111,114,58,35,67,111,109,109,117,110,105,115,116,32,80,97,114,116,121,99,111,110,115,105,115,116,101,110,116,32,119,105,116,104,98,111,114,100,101,114,61,34,48,34,32,99,101,108,108,32,109,97,114,103,105,110,104,101,105,103,104,116,61,34,116,104,101,32,109,97,106,111,114,105,116,121,32,111,102,34,32,97,108,105,103,110,61,34,99,101,110,116,101,114,114,101,108,97,116,101,100,32,116,111,32,116,104,101,32,109,97,110,121,32,100,105,102,102,101,114,101,110,116,32,79,114,116,104,111,100,111,120,32,67,104,117,114,99,104,115,105,109,105,108,97,114,32,116,111,32,116,104,101,32,47,62,10,60,108,105,110,107,32,114,101,108,61,34,115,119,97,115,32,111,110,101,32,111,102,32,116,104,101,32,117,110,116,105,108,32,104,105,115,32,100,101,97,116,104,125,41,40,41,59,10,60,47,115,99,114,105,112,116,62,111,116,104,101,114,32,108,97,110,103,117,97,103,101,115,99,111,109,112,97,114,101,100,32,116,111,32,116,104,101,112,111,114,116,105,111,110,115,32,111,102,32,116,104,101,116,104,101,32,78,101,116,104,101,114,108,97,110,100,115,116,104,101,32,109,111,115,116,32,99,111,109,109,111,110,98,97,99,107,103,114,111,117,110,100,58,117,114,108,40,97,114,103,117,101,100,32,116,104,97,116,32,116,104,101,115,99,114,111,108,108,105,110,103,61,34,110,111,34,32,105,110,99,108,117,100,101,100,32,105,110,32,116,104,101,78,111,114,116,104,32,65,109,101,114,105,99,97,110,32,116,104,101,32,110,97,109,101,32,111,102,32,116,104,101,105,110,116,101,114,112,114,101,116,97,116,105,111,110,115,116,104,101,32,116,114,97,100,105,116,105,111,110,97,108,100,101,118,101,108,111,112,109,101,110,116,32,111,102,32,102,114,101,113,117,101,110,116,108,121,32,117,115,101,100,97,32,99,111,108,108,101,99,116,105,111,110,32,111,102,118,101,114,121,32,115,105,109,105,108,97,114,32,116,111,115,117,114,114,111,117,110,100,105,110,103,32,116,104,101,101,120,97,109,112,108,101,32,111,102,32,116,104,105,115,97,108,105,103,110,61,34,99,101,110,116,101,114,34,62,119,111,117,108,100,32,104,97,118,101,32,98,101,101,110,105,109,97,103,101,95,99,97,112,116,105,111,110,32,61,97,116,116,97,99,104,101,100,32,116,111,32,116,104,101,115,117,103,103,101,115,116,105,110,103,32,116,104,97,116,105,110,32,116,104,101,32,102,111,114,109,32,111,102,32,105,110,118,111,108,118,101,100,32,105,110,32,116,104,101,105,115,32,100,101,114,105,118,101,100,32,102,114,111,109,110,97,109,101,100,32,97,102,116,101,114,32,116,104,101,73,110,116,114,111,100,117,99,116,105,111,110,32,116,111,114,101,115,116,114,105,99,116,105,111,110,115,32,111,110,32,115,116,121,108,101,61,34,119,105,100,116,104,58,32,99,97,110,32,98,101,32,117,115,101,100,32,116,111,32,116,104,101,32,99,114,101,97,116,105,111,110,32,111,102,109,111,115,116,32,105,109,112,111,114,116,97,110,116,32,105,110,102,111,114,109,97,116,105,111,110,32,97,110,100,114,101,115,117,108,116,101,100,32,105,110,32,116,104,101,99,111,108,108,97,112,115,101,32,111,102,32,116,104,101,84,104,105,115,32,109,101,97,110,115,32,116,104,97,116,101,108,101,109,101,110,116,115,32,111,102,32,116,104,101,119,97,115,32,114,101,112,108,97,99,101,100,32,98,121,97,110,97,108,121,115,105,115,32,111,102,32,116,104,101,105,110,115,112,105,114,97,116,105,111,110,32,102,111,114,114,101,103,97,114,100,101,100,32,97,115,32,116,104,101,109,111,115,116,32,115,117,99,99,101,115,115,102,117,108,107,110,111,119,110,32,97,115,32,38,113,117,111,116,59,97,32,99,111,109,112,114,101,104,101,110,115,105,118,101,72,105,115,116,111,114,121,32,111,102,32,116,104,101,32,119,101,114,101,32,99,111,110,115,105,100,101,114,101,100,114,101,116,117,114,110,101,100,32,116,111,32,116,104,101,97,114,101,32,114,101,102,101,114,114,101,100,32,116,111,85,110,115,111,117,114,99,101,100,32,105,109,97,103,101,62,10,9,60,100,105,118,32,99,108,97,115,115,61,34,99,111,110,115,105,115,116,115,32,111,102,32,116,104,101,115,116,111,112,80,114,111,112,97,103,97,116,105,111,110,105,110,116,101,114,101,115,116,32,105,110,32,116,104,101,97,118,97,105,108,97,98,105,108,105,116,121,32,111,102,97,112,112,101,97,114,115,32,116,111,32,104,97,118,101,101,108,101,99,116,114,111,109,97,103,110,101,116,105,99,101,110,97,98,108,101,83,101,114,118,105,99,101,115,40,102,117,110,99,116,105,111,110,32,111,102,32,116,104,101,73,116,32,105,115,32,105,109,112,111,114,116,97,110,116,60,47,115,99,114,105,112,116,62,60,47,100,105,118,62,102,117,110,99,116,105,111,110,40,41,123,118,97,114,32,114,101,108,97,116,105,118,101,32,116,111,32,116,104,101,97,115,32,97,32,114,101,115,117,108,116,32,111,102,32,116,104,101,32,112,111,115,105,116,105,111,110,32,111,102,70,111,114,32,101,120,97,109,112,108,101,44,32,105,110,32,109,101,116,104,111,100,61,34,112,111,115,116,34,32,119,97,115,32,102,111,108,108,111,119,101,100,32,98,121,38,97,109,112,59,109,100,97,115,104,59,32,116,104,101,116,104,101,32,97,112,112,108,105,99,97,116,105,111,110,106,115,34,62,60,47,115,99,114,105,112,116,62,13,10,117,108,62,60,47,100,105,118,62,60,47,100,105,118,62,97,102,116,101,114,32,116,104,101,32,100,101,97,116,104,119,105,116,104,32,114,101,115,112,101,99,116,32,116,111,115,116,121,108,101,61,34,112,97,100,100,105,110,103,58,105,115,32,112,97,114,116,105,99,117,108,97,114,108,121,100,105,115,112,108,97,121,58,105,110,108,105,110,101,59,32,116,121,112,101,61,34,115,117,98,109,105,116,34,32,105,115,32,100,105,118,105,100,101,100,32,105,110,116,111,228,184,173,230,150,135,32,40,231,174,128,228,189,147,41,114,101,115,112,111,110,115,97,98,105,108,105,100,97,100,97,100,109,105,110,105,115,116,114,97,99,105,195,179,110,105,110,116,101,114,110,97,99,105,111,110,97,108,101,115,99,111,114,114,101,115,112,111,110,100,105,101,110,116,101,224,164,137,224,164,170,224,164,175,224,165,139,224,164,151,224,164,170,224,165,130,224,164,176,224,165,141,224,164,181,224,164,185,224,164,174,224,164,190,224,164,176,224,165,135,224,164,178,224,165,139,224,164,151,224,165,139,224,164,130,224,164,154,224,165,129,224,164,168,224,164,190,224,164,181,224,164,178,224,165,135,224,164,149,224,164,191,224,164,168,224,164,184,224,164,176,224,164,149,224,164,190,224,164,176,224,164,170,224,165,129,224,164,178,224,164,191,224,164,184,224,164,150,224,165,139,224,164,156,224,165,135,224,164,130,224,164,154,224,164,190,224,164,185,224,164,191,224,164,143,224,164,173,224,165,135,224,164,156,224,165,135,224,164,130,224,164,182,224,164,190,224,164,174,224,164,191,224,164,178,224,164,185,224,164,174,224,164,190,224,164,176,224,165,128,224,164,156,224,164,190,224,164,151,224,164,176,224,164,163,224,164,172,224,164,168,224,164,190,224,164,168,224,165,135,224,164,149,224,165,129,224,164,174,224,164,190,224,164,176,224,164,172,224,165,141,224,164,178,224,165,137,224,164,151,224,164,174,224,164,190,224,164,178,224,164,191,224,164,149,224,164,174,224,164,185,224,164,191,224,164,178,224,164,190,224,164,170,224,165,131,224,164,183,224,165,141,224,164,160,224,164,172,224,164,162,224,164,188,224,164,164,224,165,135,224,164,173,224,164,190,224,164,156,224,164,170,224,164,190,224,164,149,224,165,141,224,164,178,224,164,191,224,164,149,224,164,159,224,165,141,224,164,176,224,165,135,224,164,168,224,164,150,224,164,191,224,164,178,224,164,190,224,164,171,224,164,166,224,165,140,224,164,176,224,164,190,224,164,168,224,164,174,224,164,190,224,164,174,224,164,178,224,165,135,224,164,174,224,164,164,224,164,166,224,164,190,224,164,168,224,164,172,224,164,190,224,164,156,224,164,190,224,164,176,224,164,181,224,164,191,224,164,149,224,164,190,224,164,184,224,164,149,224,165,141,224,164,175,224,165,139,224,164,130,224,164,154,224,164,190,224,164,185,224,164,164,224,165,135,224,164,170,224,164,185,224,165,129,224,164,129,224,164,154,224,164,172,224,164,164,224,164,190,224,164,175,224,164,190,224,164,184,224,164,130,224,164,181,224,164,190,224,164,166,224,164,166,224,165,135,224,164,150,224,164,168,224,165,135,224,164,170,224,164,191,224,164,155,224,164,178,224,165,135,224,164,181,224,164,191,224,164,182,224,165,135,224,164,183,224,164,176,224,164,190,224,164,156,224,165,141,224,164,175,224,164,137,224,164,164,224,165,141,224,164,164,224,164,176,224,164,174,224,165,129,224,164,130,224,164,172,224,164,136,224,164,166,224,165,139,224,164,168,224,165,139,224,164,130,224,164,137,224,164,170,224,164,149,224,164,176,224,164,163,224,164,170,224,164,162,224,164,188,224,165,135,224,164,130,224,164,184,224,165,141,224,164,165,224,164,191,224,164,164,224,164,171,224,164,191,224,164,178,224,165,141,224,164,174,224,164,174,224,165,129,224,164,150,224,165,141,224,164,175,224,164,133,224,164,154,224,165,141,224,164,155,224,164,190,224,164,155,224,165,130,224,164,159,224,164,164,224,165,128,224,164,184,224,164,130,224,164,151,224,165,128,224,164,164,224,164,156,224,164,190,224,164,143,224,164,151,224,164,190,224,164,181,224,164,191,224,164,173,224,164,190,224,164,151,224,164,152,224,164,163,224,165,141,224,164,159,224,165,135,224,164,166,224,165,130,224,164,184,224,164,176,224,165,135,224,164,166,224,164,191,224,164,168,224,165,139,224,164,130,224,164,185,224,164,164,224,165,141,224,164,175,224,164,190,224,164,184,224,165,135,224,164,149,224,165,141,224,164,184,224,164,151,224,164,190,224,164,130,224,164,167,224,165,128,224,164,181,224,164,191,224,164,182,224,165,141,224,164,181,224,164,176,224,164,190,224,164,164,224,165,135,224,164,130,224,164,166,224,165,136,224,164,159,224,165,141,224,164,184,224,164,168,224,164,149,224,165,141,224,164,182,224,164,190,224,164,184,224,164,190,224,164,174,224,164,168,224,165,135,224,164,133,224,164,166,224,164,190,224,164,178,224,164,164,224,164,172,224,164,191,224,164,156,224,164,178,224,165,128,224,164,170,224,165,129,224,164,176,224,165,130,224,164,183,224,164,185,224,164,191,224,164,130,224,164,166,224,165,128,224,164,174,224,164,191,224,164,164,224,165,141,224,164,176,224,164,149,224,164,181,224,164,191,224,164,164,224,164,190,224,164,176,224,165,129,224,164,170,224,164,175,224,165,135,224,164,184,224,165,141,224,164,165,224,164,190,224,164,168,224,164,149,224,164,176,224,165,139,224,164,161,224,164,188,224,164,174,224,165,129,224,164,149,224,165,141,224,164,164,224,164,175,224,165,139,224,164,156,224,164,168,224,164,190,224,164,149,224,165,131,224,164,170,224,164,175,224,164,190,224,164,170,224,165,139,224,164,184,224,165,141,224,164,159,224,164,152,224,164,176,224,165,135,224,164,178,224,165,130,224,164,149,224,164,190,224,164,176,224,165,141,224,164,175,224,164,181,224,164,191,224,164,154,224,164,190,224,164,176,224,164,184,224,165,130,224,164,154,224,164,168,224,164,190,224,164,174,224,165,130,224,164,178,224,165,141,224,164,175,224,164,166,224,165,135,224,164,150,224,165,135,224,164,130,224,164,185,224,164,174,224,165,135,224,164,182,224,164,190,224,164,184,224,165,141,224,164,149,224,165,130,224,164,178,224,164,174,224,165,136,224,164,130,224,164,168,224,165,135,224,164,164,224,165,136,224,164,175,224,164,190,224,164,176,224,164,156,224,164,191,224,164,184,224,164,149,224,165,135,114,115,115,43,120,109,108,34,32,116,105,116,108,101,61,34,45,116,121,112,101,34,32,99,111,110,116,101,110,116,61,34,116,105,116,108,101,34,32,99,111,110,116,101,110,116,61,34,97,116,32,116,104,101,32,115,97,109,101,32,116,105,109,101,46,106,115,34,62,60,47,115,99,114,105,112,116,62,10,60,34,32,109,101,116,104,111,100,61,34,112,111,115,116,34,32,60,47,115,112,97,110,62,60,47,97,62,60,47,108,105,62,118,101,114,116,105,99,97,108,45,97,108,105,103,110,58,116,47,106,113,117,101,114,121,46,109,105,110,46,106,115,34,62,46,99,108,105,99,107,40,102,117,110,99,116,105,111,110,40,32,115,116,121,108,101,61,34,112,97,100,100,105,110,103,45,125,41,40,41,59,10,60,47,115,99,114,105,112,116,62,10,60,47,115,112,97,110,62,60,97,32,104,114,101,102,61,34,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,41,59,32,114,101,116,117,114,110,32,102,97,108,115,101,59,116,101,120,116,45,100,101,99,111,114,97,116,105,111,110,58,32,115,99,114,111,108,108,105,110,103,61,34,110,111,34,32,98,111,114,100,101,114,45,99,111,108,108,97,112,115,101,58,97,115,115,111,99,105,97,116,101,100,32,119,105,116,104,32,66,97,104,97,115,97,32,73,110,100,111,110,101,115,105,97,69,110,103,108,105,115,104,32,108,97,110,103,117,97,103,101,60,116,101,120,116,32,120,109,108,58,115,112,97,99,101,61,46,103,105,102,34,32,98,111,114,100,101,114,61,34,48,34,60,47,98,111,100,121,62,10,60,47,104,116,109,108,62,10,111,118,101,114,102,108,111,119,58,104,105,100,100,101,110,59,105,109,103,32,115,114,99,61,34,104,116,116,112,58,47,47,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,114,101,115,112,111,110,115,105,98,108,101,32,102,111,114,32,115,46,106,115,34,62,60,47,115,99,114,105,112,116,62,10,47,102,97,118,105,99,111,110,46,105,99,111,34,32,47,62,111,112,101,114,97,116,105,110,103,32,115,121,115,116,101,109,34,32,115,116,121,108,101,61,34,119,105,100,116,104,58,49,116,97,114,103,101,116,61,34,95,98,108,97,110,107,34,62,83,116,97,116,101,32,85,110,105,118,101,114,115,105,116,121,116,101,120,116,45,97,108,105,103,110,58,108,101,102,116,59,10,100,111,99,117,109,101,110,116,46,119,114,105,116,101,40,44,32,105,110,99,108,117,100,105,110,103,32,116,104,101,32,97,114,111,117,110,100,32,116,104,101,32,119,111,114,108,100,41,59,13,10,60,47,115,99,114,105,112,116,62,13,10,60,34,32,115,116,121,108,101,61,34,104,101,105,103,104,116,58,59,111,118,101,114,102,108,111,119,58,104,105,100,100,101,110,109,111,114,101,32,105,110,102,111,114,109,97,116,105,111,110,97,110,32,105,110,116,101,114,110,97,116,105,111,110,97,108,97,32,109,101,109,98,101,114,32,111,102,32,116,104,101,32,111,110,101,32,111,102,32,116,104,101,32,102,105,114,115,116,99,97,110,32,98,101,32,102,111,117,110,100,32,105,110,32,60,47,100,105,118,62,10,9,9,60,47,100,105,118,62,10,100,105,115,112,108,97,121,58,32,110,111,110,101,59,34,62,34,32,47,62,10,60,108,105,110,107,32,114,101,108,61,34,10,32,32,40,102,117,110,99,116,105,111,110,40,41,32,123,116,104,101,32,49,53,116,104,32,99,101,110,116,117,114,121,46,112,114,101,118,101,110,116,68,101,102,97,117,108,116,40,108,97,114,103,101,32,110,117,109,98,101,114,32,111,102,32,66,121,122,97,110,116,105,110,101,32,69,109,112,105,114,101,46,106,112,103,124,116,104,117,109,98,124,108,101,102,116,124,118,97,115,116,32,109,97,106,111,114,105,116,121,32,111,102,109,97,106,111,114,105,116,121,32,111,102,32,116,104,101,32,32,97,108,105,103,110,61,34,99,101,110,116,101,114,34,62,85,110,105,118,101,114,115,105,116,121,32,80,114,101,115,115,100,111,109,105,110,97,116,101,100,32,98,121,32,116,104,101,83,101,99,111,110,100,32,87,111,114,108,100,32,87,97,114,100,105,115,116,114,105,98,117,116,105,111,110,32,111,102,32,115,116,121,108,101,61,34,112,111,115,105,116,105,111,110,58,116,104,101,32,114,101,115,116,32,111,102,32,116,104,101,32,99,104,97,114,97,99,116,101,114,105,122,101,100,32,98,121,32,114,101,108,61,34,110,111,102,111,108,108,111,119,34,62,100,101,114,105,118,101,115,32,102,114,111,109,32,116,104,101,114,97,116,104,101,114,32,116,104,97,110,32,116,104,101,32,97,32,99,111,109,98,105,110,97,116,105,111,110,32,111,102,115,116,121,108,101,61,34,119,105,100,116,104,58,49,48,48,69,110,103,108,105,115,104,45,115,112,101,97,107,105,110,103,99,111,109,112,117,116,101,114,32,115,99,105,101,110,99,101,98,111,114,100,101,114,61,34,48,34,32,97,108,116,61,34,116,104,101,32,101,120,105,115,116,101,110,99,101,32,111,102,68,101,109,111,99,114,97,116,105,99,32,80,97,114,116,121,34,32,115,116,121,108,101,61,34,109,97,114,103,105,110,45,70,111,114,32,116,104,105,115,32,114,101,97,115,111,110,44,46,106,115,34,62,60,47,115,99,114,105,112,116,62,10,9,115,66,121,84,97,103,78,97,109,101,40,115,41,91,48,93,106,115,34,62,60,47,115,99,114,105,112,116,62,13,10,60,46,106,115,34,62,60,47,115,99,114,105,112,116,62,13,10,108,105,110,107,32,114,101,108,61,34,105,99,111,110,34,32,39,32,97,108,116,61,39,39,32,99,108,97,115,115,61,39,102,111,114,109,97,116,105,111,110,32,111,102,32,116,104,101,118,101,114,115,105,111,110,115,32,111,102,32,116,104,101,32,60,47,97,62,60,47,100,105,118,62,60,47,100,105,118,62,47,112,97,103,101,62,10,32,32,60,112,97,103,101,62,10,60,100,105,118,32,99,108,97,115,115,61,34,99,111,110,116,98,101,99,97,109,101,32,116,104,101,32,102,105,114,115,116,98,97,104,97,115,97,32,73,110,100,111,110,101,115,105,97,101,110,103,108,105,115,104,32,40,115,105,109,112,108,101,41,206,149,206,187,206,187,206,183,206,189,206,185,206,186,206,172,209,133,209,128,208,178,208,176,209,130,209,129,208,186,208,184,208,186,208,190,208,188,208,191,208,176,208,189,208,184,208,184,209,143,208,178,208,187,209,143,208,181,209,130,209,129,209,143,208,148,208,190,208,177,208,176,208,178,208,184,209,130,209,140,209,135,208,181,208,187,208,190,208,178,208,181,208,186,208,176,209,128,208,176,208,183,208,178,208,184,209,130,208,184,209,143,208,152,208,189,209,130,208,181,209,128,208,189,208,181,209,130,208,158,209,130,208,178,208,181,209,130,208,184,209,130,209,140,208,189,208,176,208,191,209,128,208,184,208,188,208,181,209,128,208,184,208,189,209,130,208,181,209,128,208,189,208,181,209,130,208,186,208,190,209,130,208,190,209,128,208,190,208,179,208,190,209,129,209,130,209,128,208,176,208,189,208,184,209,134,209,139,208,186,208,176,209,135,208,181,209,129,209,130,208,178,208,181,209,131,209,129,208,187,208,190,208,178,208,184,209,143,209,133,208,191,209,128,208,190,208,177,208,187,208,181,208,188,209,139,208,191,208,190,208,187,209,131,209,135,208,184,209,130,209,140,209,143,208,178,208,187,209,143,209,142,209,130,209,129,209,143,208,189,208,176,208,184,208,177,208,190,208,187,208,181,208,181,208,186,208,190,208,188,208,191,208,176,208,189,208,184,209,143,208,178,208,189,208,184,208,188,208,176,208,189,208,184,208,181,209,129,209,128,208,181,208,180,209,129,209,130,208,178,208,176,216,167,217,132,217,133,217,136,216,167,216,182,217,138,216,185,216,167,217,132,216,177,216,166,217,138,216,179,217,138,216,169,216,167,217,132,216,167,217,134,216,170,217,130,216,167,217,132,217,133,216,180,216,167,216,177,217,131,216,167,216,170,217,131,216,167,217,132,216,179,217,138,216,167,216,177,216,167,216,170,216,167,217,132,217,133,217,131,216,170,217,136,216,168,216,169,216,167,217,132,216,179,216,185,217,136,216,175,217,138,216,169,216,167,216,173,216,181,216,167,216,166,217,138,216,167,216,170,216,167,217,132,216,185,216,167,217,132,217,133,217,138,216,169,216,167,217,132,216,181,217,136,216,170,217,138,216,167,216,170,216,167,217,132,216,167,217,134,216,170,216,177,217,134,216,170,216,167,217,132,216,170,216,181,216,167,217,133,217,138,217,133,216,167,217,132,216,165,216,179,217,132,216,167,217,133,217,138,216,167,217,132,217,133,216,180,216,167,216,177,217,131,216,169,216,167,217,132,217,133,216,177,216,166,217,138,216,167,216,170,114,111,98,111,116,115,34,32,99,111,110,116,101,110,116,61,34,60,100,105,118,32,105,100,61,34,102,111,111,116,101,114,34,62,116,104,101,32,85,110,105,116,101,100,32,83,116,97,116,101,115,60,105,109,103,32,115,114,99,61,34,104,116,116,112,58,47,47,46,106,112,103,124,114,105,103,104,116,124,116,104,117,109,98,124,46,106,115,34,62,60,47,115,99,114,105,112,116,62,13,10,60,108,111,99,97,116,105,111,110,46,112,114,111,116,111,99,111,108,102,114,97,109,101,98,111,114,100,101,114,61,34,48,34,32,115,34,32,47,62,10,60,109,101,116,97,32,110,97,109,101,61,34,60,47,97,62,60,47,100,105,118,62,60,47,100,105,118,62,60,102,111,110,116,45,119,101,105,103,104,116,58,98,111,108,100,59,38,113,117,111,116,59,32,97,110,100,32,38,113,117,111,116,59,100,101,112,101,110,100,105,110,103,32,111,110,32,116,104,101,32,109,97,114,103,105,110,58,48,59,112,97,100,100,105,110,103,58,34,32,114,101,108,61,34,110,111,102,111,108,108,111,119,34,32,80,114,101,115,105,100,101,110,116,32,111,102,32,116,104,101,32,116,119,101,110,116,105,101,116,104,32,99,101,110,116,117,114,121,101,118,105,115,105,111,110,62,10,32,32,60,47,112,97,103,101,73,110,116,101,114,110,101,116,32,69,120,112,108,111,114,101,114,97,46,97,115,121,110,99,32,61,32,116,114,117,101,59,13,10,105,110,102,111,114,109,97,116,105,111,110,32,97,98,111,117,116,60,100,105,118,32,105,100,61,34,104,101,97,100,101,114,34,62,34,32,97,99,116,105,111,110,61,34,104,116,116,112,58,47,47,60,97,32,104,114,101,102,61,34,104,116,116,112,115,58,47,47,60,100,105,118,32,105,100,61,34,99,111,110,116,101,110,116,34,60,47,100,105,118,62,13,10,60,47,100,105,118,62,13,10,60,100,101,114,105,118,101,100,32,102,114,111,109,32,116,104,101,32,60,105,109,103,32,115,114,99,61,39,104,116,116,112,58,47,47,97,99,99,111,114,100,105,110,103,32,116,111,32,116,104,101,32,10,60,47,98,111,100,121,62,10,60,47,104,116,109,108,62,10,115,116,121,108,101,61,34,102,111,110,116,45,115,105,122,101,58,115,99,114,105,112,116,32,108,97,110,103,117,97,103,101,61,34,65,114,105,97,108,44,32,72,101,108,118,101,116,105,99,97,44,60,47,97,62,60,115,112,97,110,32,99,108,97,115,115,61,34,60,47,115,99,114,105,112,116,62,60,115,99,114,105,112,116,32,112,111,108,105,116,105,99,97,108,32,112,97,114,116,105,101,115,116,100,62,60,47,116,114,62,60,47,116,97,98,108,101,62,60,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,105,110,116,101,114,112,114,101,116,97,116,105,111,110,32,111,102,114,101,108,61,34,115,116,121,108,101,115,104,101,101,116,34,32,100,111,99,117,109,101,110,116,46,119,114,105,116,101,40,39,60,99,104,97,114,115,101,116,61,34,117,116,102,45,56,34,62,10,98,101,103,105,110,110,105,110,103,32,111,102,32,116,104,101,32,114,101,118,101,97,108,101,100,32,116,104,97,116,32,116,104,101,116,101,108,101,118,105,115,105,111,110,32,115,101,114,105,101,115,34,32,114,101,108,61,34,110,111,102,111,108,108,111,119,34,62,32,116,97,114,103,101,116,61,34,95,98,108,97,110,107,34,62,99,108,97,105,109,105,110,103,32,116,104,97,116,32,116,104,101,104,116,116,112,37,51,65,37,50,70,37,50,70,119,119,119,46,109,97,110,105,102,101,115,116,97,116,105,111,110,115,32,111,102,80,114,105,109,101,32,77,105,110,105,115,116,101,114,32,111,102,105,110,102,108,117,101,110,99,101,100,32,98,121,32,116,104,101,99,108,97,115,115,61,34,99,108,101,97,114,102,105,120,34,62,47,100,105,118,62,13,10,60,47,100,105,118,62,13,10,13,10,116,104,114,101,101,45,100,105,109,101,110,115,105,111,110,97,108,67,104,117,114,99,104,32,111,102,32,69,110,103,108,97,110,100,111,102,32,78,111,114,116,104,32,67,97,114,111,108,105,110,97,115,113,117,97,114,101,32,107,105,108,111,109,101,116,114,101,115,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,100,105,115,116,105,110,99,116,32,102,114,111,109,32,116,104,101,99,111,109,109,111,110,108,121,32,107,110,111,119,110,32,97,115,80,104,111,110,101,116,105,99,32,65,108,112,104,97,98,101,116,100,101,99,108,97,114,101,100,32,116,104,97,116,32,116,104,101,99,111,110,116,114,111,108,108,101,100,32,98,121,32,116,104,101,66,101,110,106,97,109,105,110,32,70,114,97,110,107,108,105,110,114,111,108,101,45,112,108,97,121,105,110,103,32,103,97,109,101,116,104,101,32,85,110,105,118,101,114,115,105,116,121,32,111,102,105,110,32,87,101,115,116,101,114,110,32,69,117,114,111,112,101,112,101,114,115,111,110,97,108,32,99,111,109,112,117,116,101,114,80,114,111,106,101,99,116,32,71,117,116,101,110,98,101,114,103,114,101,103,97,114,100,108,101,115,115,32,111,102,32,116,104,101,104,97,115,32,98,101,101,110,32,112,114,111,112,111,115,101,100,116,111,103,101,116,104,101,114,32,119,105,116,104,32,116,104,101,62,60,47,108,105,62,60,108,105,32,99,108,97,115,115,61,34,105,110,32,115,111,109,101,32,99,111,117,110,116,114,105,101,115,109,105,110,46,106,115,34,62,60,47,115,99,114,105,112,116,62,111,102,32,116,104,101,32,112,111,112,117,108,97,116,105,111,110,111,102,102,105,99,105,97,108,32,108,97,110,103,117,97,103,101,60,105,109,103,32,115,114,99,61,34,105,109,97,103,101,115,47,105,100,101,110,116,105,102,105,101,100,32,98,121,32,116,104,101,110,97,116,117,114,97,108,32,114,101,115,111,117,114,99,101,115,99,108,97,115,115,105,102,105,99,97,116,105,111,110,32,111,102,99,97,110,32,98,101,32,99,111,110,115,105,100,101,114,101,100,113,117,97,110,116,117,109,32,109,101,99,104,97,110,105,99,115,78,101,118,101,114,116,104,101,108,101,115,115,44,32,116,104,101,109,105,108,108,105,111,110,32,121,101,97,114,115,32,97,103,111,60,47,98,111,100,121,62,13,10,60,47,104,116,109,108,62,13,206,149,206,187,206,187,206,183,206,189,206,185,206,186,206,172,10,116,97,107,101,32,97,100,118,97,110,116,97,103,101,32,111,102,97,110,100,44,32,97,99,99,111,114,100,105,110,103,32,116,111,97,116,116,114,105,98,117,116,101,100,32,116,111,32,116,104,101,77,105,99,114,111,115,111,102,116,32,87,105,110,100,111,119,115,116,104,101,32,102,105,114,115,116,32,99,101,110,116,117,114,121,117,110,100,101,114,32,116,104,101,32,99,111,110,116,114,111,108,100,105,118,32,99,108,97,115,115,61,34,104,101,97,100,101,114,115,104,111,114,116,108,121,32,97,102,116,101,114,32,116,104,101,110,111,116,97,98,108,101,32,101,120,99,101,112,116,105,111,110,116,101,110,115,32,111,102,32,116,104,111,117,115,97,110,100,115,115,101,118,101,114,97,108,32,100,105,102,102,101,114,101,110,116,97,114,111,117,110,100,32,116,104,101,32,119,111,114,108,100,46,114,101,97,99,104,105,110,103,32,109,105,108,105,116,97,114,121,105,115,111,108,97,116,101,100,32,102,114,111,109,32,116,104,101,111,112,112,111,115,105,116,105,111,110,32,116,111,32,116,104,101,116,104,101,32,79,108,100,32,84,101,115,116,97,109,101,110,116,65,102,114,105,99,97,110,32,65,109,101,114,105,99,97,110,115,105,110,115,101,114,116,101,100,32,105,110,116,111,32,116,104,101,115,101,112,97,114,97,116,101,32,102,114,111,109,32,116,104,101,109,101,116,114,111,112,111,108,105,116,97,110,32,97,114,101,97,109,97,107,101,115,32,105,116,32,112,111,115,115,105,98,108,101,97,99,107,110,111,119,108,101,100,103,101,100,32,116,104,97,116,97,114,103,117,97,98,108,121,32,116,104,101,32,109,111,115,116,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,62,10,116,104,101,32,73,110,116,101,114,110,97,116,105,111,110,97,108,65,99,99,111,114,100,105,110,103,32,116,111,32,116,104,101,32,112,101,61,34,116,101,120,116,47,99,115,115,34,32,47,62,10,99,111,105,110,99,105,100,101,32,119,105,116,104,32,116,104,101,116,119,111,45,116,104,105,114,100,115,32,111,102,32,116,104,101,68,117,114,105,110,103,32,116,104,105,115,32,116,105,109,101,44,100,117,114,105,110,103,32,116,104,101,32,112,101,114,105,111,100,97,110,110,111,117,110,99,101,100,32,116,104,97,116,32,104,101,116,104,101,32,105,110,116,101,114,110,97,116,105,111,110,97,108,97,110,100,32,109,111,114,101,32,114,101,99,101,110,116,108,121,98,101,108,105,101,118,101,100,32,116,104,97,116,32,116,104,101,99,111,110,115,99,105,111,117,115,110,101,115,115,32,97,110,100,102,111,114,109,101,114,108,121,32,107,110,111,119,110,32,97,115,115,117,114,114,111,117,110,100,101,100,32,98,121,32,116,104,101,102,105,114,115,116,32,97,112,112,101,97,114,101,100,32,105,110,111,99,99,97,115,105,111,110,97,108,108,121,32,117,115,101,100,112,111,115,105,116,105,111,110,58,97,98,115,111,108,117,116,101,59,34,32,116,97,114,103,101,116,61,34,95,98,108,97,110,107,34,32,112,111,115,105,116,105,111,110,58,114,101,108,97,116,105,118,101,59,116,101,120,116,45,97,108,105,103,110,58,99,101,110,116,101,114,59,106,97,120,47,108,105,98,115,47,106,113,117,101,114,121,47,49,46,98,97,99,107,103,114,111,117,110,100,45,99,111,108,111,114,58,35,116,121,112,101,61,34,97,112,112,108,105,99,97,116,105,111,110,47,97,110,103,117,97,103,101,34,32,99,111,110,116,101,110,116,61,34,60,109,101,116,97,32,104,116,116,112,45,101,113,117,105,118,61,34,80,114,105,118,97,99,121,32,80,111,108,105,99,121,60,47,97,62,101,40,34,37,51,67,115,99,114,105,112,116,32,115,114,99,61,39,34,32,116,97,114,103,101,116,61,34,95,98,108,97,110,107,34,62,79,110,32,116,104,101,32,111,116,104,101,114,32,104,97,110,100,44,46,106,112,103,124,116,104,117,109,98,124,114,105,103,104,116,124,50,60,47,100,105,118,62,60,100,105,118,32,99,108,97,115,115,61,34,60,100,105,118,32,115,116,121,108,101,61,34,102,108,111,97,116,58,110,105,110,101,116,101,101,110,116,104,32,99,101,110,116,117,114,121,60,47,98,111,100,121,62,13,10,60,47,104,116,109,108,62,13,10,60,105,109,103,32,115,114,99,61,34,104,116,116,112,58,47,47,115,59,116,101,120,116,45,97,108,105,103,110,58,99,101,110,116,101,114,102,111,110,116,45,119,101,105,103,104,116,58,32,98,111,108,100,59,32,65,99,99,111,114,100,105,110,103,32,116,111,32,116,104,101,32,100,105,102,102,101,114,101,110,99,101,32,98,101,116,119,101,101,110,34,32,102,114,97,109,101,98,111,114,100,101,114,61,34,48,34,32,34,32,115,116,121,108,101,61,34,112,111,115,105,116,105,111,110,58,108,105,110,107,32,104,114,101,102,61,34,104,116,116,112,58,47,47,104,116,109,108,52,47,108,111,111,115,101,46,100,116,100,34,62,10,100,117,114,105,110,103,32,116,104,105,115,32,112,101,114,105,111,100,60,47,116,100,62,60,47,116,114,62,60,47,116,97,98,108,101,62,99,108,111,115,101,108,121,32,114,101,108,97,116,101,100,32,116,111,102,111,114,32,116,104,101,32,102,105,114,115,116,32,116,105,109,101,59,102,111,110,116,45,119,101,105,103,104,116,58,98,111,108,100,59,105,110,112,117,116,32,116,121,112,101,61,34,116,101,120,116,34,32,60,115,112,97,110,32,115,116,121,108,101,61,34,102,111,110,116,45,111,110,114,101,97,100,121,115,116,97,116,101,99,104,97,110,103,101,9,60,100,105,118,32,99,108,97,115,115,61,34,99,108,101,97,114,100,111,99,117,109,101,110,116,46,108,111,99,97,116,105,111,110,46,32,70,111,114,32,101,120,97,109,112,108,101,44,32,116,104,101,32,97,32,119,105,100,101,32,118,97,114,105,101,116,121,32,111,102,32,60,33,68,79,67,84,89,80,69,32,104,116,109,108,62,13,10,60,38,110,98,115,112,59,38,110,98,115,112,59,38,110,98,115,112,59,34,62,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,115,116,121,108,101,61,34,102,108,111,97,116,58,108,101,102,116,59,99,111,110,99,101,114,110,101,100,32,119,105,116,104,32,116,104,101,61,104,116,116,112,37,51,65,37,50,70,37,50,70,119,119,119,46,105,110,32,112,111,112,117,108,97,114,32,99,117,108,116,117,114,101,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,32,47,62,105,116,32,105,115,32,112,111,115,115,105,98,108,101,32,116,111,32,72,97,114,118,97,114,100,32,85,110,105,118,101,114,115,105,116,121,116,121,108,101,115,104,101,101,116,34,32,104,114,101,102,61,34,47,116,104,101,32,109,97,105,110,32,99,104,97,114,97,99,116,101,114,79,120,102,111,114,100,32,85,110,105,118,101,114,115,105,116,121,32,32,110,97,109,101,61,34,107,101,121,119,111,114,100,115,34,32,99,115,116,121,108,101,61,34,116,101,120,116,45,97,108,105,103,110,58,116,104,101,32,85,110,105,116,101,100,32,75,105,110,103,100,111,109,102,101,100,101,114,97,108,32,103,111,118,101,114,110,109,101,110,116,60,100,105,118,32,115,116,121,108,101,61,34,109,97,114,103,105,110,32,100,101,112,101,110,100,105,110,103,32,111,110,32,116,104,101,32,100,101,115,99,114,105,112,116,105,111,110,32,111,102,32,116,104,101,60,100,105,118,32,99,108,97,115,115,61,34,104,101,97,100,101,114,46,109,105,110,46,106,115,34,62,60,47,115,99,114,105,112,116,62,100,101,115,116,114,117,99,116,105,111,110,32,111,102,32,116,104,101,115,108,105,103,104,116,108,121,32,100,105,102,102,101,114,101,110,116,105,110,32,97,99,99,111,114,100,97,110,99,101,32,119,105,116,104,116,101,108,101,99,111,109,109,117,110,105,99,97,116,105,111,110,115,105,110,100,105,99,97,116,101,115,32,116,104,97,116,32,116,104,101,115,104,111,114,116,108,121,32,116,104,101,114,101,97,102,116,101,114,101,115,112,101,99,105,97,108,108,121,32,105,110,32,116,104,101,32,69,117,114,111,112,101,97,110,32,99,111,117,110,116,114,105,101,115,72,111,119,101,118,101,114,44,32,116,104,101,114,101,32,97,114,101,115,114,99,61,34,104,116,116,112,58,47,47,115,116,97,116,105,99,115,117,103,103,101,115,116,101,100,32,116,104,97,116,32,116,104,101,34,32,115,114,99,61,34,104,116,116,112,58,47,47,119,119,119,46,97,32,108,97,114,103,101,32,110,117,109,98,101,114,32,111,102,32,84,101,108,101,99,111,109,109,117,110,105,99,97,116,105,111,110,115,34,32,114,101,108,61,34,110,111,102,111,108,108,111,119,34,32,116,72,111,108,121,32,82,111,109,97,110,32,69,109,112,101,114,111,114,97,108,109,111,115,116,32,101,120,99,108,117,115,105,118,101,108,121,34,32,98,111,114,100,101,114,61,34,48,34,32,97,108,116,61,34,83,101,99,114,101,116,97,114,121,32,111,102,32,83,116,97,116,101,99,117,108,109,105,110,97,116,105,110,103,32,105,110,32,116,104,101,67,73,65,32,87,111,114,108,100,32,70,97,99,116,98,111,111,107,116,104,101,32,109,111,115,116,32,105,109,112,111,114,116,97,110,116,97,110,110,105,118,101,114,115,97,114,121,32,111,102,32,116,104,101,115,116,121,108,101,61,34,98,97,99,107,103,114,111,117,110,100,45,60,108,105,62,60,101,109,62,60,97,32,104,114,101,102,61,34,47,116,104,101,32,65,116,108,97,110,116,105,99,32,79,99,101,97,110,115,116,114,105,99,116,108,121,32,115,112,101,97,107,105,110,103,44,115,104,111,114,116,108,121,32,98,101,102,111,114,101,32,116,104,101,100,105,102,102,101,114,101,110,116,32,116,121,112,101,115,32,111,102,116,104,101,32,79,116,116,111,109,97,110,32,69,109,112,105,114,101,62,60,105,109,103,32,115,114,99,61,34,104,116,116,112,58,47,47,65,110,32,73,110,116,114,111,100,117,99,116,105,111,110,32,116,111,99,111,110,115,101,113,117,101,110,99,101,32,111,102,32,116,104,101,100,101,112,97,114,116,117,114,101,32,102,114,111,109,32,116,104,101,67,111,110,102,101,100,101,114,97,116,101,32,83,116,97,116,101,115,105,110,100,105,103,101,110,111,117,115,32,112,101,111,112,108,101,115,80,114,111,99,101,101,100,105,110,103,115,32,111,102,32,116,104,101,105,110,102,111,114,109,97,116,105,111,110,32,111,110,32,116,104,101,116,104,101,111,114,105,101,115,32,104,97,118,101,32,98,101,101,110,105,110,118,111,108,118,101,109,101,110,116,32,105,110,32,116,104,101,100,105,118,105,100,101,100,32,105,110,116,111,32,116,104,114,101,101,97,100,106,97,99,101,110,116,32,99,111,117,110,116,114,105,101,115,105,115,32,114,101,115,112,111,110,115,105,98,108,101,32,102,111,114,100,105,115,115,111,108,117,116,105,111,110,32,111,102,32,116,104,101,99,111,108,108,97,98,111,114,97,116,105,111,110,32,119,105,116,104,119,105,100,101,108,121,32,114,101,103,97,114,100,101,100,32,97,115,104,105,115,32,99,111,110,116,101,109,112,111,114,97,114,105,101,115,102,111,117,110,100,105,110,103,32,109,101,109,98,101,114,32,111,102,68,111,109,105,110,105,99,97,110,32,82,101,112,117,98,108,105,99,103,101,110,101,114,97,108,108,121,32,97,99,99,101,112,116,101,100,116,104,101,32,112,111,115,115,105,98,105,108,105,116,121,32,111,102,97,114,101,32,97,108,115,111,32,97,118,97,105,108,97,98,108,101,117,110,100,101,114,32,99,111,110,115,116,114,117,99,116,105,111,110,114,101,115,116,111,114,97,116,105,111,110,32,111,102,32,116,104,101,116,104,101,32,103,101,110,101,114,97,108,32,112,117,98,108,105,99,105,115,32,97,108,109,111,115,116,32,101,110,116,105,114,101,108,121,112,97,115,115,101,115,32,116,104,114,111,117,103,104,32,116,104,101,104,97,115,32,98,101,101,110,32,115,117,103,103,101,115,116,101,100,99,111,109,112,117,116,101,114,32,97,110,100,32,118,105,100,101,111,71,101,114,109,97,110,105,99,32,108,97,110,103,117,97,103,101,115,32,97,99,99,111,114,100,105,110,103,32,116,111,32,116,104,101,32,100,105,102,102,101,114,101,110,116,32,102,114,111,109,32,116,104,101,115,104,111,114,116,108,121,32,97,102,116,101,114,119,97,114,100,115,104,114,101,102,61,34,104,116,116,112,115,58,47,47,119,119,119,46,114,101,99,101,110,116,32,100,101,118,101,108,111,112,109,101,110,116,66,111,97,114,100,32,111,102,32,68,105,114,101,99,116,111,114,115,60,100,105,118,32,99,108,97,115,115,61,34,115,101,97,114,99,104,124,32,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,73,110,32,112,97,114,116,105,99,117,108,97,114,44,32,116,104,101,77,117,108,116,105,112,108,101,32,102,111,111,116,110,111,116,101,115,111,114,32,111,116,104,101,114,32,115,117,98,115,116,97,110,99,101,116,104,111,117,115,97,110,100,115,32,111,102,32,121,101,97,114,115,116,114,97,110,115,108,97,116,105,111,110,32,111,102,32,116,104,101,60,47,100,105,118,62,13,10,60,47,100,105,118,62,13,10,13,10,60,97,32,104,114,101,102,61,34,105,110,100,101,120,46,112,104,112,119,97,115,32,101,115,116,97,98,108,105,115,104,101,100,32,105,110,109,105,110,46,106,115,34,62,60,47,115,99,114,105,112,116,62,10,112,97,114,116,105,99,105,112,97,116,101,32,105,110,32,116,104,101,97,32,115,116,114,111,110,103,32,105,110,102,108,117,101,110,99,101,115,116,121,108,101,61,34,109,97,114,103,105,110,45,116,111,112,58,114,101,112,114,101,115,101,110,116,101,100,32,98,121,32,116,104,101,103,114,97,100,117,97,116,101,100,32,102,114,111,109,32,116,104,101,84,114,97,100,105,116,105,111,110,97,108,108,121,44,32,116,104,101,69,108,101,109,101,110,116,40,34,115,99,114,105,112,116,34,41,59,72,111,119,101,118,101,114,44,32,115,105,110,99,101,32,116,104,101,47,100,105,118,62,10,60,47,100,105,118,62,10,60,100,105,118,32,108,101,102,116,59,32,109,97,114,103,105,110,45,108,101,102,116,58,112,114,111,116,101,99,116,105,111,110,32,97,103,97,105,110,115,116,48,59,32,118,101,114,116,105,99,97,108,45,97,108,105,103,110,58,85,110,102,111,114,116,117,110,97,116,101,108,121,44,32,116,104,101,116,121,112,101,61,34,105,109,97,103,101,47,120,45,105,99,111,110,47,100,105,118,62,10,60,100,105,118,32,99,108,97,115,115,61,34,32,99,108,97,115,115,61,34,99,108,101,97,114,102,105,120,34,62,60,100,105,118,32,99,108,97,115,115,61,34,102,111,111,116,101,114,9,9,60,47,100,105,118,62,10,9,9,60,47,100,105,118,62,10,116,104,101,32,109,111,116,105,111,110,32,112,105,99,116,117,114,101,208,145,209,138,208,187,208,179,208,176,209,128,209,129,208,186,208,184,208,177,209,138,208,187,208,179,208,176,209,128,209,129,208,186,208,184,208,164,208,181,208,180,208,181,209,128,208,176,209,134,208,184,208,184,208,189,208,181,209,129,208,186,208,190,208,187,209,140,208,186,208,190,209,129,208,190,208,190,208,177,209,137,208,181,208,189,208,184,208,181,209,129,208,190,208,190,208,177,209,137,208,181,208,189,208,184,209,143,208,191,209,128,208,190,208,179,209,128,208,176,208,188,208,188,209,139,208,158,209,130,208,191,209,128,208,176,208,178,208,184,209,130,209,140,208,177,208,181,209,129,208,191,208,187,208,176,209,130,208,189,208,190,208,188,208,176,209,130,208,181,209,128,208,184,208,176,208,187,209,139,208,191,208,190,208,183,208,178,208,190,208,187,209,143,208,181,209,130,208,191,208,190,209,129,208,187,208,181,208,180,208,189,208,184,208,181,209,128,208,176,208,183,208,187,208,184,209,135,208,189,209,139,209,133,208,191,209,128,208,190,208,180,209,131,208,186,209,134,208,184,208,184,208,191,209,128,208,190,208,179,209,128,208,176,208,188,208,188,208,176,208,191,208,190,208,187,208,189,208,190,209,129,209,130,209,140,209,142,208,189,208,176,209,133,208,190,208,180,208,184,209,130,209,129,209,143,208,184,208,183,208,177,209,128,208,176,208,189,208,189,208,190,208,181,208,189,208,176,209,129,208,181,208,187,208,181,208,189,208,184,209,143,208,184,208,183,208,188,208,181,208,189,208,181,208,189,208,184,209,143,208,186,208,176,209,130,208,181,208,179,208,190,209,128,208,184,208,184,208,144,208,187,208,181,208,186,209,129,208,176,208,189,208,180,209,128,224,164,166,224,165,141,224,164,181,224,164,190,224,164,176,224,164,190,224,164,174,224,165,136,224,164,168,224,165,129,224,164,133,224,164,178,224,164,170,224,165,141,224,164,176,224,164,166,224,164,190,224,164,168,224,164,173,224,164,190,224,164,176,224,164,164,224,165,128,224,164,175,224,164,133,224,164,168,224,165,129,224,164,166,224,165,135,224,164,182,224,164,185,224,164,191,224,164,168,224,165,141,224,164,166,224,165,128,224,164,135,224,164,130,224,164,161,224,164,191,224,164,175,224,164,190,224,164,166,224,164,191,224,164,178,224,165,141,224,164,178,224,165,128,224,164,133,224,164,167,224,164,191,224,164,149,224,164,190,224,164,176,224,164,181,224,165,128,224,164,161,224,164,191,224,164,175,224,165,139,224,164,154,224,164,191,224,164,159,224,165,141,224,164,160,224,165,135,224,164,184,224,164,174,224,164,190,224,164,154,224,164,190,224,164,176,224,164,156,224,164,130,224,164,149,224,165,141,224,164,182,224,164,168,224,164,166,224,165,129,224,164,168,224,164,191,224,164,175,224,164,190,224,164,170,224,165,141,224,164,176,224,164,175,224,165,139,224,164,151,224,164,133,224,164,168,224,165,129,224,164,184,224,164,190,224,164,176,224,164,145,224,164,168,224,164,178,224,164,190,224,164,135,224,164,168,224,164,170,224,164,190,224,164,176,224,165,141,224,164,159,224,165,128,224,164,182,224,164,176,224,165,141,224,164,164,224,165,139,224,164,130,224,164,178,224,165,139,224,164,149,224,164,184,224,164,173,224,164,190,224,164,171,224,164,188,224,165,141,224,164,178,224,165,136,224,164,182,224,164,182,224,164,176,224,165,141,224,164,164,224,165,135,224,164,130,224,164,170,224,165,141,224,164,176,224,164,166,224,165,135,224,164,182,224,164,170,224,165,141,224,164,178,224,165,135,224,164,175,224,164,176,224,164,149,224,165,135,224,164,130,224,164,166,224,165,141,224,164,176,224,164,184,224,165,141,224,164,165,224,164,191,224,164,164,224,164,191,224,164,137,224,164,164,224,165,141,224,164,170,224,164,190,224,164,166,224,164,137,224,164,168,224,165,141,224,164,185,224,165,135,224,164,130,224,164,154,224,164,191,224,164,159,224,165,141,224,164,160,224,164,190,224,164,175,224,164,190,224,164,164,224,165,141,224,164,176,224,164,190,224,164,156,224,165,141,224,164,175,224,164,190,224,164,166,224,164,190,224,164,170,224,165,129,224,164,176,224,164,190,224,164,168,224,165,135,224,164,156,224,165,139,224,164,161,224,164,188,224,165,135,224,164,130,224,164,133,224,164,168,224,165,129,224,164,181,224,164,190,224,164,166,224,164,182,224,165,141,224,164,176,224,165,135,224,164,163,224,165,128,224,164,182,224,164,191,224,164,149,224,165,141,224,164,183,224,164,190,224,164,184,224,164,176,224,164,149,224,164,190,224,164,176,224,165,128,224,164,184,224,164,130,224,164,151,224,165,141,224,164,176,224,164,185,224,164,170,224,164,176,224,164,191,224,164,163,224,164,190,224,164,174,224,164,172,224,165,141,224,164,176,224,164,190,224,164,130,224,164,161,224,164,172,224,164,154,224,165,141,224,164,154,224,165,139,224,164,130,224,164,137,224,164,170,224,164,178,224,164,172,224,165,141,224,164,167,224,164,174,224,164,130,224,164,164,224,165,141,224,164,176,224,165,128,224,164,184,224,164,130,224,164,170,224,164,176,224,165,141,224,164,149,224,164,137,224,164,174,224,165,141,224,164,174,224,165,128,224,164,166,224,164,174,224,164,190,224,164,167,224,165,141,224,164,175,224,164,174,224,164,184,224,164,185,224,164,190,224,164,175,224,164,164,224,164,190,224,164,182,224,164,172,224,165,141,224,164,166,224,165,139,224,164,130,224,164,174,224,165,128,224,164,161,224,164,191,224,164,175,224,164,190,224,164,134,224,164,136,224,164,170,224,165,128,224,164,143,224,164,178,224,164,174,224,165,139,224,164,172,224,164,190,224,164,135,224,164,178,224,164,184,224,164,130,224,164,150,224,165,141,224,164,175,224,164,190,224,164,134,224,164,170,224,164,176,224,165,135,224,164,182,224,164,168,224,164,133,224,164,168,224,165,129,224,164,172,224,164,130,224,164,167,224,164,172,224,164,190,224,164,156,224,164,188,224,164,190,224,164,176,224,164,168,224,164,181,224,165,128,224,164,168,224,164,164,224,164,174,224,164,170,224,165,141,224,164,176,224,164,174,224,165,129,224,164,150,224,164,170,224,165,141,224,164,176,224,164,182,224,165,141,224,164,168,224,164,170,224,164,176,224,164,191,224,164,181,224,164,190,224,164,176,224,164,168,224,165,129,224,164,149,224,164,184,224,164,190,224,164,168,224,164,184,224,164,174,224,164,176,224,165,141,224,164,165,224,164,168,224,164,134,224,164,175,224,165,139,224,164,156,224,164,191,224,164,164,224,164,184,224,165,139,224,164,174,224,164,181,224,164,190,224,164,176,216,167,217,132,217,133,216,180,216,167,216,177,217,131,216,167,216,170,216,167,217,132,217,133,217,134,216,170,216,175,217,138,216,167,216,170,216,167,217,132,217,131,217,133,216,168,217,138,217,136,216,170,216,177,216,167,217,132,217,133,216,180,216,167,217,135,216,175,216,167,216,170,216,185,216,175,216,175,216,167,217,132,216,178,217,136,216,167,216,177,216,185,216,175,216,175,216,167,217,132,216,177,216,175,217,136,216,175,216,167,217,132,216,165,216,179,217,132,216,167,217,133,217,138,216,169,216,167,217,132,217,129,217,136,216,170,217,136,216,180,217,136,216,168,216,167,217,132,217,133,216,179,216,167,216,168,217,130,216,167,216,170,216,167,217,132,217,133,216,185,217,132,217,136,217,133,216,167,216,170,216,167,217,132,217,133,216,179,217,132,216,179,217,132,216,167,216,170,216,167,217,132,216,172,216,177,216,167,217,129,217,138,217,131,216,179,216,167,217,132,216,167,216,179,217,132,216,167,217,133,217,138,216,169,216,167,217,132,216,167,216,170,216,181,216,167,217,132,216,167,216,170,107,101,121,119,111,114,100,115,34,32,99,111,110,116,101,110,116,61,34,119,51,46,111,114,103,47,49,57,57,57,47,120,104,116,109,108,34,62,60,97,32,116,97,114,103,101,116,61,34,95,98,108,97,110,107,34,32,116,101,120,116,47,104,116,109,108,59,32,99,104,97,114,115,101,116,61,34,32,116,97,114,103,101,116,61,34,95,98,108,97,110,107,34,62,60,116,97,98,108,101,32,99,101,108,108,112,97,100,100,105,110,103,61,34,97,117,116,111,99,111,109,112,108,101,116,101,61,34,111,102,102,34,32,116,101,120,116,45,97,108,105,103,110,58,32,99,101,110,116,101,114,59,116,111,32,108,97,115,116,32,118,101,114,115,105,111,110,32,98,121,32,98,97,99,107,103,114,111,117,110,100,45,99,111,108,111,114,58,32,35,34,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,47,100,105,118,62,60,47,100,105,118,62,60,100,105,118,32,105,100,61,60,97,32,104,114,101,102,61,34,35,34,32,99,108,97,115,115,61,34,34,62,60,105,109,103,32,115,114,99,61,34,104,116,116,112,58,47,47,99,114,105,112,116,34,32,115,114,99,61,34,104,116,116,112,58,47,47,10,60,115,99,114,105,112,116,32,108,97,110,103,117,97,103,101,61,34,47,47,69,78,34,32,34,104,116,116,112,58,47,47,119,119,119,46,119,101,110,99,111,100,101,85,82,73,67,111,109,112,111,110,101,110,116,40,34,32,104,114,101,102,61,34,106,97,118,97,115,99,114,105,112,116,58,60,100,105,118,32,99,108,97,115,115,61,34,99,111,110,116,101,110,116,100,111,99,117,109,101,110,116,46,119,114,105,116,101,40,39,60,115,99,112,111,115,105,116,105,111,110,58,32,97,98,115,111,108,117,116,101,59,115,99,114,105,112,116,32,115,114,99,61,34,104,116,116,112,58,47,47,32,115,116,121,108,101,61,34,109,97,114,103,105,110,45,116,111,112,58,46,109,105,110,46,106,115,34,62,60,47,115,99,114,105,112,116,62,10,60,47,100,105,118,62,10,60,100,105,118,32,99,108,97,115,115,61,34,119,51,46,111,114,103,47,49,57,57,57,47,120,104,116,109,108,34,32,10,13,10,60,47,98,111,100,121,62,13,10,60,47,104,116,109,108,62,100,105,115,116,105,110,99,116,105,111,110,32,98,101,116,119,101,101,110,47,34,32,116,97,114,103,101,116,61,34,95,98,108,97,110,107,34,62,60,108,105,110,107,32,104,114,101,102,61,34,104,116,116,112,58,47,47,101,110,99,111,100,105,110,103,61,34,117,116,102,45,56,34,63,62,10,119,46,97,100,100,69,118,101,110,116,76,105,115,116,101,110,101,114,63,97,99,116,105,111,110,61,34,104,116,116,112,58,47,47,119,119,119,46,105,99,111,110,34,32,104,114,101,102,61,34,104,116,116,112,58,47,47,32,115,116,121,108,101,61,34,98,97,99,107,103,114,111,117,110,100,58,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,32,47,62,10,109,101,116,97,32,112,114,111,112,101,114,116,121,61,34,111,103,58,116,60,105,110,112,117,116,32,116,121,112,101,61,34,116,101,120,116,34,32,32,115,116,121,108,101,61,34,116,101,120,116,45,97,108,105,103,110,58,116,104,101,32,100,101,118,101,108,111,112,109,101,110,116,32,111,102,32,116,121,108,101,115,104,101,101,116,34,32,116,121,112,101,61,34,116,101,104,116,109,108,59,32,99,104,97,114,115,101,116,61,117,116,102,45,56,105,115,32,99,111,110,115,105,100,101,114,101,100,32,116,111,32,98,101,116,97,98,108,101,32,119,105,100,116,104,61,34,49,48,48,37,34,32,73,110,32,97,100,100,105,116,105,111,110,32,116,111,32,116,104,101,32,99,111,110,116,114,105,98,117,116,101,100,32,116,111,32,116,104,101,32,100,105,102,102,101,114,101,110,99,101,115,32,98,101,116,119,101,101,110,100,101,118,101,108,111,112,109,101,110,116,32,111,102,32,116,104,101,32,73,116,32,105,115,32,105,109,112,111,114,116,97,110,116,32,116,111,32,60,47,115,99,114,105,112,116,62,10,10,60,115,99,114,105,112,116,32,32,115,116,121,108,101,61,34,102,111,110,116,45,115,105,122,101,58,49,62,60,47,115,112,97,110,62,60,115,112,97,110,32,105,100,61,103,98,76,105,98,114,97,114,121,32,111,102,32,67,111,110,103,114,101,115,115,60,105,109,103,32,115,114,99,61,34,104,116,116,112,58,47,47,105,109,69,110,103,108,105,115,104,32,116,114,97,110,115,108,97,116,105,111,110,65,99,97,100,101,109,121,32,111,102,32,83,99,105,101,110,99,101,115,100,105,118,32,115,116,121,108,101,61,34,100,105,115,112,108,97,121,58,99,111,110,115,116,114,117,99,116,105,111,110,32,111,102,32,116,104,101,46,103,101,116,69,108,101,109,101,110,116,66,121,73,100,40,105,100,41,105,110,32,99,111,110,106,117,110,99,116,105,111,110,32,119,105,116,104,69,108,101,109,101,110,116,40,39,115,99,114,105,112,116,39,41,59,32,60,109,101,116,97,32,112,114,111,112,101,114,116,121,61,34,111,103,58,208,145,209,138,208,187,208,179,208,176,209,128,209,129,208,186,208,184,10,32,116,121,112,101,61,34,116,101,120,116,34,32,110,97,109,101,61,34,62,80,114,105,118,97,99,121,32,80,111,108,105,99,121,60,47,97,62,97,100,109,105,110,105,115,116,101,114,101,100,32,98,121,32,116,104,101,101,110,97,98,108,101,83,105,110,103,108,101,82,101,113,117,101,115,116,115,116,121,108,101,61,38,113,117,111,116,59,109,97,114,103,105,110,58,60,47,100,105,118,62,60,47,100,105,118,62,60,47,100,105,118,62,60,62,60,105,109,103,32,115,114,99,61,34,104,116,116,112,58,47,47,105,32,115,116,121,108,101,61,38,113,117,111,116,59,102,108,111,97,116,58,114,101,102,101,114,114,101,100,32,116,111,32,97,115,32,116,104,101,32,116,111,116,97,108,32,112,111,112,117,108,97,116,105,111,110,32,111,102,105,110,32,87,97,115,104,105,110,103,116,111,110,44,32,68,46,67,46,32,115,116,121,108,101,61,34,98,97,99,107,103,114,111,117,110,100,45,97,109,111,110,103,32,111,116,104,101,114,32,116,104,105,110,103,115,44,111,114,103,97,110,105,122,97,116,105,111,110,32,111,102,32,116,104,101,112,97,114,116,105,99,105,112,97,116,101,100,32,105,110,32,116,104,101,116,104,101,32,105,110,116,114,111,100,117,99,116,105,111,110,32,111,102,105,100,101,110,116,105,102,105,101,100,32,119,105,116,104,32,116,104,101,102,105,99,116,105,111,110,97,108,32,99,104,97,114,97,99,116,101,114,32,79,120,102,111,114,100,32,85,110,105,118,101,114,115,105,116,121,32,109,105,115,117,110,100,101,114,115,116,97,110,100,105,110,103,32,111,102,84,104,101,114,101,32,97,114,101,44,32,104,111,119,101,118,101,114,44,115,116,121,108,101,115,104,101,101,116,34,32,104,114,101,102,61,34,47,67,111,108,117,109,98,105,97,32,85,110,105,118,101,114,115,105,116,121,101,120,112,97,110,100,101,100,32,116,111,32,105,110,99,108,117,100,101,117,115,117,97,108,108,121,32,114,101,102,101,114,114,101,100,32,116,111,105,110,100,105,99,97,116,105,110,103,32,116,104,97,116,32,116,104,101,104,97,118,101,32,115,117,103,103,101,115,116,101,100,32,116,104,97,116,97,102,102,105,108,105,97,116,101,100,32,119,105,116,104,32,116,104,101,99,111,114,114,101,108,97,116,105,111,110,32,98,101,116,119,101,101,110,110,117,109,98,101,114,32,111,102,32,100,105,102,102,101,114,101,110,116,62,60,47,116,100,62,60,47,116,114,62,60,47,116,97,98,108,101,62,82,101,112,117,98,108,105,99,32,111,102,32,73,114,101,108,97,110,100,10,60,47,115,99,114,105,112,116,62,10,60,115,99,114,105,112,116,32,117,110,100,101,114,32,116,104,101,32,105,110,102,108,117,101,110,99,101,99,111,110,116,114,105,98,117,116,105,111,110,32,116,111,32,116,104,101,79,102,102,105,99,105,97,108,32,119,101,98,115,105,116,101,32,111,102,104,101,97,100,113,117,97,114,116,101,114,115,32,111,102,32,116,104,101,99,101,110,116,101,114,101,100,32,97,114,111,117,110,100,32,116,104,101,105,109,112,108,105,99,97,116,105,111,110,115,32,111,102,32,116,104,101,104,97,118,101,32,98,101,101,110,32,100,101,118,101,108,111,112,101,100,70,101,100,101,114,97,108,32,82,101,112,117,98,108,105,99,32,111,102,98,101,99,97,109,101,32,105,110,99,114,101,97,115,105,110,103,108,121,99,111,110,116,105,110,117,97,116,105,111,110,32,111,102,32,116,104,101,78,111,116,101,44,32,104,111,119,101,118,101,114,44,32,116,104,97,116,115,105,109,105,108,97,114,32,116,111,32,116,104,97,116,32,111,102,32,99,97,112,97,98,105,108,105,116,105,101,115,32,111,102,32,116,104,101,97,99,99,111,114,100,97,110,99,101,32,119,105,116,104,32,116,104,101,112,97,114,116,105,99,105,112,97,110,116,115,32,105,110,32,116,104,101,102,117,114,116,104,101,114,32,100,101,118,101,108,111,112,109,101,110,116,117,110,100,101,114,32,116,104,101,32,100,105,114,101,99,116,105,111,110,105,115,32,111,102,116,101,110,32,99,111,110,115,105,100,101,114,101,100,104,105,115,32,121,111,117,110,103,101,114,32,98,114,111,116,104,101,114,60,47,116,100,62,60,47,116,114,62,60,47,116,97,98,108,101,62,60,97,32,104,116,116,112,45,101,113,117,105,118,61,34,88,45,85,65,45,112,104,121,115,105,99,97,108,32,112,114,111,112,101,114,116,105,101,115,111,102,32,66,114,105,116,105,115,104,32,67,111,108,117,109,98,105,97,104,97,115,32,98,101,101,110,32,99,114,105,116,105,99,105,122,101,100,40,119,105,116,104,32,116,104,101,32,101,120,99,101,112,116,105,111,110,113,117,101,115,116,105,111,110,115,32,97,98,111,117,116,32,116,104,101,112,97,115,115,105,110,103,32,116,104,114,111,117,103,104,32,116,104,101,48,34,32,99,101,108,108,112,97,100,100,105,110,103,61,34,48,34,32,116,104,111,117,115,97,110,100,115,32,111,102,32,112,101,111,112,108,101,114,101,100,105,114,101,99,116,115,32,104,101,114,101,46,32,70,111,114,104,97,118,101,32,99,104,105,108,100,114,101,110,32,117,110,100,101,114,37,51,69,37,51,67,47,115,99,114,105,112,116,37,51,69,34,41,41,59,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,60,108,105,62,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,115,105,116,101,95,110,97,109,101,34,32,99,111,110,116,101,110,116,61,34,116,101,120,116,45,100,101,99,111,114,97,116,105,111,110,58,110,111,110,101,115,116,121,108,101,61,34,100,105,115,112,108,97,121,58,32,110,111,110,101,60,109,101,116,97,32,104,116,116,112,45,101,113,117,105,118,61,34,88,45,110,101,119,32,68,97,116,101,40,41,46,103,101,116,84,105,109,101,40,41,32,116,121,112,101,61,34,105,109,97,103,101,47,120,45,105,99,111,110,34,60,47,115,112,97,110,62,60,115,112,97,110,32,99,108,97,115,115,61,34,108,97,110,103,117,97,103,101,61,34,106,97,118,97,115,99,114,105,112,116,119,105,110,100,111,119,46,108,111,99,97,116,105,111,110,46,104,114,101,102,60,97,32,104,114,101,102,61,34,106,97,118,97,115,99,114,105,112,116,58,45,45,62,13,10,60,115,99,114,105,112,116,32,116,121,112,101,61,34,116,60,97,32,104,114,101,102,61,39,104,116,116,112,58,47,47,119,119,119,46,104,111,114,116,99,117,116,32,105,99,111,110,34,32,104,114,101,102,61,34,60,47,100,105,118,62,13,10,60,100,105,118,32,99,108,97,115,115,61,34,60,115,99,114,105,112,116,32,115,114,99,61,34,104,116,116,112,58,47,47,34,32,114,101,108,61,34,115,116,121,108,101,115,104,101,101,116,34,32,116,60,47,100,105,118,62,10,60,115,99,114,105,112,116,32,116,121,112,101,61,47,97,62,32,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,32,97,108,108,111,119,84,114,97,110,115,112,97,114,101,110,99,121,61,34,88,45,85,65,45,67,111,109,112,97,116,105,98,108,101,34,32,99,111,110,114,101,108,97,116,105,111,110,115,104,105,112,32,98,101,116,119,101,101,110,10,60,47,115,99,114,105,112,116,62,13,10,60,115,99,114,105,112,116,32,60,47,97,62,60,47,108,105,62,60,47,117,108,62,60,47,100,105,118,62,97,115,115,111,99,105,97,116,101,100,32,119,105,116,104,32,116,104,101,32,112,114,111,103,114,97,109,109,105,110,103,32,108,97,110,103,117,97,103,101,60,47,97,62,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,60,47,97,62,60,47,108,105,62,60,108,105,32,99,108,97,115,115,61,34,102,111,114,109,32,97,99,116,105,111,110,61,34,104,116,116,112,58,47,47,60,100,105,118,32,115,116,121,108,101,61,34,100,105,115,112,108,97,121,58,116,121,112,101,61,34,116,101,120,116,34,32,110,97,109,101,61,34,113,34,60,116,97,98,108,101,32,119,105,100,116,104,61,34,49,48,48,37,34,32,98,97,99,107,103,114,111,117,110,100,45,112,111,115,105,116,105,111,110,58,34,32,98,111,114,100,101,114,61,34,48,34,32,119,105,100,116,104,61,34,114,101,108,61,34,115,104,111,114,116,99,117,116,32,105,99,111,110,34,32,104,54,62,60,117,108,62,60,108,105,62,60,97,32,104,114,101,102,61,34,32,32,60,109,101,116,97,32,104,116,116,112,45,101,113,117,105,118,61,34,99,115,115,34,32,109,101,100,105,97,61,34,115,99,114,101,101,110,34,32,114,101,115,112,111,110,115,105,98,108,101,32,102,111,114,32,116,104,101,32,34,32,116,121,112,101,61,34,97,112,112,108,105,99,97,116,105,111,110,47,34,32,115,116,121,108,101,61,34,98,97,99,107,103,114,111,117,110,100,45,104,116,109,108,59,32,99,104,97,114,115,101,116,61,117,116,102,45,56,34,32,97,108,108,111,119,116,114,97,110,115,112,97,114,101,110,99,121,61,34,115,116,121,108,101,115,104,101,101,116,34,32,116,121,112,101,61,34,116,101,13,10,60,109,101,116,97,32,104,116,116,112,45,101,113,117,105,118,61,34,62,60,47,115,112,97,110,62,60,115,112,97,110,32,99,108,97,115,115,61,34,48,34,32,99,101,108,108,115,112,97,99,105,110,103,61,34,48,34,62,59,10,60,47,115,99,114,105,112,116,62,10,60,115,99,114,105,112,116,32,115,111,109,101,116,105,109,101,115,32,99,97,108,108,101,100,32,116,104,101,100,111,101,115,32,110,111,116,32,110,101,99,101,115,115,97,114,105,108,121,70,111,114,32,109,111,114,101,32,105,110,102,111,114,109,97,116,105,111,110,97,116,32,116,104,101,32,98,101,103,105,110,110,105,110,103,32,111,102,32,60,33,68,79,67,84,89,80,69,32,104,116,109,108,62,60,104,116,109,108,112,97,114,116,105,99,117,108,97,114,108,121,32,105,110,32,116,104,101,32,116,121,112,101,61,34,104,105,100,100,101,110,34,32,110,97,109,101,61,34,106,97,118,97,115,99,114,105,112,116,58,118,111,105,100,40,48,41,59,34,101,102,102,101,99,116,105,118,101,110,101,115,115,32,111,102,32,116,104,101,32,97,117,116,111,99,111,109,112,108,101,116,101,61,34,111,102,102,34,32,103,101,110,101,114,97,108,108,121,32,99,111,110,115,105,100,101,114,101,100,62,60,105,110,112,117,116,32,116,121,112,101,61,34,116,101,120,116,34,32,34,62,60,47,115,99,114,105,112,116,62,13,10,60,115,99,114,105,112,116,116,104,114,111,117,103,104,111,117,116,32,116,104,101,32,119,111,114,108,100,99,111,109,109,111,110,32,109,105,115,99,111,110,99,101,112,116,105,111,110,97,115,115,111,99,105,97,116,105,111,110,32,119,105,116,104,32,116,104,101,60,47,100,105,118,62,10,60,47,100,105,118,62,10,60,100,105,118,32,99,100,117,114,105,110,103,32,104,105,115,32,108,105,102,101,116,105,109,101,44,99,111,114,114,101,115,112,111,110,100,105,110,103,32,116,111,32,116,104,101,116,121,112,101,61,34,105,109,97,103,101,47,120,45,105,99,111,110,34,32,97,110,32,105,110,99,114,101,97,115,105,110,103,32,110,117,109,98,101,114,100,105,112,108,111,109,97,116,105,99,32,114,101,108,97,116,105,111,110,115,97,114,101,32,111,102,116,101,110,32,99,111,110,115,105,100,101,114,101,100,109,101,116,97,32,99,104,97,114,115,101,116,61,34,117,116,102,45,56,34,32,60,105,110,112,117,116,32,116,121,112,101,61,34,116,101,120,116,34,32,101,120,97,109,112,108,101,115,32,105,110,99,108,117,100,101,32,116,104,101,34,62,60,105,109,103,32,115,114,99,61,34,104,116,116,112,58,47,47,105,112,97,114,116,105,99,105,112,97,116,105,111,110,32,105,110,32,116,104,101,116,104,101,32,101,115,116,97,98,108,105,115,104,109,101,110,116,32,111,102,10,60,47,100,105,118,62,10,60,100,105,118,32,99,108,97,115,115,61,34,38,97,109,112,59,110,98,115,112,59,38,97,109,112,59,110,98,115,112,59,116,111,32,100,101,116,101,114,109,105,110,101,32,119,104,101,116,104,101,114,113,117,105,116,101,32,100,105,102,102,101,114,101,110,116,32,102,114,111,109,109,97,114,107,101,100,32,116,104,101,32,98,101,103,105,110,110,105,110,103,100,105,115,116,97,110,99,101,32,98,101,116,119,101,101,110,32,116,104,101,99,111,110,116,114,105,98,117,116,105,111,110,115,32,116,111,32,116,104,101,99,111,110,102,108,105,99,116,32,98,101,116,119,101,101,110,32,116,104,101,119,105,100,101,108,121,32,99,111,110,115,105,100,101,114,101,100,32,116,111,119,97,115,32,111,110,101,32,111,102,32,116,104,101,32,102,105,114,115,116,119,105,116,104,32,118,97,114,121,105,110,103,32,100,101,103,114,101,101,115,104,97,118,101,32,115,112,101,99,117,108,97,116,101,100,32,116,104,97,116,40,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,112,97,114,116,105,99,105,112,97,116,105,110,103,32,105,110,32,116,104,101,111,114,105,103,105,110,97,108,108,121,32,100,101,118,101,108,111,112,101,100,101,116,97,32,99,104,97,114,115,101,116,61,34,117,116,102,45,56,34,62,32,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,32,47,62,10,105,110,116,101,114,99,104,97,110,103,101,97,98,108,121,32,119,105,116,104,109,111,114,101,32,99,108,111,115,101,108,121,32,114,101,108,97,116,101,100,115,111,99,105,97,108,32,97,110,100,32,112,111,108,105,116,105,99,97,108,116,104,97,116,32,119,111,117,108,100,32,111,116,104,101,114,119,105,115,101,112,101,114,112,101,110,100,105,99,117,108,97,114,32,116,111,32,116,104,101,115,116,121,108,101,32,116,121,112,101,61,34,116,101,120,116,47,99,115,115,116,121,112,101,61,34,115,117,98,109,105,116,34,32,110,97,109,101,61,34,102,97,109,105,108,105,101,115,32,114,101,115,105,100,105,110,103,32,105,110,100,101,118,101,108,111,112,105,110,103,32,99,111,117,110,116,114,105,101,115,99,111,109,112,117,116,101,114,32,112,114,111,103,114,97,109,109,105,110,103,101,99,111,110,111,109,105,99,32,100,101,118,101,108,111,112,109,101,110,116,100,101,116,101,114,109,105,110,97,116,105,111,110,32,111,102,32,116,104,101,102,111,114,32,109,111,114,101,32,105,110,102,111,114,109,97,116,105,111,110,111,110,32,115,101,118,101,114,97,108,32,111,99,99,97,115,105,111,110,115,112,111,114,116,117,103,117,195,170,115,32,40,69,117,114,111,112,101,117,41,208,163,208,186,209,128,208,176,209,151,208,189,209,129,209,140,208,186,208,176,209,131,208,186,209,128,208,176,209,151,208,189,209,129,209,140,208,186,208,176,208,160,208,190,209,129,209,129,208,184,208,185,209,129,208,186,208,190,208,185,208,188,208,176,209,130,208,181,209,128,208,184,208,176,208,187,208,190,208,178,208,184,208,189,209,132,208,190,209,128,208,188,208,176,209,134,208,184,208,184,209,131,208,191,209,128,208,176,208,178,208,187,208,181,208,189,208,184,209,143,208,189,208,181,208,190,208,177,209,133,208,190,208,180,208,184,208,188,208,190,208,184,208,189,209,132,208,190,209,128,208,188,208,176,209,134,208,184,209,143,208,152,208,189,209,132,208,190,209,128,208,188,208,176,209,134,208,184,209,143,208,160,208,181,209,129,208,191,209,131,208,177,208,187,208,184,208,186,208,184,208,186,208,190,208,187,208,184,209,135,208,181,209,129,209,130,208,178,208,190,208,184,208,189,209,132,208,190,209,128,208,188,208,176,209,134,208,184,209,142,209,130,208,181,209,128,209,128,208,184,209,130,208,190,209,128,208,184,208,184,208,180,208,190,209,129,209,130,208,176,209,130,208,190,209,135,208,189,208,190,216,167,217,132,217,133,216,170,217,136,216,167,216,172,216,175,217,136,217,134,216,167,217,132,216,167,216,180,216,170,216,177,216,167,217,131,216,167,216,170,216,167,217,132,216,167,217,130,216,170,216,177,216,167,216,173,216,167,216,170,104,116,109,108,59,32,99,104,97,114,115,101,116,61,85,84,70,45,56,34,32,115,101,116,84,105,109,101,111,117,116,40,102,117,110,99,116,105,111,110,40,41,100,105,115,112,108,97,121,58,105,110,108,105,110,101,45,98,108,111,99,107,59,60,105,110,112,117,116,32,116,121,112,101,61,34,115,117,98,109,105,116,34,32,116,121,112,101,32,61,32,39,116,101,120,116,47,106,97,118,97,115,99,114,105,60,105,109,103,32,115,114,99,61,34,104,116,116,112,58,47,47,119,119,119,46,34,32,34,104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,115,104,111,114,116,99,117,116,32,105,99,111,110,34,32,104,114,101,102,61,34,34,32,97,117,116,111,99,111,109,112,108,101,116,101,61,34,111,102,102,34,32,60,47,97,62,60,47,100,105,118,62,60,100,105,118,32,99,108,97,115,115,61,60,47,97,62,60,47,108,105,62,10,60,108,105,32,99,108,97,115,115,61,34,99,115,115,34,32,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,32,60,102,111,114,109,32,97,99,116,105,111,110,61,34,104,116,116,112,58,47,47,120,116,47,99,115,115,34,32,104,114,101,102,61,34,104,116,116,112,58,47,47,108,105,110,107,32,114,101,108,61,34,97,108,116,101,114,110,97,116,101,34,32,13,10,60,115,99,114,105,112,116,32,116,121,112,101,61,34,116,101,120,116,47,32,111,110,99,108,105,99,107,61,34,106,97,118,97,115,99,114,105,112,116,58,40,110,101,119,32,68,97,116,101,41,46,103,101,116,84,105,109,101,40,41,125,104,101,105,103,104,116,61,34,49,34,32,119,105,100,116,104,61,34,49,34,32,80,101,111,112,108,101,39,115,32,82,101,112,117,98,108,105,99,32,111,102,32,32,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,116,101,120,116,45,100,101,99,111,114,97,116,105,111,110,58,117,110,100,101,114,116,104,101,32,98,101,103,105,110,110,105,110,103,32,111,102,32,116,104,101,32,60,47,100,105,118,62,10,60,47,100,105,118,62,10,60,47,100,105,118,62,10,101,115,116,97,98,108,105,115,104,109,101,110,116,32,111,102,32,116,104,101,32,60,47,100,105,118,62,60,47,100,105,118,62,60,47,100,105,118,62,60,47,100,35,118,105,101,119,112,111,114,116,123,109,105,110,45,104,101,105,103,104,116,58,10,60,115,99,114,105,112,116,32,115,114,99,61,34,104,116,116,112,58,47,47,111,112,116,105,111,110,62,60,111,112,116,105,111,110,32,118,97,108,117,101,61,111,102,116,101,110,32,114,101,102,101,114,114,101,100,32,116,111,32,97,115,32,47,111,112,116,105,111,110,62,10,60,111,112,116,105,111,110,32,118,97,108,117,60,33,68,79,67,84,89,80,69,32,104,116,109,108,62,10,60,33,45,45,91,73,110,116,101,114,110,97,116,105,111,110,97,108,32,65,105,114,112,111,114,116,62,10,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,60,47,97,62,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,224,184,160,224,184,178,224,184,169,224,184,178,224,185,132,224,184,151,224,184,162,225,131,165,225,131,144,225,131,160,225,131,151,225,131,163,225,131,154,225,131,152,230,173,163,233,171,148,228,184,173,230,150,135,32,40,231,185,129,233,171,148,41,224,164,168,224,164,191,224,164,176,224,165,141,224,164,166,224,165,135,224,164,182,224,164,161,224,164,190,224,164,137,224,164,168,224,164,178,224,165,139,224,164,161,224,164,149,224,165,141,224,164,183,224,165,135,224,164,164,224,165,141,224,164,176,224,164,156,224,164,190,224,164,168,224,164,149,224,164,190,224,164,176,224,165,128,224,164,184,224,164,130,224,164,172,224,164,130,224,164,167,224,164,191,224,164,164,224,164,184,224,165,141,224,164,165,224,164,190,224,164,170,224,164,168,224,164,190,224,164,184,224,165,141,224,164,181,224,165,128,224,164,149,224,164,190,224,164,176,224,164,184,224,164,130,224,164,184,224,165,141,224,164,149,224,164,176,224,164,163,224,164,184,224,164,190,224,164,174,224,164,151,224,165,141,224,164,176,224,165,128,224,164,154,224,164,191,224,164,159,224,165,141,224,164,160,224,165,139,224,164,130,224,164,181,224,164,191,224,164,156,224,165,141,224,164,158,224,164,190,224,164,168,224,164,133,224,164,174,224,165,135,224,164,176,224,164,191,224,164,149,224,164,190,224,164,181,224,164,191,224,164,173,224,164,191,224,164,168,224,165,141,224,164,168,224,164,151,224,164,190,224,164,161,224,164,191,224,164,175,224,164,190,224,164,129,224,164,149,224,165,141,224,164,175,224,165,139,224,164,130,224,164,149,224,164,191,224,164,184,224,165,129,224,164,176,224,164,149,224,165,141,224,164,183,224,164,190,224,164,170,224,164,185,224,165,129,224,164,129,224,164,154,224,164,164,224,165,128,224,164,170,224,165,141,224,164,176,224,164,172,224,164,130,224,164,167,224,164,168,224,164,159,224,164,191,224,164,170,224,165,141,224,164,170,224,164,163,224,165,128,224,164,149,224,165,141,224,164,176,224,164,191,224,164,149,224,165,135,224,164,159,224,164,170,224,165,141,224,164,176,224,164,190,224,164,176,224,164,130,224,164,173,224,164,170,224,165,141,224,164,176,224,164,190,224,164,170,224,165,141,224,164,164,224,164,174,224,164,190,224,164,178,224,164,191,224,164,149,224,165,139,224,164,130,224,164,176,224,164,171,224,164,188,224,165,141,224,164,164,224,164,190,224,164,176,224,164,168,224,164,191,224,164,176,224,165,141,224,164,174,224,164,190,224,164,163,224,164,178,224,164,191,224,164,174,224,164,191,224,164,159,224,165,135,224,164,161,100,101,115,99,114,105,112,116,105,111,110,34,32,99,111,110,116,101,110,116,61,34,100,111,99,117,109,101,110,116,46,108,111,99,97,116,105,111,110,46,112,114,111,116,46,103,101,116,69,108,101,109,101,110,116,115,66,121,84,97,103,78,97,109,101,40,60,33,68,79,67,84,89,80,69,32,104,116,109,108,62,10,60,104,116,109,108,32,60,109,101,116,97,32,99,104,97,114,115,101,116,61,34,117,116,102,45,56,34,62,58,117,114,108,34,32,99,111,110,116,101,110,116,61,34,104,116,116,112,58,47,47,46,99,115,115,34,32,114,101,108,61,34,115,116,121,108,101,115,104,101,101,116,34,115,116,121,108,101,32,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,62,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,32,104,114,101,102,61,34,119,51,46,111,114,103,47,49,57,57,57,47,120,104,116,109,108,34,32,120,109,108,116,121,112,101,61,34,116,101,120,116,47,106,97,118,97,115,99,114,105,112,116,34,32,109,101,116,104,111,100,61,34,103,101,116,34,32,97,99,116,105,111,110,61,34,108,105,110,107,32,114,101,108,61,34,115,116,121,108,101,115,104,101,101,116,34,32,32,61,32,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,116,121,112,101,61,34,105,109,97,103,101,47,120,45,105,99,111,110,34,32,47,62,99,101,108,108,112,97,100,100,105,110,103,61,34,48,34,32,99,101,108,108,115,112,46,99,115,115,34,32,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,32,60,47,97,62,60,47,108,105,62,60,108,105,62,60,97,32,104,114,101,102,61,34,34,32,119,105,100,116,104,61,34,49,34,32,104,101,105,103,104,116,61,34,49,34,34,62,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,115,116,121,108,101,61,34,100,105,115,112,108,97,121,58,110,111,110,101,59,34,62,97,108,116,101,114,110,97,116,101,34,32,116,121,112,101,61,34,97,112,112,108,105,45,47,47,87,51,67,47,47,68,84,68,32,88,72,84,77,76,32,49,46,48,32,101,108,108,115,112,97,99,105,110,103,61,34,48,34,32,99,101,108,108,112,97,100,32,116,121,112,101,61,34,104,105,100,100,101,110,34,32,118,97,108,117,101,61,34,47,97,62,38,110,98,115,112,59,60,115,112,97,110,32,114,111,108,101,61,34,115,10,60,105,110,112,117,116,32,116,121,112,101,61,34,104,105,100,100,101,110,34,32,108,97,110,103,117,97,103,101,61,34,74,97,118,97,83,99,114,105,112,116,34,32,32,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,115,66,103,61,34,48,34,32,99,101,108,108,115,112,97,99,105,110,103,61,34,48,34,32,121,112,101,61,34,116,101,120,116,47,99,115,115,34,32,109,101,100,105,97,61,34,116,121,112,101,61,39,116,101,120,116,47,106,97,118,97,115,99,114,105,112,116,39,119,105,116,104,32,116,104,101,32,101,120,99,101,112,116,105,111,110,32,111,102,32,121,112,101,61,34,116,101,120,116,47,99,115,115,34,32,114,101,108,61,34,115,116,32,104,101,105,103,104,116,61,34,49,34,32,119,105,100,116,104,61,34,49,34,32,61,39,43,101,110,99,111,100,101,85,82,73,67,111,109,112,111,110,101,110,116,40,60,108,105,110,107,32,114,101,108,61,34,97,108,116,101,114,110,97,116,101,34,32,10,98,111,100,121,44,32,116,114,44,32,105,110,112,117,116,44,32,116,101,120,116,109,101,116,97,32,110,97,109,101,61,34,114,111,98,111,116,115,34,32,99,111,110,109,101,116,104,111,100,61,34,112,111,115,116,34,32,97,99,116,105,111,110,61,34,62,10,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,99,115,115,34,32,114,101,108,61,34,115,116,121,108,101,115,104,101,101,116,34,32,60,47,100,105,118,62,60,47,100,105,118,62,60,100,105,118,32,99,108,97,115,115,108,97,110,103,117,97,103,101,61,34,106,97,118,97,115,99,114,105,112,116,34,62,97,114,105,97,45,104,105,100,100,101,110,61,34,116,114,117,101,34,62,194,183,60,114,105,112,116,34,32,116,121,112,101,61,34,116,101,120,116,47,106,97,118,97,115,108,61,48,59,125,41,40,41,59,10,40,102,117,110,99,116,105,111,110,40,41,123,98,97,99,107,103,114,111,117,110,100,45,105,109,97,103,101,58,32,117,114,108,40,47,97,62,60,47,108,105,62,60,108,105,62,60,97,32,104,114,101,102,61,34,104,9,9,60,108,105,62,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,97,116,111,114,34,32,97,114,105,97,45,104,105,100,100,101,110,61,34,116,114,117,62,32,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,108,97,110,103,117,97,103,101,61,34,106,97,118,97,115,99,114,105,112,116,34,32,47,111,112,116,105,111,110,62,10,60,111,112,116,105,111,110,32,118,97,108,117,101,47,100,105,118,62,60,47,100,105,118,62,60,100,105,118,32,99,108,97,115,115,61,114,97,116,111,114,34,32,97,114,105,97,45,104,105,100,100,101,110,61,34,116,114,101,61,40,110,101,119,32,68,97,116,101,41,46,103,101,116,84,105,109,101,40,41,112,111,114,116,117,103,117,195,170,115,32,40,100,111,32,66,114,97,115,105,108,41,208,190,209,128,208,179,208,176,208,189,208,184,208,183,208,176,209,134,208,184,208,184,208,178,208,190,208,183,208,188,208,190,208,182,208,189,208,190,209,129,209,130,209,140,208,190,208,177,209,128,208,176,208,183,208,190,208,178,208,176,208,189,208,184,209,143,209,128,208,181,208,179,208,184,209,129,209,130,209,128,208,176,209,134,208,184,208,184,208,178,208,190,208,183,208,188,208,190,208,182,208,189,208,190,209,129,209,130,208,184,208,190,208,177,209,143,208,183,208,176,209,130,208,181,208,187,209,140,208,189,208,176,60,33,68,79,67,84,89,80,69,32,104,116,109,108,32,80,85,66,76,73,67,32,34,110,116,45,84,121,112,101,34,32,99,111,110,116,101,110,116,61,34,116,101,120,116,47,60,109,101,116,97,32,104,116,116,112,45,101,113,117,105,118,61,34,67,111,110,116,101,114,97,110,115,105,116,105,111,110,97,108,47,47,69,78,34,32,34,104,116,116,112,58,60,104,116,109,108,32,120,109,108,110,115,61,34,104,116,116,112,58,47,47,119,119,119,45,47,47,87,51,67,47,47,68,84,68,32,88,72,84,77,76,32,49,46,48,32,84,68,84,68,47,120,104,116,109,108,49,45,116,114,97,110,115,105,116,105,111,110,97,108,47,47,119,119,119,46,119,51,46,111,114,103,47,84,82,47,120,104,116,109,108,49,47,112,101,32,61,32,39,116,101,120,116,47,106,97,118,97,115,99,114,105,112,116,39,59,60,109,101,116,97,32,110,97,109,101,61,34,100,101,115,99,114,105,112,116,105,111,110,112,97,114,101,110,116,78,111,100,101,46,105,110,115,101,114,116,66,101,102,111,114,101,60,105,110,112,117,116,32,116,121,112,101,61,34,104,105,100,100,101,110,34,32,110,97,106,115,34,32,116,121,112,101,61,34,116,101,120,116,47,106,97,118,97,115,99,114,105,40,100,111,99,117,109,101,110,116,41,46,114,101,97,100,121,40,102,117,110,99,116,105,115,99,114,105,112,116,32,116,121,112,101,61,34,116,101,120,116,47,106,97,118,97,115,105,109,97,103,101,34,32,99,111,110,116,101,110,116,61,34,104,116,116,112,58,47,47,85,65,45,67,111,109,112,97,116,105,98,108,101,34,32,99,111,110,116,101,110,116,61,116,109,108,59,32,99,104,97,114,115,101,116,61,117,116,102,45,56,34,32,47,62,10,108,105,110,107,32,114,101,108,61,34,115,104,111,114,116,99,117,116,32,105,99,111,110,60,108,105,110,107,32,114,101,108,61,34,115,116,121,108,101,115,104,101,101,116,34,32,60,47,115,99,114,105,112,116,62,10,60,115,99,114,105,112,116,32,116,121,112,101,61,61,32,100,111,99,117,109,101,110,116,46,99,114,101,97,116,101,69,108,101,109,101,110,60,97,32,116,97,114,103,101,116,61,34,95,98,108,97,110,107,34,32,104,114,101,102,61,32,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,115,66,105,110,112,117,116,32,116,121,112,101,61,34,116,101,120,116,34,32,110,97,109,101,61,97,46,116,121,112,101,32,61,32,39,116,101,120,116,47,106,97,118,97,115,99,114,105,110,112,117,116,32,116,121,112,101,61,34,104,105,100,100,101,110,34,32,110,97,109,101,104,116,109,108,59,32,99,104,97,114,115,101,116,61,117,116,102,45,56,34,32,47,62,100,116,100,34,62,10,60,104,116,109,108,32,120,109,108,110,115,61,34,104,116,116,112,45,47,47,87,51,67,47,47,68,84,68,32,72,84,77,76,32,52,46,48,49,32,84,101,110,116,115,66,121,84,97,103,78,97,109,101,40,39,115,99,114,105,112,116,39,41,105,110,112,117,116,32,116,121,112,101,61,34,104,105,100,100,101,110,34,32,110,97,109,60,115,99,114,105,112,116,32,116,121,112,101,61,34,116,101,120,116,47,106,97,118,97,115,34,32,115,116,121,108,101,61,34,100,105,115,112,108,97,121,58,110,111,110,101,59,34,62,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,66,121,73,100,40,61,100,111,99,117,109,101,110,116,46,99,114,101,97,116,101,69,108,101,109,101,110,116,40,39,32,116,121,112,101,61,39,116,101,120,116,47,106,97,118,97,115,99,114,105,112,116,39,105,110,112,117,116,32,116,121,112,101,61,34,116,101,120,116,34,32,110,97,109,101,61,34,100,46,103,101,116,69,108,101,109,101,110,116,115,66,121,84,97,103,78,97,109,101,40,115,110,105,99,97,108,34,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,67,47,47,68,84,68,32,72,84,77,76,32,52,46,48,49,32,84,114,97,110,115,105,116,60,115,116,121,108,101,32,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,62,10,10,60,115,116,121,108,101,32,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,62,105,111,110,97,108,46,100,116,100,34,62,10,60,104,116,109,108,32,120,109,108,110,115,61,104,116,116,112,45,101,113,117,105,118,61,34,67,111,110,116,101,110,116,45,84,121,112,101,100,105,110,103,61,34,48,34,32,99,101,108,108,115,112,97,99,105,110,103,61,34,48,34,104,116,109,108,59,32,99,104,97,114,115,101,116,61,117,116,102,45,56,34,32,47,62,10,32,115,116,121,108,101,61,34,100,105,115,112,108,97,121,58,110,111,110,101,59,34,62,60,60,108,105,62,60,97,32,104,114,101,102,61,34,104,116,116,112,58,47,47,119,119,119,46,32,116,121,112,101,61,39,116,101,120,116,47,106,97,118,97,115,99,114,105,112,116,39,62,208,180,208,181,209,143,209,130,208,181,208,187,209,140,208,189,208,190,209,129,209,130,208,184,209,129,208,190,208,190,209,130,208,178,208,181,209,130,209,129,209,130,208,178,208,184,208,184,208,191,209,128,208,190,208,184,208,183,208,178,208,190,208,180,209,129,209,130,208,178,208,176,208,177,208,181,208,183,208,190,208,191,208,176,209,129,208,189,208,190,209,129,209,130,208,184,224,164,170,224,165,129,224,164,184,224,165,141,224,164,164,224,164,191,224,164,149,224,164,190,224,164,149,224,164,190,224,164,130,224,164,151,224,165,141,224,164,176,224,165,135,224,164,184,224,164,137,224,164,168,224,165,141,224,164,185,224,165,139,224,164,130,224,164,168,224,165,135,224,164,181,224,164,191,224,164,167,224,164,190,224,164,168,224,164,184,224,164,173,224,164,190,224,164,171,224,164,191,224,164,149,224,165,141,224,164,184,224,164,191,224,164,130,224,164,151,224,164,184,224,165,129,224,164,176,224,164,149,224,165,141,224,164,183,224,164,191,224,164,164,224,164,149,224,165,137,224,164,170,224,165,128,224,164,176,224,164,190,224,164,135,224,164,159,224,164,181,224,164,191,224,164,156,224,165,141,224,164,158,224,164,190,224,164,170,224,164,168,224,164,149,224,164,190,224,164,176,224,165,141,224,164,176,224,164,181,224,164,190,224,164,136,224,164,184,224,164,149,224,165,141,224,164,176,224,164,191,224,164,175,224,164,164,224,164,190]);pN.init=function(){return pN.dictionary}});var n9=i((iN)=>{var nN=Qq();iN.init=function(){iN.dictionary=nN.init()};iN.offsetsByLength=new Uint32Array([0,0,0,0,0,4096,9216,21504,35840,44032,53248,63488,74752,87040,93696,100864,104704,106752,108928,113536,115968,118528,119872,121280,122016]);iN.sizeBitsByLength=new Uint8Array([0,0,0,0,10,10,11,11,10,10,10,10,10,9,9,8,7,7,8,7,7,6,6,5,5]);iN.minDictionaryWordLength=4;iN.maxDictionaryWordLength=24});var i9=i((dU)=>{function i7(x,d){this.bits=x,this.value=d}dU.HuffmanCode=i7;var n7=15;function Yq(x,d){var b=1<<d-1;while(x&b)b>>=1;return(x&b-1)+b}function Gq(x,d,b,c,q){do c-=b,x[d+c]=new i7(q.bits,q.value);while(c>0)}function fU(x,d,b){var c=1<<d-b;while(d<n7){if(c-=x[d],c<=0)break;++d,c<<=1}return d-b}dU.BrotliBuildHuffmanTable=function(x,d,b,c,q){var $=d,Y,G,E,J,V,N,U,K,X,D,L,H=new Int32Array(n7+1),O=new Int32Array(n7+1);L=new Int32Array(q);for(E=0;E<q;E++)H[c[E]]++;O[1]=0;for(G=1;G<n7;G++)O[G+1]=O[G]+H[G];for(E=0;E<q;E++)if(c[E]!==0)L[O[c[E]]++]=E;if(K=b,X=1<<K,D=X,O[n7]===1){for(J=0;J<D;++J)x[d+J]=new i7(0,L[0]&65535);return D}J=0,E=0;for(G=1,V=2;G<=b;++G,V<<=1)for(;H[G]>0;--H[G])Y=new i7(G&255,L[E++]&65535),Gq(x,d+J,V,X,Y),J=Yq(J,G);U=D-1,N=-1;for(G=b+1,V=2;G<=n7;++G,V<<=1)for(;H[G]>0;--H[G]){if((J&U)!==N)d+=X,K=fU(H,G,b),X=1<<K,D+=X,N=J&U,x[$+N]=new i7(K+b&255,d-$-N&65535);Y=new i7(G-b&255,L[E++]&65535),Gq(x,d+(J>>b),V,X,Y),J=Yq(J,G)}return D}});var Eq=i((qU)=>{qU.lookup=new Uint8Array([0,0,0,0,0,0,0,0,0,4,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,12,16,12,12,20,12,16,24,28,12,12,32,12,36,12,44,44,44,44,44,44,44,44,44,44,32,32,24,40,28,12,12,48,52,52,52,48,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,24,12,28,12,12,12,56,60,60,60,56,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,24,12,28,12,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,56,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,50,51,51,51,51,52,52,52,52,53,53,53,53,54,54,54,54,55,55,55,55,56,56,56,56,57,57,57,57,58,58,58,58,59,59,59,59,60,60,60,60,61,61,61,61,62,62,62,62,63,63,63,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);qU.lookupOffsets=new Uint16Array([1024,1536,1280,1536,0,256,768,512])});var Jq=i((YU)=>{function n(x,d){this.offset=x,this.nbits=d}YU.kBlockLengthPrefixCode=[new n(1,2),new n(5,2),new n(9,2),new n(13,2),new n(17,3),new n(25,3),new n(33,3),new n(41,3),new n(49,4),new n(65,4),new n(81,4),new n(97,4),new n(113,5),new n(145,5),new n(177,5),new n(209,5),new n(241,6),new n(305,6),new n(369,7),new n(497,8),new n(753,9),new n(1265,10),new n(2289,11),new n(4337,12),new n(8433,13),new n(16625,24)];YU.kInsertLengthPrefixCode=[new n(0,0),new n(1,0),new n(2,0),new n(3,0),new n(4,0),new n(5,0),new n(6,1),new n(8,1),new n(10,2),new n(14,2),new n(18,3),new n(26,3),new n(34,4),new n(50,4),new n(66,5),new n(98,5),new n(130,6),new n(194,7),new n(322,8),new n(578,9),new n(1090,10),new n(2114,12),new n(6210,14),new n(22594,24)];YU.kCopyLengthPrefixCode=[new n(2,0),new n(3,0),new n(4,0),new n(5,0),new n(6,0),new n(7,0),new n(8,0),new n(9,0),new n(10,1),new n(12,1),new n(14,2),new n(18,2),new n(22,3),new n(30,3),new n(38,4),new n(54,4),new n(70,5),new n(102,5),new n(134,6),new n(198,7),new n(326,8),new n(582,9),new n(1094,10),new n(2118,24)];YU.kInsertRangeLut=[0,0,8,8,0,16,8,16,16];YU.kCopyRangeLut=[0,8,0,8,16,0,16,8,16]});var Kq=i((BU)=>{var UU=n9(),s=0,Vq=1,KU=2,RU=3,XU=4,jU=5,OU=6,HU=7,WU=8,Uq=9,_0=10,m0=11,r9=12,LU=13,DU=14,eU=15,MU=16,AU=17,FU=18,zU=20;function C(x,d,b){this.prefix=new Uint8Array(x.length),this.transform=d,this.suffix=new Uint8Array(b.length);for(var c=0;c<x.length;c++)this.prefix[c]=x.charCodeAt(c);for(var c=0;c<b.length;c++)this.suffix[c]=b.charCodeAt(c)}var h2=[new C("",s,""),new C("",s," "),new C(" ",s," "),new C("",r9,""),new C("",_0," "),new C("",s," the "),new C(" ",s,""),new C("s ",s," "),new C("",s," of "),new C("",_0,""),new C("",s," and "),new C("",LU,""),new C("",Vq,""),new C(", ",s," "),new C("",s,", "),new C(" ",_0," "),new C("",s," in "),new C("",s," to "),new C("e ",s," "),new C("",s,'"'),new C("",s,"."),new C("",s,'">'),new C("",s,`
`),new C("",RU,""),new C("",s,"]"),new C("",s," for "),new C("",DU,""),new C("",KU,""),new C("",s," a "),new C("",s," that "),new C(" ",_0,""),new C("",s,". "),new C(".",s,""),new C(" ",s,", "),new C("",eU,""),new C("",s," with "),new C("",s,"'"),new C("",s," from "),new C("",s," by "),new C("",MU,""),new C("",AU,""),new C(" the ",s,""),new C("",XU,""),new C("",s,". The "),new C("",m0,""),new C("",s," on "),new C("",s," as "),new C("",s," is "),new C("",HU,""),new C("",Vq,"ing "),new C("",s,`
	`),new C("",s,":"),new C(" ",s,". "),new C("",s,"ed "),new C("",zU,""),new C("",FU,""),new C("",OU,""),new C("",s,"("),new C("",_0,", "),new C("",WU,""),new C("",s," at "),new C("",s,"ly "),new C(" the ",s," of "),new C("",jU,""),new C("",Uq,""),new C(" ",_0,", "),new C("",_0,'"'),new C(".",s,"("),new C("",m0," "),new C("",_0,'">'),new C("",s,'="'),new C(" ",s,"."),new C(".com/",s,""),new C(" the ",s," of the "),new C("",_0,"'"),new C("",s,". This "),new C("",s,","),new C(".",s," "),new C("",_0,"("),new C("",_0,"."),new C("",s," not "),new C(" ",s,'="'),new C("",s,"er "),new C(" ",m0," "),new C("",s,"al "),new C(" ",m0,""),new C("",s,"='"),new C("",m0,'"'),new C("",_0,". "),new C(" ",s,"("),new C("",s,"ful "),new C(" ",_0,". "),new C("",s,"ive "),new C("",s,"less "),new C("",m0,"'"),new C("",s,"est "),new C(" ",_0,"."),new C("",m0,'">'),new C(" ",s,"='"),new C("",_0,","),new C("",s,"ize "),new C("",m0,"."),new C("\xC2\xA0",s,""),new C(" ",s,","),new C("",_0,'="'),new C("",m0,'="'),new C("",s,"ous "),new C("",m0,", "),new C("",_0,"='"),new C(" ",_0,","),new C(" ",m0,'="'),new C(" ",m0,", "),new C("",m0,","),new C("",m0,"("),new C("",m0,". "),new C(" ",m0,"."),new C("",m0,"='"),new C(" ",m0,". "),new C(" ",_0,'="'),new C(" ",m0,"='"),new C(" ",_0,"='")];BU.kTransforms=h2;BU.kNumTransforms=h2.length;function Nq(x,d){if(x[d]<192){if(x[d]>=97&&x[d]<=122)x[d]^=32;return 1}if(x[d]<224)return x[d+1]^=32,2;return x[d+2]^=5,3}BU.transformDictionaryWord=function(x,d,b,c,q){var $=h2[q].prefix,Y=h2[q].suffix,G=h2[q].transform,E=G<r9?0:G-(r9-1),J=0,V=d,N;if(E>c)E=c;var U=0;while(U<$.length)x[d++]=$[U++];if(b+=E,c-=E,G<=Uq)c-=G;for(J=0;J<c;J++)x[d++]=UU.dictionary[b+J];if(N=d-c,G===_0)Nq(x,N);else if(G===m0)while(c>0){var K=Nq(x,N);N+=K,c-=K}var X=0;while(X<Y.length)x[d++]=Y[X++];return d-V}});var zq=i((sU)=>{var Wq=l9().BrotliInput,IU=l9().BrotliOutput,o7=qq(),s7=n9(),u0=i9().HuffmanCode,Lq=i9().BrotliBuildHuffmanTable,r7=Eq(),S6=Jq(),Rq=Kq(),SU=8,Xq=16,ZU=256,TU=704,CU=26,jq=6,Oq=2,o9=8,kU=255,Z6=1080,t9=18,gU=new Uint8Array([1,2,3,4,0,5,17,6,16,7,8,9,10,11,12,13,14,15]),x8=16,hU=new Uint8Array([3,2,1,0,3,3,3,3,3,3,2,2,2,2,2,2]),aU=new Int8Array([0,0,0,0,-1,1,-2,2,-3,3,-1,1,-2,2,-3,3]),_U=new Uint16Array([256,402,436,468,500,534,566,598,630,662,694,726,758,790,822,854,886,920,952,984,1016,1048,1080]);function Dq(x){var d;if(x.readBits(1)===0)return 16;if(d=x.readBits(3),d>0)return 17+d;if(d=x.readBits(3),d>0)return 8+d;return 17}function eq(x){if(x.readBits(1)){var d=x.readBits(3);if(d===0)return 1;else return x.readBits(d)+(1<<d)}return 0}function mU(){this.meta_block_length=0,this.input_end=0,this.is_uncompressed=0,this.is_metadata=!1}function Mq(x){var d=new mU,b,c,q;if(d.input_end=x.readBits(1),d.input_end&&x.readBits(1))return d;if(b=x.readBits(2)+4,b===7){if(d.is_metadata=!0,x.readBits(1)!==0)throw new Error("Invalid reserved bit");if(c=x.readBits(2),c===0)return d;for(q=0;q<c;q++){var $=x.readBits(8);if(q+1===c&&c>1&&$===0)throw new Error("Invalid size byte");d.meta_block_length|=$<<q*8}}else for(q=0;q<b;++q){var Y=x.readBits(4);if(q+1===b&&b>4&&Y===0)throw new Error("Invalid size nibble");d.meta_block_length|=Y<<q*4}if(++d.meta_block_length,!d.input_end&&!d.is_metadata)d.is_uncompressed=x.readBits(1);return d}function t7(x,d,b){var c=d,q;if(b.fillBitWindow(),d+=b.val_>>>b.bit_pos_&kU,q=x[d].bits-o9,q>0)b.bit_pos_+=o9,d+=x[d].value,d+=b.val_>>>b.bit_pos_&(1<<q)-1;return b.bit_pos_+=x[d].bits,x[d].value}function uU(x,d,b,c){var q=0,$=SU,Y=0,G=0,E=32768,J=[];for(var V=0;V<32;V++)J.push(new u0(0,0));Lq(J,0,5,x,t9);while(q<d&&E>0){var N=0,U;if(c.readMoreInput(),c.fillBitWindow(),N+=c.val_>>>c.bit_pos_&31,c.bit_pos_+=J[N].bits,U=J[N].value&255,U<Xq){if(Y=0,b[q++]=U,U!==0)$=U,E-=32768>>U}else{var K=U-14,X,D,L=0;if(U===Xq)L=$;if(G!==L)Y=0,G=L;if(X=Y,Y>0)Y-=2,Y<<=K;if(Y+=c.readBits(K)+3,D=Y-X,q+D>d)throw new Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");for(var H=0;H<D;H++)b[q+H]=G;if(q+=D,G!==0)E-=D<<15-G}}if(E!==0)throw new Error("[ReadHuffmanCodeLengths] space = "+E);for(;q<d;q++)b[q]=0}function Z4(x,d,b,c){var q=0,$,Y=new Uint8Array(x);if(c.readMoreInput(),$=c.readBits(2),$===1){var G,E=x-1,J=0,V=new Int32Array(4),N=c.readBits(2)+1;while(E)E>>=1,++J;for(G=0;G<N;++G)V[G]=c.readBits(J)%x,Y[V[G]]=2;switch(Y[V[0]]=1,N){case 1:break;case 3:if(V[0]===V[1]||V[0]===V[2]||V[1]===V[2])throw new Error("[ReadHuffmanCode] invalid symbols");break;case 2:if(V[0]===V[1])throw new Error("[ReadHuffmanCode] invalid symbols");Y[V[1]]=1;break;case 4:if(V[0]===V[1]||V[0]===V[2]||V[0]===V[3]||V[1]===V[2]||V[1]===V[3]||V[2]===V[3])throw new Error("[ReadHuffmanCode] invalid symbols");if(c.readBits(1))Y[V[2]]=3,Y[V[3]]=3;else Y[V[0]]=2;break}}else{var G,U=new Uint8Array(t9),K=32,X=0,D=[new u0(2,0),new u0(2,4),new u0(2,3),new u0(3,2),new u0(2,0),new u0(2,4),new u0(2,3),new u0(4,1),new u0(2,0),new u0(2,4),new u0(2,3),new u0(3,2),new u0(2,0),new u0(2,4),new u0(2,3),new u0(4,5)];for(G=$;G<t9&&K>0;++G){var L=gU[G],H=0,O;if(c.fillBitWindow(),H+=c.val_>>>c.bit_pos_&15,c.bit_pos_+=D[H].bits,O=D[H].value,U[L]=O,O!==0)K-=32>>O,++X}if(!(X===1||K===0))throw new Error("[ReadHuffmanCode] invalid num_codes or space");uU(U,x,Y,c)}if(q=Lq(d,b,o9,Y,x),q===0)throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");return q}function S4(x,d,b){var c,q;return c=t7(x,d,b),q=S6.kBlockLengthPrefixCode[c].nbits,S6.kBlockLengthPrefixCode[c].offset+b.readBits(q)}function yU(x,d,b){var c;if(x<x8)b+=hU[x],b&=3,c=d[b]+aU[x];else c=x-x8+1;return c}function pU(x,d){var b=x[d],c=d;for(;c;--c)x[c]=x[c-1];x[0]=b}function lU(x,d){var b=new Uint8Array(256),c;for(c=0;c<256;++c)b[c]=c;for(c=0;c<d;++c){var q=x[c];if(x[c]=b[q],q)pU(b,q)}}function G7(x,d){this.alphabet_size=x,this.num_htrees=d,this.codes=new Array(d+d*_U[x+31>>>5]),this.htrees=new Uint32Array(d)}G7.prototype.decode=function(x){var d,b,c=0;for(d=0;d<this.num_htrees;++d)this.htrees[d]=c,b=Z4(this.alphabet_size,this.codes,c,x),c+=b};function Hq(x,d){var b={num_htrees:null,context_map:null},c,q=0,$,Y;d.readMoreInput();var G=b.num_htrees=eq(d)+1,E=b.context_map=new Uint8Array(x);if(G<=1)return b;if(c=d.readBits(1),c)q=d.readBits(4)+1;$=[];for(Y=0;Y<Z6;Y++)$[Y]=new u0(0,0);Z4(G+q,$,0,d);for(Y=0;Y<x;){var J;if(d.readMoreInput(),J=t7($,0,d),J===0)E[Y]=0,++Y;else if(J<=q){var V=1+(1<<J)+d.readBits(J);while(--V){if(Y>=x)throw new Error("[DecodeContextMap] i >= context_map_size");E[Y]=0,++Y}}else E[Y]=J-q,++Y}if(d.readBits(1))lU(E,x);return b}function s9(x,d,b,c,q,$,Y){var G=b*2,E=b,J=t7(d,b*Z6,Y),V;if(J===0)V=q[G+($[E]&1)];else if(J===1)V=q[G+($[E]-1&1)]+1;else V=J-2;if(V>=x)V-=x;c[b]=V,q[G+($[E]&1)]=V,++$[E]}function nU(x,d,b,c,q,$){var Y=q+1,G=b&q,E=$.pos_&o7.IBUF_MASK,J;if(d<8||$.bit_pos_+(d<<3)<$.bit_end_pos_){while(d-- >0)if($.readMoreInput(),c[G++]=$.readBits(8),G===Y)x.write(c,Y),G=0;return}if($.bit_end_pos_<32)throw new Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");while($.bit_pos_<32)c[G]=$.val_>>>$.bit_pos_,$.bit_pos_+=8,++G,--d;if(J=$.bit_end_pos_-$.bit_pos_>>3,E+J>o7.IBUF_MASK){var V=o7.IBUF_MASK+1-E;for(var N=0;N<V;N++)c[G+N]=$.buf_[E+N];J-=V,G+=V,d-=V,E=0}for(var N=0;N<J;N++)c[G+N]=$.buf_[E+N];if(G+=J,d-=J,G>=Y){x.write(c,Y),G-=Y;for(var N=0;N<G;N++)c[N]=c[Y+N]}while(G+d>=Y){if(J=Y-G,$.input_.read(c,G,J)<J)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");x.write(c,Y),d-=J,G=0}if($.input_.read(c,G,d)<d)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");$.reset()}function iU(x){var d=x.bit_pos_+7&-8,b=x.readBits(d-x.bit_pos_);return b==0}function Aq(x){var d=new Wq(x),b=new o7(d);Dq(b);var c=Mq(b);return c.meta_block_length}sU.BrotliDecompressedSize=Aq;function rU(x,d){var b=new Wq(x);if(d==null)d=Aq(x);var c=new Uint8Array(d),q=new IU(c);if(Fq(b,q),q.pos<q.buffer.length)q.buffer=q.buffer.subarray(0,q.pos);return q.buffer}sU.BrotliDecompressBuffer=rU;function Fq(x,d){var b,c=0,q=0,$=0,Y,G=0,E,J,V,N,U=[16,15,11,4],K=0,X=0,D=0,L=[new G7(0,0),new G7(0,0),new G7(0,0)],H,O,j,e=128+o7.READ_SIZE;j=new o7(x),$=Dq(j),Y=(1<<$)-16,E=1<<$,J=E-1,V=new Uint8Array(E+e+s7.maxDictionaryWordLength),N=E,H=[],O=[];for(var M=0;M<3*Z6;M++)H[M]=new u0(0,0),O[M]=new u0(0,0);while(!q){var F=0,z,B=[268435456,268435456,268435456],w=[0],Z=[1,1,1],P=[0,1,0,1,0,1],I=[0],a,S,y,T,m=null,u=null,v,g=null,h,k=0,Y0=null,U0=0,B0=0,f0=null,p0=0,Z0=0,Q0=0,K0,T0;for(b=0;b<3;++b)L[b].codes=null,L[b].htrees=null;j.readMoreInput();var D0=Mq(j);if(F=D0.meta_block_length,c+F>d.buffer.length){var Qx=new Uint8Array(c+F);Qx.set(d.buffer),d.buffer=Qx}if(q=D0.input_end,z=D0.is_uncompressed,D0.is_metadata){iU(j);for(;F>0;--F)j.readMoreInput(),j.readBits(8);continue}if(F===0)continue;if(z){j.bit_pos_=j.bit_pos_+7&-8,nU(d,F,c,V,J,j),c+=F;continue}for(b=0;b<3;++b)if(Z[b]=eq(j)+1,Z[b]>=2)Z4(Z[b]+2,H,b*Z6,j),Z4(CU,O,b*Z6,j),B[b]=S4(O,b*Z6,j),I[b]=1;j.readMoreInput(),a=j.readBits(2),S=x8+(j.readBits(4)<<a),y=(1<<a)-1,T=S+(48<<a),u=new Uint8Array(Z[0]);for(b=0;b<Z[0];++b)j.readMoreInput(),u[b]=j.readBits(2)<<1;var Yx=Hq(Z[0]<<jq,j);v=Yx.num_htrees,m=Yx.context_map;var Mx=Hq(Z[2]<<Oq,j);h=Mx.num_htrees,g=Mx.context_map,L[0]=new G7(ZU,v),L[1]=new G7(TU,Z[1]),L[2]=new G7(T,h);for(b=0;b<3;++b)L[b].decode(j);Y0=0,f0=0,K0=u[w[0]],Z0=r7.lookupOffsets[K0],Q0=r7.lookupOffsets[K0+1],T0=L[1].htrees[0];while(F>0){var bx,Nx,Gx,s0,l0,e0,C0,Ax,Fx,zx,u6;if(j.readMoreInput(),B[1]===0)s9(Z[1],H,1,w,P,I,j),B[1]=S4(O,Z6,j),T0=L[1].htrees[w[1]];if(--B[1],bx=t7(L[1].codes,T0,j),Nx=bx>>6,Nx>=2)Nx-=2,C0=-1;else C0=0;Gx=S6.kInsertRangeLut[Nx]+(bx>>3&7),s0=S6.kCopyRangeLut[Nx]+(bx&7),l0=S6.kInsertLengthPrefixCode[Gx].offset+j.readBits(S6.kInsertLengthPrefixCode[Gx].nbits),e0=S6.kCopyLengthPrefixCode[s0].offset+j.readBits(S6.kCopyLengthPrefixCode[s0].nbits),X=V[c-1&J],D=V[c-2&J];for(zx=0;zx<l0;++zx){if(j.readMoreInput(),B[0]===0)s9(Z[0],H,0,w,P,I,j),B[0]=S4(O,0,j),k=w[0]<<jq,Y0=k,K0=u[w[0]],Z0=r7.lookupOffsets[K0],Q0=r7.lookupOffsets[K0+1];if(Fx=r7.lookup[Z0+X]|r7.lookup[Q0+D],U0=m[Y0+Fx],--B[0],D=X,X=t7(L[0].codes,L[0].htrees[U0],j),V[c&J]=X,(c&J)===J)d.write(V,E);++c}if(F-=l0,F<=0)break;if(C0<0){var Fx;if(j.readMoreInput(),B[2]===0)s9(Z[2],H,2,w,P,I,j),B[2]=S4(O,2*Z6,j),B0=w[2]<<Oq,f0=B0;if(--B[2],Fx=(e0>4?3:e0-2)&255,p0=g[f0+Fx],C0=t7(L[2].codes,L[2].htrees[p0],j),C0>=S){var R7,N2,Bx;C0-=S,N2=C0&y,C0>>=a,R7=(C0>>1)+1,Bx=(2+(C0&1)<<R7)-4,C0=S+(Bx+j.readBits(R7)<<a)+N2}}if(Ax=yU(C0,U,K),Ax<0)throw new Error("[BrotliDecompress] invalid distance");if(c<Y&&G!==Y)G=c;else G=Y;if(u6=c&J,Ax>G)if(e0>=s7.minDictionaryWordLength&&e0<=s7.maxDictionaryWordLength){var Bx=s7.offsetsByLength[e0],D6=Ax-G-1,G5=s7.sizeBitsByLength[e0],E5=(1<<G5)-1,J5=D6&E5,V5=D6>>G5;if(Bx+=J5*e0,V5<Rq.kNumTransforms){var U2=Rq.transformDictionaryWord(V,u6,Bx,e0,V5);if(u6+=U2,c+=U2,F-=U2,u6>=N){d.write(V,E);for(var y6=0;y6<u6-N;y6++)V[y6]=V[N+y6]}}else throw new Error("Invalid backward reference. pos: "+c+" distance: "+Ax+" len: "+e0+" bytes left: "+F)}else throw new Error("Invalid backward reference. pos: "+c+" distance: "+Ax+" len: "+e0+" bytes left: "+F);else{if(C0>0)U[K&3]=Ax,++K;if(e0>F)throw new Error("Invalid backward reference. pos: "+c+" distance: "+Ax+" len: "+e0+" bytes left: "+F);for(zx=0;zx<e0;++zx){if(V[c&J]=V[c-Ax&J],(c&J)===J)d.write(V,E);++c,--F}}X=V[c-1&J],D=V[c-2&J]}c&=1073741823}d.write(V,c&J)}sU.BrotliDecompress=Fq;s7.init()});var wq=i((KB,Bq)=>{Bq.exports=zq().BrotliDecompressBuffer});var BQ=i((OB,k8)=>{var Q=kb(),j$=wx("node:fs"),Rx=gb(),fx=Kc(),Pq=Xc(),X6=rc(),M8=w4(),O$=tc(),f8=xq(),fK=m9(),dK=wq();function H$(x,d){return Object.keys(d).forEach(function(b){if(b==="default"||b==="__esModule"||Object.prototype.hasOwnProperty.call(x,b))return;Object.defineProperty(x,b,{enumerable:!0,get:function c(){return d[b]}})}),x}function U7(x,d,b,c){Object.defineProperty(x,d,{get:b,set:c,enumerable:!0,configurable:!0})}function o0(x){return x&&x.__esModule?x.default:x}var $2={};U7($2,"logErrors",()=>W$);U7($2,"registerFormat",()=>Q2);U7($2,"create",()=>A8);U7($2,"defaultLanguage",()=>p4);U7($2,"setDefaultLanguage",()=>bK);var W$=!1,E8=[];function Q2(x){E8.push(x)}function A8(x,d){for(let b=0;b<E8.length;b++){let c=E8[b];if(c.probe(x)){let q=new c(new Q.DecodeStream(x));if(d)return q.getFont(d);return q}}throw new Error("Unknown font format")}var p4="en";function bK(x="en"){p4=x}var F8={};U7(F8,"openSync",()=>cK);U7(F8,"open",()=>qK);function cK(x,d){let b=o0(j$).readFileSync(x);return A8(b,d)}async function qK(x,d,b){if(typeof d==="function")b=d,d=null;let c=await o0(j$).promises.readFile(x);return A8(c,d)}function dx(x,d,b){if(b.get){let c=b.get;b.get=function(){let q=c.call(this);return Object.defineProperty(this,d,{value:q}),q}}else if(typeof b.value==="function"){let c=b.value;return{get(){let q=new Map;function $(...Y){let G=Y.length>0?Y[0]:"value";if(q.has(G))return q.get(G);let E=c.apply(this,Y);return q.set(G,E),E}return Object.defineProperty(this,d,{value:$}),$}}}}var $K=new Q.Struct({firstCode:Q.uint16,entryCount:Q.uint16,idDelta:Q.int16,idRangeOffset:Q.uint16}),d8=new Q.Struct({startCharCode:Q.uint32,endCharCode:Q.uint32,glyphID:Q.uint32}),QK=new Q.Struct({startUnicodeValue:Q.uint24,additionalCount:Q.uint8}),YK=new Q.Struct({unicodeValue:Q.uint24,glyphID:Q.uint16}),GK=new Q.Array(QK,Q.uint32),EK=new Q.Array(YK,Q.uint32),JK=new Q.Struct({varSelector:Q.uint24,defaultUVS:new Q.Pointer(Q.uint32,GK,{type:"parent"}),nonDefaultUVS:new Q.Pointer(Q.uint32,EK,{type:"parent"})}),VK=new Q.VersionedStruct(Q.uint16,{0:{length:Q.uint16,language:Q.uint16,codeMap:new Q.LazyArray(Q.uint8,256)},2:{length:Q.uint16,language:Q.uint16,subHeaderKeys:new Q.Array(Q.uint16,256),subHeaderCount:(x)=>Math.max.apply(Math,x.subHeaderKeys),subHeaders:new Q.LazyArray($K,"subHeaderCount"),glyphIndexArray:new Q.LazyArray(Q.uint16,"subHeaderCount")},4:{length:Q.uint16,language:Q.uint16,segCountX2:Q.uint16,segCount:(x)=>x.segCountX2>>1,searchRange:Q.uint16,entrySelector:Q.uint16,rangeShift:Q.uint16,endCode:new Q.LazyArray(Q.uint16,"segCount"),reservedPad:new Q.Reserved(Q.uint16),startCode:new Q.LazyArray(Q.uint16,"segCount"),idDelta:new Q.LazyArray(Q.int16,"segCount"),idRangeOffset:new Q.LazyArray(Q.uint16,"segCount"),glyphIndexArray:new Q.LazyArray(Q.uint16,(x)=>(x.length-x._currentOffset)/2)},6:{length:Q.uint16,language:Q.uint16,firstCode:Q.uint16,entryCount:Q.uint16,glyphIndices:new Q.LazyArray(Q.uint16,"entryCount")},8:{reserved:new Q.Reserved(Q.uint16),length:Q.uint32,language:Q.uint16,is32:new Q.LazyArray(Q.uint8,8192),nGroups:Q.uint32,groups:new Q.LazyArray(d8,"nGroups")},10:{reserved:new Q.Reserved(Q.uint16),length:Q.uint32,language:Q.uint32,firstCode:Q.uint32,entryCount:Q.uint32,glyphIndices:new Q.LazyArray(Q.uint16,"numChars")},12:{reserved:new Q.Reserved(Q.uint16),length:Q.uint32,language:Q.uint32,nGroups:Q.uint32,groups:new Q.LazyArray(d8,"nGroups")},13:{reserved:new Q.Reserved(Q.uint16),length:Q.uint32,language:Q.uint32,nGroups:Q.uint32,groups:new Q.LazyArray(d8,"nGroups")},14:{length:Q.uint32,numRecords:Q.uint32,varSelectors:new Q.LazyArray(JK,"numRecords")}}),NK=new Q.Struct({platformID:Q.uint16,encodingID:Q.uint16,table:new Q.Pointer(Q.uint32,VK,{type:"parent",lazy:!0})}),UK=new Q.Struct({version:Q.uint16,numSubtables:Q.uint16,tables:new Q.Array(NK,"numSubtables")}),KK=new Q.Struct({version:Q.int32,revision:Q.int32,checkSumAdjustment:Q.uint32,magicNumber:Q.uint32,flags:Q.uint16,unitsPerEm:Q.uint16,created:new Q.Array(Q.int32,2),modified:new Q.Array(Q.int32,2),xMin:Q.int16,yMin:Q.int16,xMax:Q.int16,yMax:Q.int16,macStyle:new Q.Bitfield(Q.uint16,["bold","italic","underline","outline","shadow","condensed","extended"]),lowestRecPPEM:Q.uint16,fontDirectionHint:Q.int16,indexToLocFormat:Q.int16,glyphDataFormat:Q.int16}),RK=new Q.Struct({version:Q.int32,ascent:Q.int16,descent:Q.int16,lineGap:Q.int16,advanceWidthMax:Q.uint16,minLeftSideBearing:Q.int16,minRightSideBearing:Q.int16,xMaxExtent:Q.int16,caretSlopeRise:Q.int16,caretSlopeRun:Q.int16,caretOffset:Q.int16,reserved:new Q.Reserved(Q.int16,4),metricDataFormat:Q.int16,numberOfMetrics:Q.uint16}),XK=new Q.Struct({advance:Q.uint16,bearing:Q.int16}),jK=new Q.Struct({metrics:new Q.LazyArray(XK,(x)=>x.parent.hhea.numberOfMetrics),bearings:new Q.LazyArray(Q.int16,(x)=>x.parent.maxp.numGlyphs-x.parent.hhea.numberOfMetrics)}),OK=new Q.Struct({version:Q.int32,numGlyphs:Q.uint16,maxPoints:Q.uint16,maxContours:Q.uint16,maxComponentPoints:Q.uint16,maxComponentContours:Q.uint16,maxZones:Q.uint16,maxTwilightPoints:Q.uint16,maxStorage:Q.uint16,maxFunctionDefs:Q.uint16,maxInstructionDefs:Q.uint16,maxStackElements:Q.uint16,maxSizeOfInstructions:Q.uint16,maxComponentElements:Q.uint16,maxComponentDepth:Q.uint16});function L$(x,d,b=0){if(x===1&&vq[b])return vq[b];return DK[x][d]}var HK=new Set(["x-mac-roman","x-mac-cyrillic","iso-8859-6","iso-8859-8"]),WK={"x-mac-croatian":"\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\u0160\u2122\xB4\xA8\u2260\u017D\xD8\u221E\xB1\u2264\u2265\u2206\xB5\u2202\u2211\u220F\u0161\u222B\xAA\xBA\u03A9\u017E\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u0106\xAB\u010C\u2026 \xC0\xC3\xD5\u0152\u0153\u0110\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\uF8FF\xA9\u2044\u20AC\u2039\u203A\xC6\xBB\u2013\xB7\u201A\u201E\u2030\xC2\u0107\xC1\u010D\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u0111\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u03C0\xCB\u02DA\xB8\xCA\xE6\u02C7","x-mac-gaelic":"\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u1E02\xB1\u2264\u2265\u1E03\u010A\u010B\u1E0A\u1E0B\u1E1E\u1E1F\u0120\u0121\u1E40\xE6\xF8\u1E41\u1E56\u1E57\u027C\u0192\u017F\u1E60\xAB\xBB\u2026 \xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\u1E61\u1E9B\xFF\u0178\u1E6A\u20AC\u2039\u203A\u0176\u0177\u1E6B\xB7\u1EF2\u1EF3\u204A\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\u2663\xD2\xDA\xDB\xD9\u0131\xDD\xFD\u0174\u0175\u1E84\u1E85\u1E80\u1E81\u1E82\u1E83","x-mac-greek":"\xC4\xB9\xB2\xC9\xB3\xD6\xDC\u0385\xE0\xE2\xE4\u0384\xA8\xE7\xE9\xE8\xEA\xEB\xA3\u2122\xEE\xEF\u2022\xBD\u2030\xF4\xF6\xA6\u20AC\xF9\xFB\xFC\u2020\u0393\u0394\u0398\u039B\u039E\u03A0\xDF\xAE\xA9\u03A3\u03AA\xA7\u2260\xB0\xB7\u0391\xB1\u2264\u2265\xA5\u0392\u0395\u0396\u0397\u0399\u039A\u039C\u03A6\u03AB\u03A8\u03A9\u03AC\u039D\xAC\u039F\u03A1\u2248\u03A4\xAB\xBB\u2026 \u03A5\u03A7\u0386\u0388\u0153\u2013\u2015\u201C\u201D\u2018\u2019\xF7\u0389\u038A\u038C\u038E\u03AD\u03AE\u03AF\u03CC\u038F\u03CD\u03B1\u03B2\u03C8\u03B4\u03B5\u03C6\u03B3\u03B7\u03B9\u03BE\u03BA\u03BB\u03BC\u03BD\u03BF\u03C0\u03CE\u03C1\u03C3\u03C4\u03B8\u03C9\u03C2\u03C7\u03C5\u03B6\u03CA\u03CB\u0390\u03B0\xAD","x-mac-icelandic":"\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\xDD\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026 \xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\xD0\xF0\xDE\xFE\xFD\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7","x-mac-inuit":"\u1403\u1404\u1405\u1406\u140A\u140B\u1431\u1432\u1433\u1434\u1438\u1439\u1449\u144E\u144F\u1450\u1451\u1455\u1456\u1466\u146D\u146E\u146F\u1470\u1472\u1473\u1483\u148B\u148C\u148D\u148E\u1490\u1491\xB0\u14A1\u14A5\u14A6\u2022\xB6\u14A7\xAE\xA9\u2122\u14A8\u14AA\u14AB\u14BB\u14C2\u14C3\u14C4\u14C5\u14C7\u14C8\u14D0\u14EF\u14F0\u14F1\u14F2\u14F4\u14F5\u1505\u14D5\u14D6\u14D7\u14D8\u14DA\u14DB\u14EA\u1528\u1529\u152A\u152B\u152D\u2026 \u152E\u153E\u1555\u1556\u1557\u2013\u2014\u201C\u201D\u2018\u2019\u1558\u1559\u155A\u155D\u1546\u1547\u1548\u1549\u154B\u154C\u1550\u157F\u1580\u1581\u1582\u1583\u1584\u1585\u158F\u1590\u1591\u1592\u1593\u1594\u1595\u1671\u1672\u1673\u1674\u1675\u1676\u1596\u15A0\u15A1\u15A2\u15A3\u15A4\u15A5\u15A6\u157C\u0141\u0142","x-mac-ce":"\xC4\u0100\u0101\xC9\u0104\xD6\xDC\xE1\u0105\u010C\xE4\u010D\u0106\u0107\xE9\u0179\u017A\u010E\xED\u010F\u0112\u0113\u0116\xF3\u0117\xF4\xF6\xF5\xFA\u011A\u011B\xFC\u2020\xB0\u0118\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\u0119\xA8\u2260\u0123\u012E\u012F\u012A\u2264\u2265\u012B\u0136\u2202\u2211\u0142\u013B\u013C\u013D\u013E\u0139\u013A\u0145\u0146\u0143\xAC\u221A\u0144\u0147\u2206\xAB\xBB\u2026 \u0148\u0150\xD5\u0151\u014C\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\u014D\u0154\u0155\u0158\u2039\u203A\u0159\u0156\u0157\u0160\u201A\u201E\u0161\u015A\u015B\xC1\u0164\u0165\xCD\u017D\u017E\u016A\xD3\xD4\u016B\u016E\xDA\u016F\u0170\u0171\u0172\u0173\xDD\xFD\u0137\u017B\u0141\u017C\u0122\u02C7","x-mac-romanian":"\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\u0102\u0218\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\u0103\u0219\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026 \xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u2044\u20AC\u2039\u203A\u021A\u021B\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\u0131\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7","x-mac-turkish":"\xC4\xC5\xC7\xC9\xD1\xD6\xDC\xE1\xE0\xE2\xE4\xE3\xE5\xE7\xE9\xE8\xEA\xEB\xED\xEC\xEE\xEF\xF1\xF3\xF2\xF4\xF6\xF5\xFA\xF9\xFB\xFC\u2020\xB0\xA2\xA3\xA7\u2022\xB6\xDF\xAE\xA9\u2122\xB4\xA8\u2260\xC6\xD8\u221E\xB1\u2264\u2265\xA5\xB5\u2202\u2211\u220F\u03C0\u222B\xAA\xBA\u03A9\xE6\xF8\xBF\xA1\xAC\u221A\u0192\u2248\u2206\xAB\xBB\u2026 \xC0\xC3\xD5\u0152\u0153\u2013\u2014\u201C\u201D\u2018\u2019\xF7\u25CA\xFF\u0178\u011E\u011F\u0130\u0131\u015E\u015F\u2021\xB7\u201A\u201E\u2030\xC2\xCA\xC1\xCB\xC8\xCD\xCE\xCF\xCC\xD3\xD4\uF8FF\xD2\xDA\xDB\xD9\uF8A0\u02C6\u02DC\xAF\u02D8\u02D9\u02DA\xB8\u02DD\u02DB\u02C7"},b8=new Map;function LK(x){let d=b8.get(x);if(d)return d;let b=WK[x];if(b){let c=new Map;for(let q=0;q<b.length;q++)c.set(b.charCodeAt(q),128+q);return b8.set(x,c),c}if(HK.has(x)){let c=new TextDecoder(x),q=new Uint8Array(128);for(let G=0;G<128;G++)q[G]=128+G;let $=new Map,Y=c.decode(q);for(let G=0;G<128;G++)$.set(Y.charCodeAt(G),128+G);return b8.set(x,$),$}}var DK=[["utf-16be","utf-16be","utf-16be","utf-16be","utf-16be","utf-16be","utf-16be"],["x-mac-roman","shift-jis","big5","euc-kr","iso-8859-6","iso-8859-8","x-mac-greek","x-mac-cyrillic","x-mac-symbol","x-mac-devanagari","x-mac-gurmukhi","x-mac-gujarati","Oriya","Bengali","Tamil","Telugu","Kannada","Malayalam","Sinhalese","Burmese","Khmer","iso-8859-11","Laotian","Georgian","Armenian","gbk","Tibetan","Mongolian","Geez","x-mac-ce","Vietnamese","Sindhi"],["ascii",null,"iso-8859-1"],["symbol","utf-16be","shift-jis","gb18030","big5","euc-kr","johab",null,null,null,"utf-16be"]],vq={15:"x-mac-icelandic",17:"x-mac-turkish",18:"x-mac-croatian",24:"x-mac-ce",25:"x-mac-ce",26:"x-mac-ce",27:"x-mac-ce",28:"x-mac-ce",30:"x-mac-icelandic",37:"x-mac-romanian",38:"x-mac-ce",39:"x-mac-ce",40:"x-mac-ce",143:"x-mac-inuit",146:"x-mac-gaelic"},eK=[[],{0:"en",30:"fo",60:"ks",90:"rw",1:"fr",31:"fa",61:"ku",91:"rn",2:"de",32:"ru",62:"sd",92:"ny",3:"it",33:"zh",63:"bo",93:"mg",4:"nl",34:"nl-BE",64:"ne",94:"eo",5:"sv",35:"ga",65:"sa",128:"cy",6:"es",36:"sq",66:"mr",129:"eu",7:"da",37:"ro",67:"bn",130:"ca",8:"pt",38:"cz",68:"as",131:"la",9:"no",39:"sk",69:"gu",132:"qu",10:"he",40:"si",70:"pa",133:"gn",11:"ja",41:"yi",71:"or",134:"ay",12:"ar",42:"sr",72:"ml",135:"tt",13:"fi",43:"mk",73:"kn",136:"ug",14:"el",44:"bg",74:"ta",137:"dz",15:"is",45:"uk",75:"te",138:"jv",16:"mt",46:"be",76:"si",139:"su",17:"tr",47:"uz",77:"my",140:"gl",18:"hr",48:"kk",78:"km",141:"af",19:"zh-Hant",49:"az-Cyrl",79:"lo",142:"br",20:"ur",50:"az-Arab",80:"vi",143:"iu",21:"hi",51:"hy",81:"id",144:"gd",22:"th",52:"ka",82:"tl",145:"gv",23:"ko",53:"mo",83:"ms",146:"ga",24:"lt",54:"ky",84:"ms-Arab",147:"to",25:"pl",55:"tg",85:"am",148:"el-polyton",26:"hu",56:"tk",86:"ti",149:"kl",27:"es",57:"mn-CN",87:"om",150:"az",28:"lv",58:"mn",88:"so",151:"nn",29:"se",59:"ps",89:"sw"},[],{1078:"af",16393:"en-IN",1159:"rw",1074:"tn",1052:"sq",6153:"en-IE",1089:"sw",1115:"si",1156:"gsw",8201:"en-JM",1111:"kok",1051:"sk",1118:"am",17417:"en-MY",1042:"ko",1060:"sl",5121:"ar-DZ",5129:"en-NZ",1088:"ky",11274:"es-AR",15361:"ar-BH",13321:"en-PH",1108:"lo",16394:"es-BO",3073:"ar",18441:"en-SG",1062:"lv",13322:"es-CL",2049:"ar-IQ",7177:"en-ZA",1063:"lt",9226:"es-CO",11265:"ar-JO",11273:"en-TT",2094:"dsb",5130:"es-CR",13313:"ar-KW",2057:"en-GB",1134:"lb",7178:"es-DO",12289:"ar-LB",1033:"en",1071:"mk",12298:"es-EC",4097:"ar-LY",12297:"en-ZW",2110:"ms-BN",17418:"es-SV",6145:"ary",1061:"et",1086:"ms",4106:"es-GT",8193:"ar-OM",1080:"fo",1100:"ml",18442:"es-HN",16385:"ar-QA",1124:"fil",1082:"mt",2058:"es-MX",1025:"ar-SA",1035:"fi",1153:"mi",19466:"es-NI",10241:"ar-SY",2060:"fr-BE",1146:"arn",6154:"es-PA",7169:"aeb",3084:"fr-CA",1102:"mr",15370:"es-PY",14337:"ar-AE",1036:"fr",1148:"moh",10250:"es-PE",9217:"ar-YE",5132:"fr-LU",1104:"mn",20490:"es-PR",1067:"hy",6156:"fr-MC",2128:"mn-CN",3082:"es",1101:"as",4108:"fr-CH",1121:"ne",1034:"es",2092:"az-Cyrl",1122:"fy",1044:"nb",21514:"es-US",1068:"az",1110:"gl",2068:"nn",14346:"es-UY",1133:"ba",1079:"ka",1154:"oc",8202:"es-VE",1069:"eu",3079:"de-AT",1096:"or",2077:"sv-FI",1059:"be",1031:"de",1123:"ps",1053:"sv",2117:"bn",5127:"de-LI",1045:"pl",1114:"syr",1093:"bn-IN",4103:"de-LU",1046:"pt",1064:"tg",8218:"bs-Cyrl",2055:"de-CH",2070:"pt-PT",2143:"tzm",5146:"bs",1032:"el",1094:"pa",1097:"ta",1150:"br",1135:"kl",1131:"qu-BO",1092:"tt",1026:"bg",1095:"gu",2155:"qu-EC",1098:"te",1027:"ca",1128:"ha",3179:"qu",1054:"th",3076:"zh-HK",1037:"he",1048:"ro",1105:"bo",5124:"zh-MO",1081:"hi",1047:"rm",1055:"tr",2052:"zh",1038:"hu",1049:"ru",1090:"tk",4100:"zh-SG",1039:"is",9275:"smn",1152:"ug",1028:"zh-TW",1136:"ig",4155:"smj-NO",1058:"uk",1155:"co",1057:"id",5179:"smj",1070:"hsb",1050:"hr",1117:"iu",3131:"se-FI",1056:"ur",4122:"hr-BA",2141:"iu-Latn",1083:"se",2115:"uz-Cyrl",1029:"cs",2108:"ga",2107:"se-SE",1091:"uz",1030:"da",1076:"xh",8251:"sms",1066:"vi",1164:"prs",1077:"zu",6203:"sma-NO",1106:"cy",1125:"dv",1040:"it",7227:"sms",1160:"wo",2067:"nl-BE",2064:"it-CH",1103:"sa",1157:"sah",1043:"nl",1041:"ja",7194:"sr-Cyrl-BA",1144:"ii",3081:"en-AU",1099:"kn",3098:"sr",1130:"yo",10249:"en-BZ",1087:"kk",6170:"sr-Latn-BA",4105:"en-CA",1107:"km",2074:"sr-Latn",9225:"en-029",1158:"quc",1132:"nso"}],Iq=new Q.Struct({platformID:Q.uint16,encodingID:Q.uint16,languageID:Q.uint16,nameID:Q.uint16,length:Q.uint16,string:new Q.Pointer(Q.uint16,new Q.String("length",(x)=>L$(x.platformID,x.encodingID,x.languageID)),{type:"parent",relativeTo:(x)=>x.parent.stringOffset,allowNull:!1})}),MK=new Q.Struct({length:Q.uint16,tag:new Q.Pointer(Q.uint16,new Q.String("length","utf16be"),{type:"parent",relativeTo:(x)=>x.stringOffset})}),l4=new Q.VersionedStruct(Q.uint16,{0:{count:Q.uint16,stringOffset:Q.uint16,records:new Q.Array(Iq,"count")},1:{count:Q.uint16,stringOffset:Q.uint16,records:new Q.Array(Iq,"count"),langTagCount:Q.uint16,langTags:new Q.Array(MK,"langTagCount")}}),AK=l4,J8=["copyright","fontFamily","fontSubfamily","uniqueSubfamily","fullName","version","postscriptName","trademark","manufacturer","designer","description","vendorURL","designerURL","license","licenseURL",null,"preferredFamily","preferredSubfamily","compatibleFull","sampleText","postscriptCIDFontName","wwsFamilyName","wwsSubfamilyName"];l4.process=function(x){var d={};for(let b of this.records){let c=eK[b.platformID][b.languageID];if(c==null&&this.langTags!=null&&b.languageID>=32768)c=this.langTags[b.languageID-32768].tag;if(c==null)c=b.platformID+"-"+b.languageID;let q=b.nameID>=256?"fontFeatures":J8[b.nameID]||b.nameID;if(d[q]==null)d[q]={};let $=d[q];if(b.nameID>=256)$=$[b.nameID]||($[b.nameID]={});if(typeof b.string==="string"||typeof $[c]!=="string")$[c]=b.string}this.records=d};l4.preEncode=function(){if(Array.isArray(this.records))return;this.version=0;let x=[];for(let d in this.records){let b=this.records[d];if(d==="fontFeatures")continue;if(x.push({platformID:3,encodingID:1,languageID:1033,nameID:J8.indexOf(d),length:b.en.length*2,string:b.en}),d==="postscriptName")x.push({platformID:1,encodingID:0,languageID:0,nameID:J8.indexOf(d),length:b.en.length,string:b.en})}this.records=x,this.count=x.length,this.stringOffset=l4.size(this,null,!1)};var D$=new Q.VersionedStruct(Q.uint16,{header:{xAvgCharWidth:Q.int16,usWeightClass:Q.uint16,usWidthClass:Q.uint16,fsType:new Q.Bitfield(Q.uint16,[null,"noEmbedding","viewOnly","editable",null,null,null,null,"noSubsetting","bitmapOnly"]),ySubscriptXSize:Q.int16,ySubscriptYSize:Q.int16,ySubscriptXOffset:Q.int16,ySubscriptYOffset:Q.int16,ySuperscriptXSize:Q.int16,ySuperscriptYSize:Q.int16,ySuperscriptXOffset:Q.int16,ySuperscriptYOffset:Q.int16,yStrikeoutSize:Q.int16,yStrikeoutPosition:Q.int16,sFamilyClass:Q.int16,panose:new Q.Array(Q.uint8,10),ulCharRange:new Q.Array(Q.uint32,4),vendorID:new Q.String(4),fsSelection:new Q.Bitfield(Q.uint16,["italic","underscore","negative","outlined","strikeout","bold","regular","useTypoMetrics","wws","oblique"]),usFirstCharIndex:Q.uint16,usLastCharIndex:Q.uint16},0:{},1:{typoAscender:Q.int16,typoDescender:Q.int16,typoLineGap:Q.int16,winAscent:Q.uint16,winDescent:Q.uint16,codePageRange:new Q.Array(Q.uint32,2)},2:{typoAscender:Q.int16,typoDescender:Q.int16,typoLineGap:Q.int16,winAscent:Q.uint16,winDescent:Q.uint16,codePageRange:new Q.Array(Q.uint32,2),xHeight:Q.int16,capHeight:Q.int16,defaultChar:Q.uint16,breakChar:Q.uint16,maxContent:Q.uint16},5:{typoAscender:Q.int16,typoDescender:Q.int16,typoLineGap:Q.int16,winAscent:Q.uint16,winDescent:Q.uint16,codePageRange:new Q.Array(Q.uint32,2),xHeight:Q.int16,capHeight:Q.int16,defaultChar:Q.uint16,breakChar:Q.uint16,maxContent:Q.uint16,usLowerOpticalPointSize:Q.uint16,usUpperOpticalPointSize:Q.uint16}}),c8=D$.versions;c8[3]=c8[4]=c8[2];var FK=D$,zK=new Q.VersionedStruct(Q.fixed32,{header:{italicAngle:Q.fixed32,underlinePosition:Q.int16,underlineThickness:Q.int16,isFixedPitch:Q.uint32,minMemType42:Q.uint32,maxMemType42:Q.uint32,minMemType1:Q.uint32,maxMemType1:Q.uint32},1:{},2:{numberOfGlyphs:Q.uint16,glyphNameIndex:new Q.Array(Q.uint16,"numberOfGlyphs"),names:new Q.Array(new Q.String(Q.uint8))},2.5:{numberOfGlyphs:Q.uint16,offsets:new Q.Array(Q.uint8,"numberOfGlyphs")},3:{},4:{map:new Q.Array(Q.uint32,(x)=>x.parent.maxp.numGlyphs)}}),BK=new Q.Struct({controlValues:new Q.Array(Q.int16)}),wK=new Q.Struct({instructions:new Q.Array(Q.uint8)}),z8=new Q.VersionedStruct("head.indexToLocFormat",{0:{offsets:new Q.Array(Q.uint16)},1:{offsets:new Q.Array(Q.uint32)}});z8.process=function(){if(this.version===0&&!this._processed){for(let x=0;x<this.offsets.length;x++)this.offsets[x]<<=1;this._processed=!0}};z8.preEncode=function(){if(this.version===0&&this._processed!==!1){for(let x=0;x<this.offsets.length;x++)this.offsets[x]>>>=1;this._processed=!1}};var PK=z8,vK=new Q.Struct({controlValueProgram:new Q.Array(Q.uint8)}),IK=new Q.Array(new Q.Buffer);class mx{getCFFVersion(x){while(x&&!x.hdrSize)x=x.parent;return x?x.version:-1}decode(x,d){let c=this.getCFFVersion(d)>=2?x.readUInt32BE():x.readUInt16BE();if(c===0)return[];let q=x.readUInt8(),$;if(q===1)$=Q.uint8;else if(q===2)$=Q.uint16;else if(q===3)$=Q.uint24;else if(q===4)$=Q.uint32;else throw new Error(`Bad offset size in CFFIndex: ${q} ${x.pos}`);let Y=[],G=x.pos+(c+1)*q-1,E=$.decode(x);for(let J=0;J<c;J++){let V=$.decode(x);if(this.type!=null){let N=x.pos;x.pos=G+E,d.length=V-E,Y.push(this.type.decode(x,d)),x.pos=N}else Y.push({offset:G+E,length:V-E});E=V}return x.pos=G+E,Y}size(x,d){let b=2;if(x.length===0)return b;let c=this.type||new Q.Buffer,q=1;for(let Y=0;Y<x.length;Y++){let G=x[Y];q+=c.size(G,d)}let $;if(q<=255)$=Q.uint8;else if(q<=65535)$=Q.uint16;else if(q<=16777215)$=Q.uint24;else if(q<=4294967295)$=Q.uint32;else throw new Error("Bad offset in CFFIndex");return b+=1+$.size()*(x.length+1),b+=q-1,b}encode(x,d,b){if(x.writeUInt16BE(d.length),d.length===0)return;let c=this.type||new Q.Buffer,q=[],$=1;for(let G of d){let E=c.size(G,b);q.push(E),$+=E}let Y;if($<=255)Y=Q.uint8;else if($<=65535)Y=Q.uint16;else if($<=16777215)Y=Q.uint24;else if($<=4294967295)Y=Q.uint32;else throw new Error("Bad offset in CFFIndex");x.writeUInt8(Y.size()),$=1,Y.encode(x,$);for(let G of q)$+=G,Y.encode(x,$);for(let G of d)c.encode(x,G,b);return}constructor(x){this.type=x}}var a2=15,Sq=["0","1","2","3","4","5","6","7","8","9",".","E","E-",null,"-"],Zq={".":10,E:11,"E-":12,"-":14};class _4{static decode(x,d){if(32<=d&&d<=246)return d-139;if(247<=d&&d<=250)return(d-247)*256+x.readUInt8()+108;if(251<=d&&d<=254)return-(d-251)*256-x.readUInt8()-108;if(d===28)return x.readInt16BE();if(d===29)return x.readInt32BE();if(d===30){let b="";while(!0){let c=x.readUInt8(),q=c>>4;if(q===a2)break;b+=Sq[q];let $=c&15;if($===a2)break;b+=Sq[$]}return parseFloat(b)}return null}static size(x){if(x.forceLarge)x=32768;if((x|0)!==x){let d=""+x;return 1+Math.ceil((d.length+1)/2)}else if(-107<=x&&x<=107)return 1;else if(108<=x&&x<=1131||-1131<=x&&x<=-108)return 2;else if(-32768<=x&&x<=32767)return 3;else return 5}static encode(x,d){let b=Number(d);if(d.forceLarge)return x.writeUInt8(29),x.writeInt32BE(b);else if((b|0)!==b){x.writeUInt8(30);let q=""+b;for(let $=0;$<q.length;$+=2){let Y=q[$],G=Zq[Y]||+Y;if($===q.length-1)var c=a2;else{let E=q[$+1];var c=Zq[E]||+E}x.writeUInt8(G<<4|c&15)}if(c!==a2)return x.writeUInt8(a2<<4)}else if(-107<=b&&b<=107)return x.writeUInt8(b+139);else if(108<=b&&b<=1131)return b-=108,x.writeUInt8((b>>8)+247),x.writeUInt8(b&255);else if(-1131<=b&&b<=-108)return b=-b-108,x.writeUInt8((b>>8)+251),x.writeUInt8(b&255);else if(-32768<=b&&b<=32767)return x.writeUInt8(28),x.writeInt16BE(b);else return x.writeUInt8(29),x.writeInt32BE(b)}}class t2{decodeOperands(x,d,b,c){if(Array.isArray(x))return c.map((q,$)=>this.decodeOperands(x[$],d,b,[q]));else if(x.decode!=null)return x.decode(d,b,c);else switch(x){case"number":case"offset":case"sid":return c[0];case"boolean":return!!c[0];default:return c}}encodeOperands(x,d,b,c){if(Array.isArray(x))return c.map((q,$)=>this.encodeOperands(x[$],d,b,q)[0]);else if(x.encode!=null)return x.encode(d,c,b);else if(typeof c==="number")return[c];else if(typeof c==="boolean")return[+c];else if(Array.isArray(c))return c;else return[c]}decode(x,d){let b=x.pos+d.length,c={},q=[];Object.defineProperties(c,{parent:{value:d},_startOffset:{value:x.pos}});for(let $ in this.fields){let Y=this.fields[$];c[Y[1]]=Y[3]}while(x.pos<b){let $=x.readUInt8();if($<28){if($===12)$=$<<8|x.readUInt8();let Y=this.fields[$];if(!Y)throw new Error(`Unknown operator ${$}`);let G=this.decodeOperands(Y[2],x,c,q);if(G!=null)if(G instanceof Q.PropertyDescriptor)Object.defineProperty(c,Y[1],G);else c[Y[1]]=G;q=[]}else q.push(_4.decode(x,$))}return c}size(x,d,b=!0){let c={parent:d,val:x,pointerSize:0,startOffset:d.startOffset||0},q=0;for(let $ in this.fields){let Y=this.fields[$],G=x[Y[1]];if(G==null||o0(Pq)(G,Y[3]))continue;let E=this.encodeOperands(Y[2],null,c,G);for(let V of E)q+=_4.size(V);let J=Array.isArray(Y[0])?Y[0]:[Y[0]];q+=J.length}if(b)q+=c.pointerSize;return q}encode(x,d,b){let c={pointers:[],startOffset:x.pos,parent:b,val:d,pointerSize:0};c.pointerOffset=x.pos+this.size(d,c,!1);for(let $ of this.ops){let Y=d[$[1]];if(Y==null||o0(Pq)(Y,$[3]))continue;let G=this.encodeOperands($[2],x,c,Y);for(let J of G)_4.encode(x,J);let E=Array.isArray($[0])?$[0]:[$[0]];for(let J of E)x.writeUInt8(J)}let q=0;while(q<c.pointers.length){let $=c.pointers[q++];$.type.encode(x,$.val,$.parent)}return}constructor(x=[]){this.ops=x,this.fields={};for(let d of x){let b=Array.isArray(d[0])?d[0][0]<<8|d[0][1]:d[0];this.fields[b]=d}}}class Sx extends Q.Pointer{decode(x,d,b){return this.offsetType={decode:()=>b[0]},super.decode(x,d,b)}encode(x,d,b){if(!x)return this.offsetType={size:()=>0},this.size(d,b),[new V8(0)];let c=null;return this.offsetType={encode:(q,$)=>c=$},super.encode(x,d,b),[new V8(c)]}constructor(x,d={}){if(d.type==null)d.type="global";super(null,x,d)}}class V8{valueOf(){return this.val}constructor(x){this.val=x,this.forceLarge=!0}}class e${static decode(x,d,b){let c=b.pop();while(b.length>c)b.pop()}}var N8=new t2([[6,"BlueValues","delta",null],[7,"OtherBlues","delta",null],[8,"FamilyBlues","delta",null],[9,"FamilyOtherBlues","delta",null],[[12,9],"BlueScale","number",0.039625],[[12,10],"BlueShift","number",7],[[12,11],"BlueFuzz","number",1],[10,"StdHW","number",null],[11,"StdVW","number",null],[[12,12],"StemSnapH","delta",null],[[12,13],"StemSnapV","delta",null],[[12,14],"ForceBold","boolean",!1],[[12,17],"LanguageGroup","number",0],[[12,18],"ExpansionFactor","number",0.06],[[12,19],"initialRandomSeed","number",0],[20,"defaultWidthX","number",0],[21,"nominalWidthX","number",0],[22,"vsindex","number",0],[23,"blend",e$,null],[19,"Subrs",new Sx(new mx,{type:"local"}),null]]),m4=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall","001.000","001.001","001.002","001.003","Black","Bold","Book","Light","Medium","Regular","Roman","Semibold"],M$=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","","endash","dagger","daggerdbl","periodcentered","","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","","questiondown","","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","","ring","cedilla","","hungarumlaut","ogonek","caron","emdash","","","","","","","","","","","","","","","","","AE","","ordfeminine","","","","","Lslash","Oslash","OE","ordmasculine","","","","","","ae","","","","dotlessi","","","lslash","oslash","oe","germandbls"],SK=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclamsmall","Hungarumlautsmall","","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","","asuperior","bsuperior","centsuperior","dsuperior","esuperior","","","isuperior","","","lsuperior","msuperior","nsuperior","osuperior","","","rsuperior","ssuperior","tsuperior","","ff","fi","fl","ffi","ffl","parenleftinferior","","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdownsmall","centoldstyle","Lslashsmall","","","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","","Dotaccentsmall","","","Macronsmall","","","figuredash","hypheninferior","","","Ogoneksmall","Ringsmall","Cedillasmall","","","","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","","","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],A$=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron"],ZK=[".notdef","space","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],TK=[".notdef","space","dollaroldstyle","dollarsuperior","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","hyphensuperior","colonmonetary","onefitted","rupiah","centoldstyle","figuredash","hypheninferior","onequarter","onehalf","threequarters","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior"],F$=new Q.Struct({reserved:new Q.Reserved(Q.uint16),reqFeatureIndex:Q.uint16,featureCount:Q.uint16,featureIndexes:new Q.Array(Q.uint16,"featureCount")}),CK=new Q.Struct({tag:new Q.String(4),langSys:new Q.Pointer(Q.uint16,F$,{type:"parent"})}),kK=new Q.Struct({defaultLangSys:new Q.Pointer(Q.uint16,F$),count:Q.uint16,langSysRecords:new Q.Array(CK,"count")}),gK=new Q.Struct({tag:new Q.String(4),script:new Q.Pointer(Q.uint16,kK,{type:"parent"})}),z$=new Q.Array(gK,Q.uint16),hK=new Q.Struct({version:Q.uint16,nameID:Q.uint16}),B$=new Q.Struct({featureParams:new Q.Pointer(Q.uint16,hK),lookupCount:Q.uint16,lookupListIndexes:new Q.Array(Q.uint16,"lookupCount")}),aK=new Q.Struct({tag:new Q.String(4),feature:new Q.Pointer(Q.uint16,B$,{type:"parent"})}),w$=new Q.Array(aK,Q.uint16),_K=new Q.Struct({markAttachmentType:Q.uint8,flags:new Q.Bitfield(Q.uint8,["rightToLeft","ignoreBaseGlyphs","ignoreLigatures","ignoreMarks","useMarkFilteringSet"])});function n4(x){let d=new Q.Struct({lookupType:Q.uint16,flags:_K,subTableCount:Q.uint16,subTables:new Q.Array(new Q.Pointer(Q.uint16,x),"subTableCount"),markFilteringSet:new Q.Optional(Q.uint16,(b)=>b.flags.flags.useMarkFilteringSet)});return new Q.LazyArray(new Q.Pointer(Q.uint16,d),Q.uint16)}var mK=new Q.Struct({start:Q.uint16,end:Q.uint16,startCoverageIndex:Q.uint16}),w0=new Q.VersionedStruct(Q.uint16,{1:{glyphCount:Q.uint16,glyphs:new Q.Array(Q.uint16,"glyphCount")},2:{rangeCount:Q.uint16,rangeRecords:new Q.Array(mK,"rangeCount")}}),uK=new Q.Struct({start:Q.uint16,end:Q.uint16,class:Q.uint16}),h6=new Q.VersionedStruct(Q.uint16,{1:{startGlyph:Q.uint16,glyphCount:Q.uint16,classValueArray:new Q.Array(Q.uint16,"glyphCount")},2:{classRangeCount:Q.uint16,classRangeRecord:new Q.Array(uK,"classRangeCount")}}),g6=new Q.Struct({a:Q.uint16,b:Q.uint16,deltaFormat:Q.uint16}),x5=new Q.Struct({sequenceIndex:Q.uint16,lookupListIndex:Q.uint16}),yK=new Q.Struct({glyphCount:Q.uint16,lookupCount:Q.uint16,input:new Q.Array(Q.uint16,(x)=>x.glyphCount-1),lookupRecords:new Q.Array(x5,"lookupCount")}),pK=new Q.Array(new Q.Pointer(Q.uint16,yK),Q.uint16),lK=new Q.Struct({glyphCount:Q.uint16,lookupCount:Q.uint16,classes:new Q.Array(Q.uint16,(x)=>x.glyphCount-1),lookupRecords:new Q.Array(x5,"lookupCount")}),nK=new Q.Array(new Q.Pointer(Q.uint16,lK),Q.uint16),P$=new Q.VersionedStruct(Q.uint16,{1:{coverage:new Q.Pointer(Q.uint16,w0),ruleSetCount:Q.uint16,ruleSets:new Q.Array(new Q.Pointer(Q.uint16,pK),"ruleSetCount")},2:{coverage:new Q.Pointer(Q.uint16,w0),classDef:new Q.Pointer(Q.uint16,h6),classSetCnt:Q.uint16,classSet:new Q.Array(new Q.Pointer(Q.uint16,nK),"classSetCnt")},3:{glyphCount:Q.uint16,lookupCount:Q.uint16,coverages:new Q.Array(new Q.Pointer(Q.uint16,w0),"glyphCount"),lookupRecords:new Q.Array(x5,"lookupCount")}}),iK=new Q.Struct({backtrackGlyphCount:Q.uint16,backtrack:new Q.Array(Q.uint16,"backtrackGlyphCount"),inputGlyphCount:Q.uint16,input:new Q.Array(Q.uint16,(x)=>x.inputGlyphCount-1),lookaheadGlyphCount:Q.uint16,lookahead:new Q.Array(Q.uint16,"lookaheadGlyphCount"),lookupCount:Q.uint16,lookupRecords:new Q.Array(x5,"lookupCount")}),Tq=new Q.Array(new Q.Pointer(Q.uint16,iK),Q.uint16),v$=new Q.VersionedStruct(Q.uint16,{1:{coverage:new Q.Pointer(Q.uint16,w0),chainCount:Q.uint16,chainRuleSets:new Q.Array(new Q.Pointer(Q.uint16,Tq),"chainCount")},2:{coverage:new Q.Pointer(Q.uint16,w0),backtrackClassDef:new Q.Pointer(Q.uint16,h6),inputClassDef:new Q.Pointer(Q.uint16,h6),lookaheadClassDef:new Q.Pointer(Q.uint16,h6),chainCount:Q.uint16,chainClassSet:new Q.Array(new Q.Pointer(Q.uint16,Tq),"chainCount")},3:{backtrackGlyphCount:Q.uint16,backtrackCoverage:new Q.Array(new Q.Pointer(Q.uint16,w0),"backtrackGlyphCount"),inputGlyphCount:Q.uint16,inputCoverage:new Q.Array(new Q.Pointer(Q.uint16,w0),"inputGlyphCount"),lookaheadGlyphCount:Q.uint16,lookaheadCoverage:new Q.Array(new Q.Pointer(Q.uint16,w0),"lookaheadGlyphCount"),lookupCount:Q.uint16,lookupRecords:new Q.Array(x5,"lookupCount")}}),u2=new Q.Fixed(16,"BE",14),rK=new Q.Struct({startCoord:u2,peakCoord:u2,endCoord:u2}),sK=new Q.Struct({axisCount:Q.uint16,regionCount:Q.uint16,variationRegions:new Q.Array(new Q.Array(rK,"axisCount"),"regionCount")}),oK=new Q.Struct({shortDeltas:new Q.Array(Q.int16,(x)=>x.parent.shortDeltaCount),regionDeltas:new Q.Array(Q.int8,(x)=>x.parent.regionIndexCount-x.parent.shortDeltaCount),deltas:(x)=>x.shortDeltas.concat(x.regionDeltas)}),tK=new Q.Struct({itemCount:Q.uint16,shortDeltaCount:Q.uint16,regionIndexCount:Q.uint16,regionIndexes:new Q.Array(Q.uint16,"regionIndexCount"),deltaSets:new Q.Array(oK,"itemCount")}),d3=new Q.Struct({format:Q.uint16,variationRegionList:new Q.Pointer(Q.uint32,sK),variationDataCount:Q.uint16,itemVariationData:new Q.Array(new Q.Pointer(Q.uint32,tK),"variationDataCount")}),xR=new Q.VersionedStruct(Q.uint16,{1:{axisIndex:Q.uint16,axisIndex:Q.uint16,filterRangeMinValue:u2,filterRangeMaxValue:u2}}),fR=new Q.Struct({conditionCount:Q.uint16,conditionTable:new Q.Array(new Q.Pointer(Q.uint32,xR),"conditionCount")}),dR=new Q.Struct({featureIndex:Q.uint16,alternateFeatureTable:new Q.Pointer(Q.uint32,B$,{type:"parent"})}),bR=new Q.Struct({version:Q.fixed32,substitutionCount:Q.uint16,substitutions:new Q.Array(dR,"substitutionCount")}),cR=new Q.Struct({conditionSet:new Q.Pointer(Q.uint32,fR,{type:"parent"}),featureTableSubstitution:new Q.Pointer(Q.uint32,bR,{type:"parent"})}),I$=new Q.Struct({majorVersion:Q.uint16,minorVersion:Q.uint16,featureVariationRecordCount:Q.uint32,featureVariationRecords:new Q.Array(cR,"featureVariationRecordCount")});class B8{decode(x,d,b){if(this.predefinedOps[b[0]])return this.predefinedOps[b[0]];return this.type.decode(x,d,b)}size(x,d){return this.type.size(x,d)}encode(x,d,b){let c=this.predefinedOps.indexOf(d);if(c!==-1)return c;return this.type.encode(x,d,b)}constructor(x,d){this.predefinedOps=x,this.type=d}}class S$ extends Q.Number{decode(x){return Q.uint8.decode(x)&127}constructor(){super("UInt8")}}var Z$=new Q.Struct({first:Q.uint16,nLeft:Q.uint8}),qR=new Q.Struct({first:Q.uint16,nLeft:Q.uint16}),$R=new Q.VersionedStruct(new S$,{0:{nCodes:Q.uint8,codes:new Q.Array(Q.uint8,"nCodes")},1:{nRanges:Q.uint8,ranges:new Q.Array(Z$,"nRanges")}}),QR=new B8([M$,SK],new Sx($R,{lazy:!0}));class U8 extends Q.Array{decode(x,d){let b=Q.resolveLength(this.length,x,d),c=0,q=[];while(c<b){let $=this.type.decode(x,d);$.offset=c,c+=$.nLeft+1,q.push($)}return q}}var YR=new Q.VersionedStruct(Q.uint8,{0:{glyphs:new Q.Array(Q.uint16,(x)=>x.parent.CharStrings.length-1)},1:{ranges:new U8(Z$,(x)=>x.parent.CharStrings.length-1)},2:{ranges:new U8(qR,(x)=>x.parent.CharStrings.length-1)}}),GR=new B8([A$,ZK,TK],new Sx(YR,{lazy:!0})),ER=new Q.Struct({first:Q.uint16,fd:Q.uint8}),JR=new Q.Struct({first:Q.uint32,fd:Q.uint16}),T$=new Q.VersionedStruct(Q.uint8,{0:{fds:new Q.Array(Q.uint8,(x)=>x.parent.CharStrings.length)},3:{nRanges:Q.uint16,ranges:new Q.Array(ER,"nRanges"),sentinel:Q.uint16},4:{nRanges:Q.uint32,ranges:new Q.Array(JR,"nRanges"),sentinel:Q.uint32}}),q8=new Sx(N8);class w8{decode(x,d,b){return d.length=b[0],q8.decode(x,d,[b[1]])}size(x,d){return[N8.size(x,d,!1),q8.size(x,d)[0]]}encode(x,d,b){return[N8.size(d,b,!1),q8.encode(x,d,b)[0]]}}var C$=new t2([[18,"Private",new w8,null],[[12,38],"FontName","sid",null],[[12,7],"FontMatrix","array",[0.001,0,0,0.001,0,0]],[[12,5],"PaintType","number",0]]),VR=new t2([[[12,30],"ROS",["sid","sid","number"],null],[0,"version","sid",null],[1,"Notice","sid",null],[[12,0],"Copyright","sid",null],[2,"FullName","sid",null],[3,"FamilyName","sid",null],[4,"Weight","sid",null],[[12,1],"isFixedPitch","boolean",!1],[[12,2],"ItalicAngle","number",0],[[12,3],"UnderlinePosition","number",-100],[[12,4],"UnderlineThickness","number",50],[[12,5],"PaintType","number",0],[[12,6],"CharstringType","number",2],[[12,7],"FontMatrix","array",[0.001,0,0,0.001,0,0]],[13,"UniqueID","number",null],[5,"FontBBox","array",[0,0,0,0]],[[12,8],"StrokeWidth","number",0],[14,"XUID","array",null],[15,"charset",GR,A$],[16,"Encoding",QR,M$],[17,"CharStrings",new Sx(new mx),null],[18,"Private",new w8,null],[[12,20],"SyntheticBase","number",null],[[12,21],"PostScript","sid",null],[[12,22],"BaseFontName","sid",null],[[12,23],"BaseFontBlend","delta",null],[[12,31],"CIDFontVersion","number",0],[[12,32],"CIDFontRevision","number",0],[[12,33],"CIDFontType","number",0],[[12,34],"CIDCount","number",8720],[[12,35],"UIDBase","number",null],[[12,37],"FDSelect",new Sx(T$),null],[[12,36],"FDArray",new Sx(new mx(C$)),null],[[12,38],"FontName","sid",null]]),NR=new Q.Struct({length:Q.uint16,itemVariationStore:d3}),UR=new t2([[[12,7],"FontMatrix","array",[0.001,0,0,0.001,0,0]],[17,"CharStrings",new Sx(new mx),null],[[12,37],"FDSelect",new Sx(T$),null],[[12,36],"FDArray",new Sx(new mx(C$)),null],[24,"vstore",new Sx(NR),null],[25,"maxstack","number",193]]),KR=new Q.VersionedStruct(Q.fixed16,{1:{hdrSize:Q.uint8,offSize:Q.uint8,nameIndex:new mx(new Q.String("length")),topDictIndex:new mx(VR),stringIndex:new mx(new Q.String("length")),globalSubrIndex:new mx},2:{hdrSize:Q.uint8,length:Q.uint16,topDict:UR,globalSubrIndex:new mx}}),k$=KR;class P8{static decode(x){return new P8(x)}decode(){let x=this.stream.pos,d=k$.decode(this.stream);for(let b in d){let c=d[b];this[b]=c}if(this.version<2){if(this.topDictIndex.length!==1)throw new Error("Only a single font is allowed in CFF");this.topDict=this.topDictIndex[0]}return this.isCIDFont=this.topDict.ROS!=null,this}string(x){if(this.version>=2)return null;if(x<m4.length)return m4[x];return this.stringIndex[x-m4.length]}get postscriptName(){if(this.version<2)return this.nameIndex[0];return null}get fullName(){return this.string(this.topDict.FullName)}get familyName(){return this.string(this.topDict.FamilyName)}getCharString(x){return this.stream.pos=this.topDict.CharStrings[x].offset,this.stream.readBuffer(this.topDict.CharStrings[x].length)}getGlyphName(x){if(this.version>=2)return null;if(this.isCIDFont)return null;let{charset:d}=this.topDict;if(Array.isArray(d))return d[x];if(x===0)return".notdef";switch(x-=1,d.version){case 0:return this.string(d.glyphs[x]);case 1:case 2:for(let b=0;b<d.ranges.length;b++){let c=d.ranges[b];if(c.offset<=x&&x<=c.offset+c.nLeft)return this.string(c.first+(x-c.offset))}break}return null}fdForGlyph(x){if(!this.topDict.FDSelect)return null;switch(this.topDict.FDSelect.version){case 0:return this.topDict.FDSelect.fds[x];case 3:case 4:let{ranges:d}=this.topDict.FDSelect,b=0,c=d.length-1;while(b<=c){let q=b+c>>1;if(x<d[q].first)c=q-1;else if(q<c&&x>=d[q+1].first)b=q+1;else return d[q].fd}default:throw new Error(`Unknown FDSelect version: ${this.topDict.FDSelect.version}`)}}privateDictForGlyph(x){if(this.topDict.FDSelect){let d=this.fdForGlyph(x);if(this.topDict.FDArray[d])return this.topDict.FDArray[d].Private;return null}if(this.version<2)return this.topDict.Private;return this.topDict.FDArray[0].Private}constructor(x){this.stream=x,this.decode()}}var g$=P8,RR=new Q.Struct({glyphIndex:Q.uint16,vertOriginY:Q.int16}),XR=new Q.Struct({majorVersion:Q.uint16,minorVersion:Q.uint16,defaultVertOriginY:Q.int16,numVertOriginYMetrics:Q.uint16,metrics:new Q.Array(RR,"numVertOriginYMetrics")}),d2=new Q.Struct({height:Q.uint8,width:Q.uint8,horiBearingX:Q.int8,horiBearingY:Q.int8,horiAdvance:Q.uint8,vertBearingX:Q.int8,vertBearingY:Q.int8,vertAdvance:Q.uint8}),T4=new Q.Struct({height:Q.uint8,width:Q.uint8,bearingX:Q.int8,bearingY:Q.int8,advance:Q.uint8}),Cq=new Q.Struct({glyph:Q.uint16,xOffset:Q.int8,yOffset:Q.int8});class K8{}class u4{}var RB=new Q.VersionedStruct("version",{1:{metrics:T4,data:K8},2:{metrics:T4,data:u4},5:{data:u4},6:{metrics:d2,data:K8},7:{metrics:d2,data:u4},8:{metrics:T4,pad:new Q.Reserved(Q.uint8),numComponents:Q.uint16,components:new Q.Array(Cq,"numComponents")},9:{metrics:d2,pad:new Q.Reserved(Q.uint8),numComponents:Q.uint16,components:new Q.Array(Cq,"numComponents")},17:{metrics:T4,dataLen:Q.uint32,data:new Q.Buffer("dataLen")},18:{metrics:d2,dataLen:Q.uint32,data:new Q.Buffer("dataLen")},19:{dataLen:Q.uint32,data:new Q.Buffer("dataLen")}}),kq=new Q.Struct({ascender:Q.int8,descender:Q.int8,widthMax:Q.uint8,caretSlopeNumerator:Q.int8,caretSlopeDenominator:Q.int8,caretOffset:Q.int8,minOriginSB:Q.int8,minAdvanceSB:Q.int8,maxBeforeBL:Q.int8,minAfterBL:Q.int8,pad:new Q.Reserved(Q.int8,2)}),jR=new Q.Struct({glyphCode:Q.uint16,offset:Q.uint16}),OR=new Q.VersionedStruct(Q.uint16,{header:{imageFormat:Q.uint16,imageDataOffset:Q.uint32},1:{offsetArray:new Q.Array(Q.uint32,(x)=>x.parent.lastGlyphIndex-x.parent.firstGlyphIndex+1)},2:{imageSize:Q.uint32,bigMetrics:d2},3:{offsetArray:new Q.Array(Q.uint16,(x)=>x.parent.lastGlyphIndex-x.parent.firstGlyphIndex+1)},4:{numGlyphs:Q.uint32,glyphArray:new Q.Array(jR,(x)=>x.numGlyphs+1)},5:{imageSize:Q.uint32,bigMetrics:d2,numGlyphs:Q.uint32,glyphCodeArray:new Q.Array(Q.uint16,"numGlyphs")}}),HR=new Q.Struct({firstGlyphIndex:Q.uint16,lastGlyphIndex:Q.uint16,subtable:new Q.Pointer(Q.uint32,OR)}),WR=new Q.Struct({indexSubTableArray:new Q.Pointer(Q.uint32,new Q.Array(HR,1),{type:"parent"}),indexTablesSize:Q.uint32,numberOfIndexSubTables:Q.uint32,colorRef:Q.uint32,hori:kq,vert:kq,startGlyphIndex:Q.uint16,endGlyphIndex:Q.uint16,ppemX:Q.uint8,ppemY:Q.uint8,bitDepth:Q.uint8,flags:new Q.Bitfield(Q.uint8,["horizontal","vertical"])}),LR=new Q.Struct({version:Q.uint32,numSizes:Q.uint32,sizes:new Q.Array(WR,"numSizes")}),DR=new Q.Struct({ppem:Q.uint16,resolution:Q.uint16,imageOffsets:new Q.Array(new Q.Pointer(Q.uint32,"void"),(x)=>x.parent.parent.maxp.numGlyphs+1)}),eR=new Q.Struct({version:Q.uint16,flags:new Q.Bitfield(Q.uint16,["renderOutlines"]),numImgTables:Q.uint32,imageTables:new Q.Array(new Q.Pointer(Q.uint32,DR),"numImgTables")}),MR=new Q.Struct({gid:Q.uint16,paletteIndex:Q.uint16}),AR=new Q.Struct({gid:Q.uint16,firstLayerIndex:Q.uint16,numLayers:Q.uint16}),FR=new Q.Struct({version:Q.uint16,numBaseGlyphRecords:Q.uint16,baseGlyphRecord:new Q.Pointer(Q.uint32,new Q.Array(AR,"numBaseGlyphRecords")),layerRecords:new Q.Pointer(Q.uint32,new Q.Array(MR,"numLayerRecords"),{lazy:!0}),numLayerRecords:Q.uint16}),zR=new Q.Struct({blue:Q.uint8,green:Q.uint8,red:Q.uint8,alpha:Q.uint8}),BR=new Q.VersionedStruct(Q.uint16,{header:{numPaletteEntries:Q.uint16,numPalettes:Q.uint16,numColorRecords:Q.uint16,colorRecords:new Q.Pointer(Q.uint32,new Q.Array(zR,"numColorRecords")),colorRecordIndices:new Q.Array(Q.uint16,"numPalettes")},0:{},1:{offsetPaletteTypeArray:new Q.Pointer(Q.uint32,new Q.Array(Q.uint32,"numPalettes")),offsetPaletteLabelArray:new Q.Pointer(Q.uint32,new Q.Array(Q.uint16,"numPalettes")),offsetPaletteEntryLabelArray:new Q.Pointer(Q.uint32,new Q.Array(Q.uint16,"numPaletteEntries"))}}),n2=new Q.VersionedStruct(Q.uint16,{1:{coordinate:Q.int16},2:{coordinate:Q.int16,referenceGlyph:Q.uint16,baseCoordPoint:Q.uint16},3:{coordinate:Q.int16,deviceTable:new Q.Pointer(Q.uint16,g6)}}),wR=new Q.Struct({defaultIndex:Q.uint16,baseCoordCount:Q.uint16,baseCoords:new Q.Array(new Q.Pointer(Q.uint16,n2),"baseCoordCount")}),PR=new Q.Struct({tag:new Q.String(4),minCoord:new Q.Pointer(Q.uint16,n2,{type:"parent"}),maxCoord:new Q.Pointer(Q.uint16,n2,{type:"parent"})}),h$=new Q.Struct({minCoord:new Q.Pointer(Q.uint16,n2),maxCoord:new Q.Pointer(Q.uint16,n2),featMinMaxCount:Q.uint16,featMinMaxRecords:new Q.Array(PR,"featMinMaxCount")}),vR=new Q.Struct({tag:new Q.String(4),minMax:new Q.Pointer(Q.uint16,h$,{type:"parent"})}),IR=new Q.Struct({baseValues:new Q.Pointer(Q.uint16,wR),defaultMinMax:new Q.Pointer(Q.uint16,h$),baseLangSysCount:Q.uint16,baseLangSysRecords:new Q.Array(vR,"baseLangSysCount")}),SR=new Q.Struct({tag:new Q.String(4),script:new Q.Pointer(Q.uint16,IR,{type:"parent"})}),ZR=new Q.Array(SR,Q.uint16),TR=new Q.Array(new Q.String(4),Q.uint16),gq=new Q.Struct({baseTagList:new Q.Pointer(Q.uint16,TR),baseScriptList:new Q.Pointer(Q.uint16,ZR)}),CR=new Q.VersionedStruct(Q.uint32,{header:{horizAxis:new Q.Pointer(Q.uint16,gq),vertAxis:new Q.Pointer(Q.uint16,gq)},65536:{},65537:{itemVariationStore:new Q.Pointer(Q.uint32,d3)}}),kR=new Q.Array(Q.uint16,Q.uint16),gR=new Q.Struct({coverage:new Q.Pointer(Q.uint16,w0),glyphCount:Q.uint16,attachPoints:new Q.Array(new Q.Pointer(Q.uint16,kR),"glyphCount")}),hR=new Q.VersionedStruct(Q.uint16,{1:{coordinate:Q.int16},2:{caretValuePoint:Q.uint16},3:{coordinate:Q.int16,deviceTable:new Q.Pointer(Q.uint16,g6)}}),aR=new Q.Array(new Q.Pointer(Q.uint16,hR),Q.uint16),_R=new Q.Struct({coverage:new Q.Pointer(Q.uint16,w0),ligGlyphCount:Q.uint16,ligGlyphs:new Q.Array(new Q.Pointer(Q.uint16,aR),"ligGlyphCount")}),hq=new Q.Struct({markSetTableFormat:Q.uint16,markSetCount:Q.uint16,coverage:new Q.Array(new Q.Pointer(Q.uint32,w0),"markSetCount")}),mR=new Q.VersionedStruct(Q.uint32,{header:{glyphClassDef:new Q.Pointer(Q.uint16,h6),attachList:new Q.Pointer(Q.uint16,gR),ligCaretList:new Q.Pointer(Q.uint16,_R),markAttachClassDef:new Q.Pointer(Q.uint16,h6)},65536:{},65538:{markGlyphSetsDef:new Q.Pointer(Q.uint16,hq)},65539:{markGlyphSetsDef:new Q.Pointer(Q.uint16,hq),itemVariationStore:new Q.Pointer(Q.uint32,d3)}}),x2=new Q.Bitfield(Q.uint16,["xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","yPlaDevice","xAdvDevice","yAdvDevice"]),uR={xPlacement:Q.int16,yPlacement:Q.int16,xAdvance:Q.int16,yAdvance:Q.int16,xPlaDevice:new Q.Pointer(Q.uint16,g6,{type:"global",relativeTo:(x)=>x.rel}),yPlaDevice:new Q.Pointer(Q.uint16,g6,{type:"global",relativeTo:(x)=>x.rel}),xAdvDevice:new Q.Pointer(Q.uint16,g6,{type:"global",relativeTo:(x)=>x.rel}),yAdvDevice:new Q.Pointer(Q.uint16,g6,{type:"global",relativeTo:(x)=>x.rel})};class N7{buildStruct(x){let d=x;while(!d[this.key]&&d.parent)d=d.parent;if(!d[this.key])return;let b={};b.rel=()=>d._startOffset;let c=d[this.key];for(let q in c)if(c[q])b[q]=uR[q];return new Q.Struct(b)}size(x,d){return this.buildStruct(d).size(x,d)}decode(x,d){let b=this.buildStruct(d).decode(x,d);return delete b.rel,b}constructor(x="valueFormat"){this.key=x}}var yR=new Q.Struct({secondGlyph:Q.uint16,value1:new N7("valueFormat1"),value2:new N7("valueFormat2")}),pR=new Q.Array(yR,Q.uint16),lR=new Q.Struct({value1:new N7("valueFormat1"),value2:new N7("valueFormat2")}),i2=new Q.VersionedStruct(Q.uint16,{1:{xCoordinate:Q.int16,yCoordinate:Q.int16},2:{xCoordinate:Q.int16,yCoordinate:Q.int16,anchorPoint:Q.uint16},3:{xCoordinate:Q.int16,yCoordinate:Q.int16,xDeviceTable:new Q.Pointer(Q.uint16,g6),yDeviceTable:new Q.Pointer(Q.uint16,g6)}}),nR=new Q.Struct({entryAnchor:new Q.Pointer(Q.uint16,i2,{type:"parent"}),exitAnchor:new Q.Pointer(Q.uint16,i2,{type:"parent"})}),iR=new Q.Struct({class:Q.uint16,markAnchor:new Q.Pointer(Q.uint16,i2,{type:"parent"})}),$8=new Q.Array(iR,Q.uint16),rR=new Q.Array(new Q.Pointer(Q.uint16,i2),(x)=>x.parent.classCount),aq=new Q.Array(rR,Q.uint16),sR=new Q.Array(new Q.Pointer(Q.uint16,i2),(x)=>x.parent.parent.classCount),oR=new Q.Array(sR,Q.uint16),tR=new Q.Array(new Q.Pointer(Q.uint16,oR),Q.uint16),r2=new Q.VersionedStruct("lookupType",{1:new Q.VersionedStruct(Q.uint16,{1:{coverage:new Q.Pointer(Q.uint16,w0),valueFormat:x2,value:new N7},2:{coverage:new Q.Pointer(Q.uint16,w0),valueFormat:x2,valueCount:Q.uint16,values:new Q.LazyArray(new N7,"valueCount")}}),2:new Q.VersionedStruct(Q.uint16,{1:{coverage:new Q.Pointer(Q.uint16,w0),valueFormat1:x2,valueFormat2:x2,pairSetCount:Q.uint16,pairSets:new Q.LazyArray(new Q.Pointer(Q.uint16,pR),"pairSetCount")},2:{coverage:new Q.Pointer(Q.uint16,w0),valueFormat1:x2,valueFormat2:x2,classDef1:new Q.Pointer(Q.uint16,h6),classDef2:new Q.Pointer(Q.uint16,h6),class1Count:Q.uint16,class2Count:Q.uint16,classRecords:new Q.LazyArray(new Q.LazyArray(lR,"class2Count"),"class1Count")}}),3:{format:Q.uint16,coverage:new Q.Pointer(Q.uint16,w0),entryExitCount:Q.uint16,entryExitRecords:new Q.Array(nR,"entryExitCount")},4:{format:Q.uint16,markCoverage:new Q.Pointer(Q.uint16,w0),baseCoverage:new Q.Pointer(Q.uint16,w0),classCount:Q.uint16,markArray:new Q.Pointer(Q.uint16,$8),baseArray:new Q.Pointer(Q.uint16,aq)},5:{format:Q.uint16,markCoverage:new Q.Pointer(Q.uint16,w0),ligatureCoverage:new Q.Pointer(Q.uint16,w0),classCount:Q.uint16,markArray:new Q.Pointer(Q.uint16,$8),ligatureArray:new Q.Pointer(Q.uint16,tR)},6:{format:Q.uint16,mark1Coverage:new Q.Pointer(Q.uint16,w0),mark2Coverage:new Q.Pointer(Q.uint16,w0),classCount:Q.uint16,mark1Array:new Q.Pointer(Q.uint16,$8),mark2Array:new Q.Pointer(Q.uint16,aq)},7:P$,8:v$,9:{posFormat:Q.uint16,lookupType:Q.uint16,extension:new Q.Pointer(Q.uint32,null)}});r2.versions[9].extension.type=r2;var xX=new Q.VersionedStruct(Q.uint32,{header:{scriptList:new Q.Pointer(Q.uint16,z$),featureList:new Q.Pointer(Q.uint16,w$),lookupList:new Q.Pointer(Q.uint16,new n4(r2))},65536:{},65537:{featureVariations:new Q.Pointer(Q.uint32,I$)}}),a$=new Q.Array(Q.uint16,Q.uint16),fX=a$,dX=new Q.Struct({glyph:Q.uint16,compCount:Q.uint16,components:new Q.Array(Q.uint16,(x)=>x.compCount-1)}),bX=new Q.Array(new Q.Pointer(Q.uint16,dX),Q.uint16),R8=new Q.VersionedStruct("lookupType",{1:new Q.VersionedStruct(Q.uint16,{1:{coverage:new Q.Pointer(Q.uint16,w0),deltaGlyphID:Q.int16},2:{coverage:new Q.Pointer(Q.uint16,w0),glyphCount:Q.uint16,substitute:new Q.LazyArray(Q.uint16,"glyphCount")}}),2:{substFormat:Q.uint16,coverage:new Q.Pointer(Q.uint16,w0),count:Q.uint16,sequences:new Q.LazyArray(new Q.Pointer(Q.uint16,a$),"count")},3:{substFormat:Q.uint16,coverage:new Q.Pointer(Q.uint16,w0),count:Q.uint16,alternateSet:new Q.LazyArray(new Q.Pointer(Q.uint16,fX),"count")},4:{substFormat:Q.uint16,coverage:new Q.Pointer(Q.uint16,w0),count:Q.uint16,ligatureSets:new Q.LazyArray(new Q.Pointer(Q.uint16,bX),"count")},5:P$,6:v$,7:{substFormat:Q.uint16,lookupType:Q.uint16,extension:new Q.Pointer(Q.uint32,null)},8:{substFormat:Q.uint16,coverage:new Q.Pointer(Q.uint16,w0),backtrackCoverage:new Q.Array(new Q.Pointer(Q.uint16,w0),"backtrackGlyphCount"),lookaheadGlyphCount:Q.uint16,lookaheadCoverage:new Q.Array(new Q.Pointer(Q.uint16,w0),"lookaheadGlyphCount"),glyphCount:Q.uint16,substitutes:new Q.Array(Q.uint16,"glyphCount")}});R8.versions[7].extension.type=R8;var cX=new Q.VersionedStruct(Q.uint32,{header:{scriptList:new Q.Pointer(Q.uint16,z$),featureList:new Q.Pointer(Q.uint16,w$),lookupList:new Q.Pointer(Q.uint16,new n4(R8))},65536:{},65537:{featureVariations:new Q.Pointer(Q.uint32,I$)}}),T6=new Q.Array(Q.uint16,Q.uint16),qX=new Q.Struct({shrinkageEnableGSUB:new Q.Pointer(Q.uint16,T6),shrinkageDisableGSUB:new Q.Pointer(Q.uint16,T6),shrinkageEnableGPOS:new Q.Pointer(Q.uint16,T6),shrinkageDisableGPOS:new Q.Pointer(Q.uint16,T6),shrinkageJstfMax:new Q.Pointer(Q.uint16,new n4(r2)),extensionEnableGSUB:new Q.Pointer(Q.uint16,T6),extensionDisableGSUB:new Q.Pointer(Q.uint16,T6),extensionEnableGPOS:new Q.Pointer(Q.uint16,T6),extensionDisableGPOS:new Q.Pointer(Q.uint16,T6),extensionJstfMax:new Q.Pointer(Q.uint16,new n4(r2))}),_$=new Q.Array(new Q.Pointer(Q.uint16,qX),Q.uint16),$X=new Q.Struct({tag:new Q.String(4),jstfLangSys:new Q.Pointer(Q.uint16,_$)}),QX=new Q.Struct({extenderGlyphs:new Q.Pointer(Q.uint16,new Q.Array(Q.uint16,Q.uint16)),defaultLangSys:new Q.Pointer(Q.uint16,_$),langSysCount:Q.uint16,langSysRecords:new Q.Array($X,"langSysCount")}),YX=new Q.Struct({tag:new Q.String(4),script:new Q.Pointer(Q.uint16,QX,{type:"parent"})}),GX=new Q.Struct({version:Q.uint32,scriptCount:Q.uint16,scriptList:new Q.Array(YX,"scriptCount")});class m${decode(x,d){switch(this.size(0,d)){case 1:return x.readUInt8();case 2:return x.readUInt16BE();case 3:return x.readUInt24BE();case 4:return x.readUInt32BE()}}size(x,d){return Q.resolveLength(this._size,null,d)}constructor(x){this._size=x}}var EX=new Q.Struct({entry:new m$((x)=>((x.parent.entryFormat&48)>>4)+1),outerIndex:(x)=>x.entry>>(x.parent.entryFormat&15)+1,innerIndex:(x)=>x.entry&(1<<(x.parent.entryFormat&15)+1)-1}),Q8=new Q.Struct({entryFormat:Q.uint16,mapCount:Q.uint16,mapData:new Q.Array(EX,"mapCount")}),JX=new Q.Struct({majorVersion:Q.uint16,minorVersion:Q.uint16,itemVariationStore:new Q.Pointer(Q.uint32,d3),advanceWidthMapping:new Q.Pointer(Q.uint32,Q8),LSBMapping:new Q.Pointer(Q.uint32,Q8),RSBMapping:new Q.Pointer(Q.uint32,Q8)}),VX=new Q.Struct({format:Q.uint32,length:Q.uint32,offset:Q.uint32}),NX=new Q.Struct({reserved:new Q.Reserved(Q.uint16,2),cbSignature:Q.uint32,signature:new Q.Buffer("cbSignature")}),UX=new Q.Struct({ulVersion:Q.uint32,usNumSigs:Q.uint16,usFlag:Q.uint16,signatures:new Q.Array(VX,"usNumSigs"),signatureBlocks:new Q.Array(NX,"usNumSigs")}),KX=new Q.Struct({rangeMaxPPEM:Q.uint16,rangeGaspBehavior:new Q.Bitfield(Q.uint16,["grayscale","gridfit","symmetricSmoothing","symmetricGridfit"])}),RX=new Q.Struct({version:Q.uint16,numRanges:Q.uint16,gaspRanges:new Q.Array(KX,"numRanges")}),XX=new Q.Struct({pixelSize:Q.uint8,maximumWidth:Q.uint8,widths:new Q.Array(Q.uint8,(x)=>x.parent.parent.maxp.numGlyphs)}),jX=new Q.Struct({version:Q.uint16,numRecords:Q.int16,sizeDeviceRecord:Q.int32,records:new Q.Array(XX,"numRecords")}),OX=new Q.Struct({left:Q.uint16,right:Q.uint16,value:Q.int16}),_q=new Q.Struct({firstGlyph:Q.uint16,nGlyphs:Q.uint16,offsets:new Q.Array(Q.uint16,"nGlyphs"),max:(x)=>x.offsets.length&&Math.max.apply(Math,x.offsets)}),HX=new Q.Struct({off:(x)=>x._startOffset-x.parent.parent._startOffset,len:(x)=>((x.parent.leftTable.max-x.off)/x.parent.rowWidth+1)*(x.parent.rowWidth/2),values:new Q.LazyArray(Q.int16,"len")}),mq=new Q.VersionedStruct("format",{0:{nPairs:Q.uint16,searchRange:Q.uint16,entrySelector:Q.uint16,rangeShift:Q.uint16,pairs:new Q.Array(OX,"nPairs")},2:{rowWidth:Q.uint16,leftTable:new Q.Pointer(Q.uint16,_q,{type:"parent"}),rightTable:new Q.Pointer(Q.uint16,_q,{type:"parent"}),array:new Q.Pointer(Q.uint16,HX,{type:"parent"})},3:{glyphCount:Q.uint16,kernValueCount:Q.uint8,leftClassCount:Q.uint8,rightClassCount:Q.uint8,flags:Q.uint8,kernValue:new Q.Array(Q.int16,"kernValueCount"),leftClass:new Q.Array(Q.uint8,"glyphCount"),rightClass:new Q.Array(Q.uint8,"glyphCount"),kernIndex:new Q.Array(Q.uint8,(x)=>x.leftClassCount*x.rightClassCount)}}),uq=new Q.VersionedStruct("version",{0:{subVersion:Q.uint16,length:Q.uint16,format:Q.uint8,coverage:new Q.Bitfield(Q.uint8,["horizontal","minimum","crossStream","override"]),subtable:mq,padding:new Q.Reserved(Q.uint8,(x)=>x.length-x._currentOffset)},1:{length:Q.uint32,coverage:new Q.Bitfield(Q.uint8,[null,null,null,null,null,"variation","crossStream","vertical"]),format:Q.uint8,tupleIndex:Q.uint16,subtable:mq,padding:new Q.Reserved(Q.uint8,(x)=>x.length-x._currentOffset)}}),WX=new Q.VersionedStruct(Q.uint16,{0:{nTables:Q.uint16,tables:new Q.Array(uq,"nTables")},1:{reserved:new Q.Reserved(Q.uint16),nTables:Q.uint32,tables:new Q.Array(uq,"nTables")}}),LX=new Q.Struct({version:Q.uint16,numGlyphs:Q.uint16,yPels:new Q.Array(Q.uint8,"numGlyphs")}),DX=new Q.Struct({version:Q.uint16,fontNumber:Q.uint32,pitch:Q.uint16,xHeight:Q.uint16,style:Q.uint16,typeFamily:Q.uint16,capHeight:Q.uint16,symbolSet:Q.uint16,typeface:new Q.String(16),characterComplement:new Q.String(8),fileName:new Q.String(6),strokeWeight:new Q.String(1),widthType:new Q.String(1),serifStyle:Q.uint8,reserved:new Q.Reserved(Q.uint8)}),eX=new Q.Struct({bCharSet:Q.uint8,xRatio:Q.uint8,yStartRatio:Q.uint8,yEndRatio:Q.uint8}),MX=new Q.Struct({yPelHeight:Q.uint16,yMax:Q.int16,yMin:Q.int16}),AX=new Q.Struct({recs:Q.uint16,startsz:Q.uint8,endsz:Q.uint8,entries:new Q.Array(MX,"recs")}),FX=new Q.Struct({version:Q.uint16,numRecs:Q.uint16,numRatios:Q.uint16,ratioRanges:new Q.Array(eX,"numRatios"),offsets:new Q.Array(Q.uint16,"numRatios"),groups:new Q.Array(AX,"numRecs")}),zX=new Q.Struct({version:Q.uint16,ascent:Q.int16,descent:Q.int16,lineGap:Q.int16,advanceHeightMax:Q.int16,minTopSideBearing:Q.int16,minBottomSideBearing:Q.int16,yMaxExtent:Q.int16,caretSlopeRise:Q.int16,caretSlopeRun:Q.int16,caretOffset:Q.int16,reserved:new Q.Reserved(Q.int16,4),metricDataFormat:Q.int16,numberOfMetrics:Q.uint16}),BX=new Q.Struct({advance:Q.uint16,bearing:Q.int16}),wX=new Q.Struct({metrics:new Q.LazyArray(BX,(x)=>x.parent.vhea.numberOfMetrics),bearings:new Q.LazyArray(Q.int16,(x)=>x.parent.maxp.numGlyphs-x.parent.vhea.numberOfMetrics)}),yq=new Q.Fixed(16,"BE",14),PX=new Q.Struct({fromCoord:yq,toCoord:yq}),vX=new Q.Struct({pairCount:Q.uint16,correspondence:new Q.Array(PX,"pairCount")}),IX=new Q.Struct({version:Q.fixed32,axisCount:Q.uint32,segment:new Q.Array(vX,"axisCount")});class u${getItem(x){if(this._items[x]==null){let d=this.stream.pos;this.stream.pos=this.base+this.type.size(null,this.parent)*x,this._items[x]=this.type.decode(this.stream,this.parent),this.stream.pos=d}return this._items[x]}inspect(){return`[UnboundedArray ${this.type.constructor.name}]`}constructor(x,d,b){this.type=x,this.stream=d,this.parent=b,this.base=this.stream.pos,this._items=[]}}class ux extends Q.Array{decode(x,d){return new u$(this.type,x,d)}constructor(x){super(x,0)}}var _6=function(x=Q.uint16){class d{decode(Y,G){return G=G.parent.parent,this.type.decode(Y,G)}size(Y,G){return G=G.parent.parent,this.type.size(Y,G)}encode(Y,G,E){return E=E.parent.parent,this.type.encode(Y,G,E)}constructor(Y){this.type=Y}}x=new d(x);let b=new Q.Struct({unitSize:Q.uint16,nUnits:Q.uint16,searchRange:Q.uint16,entrySelector:Q.uint16,rangeShift:Q.uint16}),c=new Q.Struct({lastGlyph:Q.uint16,firstGlyph:Q.uint16,value:x}),q=new Q.Struct({lastGlyph:Q.uint16,firstGlyph:Q.uint16,values:new Q.Pointer(Q.uint16,new Q.Array(x,(Y)=>Y.lastGlyph-Y.firstGlyph+1),{type:"parent"})}),$=new Q.Struct({glyph:Q.uint16,value:x});return new Q.VersionedStruct(Q.uint16,{0:{values:new ux(x)},2:{binarySearchHeader:b,segments:new Q.Array(c,(Y)=>Y.binarySearchHeader.nUnits)},4:{binarySearchHeader:b,segments:new Q.Array(q,(Y)=>Y.binarySearchHeader.nUnits)},6:{binarySearchHeader:b,segments:new Q.Array($,(Y)=>Y.binarySearchHeader.nUnits)},8:{firstGlyph:Q.uint16,count:Q.uint16,values:new Q.Array(x,"count")}})};function C4(x={},d=Q.uint16){let b=Object.assign({newState:Q.uint16,flags:Q.uint16},x),c=new Q.Struct(b),q=new ux(new Q.Array(Q.uint16,(Y)=>Y.nClasses));return new Q.Struct({nClasses:Q.uint32,classTable:new Q.Pointer(Q.uint32,new _6(d)),stateArray:new Q.Pointer(Q.uint32,q),entryTable:new Q.Pointer(Q.uint32,new ux(c))})}function SX(x={},d=Q.uint16){let b=new Q.Struct({version(){return 8},firstGlyph:Q.uint16,values:new Q.Array(Q.uint8,Q.uint16)}),c=Object.assign({newStateOffset:Q.uint16,newState:(G)=>(G.newStateOffset-(G.parent.stateArray.base-G.parent._startOffset))/G.parent.nClasses,flags:Q.uint16},x),q=new Q.Struct(c),$=new ux(new Q.Array(Q.uint8,(G)=>G.nClasses));return new Q.Struct({nClasses:Q.uint16,classTable:new Q.Pointer(Q.uint16,b),stateArray:new Q.Pointer(Q.uint16,$),entryTable:new Q.Pointer(Q.uint16,new ux(q))})}var ZX=new Q.VersionedStruct("format",{0:{deltas:new Q.Array(Q.int16,32)},1:{deltas:new Q.Array(Q.int16,32),mappingData:new _6(Q.uint16)},2:{standardGlyph:Q.uint16,controlPoints:new Q.Array(Q.uint16,32)},3:{standardGlyph:Q.uint16,controlPoints:new Q.Array(Q.uint16,32),mappingData:new _6(Q.uint16)}}),TX=new Q.Struct({version:Q.fixed32,format:Q.uint16,defaultBaseline:Q.uint16,subtable:ZX}),CX=new Q.Struct({setting:Q.uint16,nameIndex:Q.int16,name:(x)=>x.parent.parent.parent.name.records.fontFeatures[x.nameIndex]}),kX=new Q.Struct({feature:Q.uint16,nSettings:Q.uint16,settingTable:new Q.Pointer(Q.uint32,new Q.Array(CX,"nSettings"),{type:"parent"}),featureFlags:new Q.Bitfield(Q.uint8,[null,null,null,null,null,null,"hasDefault","exclusive"]),defaultSetting:Q.uint8,nameIndex:Q.int16,name:(x)=>x.parent.parent.name.records.fontFeatures[x.nameIndex]}),gX=new Q.Struct({version:Q.fixed32,featureNameCount:Q.uint16,reserved1:new Q.Reserved(Q.uint16),reserved2:new Q.Reserved(Q.uint32),featureNames:new Q.Array(kX,"featureNameCount")}),hX=new Q.Struct({axisTag:new Q.String(4),minValue:Q.fixed32,defaultValue:Q.fixed32,maxValue:Q.fixed32,flags:Q.uint16,nameID:Q.uint16,name:(x)=>x.parent.parent.name.records.fontFeatures[x.nameID]}),aX=new Q.Struct({nameID:Q.uint16,name:(x)=>x.parent.parent.name.records.fontFeatures[x.nameID],flags:Q.uint16,coord:new Q.Array(Q.fixed32,(x)=>x.parent.axisCount),postscriptNameID:new Q.Optional(Q.uint16,(x)=>x.parent.instanceSize-x._currentOffset>0)}),_X=new Q.Struct({version:Q.fixed32,offsetToData:Q.uint16,countSizePairs:Q.uint16,axisCount:Q.uint16,axisSize:Q.uint16,instanceCount:Q.uint16,instanceSize:Q.uint16,axis:new Q.Array(hX,"axisCount"),instance:new Q.Array(aX,"instanceCount")}),mX=new Q.Fixed(16,"BE",14);class y${static decode(x,d){return d.flags?x.readUInt32BE():x.readUInt16BE()*2}}var uX=new Q.Struct({version:Q.uint16,reserved:new Q.Reserved(Q.uint16),axisCount:Q.uint16,globalCoordCount:Q.uint16,globalCoords:new Q.Pointer(Q.uint32,new Q.Array(new Q.Array(mX,"axisCount"),"globalCoordCount")),glyphCount:Q.uint16,flags:Q.uint16,offsetToData:Q.uint32,offsets:new Q.Array(new Q.Pointer(y$,"void",{relativeTo:(x)=>x.offsetToData,allowNull:!1}),(x)=>x.glyphCount+1)}),yX=uX,pX=new Q.Struct({length:Q.uint16,coverage:Q.uint16,subFeatureFlags:Q.uint32,stateTable:new SX}),lX=new Q.Struct({justClass:Q.uint32,beforeGrowLimit:Q.fixed32,beforeShrinkLimit:Q.fixed32,afterGrowLimit:Q.fixed32,afterShrinkLimit:Q.fixed32,growFlags:Q.uint16,shrinkFlags:Q.uint16}),nX=new Q.Array(lX,Q.uint32),iX=new Q.VersionedStruct("actionType",{0:{lowerLimit:Q.fixed32,upperLimit:Q.fixed32,order:Q.uint16,glyphs:new Q.Array(Q.uint16,Q.uint16)},1:{addGlyph:Q.uint16},2:{substThreshold:Q.fixed32,addGlyph:Q.uint16,substGlyph:Q.uint16},3:{},4:{variationAxis:Q.uint32,minimumLimit:Q.fixed32,noStretchValue:Q.fixed32,maximumLimit:Q.fixed32},5:{flags:Q.uint16,glyph:Q.uint16}}),rX=new Q.Struct({actionClass:Q.uint16,actionType:Q.uint16,actionLength:Q.uint32,actionData:iX,padding:new Q.Reserved(Q.uint8,(x)=>x.actionLength-x._currentOffset)}),sX=new Q.Array(rX,Q.uint32),oX=new Q.Struct({lookupTable:new _6(new Q.Pointer(Q.uint16,sX))}),pq=new Q.Struct({classTable:new Q.Pointer(Q.uint16,pX,{type:"parent"}),wdcOffset:Q.uint16,postCompensationTable:new Q.Pointer(Q.uint16,oX,{type:"parent"}),widthDeltaClusters:new _6(new Q.Pointer(Q.uint16,nX,{type:"parent",relativeTo:(x)=>x.wdcOffset}))}),tX=new Q.Struct({version:Q.uint32,format:Q.uint16,horizontal:new Q.Pointer(Q.uint16,pq),vertical:new Q.Pointer(Q.uint16,pq)}),xj={action:Q.uint16},fj={markIndex:Q.uint16,currentIndex:Q.uint16},dj={currentInsertIndex:Q.uint16,markedInsertIndex:Q.uint16},bj=new Q.Struct({items:new ux(new Q.Pointer(Q.uint32,new _6))}),cj=new Q.VersionedStruct("type",{0:{stateTable:new C4},1:{stateTable:new C4(fj),substitutionTable:new Q.Pointer(Q.uint32,bj)},2:{stateTable:new C4(xj),ligatureActions:new Q.Pointer(Q.uint32,new ux(Q.uint32)),components:new Q.Pointer(Q.uint32,new ux(Q.uint16)),ligatureList:new Q.Pointer(Q.uint32,new ux(Q.uint16))},4:{lookupTable:new _6},5:{stateTable:new C4(dj),insertionActions:new Q.Pointer(Q.uint32,new ux(Q.uint16))}}),qj=new Q.Struct({length:Q.uint32,coverage:Q.uint24,type:Q.uint8,subFeatureFlags:Q.uint32,table:cj,padding:new Q.Reserved(Q.uint8,(x)=>x.length-x._currentOffset)}),$j=new Q.Struct({featureType:Q.uint16,featureSetting:Q.uint16,enableFlags:Q.uint32,disableFlags:Q.uint32}),Qj=new Q.Struct({defaultFlags:Q.uint32,chainLength:Q.uint32,nFeatureEntries:Q.uint32,nSubtables:Q.uint32,features:new Q.Array($j,"nFeatureEntries"),subtables:new Q.Array(qj,"nSubtables")}),Yj=new Q.Struct({version:Q.uint16,unused:new Q.Reserved(Q.uint16),nChains:Q.uint32,chains:new Q.Array(Qj,"nChains")}),Gj=new Q.Struct({left:Q.int16,top:Q.int16,right:Q.int16,bottom:Q.int16}),Ej=new Q.Struct({version:Q.fixed32,format:Q.uint16,lookupTable:new _6(Gj)}),$0={},i4=$0;$0.cmap=UK;$0.head=KK;$0.hhea=RK;$0.hmtx=jK;$0.maxp=OK;$0.name=AK;$0["OS/2"]=FK;$0.post=zK;$0.fpgm=wK;$0.loca=PK;$0.prep=vK;$0["cvt "]=BK;$0.glyf=IK;$0["CFF "]=g$;$0.CFF2=g$;$0.VORG=XR;$0.EBLC=LR;$0.CBLC=$0.EBLC;$0.sbix=eR;$0.COLR=FR;$0.CPAL=BR;$0.BASE=CR;$0.GDEF=mR;$0.GPOS=xX;$0.GSUB=cX;$0.JSTF=GX;$0.HVAR=JX;$0.DSIG=UX;$0.gasp=RX;$0.hdmx=jX;$0.kern=WX;$0.LTSH=LX;$0.PCLT=DX;$0.VDMX=FX;$0.vhea=zX;$0.vmtx=wX;$0.avar=IX;$0.bsln=TX;$0.feat=gX;$0.fvar=_X;$0.gvar=yX;$0.just=tX;$0.morx=Yj;$0.opbd=Ej;var Jj=new Q.Struct({tag:new Q.String(4),checkSum:Q.uint32,offset:new Q.Pointer(Q.uint32,"void",{type:"global"}),length:Q.uint32}),v8=new Q.Struct({tag:new Q.String(4),numTables:Q.uint16,searchRange:Q.uint16,entrySelector:Q.uint16,rangeShift:Q.uint16,tables:new Q.Array(Jj,"numTables")});v8.process=function(){let x={};for(let d of this.tables)x[d.tag]=d;this.tables=x};v8.preEncode=function(){if(!Array.isArray(this.tables)){let b=[];for(let c in this.tables){let q=this.tables[c];if(q)b.push({tag:c,checkSum:0,offset:new Q.VoidPointer(i4[c],q),length:i4[c].size(q)})}this.tables=b}this.tag="true",this.numTables=this.tables.length;let x=Math.floor(Math.log(this.numTables)/Math.LN2),d=Math.pow(2,x);this.searchRange=d*16,this.entrySelector=Math.log(d)/Math.LN2,this.rangeShift=this.numTables*16-this.searchRange};var p$=v8;function y4(x,d){let b=0,c=x.length-1;while(b<=c){let q=b+c>>1,$=d(x[q]);if($<0)c=q-1;else if($>0)b=q+1;else return q}return-1}function f2(x,d){let b=[];while(x<d)b.push(x++);return b}var b3=new TextDecoder("ascii"),lq="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",m2=new Uint8Array(256);for(let x=0;x<lq.length;x++)m2[lq.charCodeAt(x)]=x;function I8(x){let d=x.length*0.75;if(x[x.length-1]==="="){if(d--,x[x.length-2]==="=")d--}let b=new Uint8Array(d),c=0;for(let q=0,$=x.length;q<$;q+=4){let Y=m2[x.charCodeAt(q)],G=m2[x.charCodeAt(q+1)],E=m2[x.charCodeAt(q+2)],J=m2[x.charCodeAt(q+3)];b[c++]=Y<<2|G>>4,b[c++]=(G&15)<<4|E>>2,b[c++]=(E&3)<<6|J&63}return b}class c3{findSubtable(x,d){for(let[b,c]of d)for(let q of x.tables)if(q.platformID===b&&q.encodingID===c)return q.table;return null}lookup(x,d){if(this.encoding)x=this.encoding.get(x)||x;else if(d){let c=this.getVariationSelector(x,d);if(c)return c}let b=this.cmap;switch(b.version){case 0:return b.codeMap.get(x)||0;case 4:{let c=0,q=b.segCount-1;while(c<=q){let $=c+q>>1;if(x<b.startCode.get($))q=$-1;else if(x>b.endCode.get($))c=$+1;else{let Y=b.idRangeOffset.get($),G;if(Y===0)G=x+b.idDelta.get($);else{let E=Y/2+(x-b.startCode.get($))-(b.segCount-$);if(G=b.glyphIndexArray.get(E)||0,G!==0)G+=b.idDelta.get($)}return G&65535}}return 0}case 8:throw new Error("TODO: cmap format 8");case 6:case 10:return b.glyphIndices.get(x-b.firstCode)||0;case 12:case 13:{let c=0,q=b.nGroups-1;while(c<=q){let $=c+q>>1,Y=b.groups.get($);if(x<Y.startCharCode)q=$-1;else if(x>Y.endCharCode)c=$+1;else if(b.version===12)return Y.glyphID+(x-Y.startCharCode);else return Y.glyphID}return 0}case 14:throw new Error("TODO: cmap format 14");default:throw new Error(`Unknown cmap format ${b.version}`)}}getVariationSelector(x,d){if(!this.uvs)return 0;let b=this.uvs.varSelectors.toArray(),c=y4(b,($)=>d-$.varSelector),q=b[c];if(c!==-1&&q.defaultUVS)c=y4(q.defaultUVS,($)=>x<$.startUnicodeValue?-1:x>$.startUnicodeValue+$.additionalCount?1:0);if(c!==-1&&q.nonDefaultUVS){if(c=y4(q.nonDefaultUVS,($)=>x-$.unicodeValue),c!==-1)return q.nonDefaultUVS[c].glyphID}return 0}getCharacterSet(){let x=this.cmap;switch(x.version){case 0:return f2(0,x.codeMap.length);case 4:{let d=[],b=x.endCode.toArray();for(let c=0;c<b.length;c++){let q=b[c]+1,$=x.startCode.get(c);d.push(...f2($,q))}return d}case 8:throw new Error("TODO: cmap format 8");case 6:case 10:return f2(x.firstCode,x.firstCode+x.glyphIndices.length);case 12:case 13:{let d=[];for(let b of x.groups.toArray())d.push(...f2(b.startCharCode,b.endCharCode+1));return d}case 14:throw new Error("TODO: cmap format 14");default:throw new Error(`Unknown cmap format ${x.version}`)}}codePointsForGlyph(x){let d=this.cmap;switch(d.version){case 0:{let c=[];for(let q=0;q<256;q++)if(d.codeMap.get(q)===x)c.push(q);return c}case 4:{let c=[];for(let q=0;q<d.segCount;q++){let $=d.endCode.get(q),Y=d.startCode.get(q),G=d.idRangeOffset.get(q),E=d.idDelta.get(q);for(var b=Y;b<=$;b++){let J=0;if(G===0)J=b+E;else{let V=G/2+(b-Y)-(d.segCount-q);if(J=d.glyphIndexArray.get(V)||0,J!==0)J+=E}if(J===x)c.push(b)}}return c}case 12:{let c=[];for(let q of d.groups.toArray())if(x>=q.glyphID&&x<=q.glyphID+(q.endCharCode-q.startCharCode))c.push(q.startCharCode+(x-q.glyphID));return c}case 13:{let c=[];for(let q of d.groups.toArray())if(x===q.glyphID)c.push(...f2(q.startCharCode,q.endCharCode+1));return c}default:throw new Error(`Unknown cmap format ${d.version}`)}}constructor(x){if(this.encoding=null,this.cmap=this.findSubtable(x,[[3,10],[0,6],[0,4],[3,1],[0,3],[0,2],[0,1],[0,0]]),!this.cmap)for(let d of x.tables){let b=L$(d.platformID,d.encodingID,d.table.language-1),c=LK(b);if(c)this.cmap=d.table,this.encoding=c}if(!this.cmap)throw new Error("Could not find a supported cmap table");if(this.uvs=this.findSubtable(x,[[0,5]]),this.uvs&&this.uvs.version!==14)this.uvs=null}}fx._([dx],c3.prototype,"getCharacterSet",null);fx._([dx],c3.prototype,"codePointsForGlyph",null);class l${process(x,d){for(let b=0;b<x.length-1;b++){let c=x[b].id,q=x[b+1].id;d[b].xAdvance+=this.getKerning(c,q)}}getKerning(x,d){let b=0;for(let c of this.kern.tables){if(c.coverage.crossStream)continue;switch(c.version){case 0:if(!c.coverage.horizontal)continue;break;case 1:if(c.coverage.vertical||c.coverage.variation)continue;break;default:throw new Error(`Unsupported kerning table version ${c.version}`)}let q=0,$=c.subtable;switch(c.format){case 0:let Y=y4($.pairs,function(V){return x-V.left||d-V.right});if(Y>=0)q=$.pairs[Y].value;break;case 2:let G=0,E=0;if(x>=$.leftTable.firstGlyph&&x<$.leftTable.firstGlyph+$.leftTable.nGlyphs)G=$.leftTable.offsets[x-$.leftTable.firstGlyph];else G=$.array.off;if(d>=$.rightTable.firstGlyph&&d<$.rightTable.firstGlyph+$.rightTable.nGlyphs)E=$.rightTable.offsets[d-$.rightTable.firstGlyph];let J=(G+E-$.array.off)/2;q=$.array.values.get(J);break;case 3:if(x>=$.glyphCount||d>=$.glyphCount)return 0;q=$.kernValue[$.kernIndex[$.leftClass[x]*$.rightClassCount+$.rightClass[d]]];break;default:throw new Error(`Unsupported kerning sub-table format ${c.format}`)}if(c.coverage.override)b=q;else b+=q}return b}constructor(x){this.kern=x.kern}}class n${positionGlyphs(x,d){let b=0,c=0;for(let q=0;q<x.length;q++)if(x[q].isMark)c=q;else{if(b!==c)this.positionCluster(x,d,b,c);b=c=q}if(b!==c)this.positionCluster(x,d,b,c);return d}positionCluster(x,d,b,c){let q=x[b],$=q.cbox.copy();if(q.codePoints.length>1)$.minX+=(q.codePoints.length-1)*$.width/q.codePoints.length;let Y=-d[b].xAdvance,G=0,E=this.font.unitsPerEm/16;for(let J=b+1;J<=c;J++){let V=x[J],N=V.cbox,U=d[J],K=this.getCombiningClass(V.codePoints[0]);if(K!=="Not_Reordered"){switch(U.xOffset=U.yOffset=0,K){case"Double_Above":case"Double_Below":U.xOffset+=$.minX-N.width/2-N.minX;break;case"Attached_Below_Left":case"Below_Left":case"Above_Left":U.xOffset+=$.minX-N.minX;break;case"Attached_Above_Right":case"Below_Right":case"Above_Right":U.xOffset+=$.maxX-N.width-N.minX;break;default:U.xOffset+=$.minX+($.width-N.width)/2-N.minX}switch(K){case"Double_Below":case"Below_Left":case"Below":case"Below_Right":case"Attached_Below_Left":case"Attached_Below":if(K==="Attached_Below_Left"||K==="Attached_Below")$.minY+=E;U.yOffset=-$.minY-N.maxY,$.minY+=N.height;break;case"Double_Above":case"Above_Left":case"Above":case"Above_Right":case"Attached_Above":case"Attached_Above_Right":if(K==="Attached_Above"||K==="Attached_Above_Right")$.maxY+=E;U.yOffset=$.maxY-N.minY,$.maxY+=N.height;break}U.xAdvance=U.yAdvance=0,U.xOffset+=Y,U.yOffset+=G}else Y-=U.xAdvance,G-=U.yAdvance}return}getCombiningClass(x){let d=X6.getCombiningClass(x);if((x&-256)===3584){if(d==="Not_Reordered")switch(x){case 3633:case 3636:case 3637:case 3638:case 3639:case 3655:case 3660:case 3645:case 3662:return"Above_Right";case 3761:case 3764:case 3765:case 3766:case 3767:case 3771:case 3788:case 3789:return"Above";case 3772:return"Below"}else if(x===3642)return"Below_Right"}switch(d){case"CCC10":case"CCC11":case"CCC12":case"CCC13":case"CCC14":case"CCC15":case"CCC16":case"CCC17":case"CCC18":case"CCC20":case"CCC22":return"Below";case"CCC23":return"Attached_Above";case"CCC24":return"Above_Right";case"CCC25":case"CCC19":return"Above_Left";case"CCC26":return"Above";case"CCC21":break;case"CCC27":case"CCC28":case"CCC30":case"CCC31":case"CCC33":case"CCC34":case"CCC35":case"CCC36":return"Above";case"CCC29":case"CCC32":return"Below";case"CCC103":return"Below_Right";case"CCC107":return"Above_Right";case"CCC118":return"Below";case"CCC122":return"Above";case"CCC129":case"CCC132":return"Below";case"CCC130":return"Above"}return d}constructor(x){this.font=x}}class m6{get width(){return this.maxX-this.minX}get height(){return this.maxY-this.minY}addPoint(x,d){if(Math.abs(x)!==1/0){if(x<this.minX)this.minX=x;if(x>this.maxX)this.maxX=x}if(Math.abs(d)!==1/0){if(d<this.minY)this.minY=d;if(d>this.maxY)this.maxY=d}}copy(){return new m6(this.minX,this.minY,this.maxX,this.maxY)}constructor(x=1/0,d=1/0,b=-1/0,c=-1/0){this.minX=x,this.minY=d,this.maxX=b,this.maxY=c}}var c2={Caucasian_Albanian:"aghb",Arabic:"arab",Imperial_Aramaic:"armi",Armenian:"armn",Avestan:"avst",Balinese:"bali",Bamum:"bamu",Bassa_Vah:"bass",Batak:"batk",Bengali:["bng2","beng"],Bopomofo:"bopo",Brahmi:"brah",Braille:"brai",Buginese:"bugi",Buhid:"buhd",Chakma:"cakm",Canadian_Aboriginal:"cans",Carian:"cari",Cham:"cham",Cherokee:"cher",Coptic:"copt",Cypriot:"cprt",Cyrillic:"cyrl",Devanagari:["dev2","deva"],Deseret:"dsrt",Duployan:"dupl",Egyptian_Hieroglyphs:"egyp",Elbasan:"elba",Ethiopic:"ethi",Georgian:"geor",Glagolitic:"glag",Gothic:"goth",Grantha:"gran",Greek:"grek",Gujarati:["gjr2","gujr"],Gurmukhi:["gur2","guru"],Hangul:"hang",Han:"hani",Hanunoo:"hano",Hebrew:"hebr",Hiragana:"hira",Pahawh_Hmong:"hmng",Katakana_Or_Hiragana:"hrkt",Old_Italic:"ital",Javanese:"java",Kayah_Li:"kali",Katakana:"kana",Kharoshthi:"khar",Khmer:"khmr",Khojki:"khoj",Kannada:["knd2","knda"],Kaithi:"kthi",Tai_Tham:"lana",Lao:"lao ",Latin:"latn",Lepcha:"lepc",Limbu:"limb",Linear_A:"lina",Linear_B:"linb",Lisu:"lisu",Lycian:"lyci",Lydian:"lydi",Mahajani:"mahj",Mandaic:"mand",Manichaean:"mani",Mende_Kikakui:"mend",Meroitic_Cursive:"merc",Meroitic_Hieroglyphs:"mero",Malayalam:["mlm2","mlym"],Modi:"modi",Mongolian:"mong",Mro:"mroo",Meetei_Mayek:"mtei",Myanmar:["mym2","mymr"],Old_North_Arabian:"narb",Nabataean:"nbat",Nko:"nko ",Ogham:"ogam",Ol_Chiki:"olck",Old_Turkic:"orkh",Oriya:["ory2","orya"],Osmanya:"osma",Palmyrene:"palm",Pau_Cin_Hau:"pauc",Old_Permic:"perm",Phags_Pa:"phag",Inscriptional_Pahlavi:"phli",Psalter_Pahlavi:"phlp",Phoenician:"phnx",Miao:"plrd",Inscriptional_Parthian:"prti",Rejang:"rjng",Runic:"runr",Samaritan:"samr",Old_South_Arabian:"sarb",Saurashtra:"saur",Shavian:"shaw",Sharada:"shrd",Siddham:"sidd",Khudawadi:"sind",Sinhala:"sinh",Sora_Sompeng:"sora",Sundanese:"sund",Syloti_Nagri:"sylo",Syriac:"syrc",Tagbanwa:"tagb",Takri:"takr",Tai_Le:"tale",New_Tai_Lue:"talu",Tamil:["tml2","taml"],Tai_Viet:"tavt",Telugu:["tel2","telu"],Tifinagh:"tfng",Tagalog:"tglg",Thaana:"thaa",Thai:"thai",Tibetan:"tibt",Tirhuta:"tirh",Ugaritic:"ugar",Vai:"vai ",Warang_Citi:"wara",Old_Persian:"xpeo",Cuneiform:"xsux",Yi:"yi  ",Inherited:"zinh",Common:"zyyy",Unknown:"zzzz"},X8={};for(let x in c2){let d=c2[x];if(Array.isArray(d))for(let b of d)X8[b]=x;else X8[d]=x}function Vj(x){return X8[x]}function Nj(x){let d=x.length,b=0;while(b<d){let c=x.charCodeAt(b++);if(55296<=c&&c<=56319&&b<d){let $=x.charCodeAt(b);if(56320<=$&&$<=57343)b++,c=((c&1023)<<10)+($&1023)+65536}let q=X6.getScript(c);if(q!=="Common"&&q!=="Inherited"&&q!=="Unknown")return c2[q]}return c2.Unknown}function Uj(x){for(let d=0;d<x.length;d++){let b=x[d],c=X6.getScript(b);if(c!=="Common"&&c!=="Inherited"&&c!=="Unknown")return c2[c]}return c2.Unknown}var Kj={arab:!0,hebr:!0,syrc:!0,thaa:!0,cprt:!0,khar:!0,phnx:!0,"nko ":!0,lydi:!0,avst:!0,armi:!0,phli:!0,prti:!0,sarb:!0,orkh:!0,samr:!0,mand:!0,merc:!0,mero:!0,mani:!0,mend:!0,nbat:!0,narb:!0,palm:!0,phlp:!0};function i$(x){if(Kj[x])return"rtl";return"ltr"}class r${get advanceWidth(){let x=0;for(let d of this.positions)x+=d.xAdvance;return x}get advanceHeight(){let x=0;for(let d of this.positions)x+=d.yAdvance;return x}get bbox(){let x=new m6,d=0,b=0;for(let c=0;c<this.glyphs.length;c++){let q=this.glyphs[c],$=this.positions[c],Y=q.bbox;x.addPoint(Y.minX+d+$.xOffset,Y.minY+b+$.yOffset),x.addPoint(Y.maxX+d+$.xOffset,Y.maxY+b+$.yOffset),d+=$.xAdvance,b+=$.yAdvance}return x}constructor(x,d,b,c,q){if(this.glyphs=x,this.positions=null,this.script=b,this.language=c||null,this.direction=q||i$(b),this.features={},Array.isArray(d))for(let $ of d)this.features[$]=!0;else if(typeof d==="object")this.features=d}}class s${constructor(x=0,d=0,b=0,c=0){this.xAdvance=x,this.yAdvance=d,this.xOffset=b,this.yOffset=c}}var J7={allTypographicFeatures:{code:0,exclusive:!1,allTypeFeatures:0},ligatures:{code:1,exclusive:!1,requiredLigatures:0,commonLigatures:2,rareLigatures:4,rebusPictures:8,diphthongLigatures:10,squaredLigatures:12,abbrevSquaredLigatures:14,symbolLigatures:16,contextualLigatures:18,historicalLigatures:20},cursiveConnection:{code:2,exclusive:!0,unconnected:0,partiallyConnected:1,cursive:2},letterCase:{code:3,exclusive:!0},verticalSubstitution:{code:4,exclusive:!1,substituteVerticalForms:0},linguisticRearrangement:{code:5,exclusive:!1,linguisticRearrangement:0},numberSpacing:{code:6,exclusive:!0,monospacedNumbers:0,proportionalNumbers:1,thirdWidthNumbers:2,quarterWidthNumbers:3},smartSwash:{code:8,exclusive:!1,wordInitialSwashes:0,wordFinalSwashes:2,nonFinalSwashes:8},diacritics:{code:9,exclusive:!0,showDiacritics:0,hideDiacritics:1,decomposeDiacritics:2},verticalPosition:{code:10,exclusive:!0,normalPosition:0,superiors:1,inferiors:2,ordinals:3,scientificInferiors:4},fractions:{code:11,exclusive:!0,noFractions:0,verticalFractions:1,diagonalFractions:2},overlappingCharacters:{code:13,exclusive:!1,preventOverlap:0},typographicExtras:{code:14,exclusive:!1,slashedZero:4},mathematicalExtras:{code:15,exclusive:!1,mathematicalGreek:10},ornamentSets:{code:16,exclusive:!0,noOrnaments:0,dingbats:1,piCharacters:2,fleurons:3,decorativeBorders:4,internationalSymbols:5,mathSymbols:6},characterAlternatives:{code:17,exclusive:!0,noAlternates:0},designComplexity:{code:18,exclusive:!0,designLevel1:0,designLevel2:1,designLevel3:2,designLevel4:3,designLevel5:4},styleOptions:{code:19,exclusive:!0,noStyleOptions:0,displayText:1,engravedText:2,illuminatedCaps:3,titlingCaps:4,tallCaps:5},characterShape:{code:20,exclusive:!0,traditionalCharacters:0,simplifiedCharacters:1,JIS1978Characters:2,JIS1983Characters:3,JIS1990Characters:4,traditionalAltOne:5,traditionalAltTwo:6,traditionalAltThree:7,traditionalAltFour:8,traditionalAltFive:9,expertCharacters:10,JIS2004Characters:11,hojoCharacters:12,NLCCharacters:13,traditionalNamesCharacters:14},numberCase:{code:21,exclusive:!0,lowerCaseNumbers:0,upperCaseNumbers:1},textSpacing:{code:22,exclusive:!0,proportionalText:0,monospacedText:1,halfWidthText:2,thirdWidthText:3,quarterWidthText:4,altProportionalText:5,altHalfWidthText:6},transliteration:{code:23,exclusive:!0,noTransliteration:0},annotation:{code:24,exclusive:!0,noAnnotation:0,boxAnnotation:1,roundedBoxAnnotation:2,circleAnnotation:3,invertedCircleAnnotation:4,parenthesisAnnotation:5,periodAnnotation:6,romanNumeralAnnotation:7,diamondAnnotation:8,invertedBoxAnnotation:9,invertedRoundedBoxAnnotation:10},kanaSpacing:{code:25,exclusive:!0,fullWidthKana:0,proportionalKana:1},ideographicSpacing:{code:26,exclusive:!0,fullWidthIdeographs:0,proportionalIdeographs:1,halfWidthIdeographs:2},unicodeDecomposition:{code:27,exclusive:!1,canonicalComposition:0,compatibilityComposition:2,transcodingComposition:4},rubyKana:{code:28,exclusive:!1,rubyKana:2},CJKSymbolAlternatives:{code:29,exclusive:!0,noCJKSymbolAlternatives:0,CJKSymbolAltOne:1,CJKSymbolAltTwo:2,CJKSymbolAltThree:3,CJKSymbolAltFour:4,CJKSymbolAltFive:5},ideographicAlternatives:{code:30,exclusive:!0,noIdeographicAlternatives:0,ideographicAltOne:1,ideographicAltTwo:2,ideographicAltThree:3,ideographicAltFour:4,ideographicAltFive:5},CJKVerticalRomanPlacement:{code:31,exclusive:!0,CJKVerticalRomanCentered:0,CJKVerticalRomanHBaseline:1},italicCJKRoman:{code:32,exclusive:!1,CJKItalicRoman:2},caseSensitiveLayout:{code:33,exclusive:!1,caseSensitiveLayout:0,caseSensitiveSpacing:2},alternateKana:{code:34,exclusive:!1,alternateHorizKana:0,alternateVertKana:2},stylisticAlternatives:{code:35,exclusive:!1,noStylisticAlternates:0,stylisticAltOne:2,stylisticAltTwo:4,stylisticAltThree:6,stylisticAltFour:8,stylisticAltFive:10,stylisticAltSix:12,stylisticAltSeven:14,stylisticAltEight:16,stylisticAltNine:18,stylisticAltTen:20,stylisticAltEleven:22,stylisticAltTwelve:24,stylisticAltThirteen:26,stylisticAltFourteen:28,stylisticAltFifteen:30,stylisticAltSixteen:32,stylisticAltSeventeen:34,stylisticAltEighteen:36,stylisticAltNineteen:38,stylisticAltTwenty:40},contextualAlternates:{code:36,exclusive:!1,contextualAlternates:0,swashAlternates:2,contextualSwashAlternates:4},lowerCase:{code:37,exclusive:!0,defaultLowerCase:0,lowerCaseSmallCaps:1,lowerCasePetiteCaps:2},upperCase:{code:38,exclusive:!0,defaultUpperCase:0,upperCaseSmallCaps:1,upperCasePetiteCaps:2},languageTag:{code:39,exclusive:!0},CJKRomanSpacing:{code:103,exclusive:!0,halfWidthCJKRoman:0,proportionalCJKRoman:1,defaultCJKRoman:2,fullWidthCJKRoman:3}},p=(x,d)=>[J7[x].code,J7[x][d]],r4={rlig:p("ligatures","requiredLigatures"),clig:p("ligatures","contextualLigatures"),dlig:p("ligatures","rareLigatures"),hlig:p("ligatures","historicalLigatures"),liga:p("ligatures","commonLigatures"),hist:p("ligatures","historicalLigatures"),smcp:p("lowerCase","lowerCaseSmallCaps"),pcap:p("lowerCase","lowerCasePetiteCaps"),frac:p("fractions","diagonalFractions"),dnom:p("fractions","diagonalFractions"),numr:p("fractions","diagonalFractions"),afrc:p("fractions","verticalFractions"),case:p("caseSensitiveLayout","caseSensitiveLayout"),ccmp:p("unicodeDecomposition","canonicalComposition"),cpct:p("CJKVerticalRomanPlacement","CJKVerticalRomanCentered"),valt:p("CJKVerticalRomanPlacement","CJKVerticalRomanCentered"),swsh:p("contextualAlternates","swashAlternates"),cswh:p("contextualAlternates","contextualSwashAlternates"),curs:p("cursiveConnection","cursive"),c2pc:p("upperCase","upperCasePetiteCaps"),c2sc:p("upperCase","upperCaseSmallCaps"),init:p("smartSwash","wordInitialSwashes"),fin2:p("smartSwash","wordFinalSwashes"),medi:p("smartSwash","nonFinalSwashes"),med2:p("smartSwash","nonFinalSwashes"),fin3:p("smartSwash","wordFinalSwashes"),fina:p("smartSwash","wordFinalSwashes"),pkna:p("kanaSpacing","proportionalKana"),half:p("textSpacing","halfWidthText"),halt:p("textSpacing","altHalfWidthText"),hkna:p("alternateKana","alternateHorizKana"),vkna:p("alternateKana","alternateVertKana"),ital:p("italicCJKRoman","CJKItalicRoman"),lnum:p("numberCase","upperCaseNumbers"),onum:p("numberCase","lowerCaseNumbers"),mgrk:p("mathematicalExtras","mathematicalGreek"),calt:p("contextualAlternates","contextualAlternates"),vrt2:p("verticalSubstitution","substituteVerticalForms"),vert:p("verticalSubstitution","substituteVerticalForms"),tnum:p("numberSpacing","monospacedNumbers"),pnum:p("numberSpacing","proportionalNumbers"),sups:p("verticalPosition","superiors"),subs:p("verticalPosition","inferiors"),ordn:p("verticalPosition","ordinals"),pwid:p("textSpacing","proportionalText"),hwid:p("textSpacing","halfWidthText"),qwid:p("textSpacing","quarterWidthText"),twid:p("textSpacing","thirdWidthText"),fwid:p("textSpacing","proportionalText"),palt:p("textSpacing","altProportionalText"),trad:p("characterShape","traditionalCharacters"),smpl:p("characterShape","simplifiedCharacters"),jp78:p("characterShape","JIS1978Characters"),jp83:p("characterShape","JIS1983Characters"),jp90:p("characterShape","JIS1990Characters"),jp04:p("characterShape","JIS2004Characters"),expt:p("characterShape","expertCharacters"),hojo:p("characterShape","hojoCharacters"),nlck:p("characterShape","NLCCharacters"),tnam:p("characterShape","traditionalNamesCharacters"),ruby:p("rubyKana","rubyKana"),titl:p("styleOptions","titlingCaps"),zero:p("typographicExtras","slashedZero"),ss01:p("stylisticAlternatives","stylisticAltOne"),ss02:p("stylisticAlternatives","stylisticAltTwo"),ss03:p("stylisticAlternatives","stylisticAltThree"),ss04:p("stylisticAlternatives","stylisticAltFour"),ss05:p("stylisticAlternatives","stylisticAltFive"),ss06:p("stylisticAlternatives","stylisticAltSix"),ss07:p("stylisticAlternatives","stylisticAltSeven"),ss08:p("stylisticAlternatives","stylisticAltEight"),ss09:p("stylisticAlternatives","stylisticAltNine"),ss10:p("stylisticAlternatives","stylisticAltTen"),ss11:p("stylisticAlternatives","stylisticAltEleven"),ss12:p("stylisticAlternatives","stylisticAltTwelve"),ss13:p("stylisticAlternatives","stylisticAltThirteen"),ss14:p("stylisticAlternatives","stylisticAltFourteen"),ss15:p("stylisticAlternatives","stylisticAltFifteen"),ss16:p("stylisticAlternatives","stylisticAltSixteen"),ss17:p("stylisticAlternatives","stylisticAltSeventeen"),ss18:p("stylisticAlternatives","stylisticAltEighteen"),ss19:p("stylisticAlternatives","stylisticAltNineteen"),ss20:p("stylisticAlternatives","stylisticAltTwenty")};for(let x=1;x<=99;x++)r4[`cv${`00${x}`.slice(-2)}`]=[J7.characterAlternatives.code,x];var V7={};for(let x in r4){let d=r4[x];if(V7[d[0]]==null)V7[d[0]]={};V7[d[0]][d[1]]=x}function Rj(x){let d={};for(let b in x){let c;if(c=r4[b]){if(d[c[0]]==null)d[c[0]]={};d[c[0]][c[1]]=x[b]}}return d}function nq(x){let[d,b]=x;if(isNaN(d))var c=J7[d]&&J7[d].code;else var c=d;if(isNaN(b))var q=J7[d]&&J7[d][b];else var q=b;return[c,q]}function Xj(x){let d={};if(Array.isArray(x))for(let b=0;b<x.length;b++){let c,q=nq(x[b]);if(c=V7[q[0]]&&V7[q[0]][q[1]])d[c]=!0}else if(typeof x==="object")for(let b in x){let c=x[b];for(let q in c){let $,Y=nq([b,q]);if(c[q]&&($=V7[Y[0]]&&V7[Y[0]][Y[1]]))d[$]=!0}}return Object.keys(d)}class b2{lookup(x){switch(this.table.version){case 0:return this.table.values.getItem(x);case 2:case 4:{let c=0,q=this.table.binarySearchHeader.nUnits-1;while(c<=q){var d=c+q>>1,b=this.table.segments[d];if(b.firstGlyph===65535)return null;if(x<b.firstGlyph)q=d-1;else if(x>b.lastGlyph)c=d+1;else if(this.table.version===2)return b.value;else return b.values[x-b.firstGlyph]}return null}case 6:{let c=0,q=this.table.binarySearchHeader.nUnits-1;while(c<=q){var d=c+q>>1,b=this.table.segments[d];if(b.glyph===65535)return null;if(x<b.glyph)q=d-1;else if(x>b.glyph)c=d+1;else return b.value}return null}case 8:return this.table.values[x-this.table.firstGlyph];default:throw new Error(`Unknown lookup table format: ${this.table.version}`)}}glyphsForValue(x){let d=[];switch(this.table.version){case 2:case 4:for(let b of this.table.segments)if(this.table.version===2&&b.value===x)d.push(...f2(b.firstGlyph,b.lastGlyph+1));else for(let c=0;c<b.values.length;c++)if(b.values[c]===x)d.push(b.firstGlyph+c);break;case 6:for(let b of this.table.segments)if(b.value===x)d.push(b.glyph);break;case 8:for(let b=0;b<this.table.values.length;b++)if(this.table.values[b]===x)d.push(this.table.firstGlyph+b);break;default:throw new Error(`Unknown lookup table format: ${this.table.version}`)}return d}constructor(x){this.table=x}}fx._([dx],b2.prototype,"glyphsForValue",null);var jj=0,iq=0,rq=1,sq=2,Oj=16384;class o${process(x,d,b){let c=jj,q=d?x.length-1:0,$=d?-1:1;while($===1&&q<=x.length||$===-1&&q>=-1){let Y=null,G=rq,E=!0;if(q===x.length||q===-1)G=iq;else if(Y=x[q],Y.id===65535)G=sq;else if(G=this.lookupTable.lookup(Y.id),G==null)G=rq;let V=this.stateTable.stateArray.getItem(c)[G],N=this.stateTable.entryTable.getItem(V);if(G!==iq&&G!==sq)b(Y,N,q),E=!(N.flags&Oj);if(c=N.newState,E)q+=$}return x}traverse(x,d=0,b=new Set){if(b.has(d))return;b.add(d);let{nClasses:c,stateArray:q,entryTable:$}=this.stateTable,Y=q.getItem(d);for(let G=4;G<c;G++){let E=Y[G],J=$.getItem(E);for(let V of this.lookupTable.glyphsForValue(G)){if(x.enter)x.enter(V,J);if(J.newState!==0)this.traverse(x,J.newState,b);if(x.exit)x.exit(V,J)}}}constructor(x){this.stateTable=x,this.lookupTable=new b2(x.classTable)}}var Hj=32768,Wj=8192,Lj=15,oq=32768,Dj=32768,ej=8192,Mj=2147483648,Aj=1073741824,Fj=1073741823,tq=4194304,zj=2048,Bj=1024,wj=992,Pj=31;class S8{process(x,d={}){for(let c of this.morx.chains){let q=c.defaultFlags;for(let $ of c.features){let Y;if(Y=d[$.featureType]){if(Y[$.featureSetting])q&=$.disableFlags,q|=$.enableFlags;else if(Y[$.featureSetting]===!1)q|=~$.disableFlags,q&=~$.enableFlags}}for(let $ of c.subtables)if($.subFeatureFlags&q)this.processSubtable($,x)}let b=x.length-1;while(b>=0){if(x[b].id===65535)x.splice(b,1);b--}return x}processSubtable(x,d){if(this.subtable=x,this.glyphs=d,this.subtable.type===4){this.processNoncontextualSubstitutions(this.subtable,this.glyphs);return}this.ligatureStack=[],this.markedGlyph=null,this.firstGlyph=null,this.lastGlyph=null,this.markedIndex=null;let b=this.getStateMachine(x),c=this.getProcessor(),q=!!(this.subtable.coverage&tq);return b.process(this.glyphs,q,c)}getStateMachine(x){return new o$(x.table.stateTable)}getProcessor(){switch(this.subtable.type){case 0:return this.processIndicRearragement;case 1:return this.processContextualSubstitution;case 2:return this.processLigature;case 4:return this.processNoncontextualSubstitutions;case 5:return this.processGlyphInsertion;default:throw new Error(`Invalid morx subtable type: ${this.subtable.type}`)}}processIndicRearragement(x,d,b){if(d.flags&Hj)this.firstGlyph=b;if(d.flags&Wj)this.lastGlyph=b;vj(this.glyphs,d.flags&Lj,this.firstGlyph,this.lastGlyph)}processContextualSubstitution(x,d,b){let c=this.subtable.table.substitutionTable.items;if(d.markIndex!==65535){let $=c.getItem(d.markIndex),Y=new b2($);x=this.glyphs[this.markedGlyph];var q=Y.lookup(x.id);if(q)this.glyphs[this.markedGlyph]=this.font.getGlyph(q,x.codePoints)}if(d.currentIndex!==65535){let $=c.getItem(d.currentIndex),Y=new b2($);x=this.glyphs[b];var q=Y.lookup(x.id);if(q)this.glyphs[b]=this.font.getGlyph(q,x.codePoints)}if(d.flags&oq)this.markedGlyph=b}processLigature(x,d,b){if(d.flags&Dj)this.ligatureStack.push(b);if(d.flags&ej){let c=this.subtable.table.ligatureActions,q=this.subtable.table.components,$=this.subtable.table.ligatureList,Y=d.action,G=!1,E=0,J=[],V=[];while(!G){let N=this.ligatureStack.pop();J.unshift(...this.glyphs[N].codePoints);let U=c.getItem(Y++);G=!!(U&Mj);let K=!!(U&Aj),X=(U&Fj)<<2>>2;X+=this.glyphs[N].id;let D=q.getItem(X);if(E+=D,G||K){let L=$.getItem(E);this.glyphs[N]=this.font.getGlyph(L,J),V.push(N),E=0,J=[]}else this.glyphs[N]=this.font.getGlyph(65535)}this.ligatureStack.push(...V)}}processNoncontextualSubstitutions(x,d,b){let c=new b2(x.table.lookupTable);for(b=0;b<d.length;b++){let q=d[b];if(q.id!==65535){let $=c.lookup(q.id);if($)d[b]=this.font.getGlyph($,q.codePoints)}}}_insertGlyphs(x,d,b,c){let q=[];while(b--){let $=this.subtable.table.insertionActions.getItem(d++);q.push(this.font.getGlyph($))}if(!c)x++;this.glyphs.splice(x,0,...q)}processGlyphInsertion(x,d,b){if(d.flags&oq)this.markedIndex=b;if(d.markedInsertIndex!==65535){let c=(d.flags&Pj)>>>5,q=!!(d.flags&Bj);this._insertGlyphs(this.markedIndex,d.markedInsertIndex,c,q)}if(d.currentInsertIndex!==65535){let c=(d.flags&wj)>>>5,q=!!(d.flags&zj);this._insertGlyphs(b,d.currentInsertIndex,c,q)}}getSupportedFeatures(){let x=[];for(let d of this.morx.chains)for(let b of d.features)x.push([b.featureType,b.featureSetting]);return x}generateInputs(x){if(!this.inputCache)this.generateInputCache();return this.inputCache[x]||[]}generateInputCache(){this.inputCache={};for(let x of this.morx.chains){let d=x.defaultFlags;for(let b of x.subtables)if(b.subFeatureFlags&d)this.generateInputsForSubtable(b)}}generateInputsForSubtable(x){if(x.type!==2)return;if(!!(x.coverage&tq))throw new Error("Reverse subtable, not supported.");this.subtable=x,this.ligatureStack=[];let b=this.getStateMachine(x),c=this.getProcessor(),q=[],$=[];this.glyphs=[],b.traverse({enter:(Y,G)=>{let E=this.glyphs;$.push({glyphs:E.slice(),ligatureStack:this.ligatureStack.slice()});let J=this.font.getGlyph(Y);q.push(J),E.push(q[q.length-1]),c(E[E.length-1],G,E.length-1);let V=0,N=0;for(let U=0;U<E.length&&V<=1;U++)if(E[U].id!==65535)V++,N=E[U].id;if(V===1){let U=q.map((X)=>X.id),K=this.inputCache[N];if(K)K.push(U);else this.inputCache[N]=[U]}},exit:()=>{({glyphs:this.glyphs,ligatureStack:this.ligatureStack}=$.pop()),q.pop()}})}constructor(x){this.processIndicRearragement=this.processIndicRearragement.bind(this),this.processContextualSubstitution=this.processContextualSubstitution.bind(this),this.processLigature=this.processLigature.bind(this),this.processNoncontextualSubstitutions=this.processNoncontextualSubstitutions.bind(this),this.processGlyphInsertion=this.processGlyphInsertion.bind(this),this.font=x,this.morx=x.morx,this.inputCache=null}}fx._([dx],S8.prototype,"getStateMachine",null);function Vx(x,d,b,c=!1,q=!1){let $=x.splice(b[0]-(b[1]-1),b[1]);if(q)$.reverse();let Y=x.splice(d[0],d[1],...$);if(c)Y.reverse();return x.splice(b[0]-(d[1]-1),0,...Y),x}function vj(x,d,b,c){let q=c-b+1;switch(d){case 0:return x;case 1:return Vx(x,[b,1],[c,0]);case 2:return Vx(x,[b,0],[c,1]);case 3:return Vx(x,[b,1],[c,1]);case 4:return Vx(x,[b,2],[c,0]);case 5:return Vx(x,[b,2],[c,0],!0,!1);case 6:return Vx(x,[b,0],[c,2]);case 7:return Vx(x,[b,0],[c,2],!1,!0);case 8:return Vx(x,[b,1],[c,2]);case 9:return Vx(x,[b,1],[c,2],!1,!0);case 10:return Vx(x,[b,2],[c,1]);case 11:return Vx(x,[b,2],[c,1],!0,!1);case 12:return Vx(x,[b,2],[c,2]);case 13:return Vx(x,[b,2],[c,2],!0,!1);case 14:return Vx(x,[b,2],[c,2],!1,!0);case 15:return Vx(x,[b,2],[c,2],!0,!0);default:throw new Error(`Unknown verb: ${d}`)}}class t${substitute(x){if(x.direction==="rtl")x.glyphs.reverse();this.morxProcessor.process(x.glyphs,Rj(x.features))}getAvailableFeatures(x,d){return Xj(this.morxProcessor.getSupportedFeatures())}stringsForGlyph(x){let d=this.morxProcessor.generateInputs(x),b=new Set;for(let c of d)this._addStrings(c,0,b,"");return b}_addStrings(x,d,b,c){let q=this.font._cmapProcessor.codePointsForGlyph(x[d]);for(let $ of q){let Y=c+String.fromCodePoint($);if(d<x.length-1)this._addStrings(x,d+1,b,Y);else b.add(Y)}}constructor(x){this.font=x,this.morxProcessor=new S8(x),this.fallbackPosition=!1}}class xQ{_addFeatures(x,d){let b=this.stages.length-1,c=this.stages[b];for(let q of x)if(this.allFeatures[q]==null){if(c.push(q),this.allFeatures[q]=b,d)this.globalFeatures[q]=!0}}add(x,d=!0){if(this.stages.length===0)this.stages.push([]);if(typeof x==="string")x=[x];if(Array.isArray(x))this._addFeatures(x,d);else if(typeof x==="object")this._addFeatures(x.global||[],!0),this._addFeatures(x.local||[],!1);else throw new Error("Unsupported argument to ShapingPlan#add")}addStage(x,d){if(typeof x==="function")this.stages.push(x,[]);else this.stages.push([]),this.add(x,d)}setFeatureOverrides(x){if(Array.isArray(x))this.add(x);else if(typeof x==="object"){for(let d in x)if(x[d])this.add(d);else if(this.allFeatures[d]!=null){let b=this.stages[this.allFeatures[d]];b.splice(b.indexOf(d),1),delete this.allFeatures[d],delete this.globalFeatures[d]}}}assignGlobalFeatures(x){for(let d of x)for(let b in this.globalFeatures)d.features[b]=!0}process(x,d,b){for(let c of this.stages)if(typeof c==="function"){if(!b)c(this.font,d,this)}else if(c.length>0)x.applyFeatures(c,d,b)}constructor(x,d,b){this.font=x,this.script=d,this.direction=b,this.stages=[],this.globalFeatures={},this.allFeatures={}}}var Ij=["rvrn"],Sj=["ccmp","locl","rlig","mark","mkmk"],Zj=["frac","numr","dnom"],Tj=["calt","clig","liga","rclt","curs","kern"],Cj={ltr:["ltra","ltrm"],rtl:["rtla","rtlm"]};class j6{static plan(x,d,b){this.planPreprocessing(x),this.planFeatures(x),this.planPostprocessing(x,b),x.assignGlobalFeatures(d),this.assignFeatures(x,d)}static planPreprocessing(x){x.add({global:[...Ij,...Cj[x.direction]],local:Zj})}static planFeatures(x){}static planPostprocessing(x,d){x.add([...Sj,...Tj]),x.setFeatureOverrides(d)}static assignFeatures(x,d){for(let b=0;b<d.length;b++){let c=d[b];if(c.codePoints[0]===8260){let q=b,$=b+1;while(q>0&&X6.isDigit(d[q-1].codePoints[0]))d[q-1].features.numr=!0,d[q-1].features.frac=!0,q--;while($<d.length&&X6.isDigit(d[$].codePoints[0]))d[$].features.dnom=!0,d[$].features.frac=!0,$++;c.features.frac=!0,b=$-1}}}}Rx._(j6,"zeroMarkWidths","AFTER_GPOS");var kj=new(o0(M8))(I8("APABAAAAAAAAOAAAAf0BAv7tmi1MxDAUx7vtvjhAgcDgkEgEAnmXEBIMCYaEcygEiqBQ4FAkCE4ikUgMiiBJSAgSiUQSDMn9L9eSl6bddddug9t7yS/trevre+3r27pcNxZiG+yCfdCVv/9LeQxOwRm4AJegD27ALbgD9+ABPJF+z+BN/h7yDj5k/VOWX6SdmU5+wLWknggxDxaS8u0qiiX4uiz9XamQ3wzDMAzDMAzDMAzDVI/h959V/v7BMAzDMAzDMLlyNTNiMSdewVxbiA44B4/guz1qW58VYlMI0WsJ0W+N6kXw0spvPtdwhtkwnGM6uLaV4Xyzg3v3PM9DPfQ/sOg4xPWjipy31P8LTqbU304c/cLCUmWJLNB2Uz2U1KTeRKNmKHVMfbJC+/0loTZRH/W5cvEvBJPMbREkWt3FD1NcqXZBSpuE2Ad0PBehPtNrPtIEdYP+hiRt/V1jIiE69X4NT/uVZI3PUHE9bm5M7ePGdZWy951v7Nn6j8v1WWKP3mt6ttnsigx6VN7Vc0VomSSGqW2mGNP1muZPl7LfjNUaKNFtDGVf2fvE9O7VlBS5j333c5p/eeoOqcs1R/hIqDWLJ7TTlksirVT1SI7l8k4Yp+g3jafGcrU1RM6l9th80XOpnlN97bDNY4i4s61B0Si/ipa0uHMl6zqEjlFfCZm/TM8KmzQDjmuTAQ==")),x$=["isol","fina","fin2","fin3","medi","med2","init"],j8={Non_Joining:0,Left_Joining:1,Right_Joining:2,Dual_Joining:3,Join_Causing:3,ALAPH:4,"DALATH RISH":5,Transparent:6},P0="isol",C6="fina",Y8="fin2",gj="fin3",k4="medi",g4="med2",h4="init",L0=null,hj=[[[L0,L0,0],[L0,P0,2],[L0,P0,1],[L0,P0,2],[L0,P0,1],[L0,P0,6]],[[L0,L0,0],[L0,P0,2],[L0,P0,1],[L0,P0,2],[L0,Y8,5],[L0,P0,6]],[[L0,L0,0],[L0,P0,2],[h4,C6,1],[h4,C6,3],[h4,C6,4],[h4,C6,6]],[[L0,L0,0],[L0,P0,2],[k4,C6,1],[k4,C6,3],[k4,C6,4],[k4,C6,6]],[[L0,L0,0],[L0,P0,2],[g4,P0,1],[g4,P0,2],[g4,Y8,5],[g4,P0,6]],[[L0,L0,0],[L0,P0,2],[P0,P0,1],[P0,P0,2],[P0,Y8,5],[P0,P0,6]],[[L0,L0,0],[L0,P0,2],[L0,P0,1],[L0,P0,2],[L0,gj,5],[L0,P0,6]]];class U6 extends j6{static planFeatures(x){x.add(["ccmp","locl"]);for(let d=0;d<x$.length;d++){let b=x$[d];x.addStage(b,!1)}x.addStage("mset")}static assignFeatures(x,d){super.assignFeatures(x,d);let b=-1,c=0,q=[];for(let Y=0;Y<d.length;Y++){let G,E;var $=d[Y];let J=aj($.codePoints[0]);if(J===j8.Transparent){q[Y]=L0;continue}if([E,G,c]=hj[c][J],E!==L0&&b!==-1)q[b]=E;q[Y]=G,b=Y}for(let Y=0;Y<d.length;Y++){let G;var $=d[Y];if(G=q[Y])$.features[G]=!0}}}function aj(x){let d=kj.get(x);if(d)return d-1;let b=X6.getCategory(x);if(b==="Mn"||b==="Me"||b==="Cf")return j8.Transparent;return j8.Non_Joining}class fQ{reset(x={},d=0){this.options=x,this.flags=x.flags||{},this.markAttachmentType=x.markAttachmentType||0,this.index=d}get cur(){return this.glyphs[this.index]||null}shouldIgnore(x){return this.flags.ignoreMarks&&x.isMark||this.flags.ignoreBaseGlyphs&&x.isBase||this.flags.ignoreLigatures&&x.isLigature||this.markAttachmentType&&x.isMark&&x.markAttachmentType!==this.markAttachmentType}move(x){this.index+=x;while(0<=this.index&&this.index<this.glyphs.length&&this.shouldIgnore(this.glyphs[this.index]))this.index+=x;if(0>this.index||this.index>=this.glyphs.length)return null;return this.glyphs[this.index]}next(){return this.move(1)}prev(){return this.move(-1)}peek(x=1){let d=this.index,b=this.increment(x);return this.index=d,b}peekIndex(x=1){let d=this.index;this.increment(x);let b=this.index;return this.index=d,b}increment(x=1){let d=x<0?-1:1;x=Math.abs(x);while(x--)this.move(d);return this.glyphs[this.index]}constructor(x,d){this.glyphs=x,this.reset(d)}}var _j=["DFLT","dflt","latn"];class s2{findScript(x){if(this.table.scriptList==null)return null;if(!Array.isArray(x))x=[x];for(let d of x)for(let b of this.table.scriptList)if(b.tag===d)return b;return null}selectScript(x,d,b){let c=!1,q;if(!this.script||x!==this.scriptTag){if(q=this.findScript(x),!q)q=this.findScript(_j);if(!q)return this.scriptTag;this.scriptTag=q.tag,this.script=q.script,this.language=null,this.languageTag=null,c=!0}if(!b||b!==this.direction)this.direction=b||i$(x);if(d&&d.length<4)d+=" ".repeat(4-d.length);if(!d||d!==this.languageTag){this.language=null;for(let $ of this.script.langSysRecords)if($.tag===d){this.language=$.langSys,this.languageTag=$.tag;break}if(!this.language)this.language=this.script.defaultLangSys,this.languageTag=null;c=!0}if(c){if(this.features={},this.language)for(let $ of this.language.featureIndexes){let Y=this.table.featureList[$],G=this.substituteFeatureForVariations($);this.features[Y.tag]=G||Y.feature}}return this.scriptTag}lookupsForFeatures(x=[],d){let b=[];for(let c of x){let q=this.features[c];if(!q)continue;for(let $ of q.lookupListIndexes){if(d&&d.indexOf($)!==-1)continue;b.push({feature:c,index:$,lookup:this.table.lookupList.get($)})}}return b.sort((c,q)=>c.index-q.index),b}substituteFeatureForVariations(x){if(this.variationsIndex===-1)return null;let b=this.table.featureVariations.featureVariationRecords[this.variationsIndex].featureTableSubstitution.substitutions;for(let c of b)if(c.featureIndex===x)return c.alternateFeatureTable;return null}findVariationsIndex(x){let d=this.table.featureVariations;if(!d)return-1;let b=d.featureVariationRecords;for(let c=0;c<b.length;c++){let q=b[c].conditionSet.conditionTable;if(this.variationConditionsMatch(q,x))return c}return-1}variationConditionsMatch(x,d){return x.every((b)=>{let c=b.axisIndex<d.length?d[b.axisIndex]:0;return b.filterRangeMinValue<=c&&c<=b.filterRangeMaxValue})}applyFeatures(x,d,b){let c=this.lookupsForFeatures(x);this.applyLookups(c,d,b)}applyLookups(x,d,b){this.glyphs=d,this.positions=b,this.glyphIterator=new fQ(d);for(let{feature:c,lookup:q}of x){this.currentFeature=c,this.glyphIterator.reset(q.flags);while(this.glyphIterator.index<d.length){if(!(c in this.glyphIterator.cur.features)){this.glyphIterator.next();continue}for(let $ of q.subTables)if(this.applyLookup(q.lookupType,$))break;this.glyphIterator.next()}}}applyLookup(x,d){throw new Error("applyLookup must be implemented by subclasses")}applyLookupList(x){let d=this.glyphIterator.options,b=this.glyphIterator.index;for(let c of x){this.glyphIterator.reset(d,b),this.glyphIterator.increment(c.sequenceIndex);let q=this.table.lookupList.get(c.lookupListIndex);this.glyphIterator.reset(q.flags,this.glyphIterator.index);for(let $ of q.subTables)if(this.applyLookup(q.lookupType,$))break}return this.glyphIterator.reset(d,b),!0}coverageIndex(x,d){if(d==null)d=this.glyphIterator.cur.id;switch(x.version){case 1:return x.glyphs.indexOf(d);case 2:for(let b of x.rangeRecords)if(b.start<=d&&d<=b.end)return b.startCoverageIndex+d-b.start;break}return-1}match(x,d,b,c){let q=this.glyphIterator.index,$=this.glyphIterator.increment(x),Y=0;while(Y<d.length&&$&&b(d[Y],$)){if(c)c.push(this.glyphIterator.index);Y++,$=this.glyphIterator.next()}if(this.glyphIterator.index=q,Y<d.length)return!1;return c||!0}sequenceMatches(x,d){return this.match(x,d,(b,c)=>b===c.id)}sequenceMatchIndices(x,d){return this.match(x,d,(b,c)=>{if(!(this.currentFeature in c.features))return!1;return b===c.id},[])}coverageSequenceMatches(x,d){return this.match(x,d,(b,c)=>this.coverageIndex(b,c.id)>=0)}getClassID(x,d){switch(d.version){case 1:let b=x-d.startGlyph;if(b>=0&&b<d.classValueArray.length)return d.classValueArray[b];break;case 2:for(let c of d.classRangeRecord)if(c.start<=x&&x<=c.end)return c.class;break}return 0}classSequenceMatches(x,d,b){return this.match(x,d,(c,q)=>c===this.getClassID(q.id,b))}applyContext(x){let d,b;switch(x.version){case 1:if(d=this.coverageIndex(x.coverage),d===-1)return!1;b=x.ruleSets[d];for(let c of b)if(this.sequenceMatches(1,c.input))return this.applyLookupList(c.lookupRecords);break;case 2:if(this.coverageIndex(x.coverage)===-1)return!1;if(d=this.getClassID(this.glyphIterator.cur.id,x.classDef),d===-1)return!1;b=x.classSet[d];for(let c of b)if(this.classSequenceMatches(1,c.classes,x.classDef))return this.applyLookupList(c.lookupRecords);break;case 3:if(this.coverageSequenceMatches(0,x.coverages))return this.applyLookupList(x.lookupRecords);break}return!1}applyChainingContext(x){let d;switch(x.version){case 1:if(d=this.coverageIndex(x.coverage),d===-1)return!1;let b=x.chainRuleSets[d];for(let q of b)if(this.sequenceMatches(-q.backtrack.length,q.backtrack)&&this.sequenceMatches(1,q.input)&&this.sequenceMatches(1+q.input.length,q.lookahead))return this.applyLookupList(q.lookupRecords);break;case 2:if(this.coverageIndex(x.coverage)===-1)return!1;d=this.getClassID(this.glyphIterator.cur.id,x.inputClassDef);let c=x.chainClassSet[d];if(!c)return!1;for(let q of c)if(this.classSequenceMatches(-q.backtrack.length,q.backtrack,x.backtrackClassDef)&&this.classSequenceMatches(1,q.input,x.inputClassDef)&&this.classSequenceMatches(1+q.input.length,q.lookahead,x.lookaheadClassDef))return this.applyLookupList(q.lookupRecords);break;case 3:if(this.coverageSequenceMatches(-x.backtrackGlyphCount,x.backtrackCoverage)&&this.coverageSequenceMatches(0,x.inputCoverage)&&this.coverageSequenceMatches(x.inputGlyphCount,x.lookaheadCoverage))return this.applyLookupList(x.lookupRecords);break}return!1}constructor(x,d){this.font=x,this.table=d,this.script=null,this.scriptTag=null,this.language=null,this.languageTag=null,this.features={},this.lookups={},this.variationsIndex=x._variationProcessor?this.findVariationsIndex(x._variationProcessor.normalizedCoords):-1,this.selectScript(),this.glyphs=[],this.positions=[],this.ligatureID=1,this.currentFeature=null}}class yx{get id(){return this._id}set id(x){this._id=x,this.substituted=!0;let d=this._font.GDEF;if(d&&d.glyphClassDef){let b=s2.prototype.getClassID(x,d.glyphClassDef);this.isBase=b===1,this.isLigature=b===2,this.isMark=b===3,this.markAttachmentType=d.markAttachClassDef?s2.prototype.getClassID(x,d.markAttachClassDef):0}else this.isMark=this.codePoints.length>0&&this.codePoints.every(X6.isMark),this.isBase=!this.isMark,this.isLigature=this.codePoints.length>1,this.markAttachmentType=0}copy(){return new yx(this._font,this.id,this.codePoints,this.features)}constructor(x,d,b=[],c){if(this._font=x,this.codePoints=b,this.id=d,this.features={},Array.isArray(c))for(let q=0;q<c.length;q++){let $=c[q];this.features[$]=!0}else if(typeof c==="object")Object.assign(this.features,c);this.ligatureID=null,this.ligatureComponent=null,this.isLigated=!1,this.cursiveAttachment=null,this.markAttachment=null,this.shaperInfo=null,this.substituted=!1,this.isMultiplied=!1}}class Z8 extends j6{static planFeatures(x){x.add(["ljmo","vjmo","tjmo"],!1)}static assignFeatures(x,d){let b=0,c=0;while(c<d.length){let q,Y=d[c].codePoints[0],G=x3(Y);switch([q,b]=$O[b][G],q){case K6:if(!x.font.hasGlyphForCodePoint(Y))c=cQ(d,c,x.font);break;case O8:c=QO(d,c,x.font);break;case H8:GO(d,c,x.font);break;case W8:c=EO(d,c,x.font);break}c++}}}Rx._(Z8,"zeroMarkWidths","NONE");var q2=44032,dQ=55204,mj=dQ-q2+1,q3=4352,$3=4449,a6=4519,uj=19,s4=21,o2=28,yj=q3+uj-1,pj=$3+s4-1,lj=a6+o2-1,f$=9676,nj=(x)=>4352<=x&&x<=4447||43360<=x&&x<=43388,ij=(x)=>4448<=x&&x<=4519||55216<=x&&x<=55238,rj=(x)=>4520<=x&&x<=4607||55243<=x&&x<=55291,sj=(x)=>12334<=x&&x<=12335,oj=(x)=>q2<=x&&x<=dQ,tj=(x)=>x-q2<mj&&(x-q2)%o2===0,xO=(x)=>q3<=x&&x<=yj,fO=(x)=>$3<=x&&x<=pj,dO=(x)=>a6+1&&1<=x&&x<=lj,bO=0,cO=1,o4=2,T8=3,t4=4,bQ=5,qO=6;function x3(x){if(nj(x))return cO;if(ij(x))return o4;if(rj(x))return T8;if(tj(x))return t4;if(oj(x))return bQ;if(sj(x))return qO;return bO}var Kx=0,K6=1,O8=2,H8=4,W8=5,$O=[[[Kx,0],[Kx,1],[Kx,0],[Kx,0],[K6,2],[K6,3],[W8,0]],[[Kx,0],[Kx,1],[O8,2],[Kx,0],[K6,2],[K6,3],[W8,0]],[[Kx,0],[Kx,1],[Kx,0],[O8,3],[K6,2],[K6,3],[H8,0]],[[Kx,0],[Kx,1],[Kx,0],[Kx,0],[K6,2],[K6,3],[H8,0]]];function y2(x,d,b){return new yx(x,x.glyphForCodePoint(d).id,[d],b)}function cQ(x,d,b){let c=x[d],$=c.codePoints[0]-q2,Y=a6+$%o2;$=$/o2|0;let G=q3+$/s4|0,E=$3+$%s4;if(!b.hasGlyphForCodePoint(G)||!b.hasGlyphForCodePoint(E)||Y!==a6&&!b.hasGlyphForCodePoint(Y))return d;let J=y2(b,G,c.features);J.features.ljmo=!0;let V=y2(b,E,c.features);V.features.vjmo=!0;let N=[J,V];if(Y>a6){let U=y2(b,Y,c.features);U.features.tjmo=!0,N.push(U)}return x.splice(d,1,...N),d+N.length-1}function QO(x,d,b){let c=x[d],q=x[d].codePoints[0],$=x3(q),Y=x[d-1].codePoints[0],G=x3(Y),E,J,V,N;if(G===t4&&$===T8)E=Y,N=c;else{if($===o4)J=x[d-1],V=c;else J=x[d-2],V=x[d-1],N=c;let K=J.codePoints[0],X=V.codePoints[0];if(xO(K)&&fO(X))E=q2+((K-q3)*s4+(X-$3))*o2}let U=N&&N.codePoints[0]||a6;if(E!=null&&(U===a6||dO(U))){let K=E+(U-a6);if(b.hasGlyphForCodePoint(K)){let X=G===o4?3:2;return x.splice(d-X+1,X,y2(b,K,c.features)),d-X+1}}if(J)J.features.ljmo=!0;if(V)V.features.vjmo=!0;if(N)N.features.tjmo=!0;if(G===t4)return cQ(x,d-1,b),d+1;return d}function YO(x){switch(x3(x)){case t4:case bQ:return 1;case o4:return 2;case T8:return 3}}function GO(x,d,b){let c=x[d],q=x[d].codePoints[0];if(b.glyphForCodePoint(q).advanceWidth===0)return;let $=x[d-1].codePoints[0],Y=YO($);return x.splice(d,1),x.splice(d-Y,0,c)}function EO(x,d,b){let c=x[d],q=x[d].codePoints[0];if(b.hasGlyphForCodePoint(f$)){let $=y2(b,f$,c.features),Y=b.glyphForCodePoint(q).advanceWidth===0?d:d+1;x.splice(Y,0,$),d++}return d}var qQ={};qQ=JSON.parse('{"stateTable":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],"accepting":[false,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,false,false,true,false,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,true,true,false,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,true,true,false,false,true,true,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,false,true,true,false,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,false,true,true,true,true,true,false,true,true,false,true,true,true],"tags":[[],["broken_cluster"],["consonant_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["consonant_syllable"],["broken_cluster"],["symbol_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["broken_cluster"],["broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],[],["broken_cluster"],["symbol_cluster"],[],["symbol_cluster"],["symbol_cluster"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["symbol_cluster"],["symbol_cluster"],["symbol_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],["symbol_cluster"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],[],["broken_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],[],["consonant_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],[],["vowel_syllable"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],[],[],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],["standalone_cluster"],[],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],[],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],[],[],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],[],[],[],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],["consonant_syllable"],["vowel_syllable"],["standalone_cluster"]]}');var Q3={};Q3=JSON.parse('{"categories":["O","IND","S","GB","B","FM","CGJ","VMAbv","VMPst","VAbv","VPst","CMBlw","VPre","VBlw","H","VMBlw","CMAbv","MBlw","CS","R","SUB","MPst","MPre","FAbv","FPst","FBlw","null","SMAbv","SMBlw","VMPre","ZWNJ","ZWJ","WJ","M","VS","N","HN","MAbv"],"decompositions":{"2507":[2503,2494],"2508":[2503,2519],"2888":[2887,2902],"2891":[2887,2878],"2892":[2887,2903],"3018":[3014,3006],"3019":[3015,3006],"3020":[3014,3031],"3144":[3142,3158],"3264":[3263,3285],"3271":[3270,3285],"3272":[3270,3286],"3274":[3270,3266],"3275":[3270,3266,3285],"3402":[3398,3390],"3403":[3399,3390],"3404":[3398,3415],"3546":[3545,3530],"3548":[3545,3535],"3549":[3545,3535,3530],"3550":[3545,3551],"3635":[3661,3634],"3763":[3789,3762],"3955":[3953,3954],"3957":[3953,3956],"3958":[4018,3968],"3959":[4018,3953,3968],"3960":[4019,3968],"3961":[4019,3953,3968],"3969":[3953,3968],"6971":[6970,6965],"6973":[6972,6965],"6976":[6974,6965],"6977":[6975,6965],"6979":[6978,6965],"69934":[69937,69927],"69935":[69938,69927],"70475":[70471,70462],"70476":[70471,70487],"70843":[70841,70842],"70844":[70841,70832],"70846":[70841,70845],"71098":[71096,71087],"71099":[71097,71087]},"stateTable":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,0,23,0,0,2,0,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,0,23,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,0,46,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,0,23,0,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,0,46,0,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],"accepting":[false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true],"tags":[[],["broken_cluster"],["independent_cluster"],["symbol_cluster"],["standard_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["numeral_cluster"],["broken_cluster"],["independent_cluster"],["symbol_cluster"],["symbol_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["virama_terminated_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["broken_cluster"],["broken_cluster"],["numeral_cluster"],["number_joiner_terminated_cluster"],["standard_cluster"],["standard_cluster"],["numeral_cluster"]]}');var R0={X:1,C:2,V:4,N:8,H:16,ZWNJ:32,ZWJ:64,M:128,SM:256,VD:512,A:1024,Placeholder:2048,Dotted_Circle:4096,RS:8192,Coeng:16384,Repha:32768,Ra:65536,CM:131072,Symbol:262144},d0={Start:1,Ra_To_Become_Reph:2,Pre_M:4,Pre_C:8,Base_C:16,After_Main:32,Above_C:64,Before_Sub:128,Below_C:256,After_Sub:512,Before_Post:1024,Post_C:2048,After_Post:4096,Final_C:8192,SMVD:16384,End:32768},JO=R0.C|R0.Ra|R0.CM|R0.V|R0.Placeholder|R0.Dotted_Circle,$Q=R0.ZWJ|R0.ZWNJ,p2=R0.H|R0.Coeng,d$={Default:{hasOldSpec:!1,virama:0,basePos:"Last",rephPos:d0.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Devanagari:{hasOldSpec:!0,virama:2381,basePos:"Last",rephPos:d0.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Bengali:{hasOldSpec:!0,virama:2509,basePos:"Last",rephPos:d0.After_Sub,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Gurmukhi:{hasOldSpec:!0,virama:2637,basePos:"Last",rephPos:d0.Before_Sub,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Gujarati:{hasOldSpec:!0,virama:2765,basePos:"Last",rephPos:d0.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Oriya:{hasOldSpec:!0,virama:2893,basePos:"Last",rephPos:d0.After_Main,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Tamil:{hasOldSpec:!0,virama:3021,basePos:"Last",rephPos:d0.After_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Telugu:{hasOldSpec:!0,virama:3149,basePos:"Last",rephPos:d0.After_Post,rephMode:"Explicit",blwfMode:"Post_Only"},Kannada:{hasOldSpec:!0,virama:3277,basePos:"Last",rephPos:d0.After_Post,rephMode:"Implicit",blwfMode:"Post_Only"},Malayalam:{hasOldSpec:!0,virama:3405,basePos:"Last",rephPos:d0.After_Main,rephMode:"Log_Repha",blwfMode:"Pre_And_Post"},Khmer:{hasOldSpec:!1,virama:6098,basePos:"First",rephPos:d0.Ra_To_Become_Reph,rephMode:"Vis_Repha",blwfMode:"Pre_And_Post"}},VO={6078:[6081,6078],6079:[6081,6079],6080:[6081,6080],6084:[6081,6084],6085:[6081,6085]},{decompositions:NO}=o0(Q3),QQ=new(o0(M8))(I8("AAARAAAAAABg2AAAAWYPmfDtnXuMXFUdx+/uzs7M7szudAtECGJRIMRQbUAithQWkGAKiVhNpFVRRAmIQVCDkDYICGotIA9BTCz8IeUviv7BQ2PBtBIRLBBQIWAUsKg1BKxRAqIgfs/cc+aeOXPej3tnZX7JJ/dxzj3nd36/8753Z5fUsuxgsAwcAU4Gp4BPgM+Cd4P3RjieDs4GXwLrHJ5bDy4DG8A14LvgZrAZbAF3gns0z18ALgY/B78C94NHwBPgabAE/AX8DbwM5sF/QX0yD5vFcU/wVnAgWAoOAyvAceBE8CGwBpwGzgJfAF8BXwXfAFeC68EmsBlsAXeCreA+8CB4DDwF/gh2gd3gFfAGmKxn2QzYC+wHDgRLweFgJTgWrKrnuq/GcQ04jV6fheN54EJwEbgcXAG+Q8O/j+Mt4DZwB9haz8t9Hz3a8iCN/xiOvwRP0evH6fE68AzOH+Ke2eWYhw3PcGnuxvkr4A3QaGRZB7wFLAEHg2XgiEZ/fHKcp/ceBh/A+cngFPCpRm6vM3E8l8a5gN67GMdvgqsbeX2ap9yI601gM7gN3AG20mfuo8cdOP6GpvdUg9oKxz839GV90RDO2/glxN1B790NXsN1rZll7WYRdw+c70uvTwIHNAfTO0RyL5TDmnnbc3lmRQI9UnM0dD5eovfz4FpJ/BNpXNYWV+N6Lfg0hY97JK1vn+Pur9DoQur2F7m436bHDUK8C5t5/8vruo4+97WmXG+GLmzEiBF+PDwEOowYMWLEiBEjRoxYeBw5BDqIPEfXut9yWN+vVNxfrnnmWqR/PdgENoMt4E5wD9gOHgCPgifBs2BXM99b2o3jP8F/wMRUlrXAHNgHvH0q3895J46HguXgWHAGLctmLv9VuL96qnp7jxgxYsSbCbJvuRZ97/tqxT59VVRtixEjRsThBG7OSt5zzoPT0M+cBc4T5noXOs79TqLHeZrHUeCSqeJ96gacXy2kecNU8V6Hh7yXuQlhtw7B/PO1RTkr52Aj8JNFZjYg3gOKuC/g/v6Ls2wNuAY8urg//PcIb+6RZXuDNeCS6SzbBrJWlh0DLiFHco8ed9IjzzvaWfa9sZzTcf6D9mCcnbg3PlNcH4fzS8F2MDaLdQG4dLZIJxbbaZqv4ri8k58f3+mPs66T6/TTzqDeI0aMGDGiHP5dcR8ce/xxYcWi6vOfr725uRzcjnngXVOD61Hync+9uL+Nmyfej/NHpvL56A5Jeuz7uyfo+pqcPz2Vf1NH0ttJ03pekt8SmuY/EPYy9zzbN319ym/9TL6ZIt9MHCXRdxJtoAkWTRdz472n87D9cTwYLJvuz++I6WIePo/zE8AHp4v8WLyP0nufnM6/+zoDx8+DL08P6r9+urheRtO+jD6/cdrsx3mqu8w+xH4PScKIXa5D2jeCm8Et4DbwI/BjcC/4BXgI/Bb8DuwEu8Bu8Ap4A9RaRZptnO8J9gUHgEPAoWA5OLY1qMO90GEV7q+mYWtxPBWcIYnL4p+DsPNbxfVFOP86uAr8DNc34HgTDb8Vx9sVaRFI/LtagzYjnCqpb908EX87eBA8Bh4Hf2jle/9/wvGFVv787rrZZy8h7qtgDOuFOmiBuXYRvg/O9wMHgXeB97SLspk4sq0OI/q9v13+ek+sh3zYSRp9jrYorw9ll1/GRzR+KotYZSHf8laVP2lvpA/8OGdPMk59hqtXZ+L8nHbxvWwqO65ryu+fT3VZz+l4dET7L0R072ljsMyzTpaJqQxsbL8M9WajY789DO85XMp/Dcp3Qztdn+9qf/a97ZWK8PXc3G+TpC/nv8Mncy7ZvICF302P5O+aNiOtLdTXd+D4Q7DVwfcvWvx9zTEJ/o5iG3R8YAjGNFseha5PGuZKz7b7xxXbOrXMcu5eJSo//rXdH/73Enz6L1q/X+fyIu8wZGtNBmkjkzNZNgP2AvuBg2bysKUzduXn/66JtNeN4PCZvO0/x7Ujdn4VnYOvRJzjZ/I+9sQZeftX2Tc1RPcPz/Tf4/si0g+t5Mq+kfZjZL34Mc5ul3PPnE7TOxvHK2qDaZ+L++db2HyYqMo/qVnb/P8uH8/rmnFxR0k6DCu/rjj/RxT7KGUSWgbd+LMQuEgYB1zsk2qtvJD8v5AhdfdttbEunSxbcJD9Zf7chqp1Hlbe7FK1/aPVTfp7FgtC1yGGiSncFK/DhZvi+epZta0WWjlsfDZMyPRdSPrryqSSKnXx1bkq/Ye9TlRpk7Lrjq1UrfdC9X+MtKqwP6+3a/4pJFUZF0pZZpv91MYjMBaRRXbxpho5zQmUY3F+Pt4o7rvQrBXPdm00TaE24uMadaM2meLSI7iu071t3er3b6ZLi8JEde3qw+6zGv+ycF5kaRBh/m1T/7Yl/mMyTuMwadP4xL9ifjJpNwbvDZRJ8G8vnqV/Wf12aa/kyOdl69+BspTsXzGueE6E+JfZnvmXIfNPW+FfXkjb1YmqPNpnLP3b61fHCj/X5tzGANf2y3yqvC7Jv7btV4TVbdammI9l/g0dS5lNxLrk2j9r8xjjxhBQnygg0lgg/bOrfyct+udJi/Yrk0lFnxC7f+5kRbsNmcexfrubt0X/rGvLqrGSnYv3ZPHEe8r7lvMvUfi2LOu/2dg8LrRtQt2yfcv8r5IU70VkIs6nbebUXf0M/o7Znl39Sdoz+X1oEb5N8ffF67qhPfPP6eoUbxf+GRf/6sRnvaSdmw+Bf1VxmbD+2sa//DU7t/Gv2PfKpKdrBP92Ojk+IvqX16ks/2qxbL8EZnc2HqsgYuqPuzZV+I3RbujbDm+T0PmWCVO/5jqftp1zy+wSA6s0JWtp2z5e1oZV+yMsjB3ZXolsv0Ulrv01v3/iKrF94Qtbt9siCnmeb6fjjf59KnLk1xaEbvtvFnFirGvEOqmycQrbm/IMsXd3P28uh4nM3swXRER717OiX8kc7K2qqyn2p3maFGU/aruP5VCv+PraoTYU8yUmmbDwcYo6pusnM486xdoga4dkPCb1pK7Sfc6ebvkd4qeAtQcd/N63bB3lU3dlUnUf38VyvqCqK7JxlNSd7lydrDlm+/uqHiRvl30Nrp/n9zpkZRjoJ3V1diyP05rIYXHYs+w+D5+WMS8b5gZtKcuX0KT5d/WwtB97VnyvY6rjMukI56HI0rFJPwt8PjT/1OXzSbcMeEmdh294qvKK4rNu7j4n3LNZg8TKXwafv025U+XvKjHsT8Q7/7LGaJt9lAh7Asz3uv0XEX6t0duDoWN/93wmh92XpUHmCKb9GALbG+rZP3AfNbQPKKv/jpF/bP0JXfuW1QYk7dhljcyvk5mw+933Hpo1g26PQ2ZP6zVmTJt47P25jncD9vPwGS+q9QS/V6RaY8j8K8LmvUr9HfYCpH5OWL9lZY+Sv6pesHCJHbtrf9k6etZvf0G1L0ja4cAe1UT/s3zdCe3/Q5/n372wMc97/E1Qh0Tbmfwh3m/V9On72tNnrCF1sJkVe1EyXMdBa7+lHMsk44zMF6St9e2djNnbm8ybpHkq+gbbemMaH0UZmD8obKGrk7r+nt+3bE7o83YZp/vqOKdv6PzJNN6mTJsI/51XR7i2ZrGA5B6zFwnjzxmqPjaGfW3tZNrz1eljq29mOOqeCfF/irRt87PNw0uXSVAvrmOMNT569MptsYaV0sic/wbY13e8hPrb9K2ySUJ0j6G/Lu0U4qpTrR23jMp6m5hU+YTaWCeh9aIsm/rqUHV4bFv42kgnZdfH1PUj1D7DVH9d8khRN1zFRl/+/TW//qxL1uH83+mk3H+SvRtS2TDU90nX2TpM6/1xzZpZtoYdK763dqlz0f6uNeFehcs+H/nbGP77MpX06n/ofpzP+tVmTUvRtVuX/cjS67OE5kRBrxyJ+w/dPo7r+9cO1160e3gqu0S2uW7PjN/L6ns/UfMf10Lai87frJ+3KndAfc8yTf1M3T4s6qm4/yh7/2GSkG8UMw//DvRLgbYZSEOxr0LCWvRdjfh9XGzfqN4NivfZd7rsmFp08zmbssrKJEuTfVMZopdpbuwSrhNv3/N2s+0PDG3KNB6RMrFvJHv6B85HXObAoWsd3zm3i+6uZYytv+5+pohbpo6+tpZJFfmGlrcMf4c8b1Pe2OUIsaXJrinCTfaxtZOt+NYnU3hIfQlN20Z/1+dt7JaqLsbIzycNWZmrlNg2Dc2/LJ1T+T6WrrYSml4Ku7ik7yIx2opJD51vU9UfVRmrqL8u/olZj0PyCLV5irxcdKoi/6rKb8qTrHsnhW9jyZH/nSpeWDzxd9769uQ016lgUuf2pAfKPhu2FpfZL2Yb9snLNl/fNIepXaUsj4vNXCXUZ75px8ojNP8UPvAta2g6fb+F1ckZuneshv1vGXXDeyRRrN/bBPS1Jul+l+7zW86R7Wv63WXyDpt/RxraRjvC+TC3O61/Sqj/prag8x372yQivn+XwudrI2X2E2KdtJEov52e0L+uv4FO3p/rvssgsL8F4d/z9PzlWS94m8fqS3361Fi+6qaVYHwi9Yz4iH2fobIj+45cpz/TUaarr/4+z+vaWtVtyAX2d1LG8W9C3f+F1mnf36/k4w3YPrLv+XBVXCJs3cr+n4MKJuLv/fN9GhNdXVP5pJMN9vFi3rpv3/r8Ywg3SYp66zNOsO8QGcxPpnmRS/1mvmJjju3v7absI2xspQrvs1dNbjOj/wP7h1RlZyKGy8occ408UL8En4v6xfC/K3z52XzJd62T8vuZGGsxo/6O46ntmNqqFb/jps2/hHV4rPKH0svT4pstU7t2tZ9u/ZdqbJL1MwP6O86Fyt4jYaIrGz9mjEt8lFL4PtVE6votG2P6fpdf/GZRse7s3bf4BtSl/DIbKMctx++Z+8o6K6z9FPOwKsRmXiaNl7C+6NYRpjlbqG1j72f49qsuY4brd/amb4ZVc8TQ+sSH985LrEe8iPWJnfPrJRbWbb+dwn4x6o+r/aS2S7w3qWt//LnYz2ntE0vH1uDcyKatx1rH+EiMPEN1SZG/iz6+9o01Rob6O7Q+xLZ1jHobK61U+pWVvo2EpuWqzzD6Poa+pvhli0wn8Zq/72Mzm2d90o5VN1x9ZKuzbTgvqWwUIin8FSpl1CXXvFRxU0iozVPYJDRtF3uFphn6XAyJUUdD7SjTJ8v6n9fVbVObkKWp001lc9VRlqdOf5v0ZM+bymdbfp1NfG0bq27Y5JMyfxeJkU6o/inKH8O2Zfgidb6h/g3VJ7QcVbWL0Pxt6rlrPqa4KfQ25a2zl4/E8GdM/4fK/wA=")),UO=new(o0(O$))(o0(qQ));class h0 extends j6{static planFeatures(x){x.addStage(KO),x.addStage(["locl","ccmp"]),x.addStage(XO),x.addStage("nukt"),x.addStage("akhn"),x.addStage("rphf",!1),x.addStage("rkrf"),x.addStage("pref",!1),x.addStage("blwf",!1),x.addStage("abvf",!1),x.addStage("half",!1),x.addStage("pstf",!1),x.addStage("vatu"),x.addStage("cjct"),x.addStage("cfar",!1),x.addStage(jO),x.addStage({local:["init"],global:["pres","abvs","blws","psts","haln","dist","abvm","blwm","calt","clig"]}),x.unicodeScript=Vj(x.script),x.indicConfig=d$[x.unicodeScript]||d$.Default,x.isOldSpec=x.indicConfig.hasOldSpec&&x.script[x.script.length-1]!=="2"}static assignFeatures(x,d){for(let b=d.length-1;b>=0;b--){let c=d[b].codePoints[0],q=VO[c]||NO[c];if(q){let $=q.map((Y)=>{let G=x.font.glyphForCodePoint(Y);return new yx(x.font,G.id,[Y],d[b].features)});d.splice(b,1,...$)}}}}Rx._(h0,"zeroMarkWidths","NONE");function L8(x){return QQ.get(x.codePoints[0])>>8}function YQ(x){return 1<<(QQ.get(x.codePoints[0])&255)}class l2{constructor(x,d,b,c){this.category=x,this.position=d,this.syllableType=b,this.syllable=c}}function KO(x,d){let b=0,c=0;for(let[q,$,Y]of UO.match(d.map(L8))){if(q>c){++b;for(let G=c;G<q;G++)d[G].shaperInfo=new l2(R0.X,d0.End,"non_indic_cluster",b)}++b;for(let G=q;G<=$;G++)d[G].shaperInfo=new l2(1<<L8(d[G]),YQ(d[G]),Y[0],b);c=$+1}if(c<d.length){++b;for(let q=c;q<d.length;q++)d[q].shaperInfo=new l2(R0.X,d0.End,"non_indic_cluster",b)}}function E7(x){return x.shaperInfo.category&JO}function b6(x){return x.shaperInfo.category&$Q}function N6(x){return x.shaperInfo.category&p2}function R6(x,d){for(let c of x)c.features={[d]:!0};return x[0]._font._layoutEngine.engine.GSUBProcessor.applyFeatures([d],x),x.length===1}function RO(x,d,b){let c=[b,d,b];if(R6(c.slice(0,2),"blwf")||R6(c.slice(1,3),"blwf"))return d0.Below_C;else if(R6(c.slice(0,2),"pstf")||R6(c.slice(1,3),"pstf"))return d0.Post_C;else if(R6(c.slice(0,2),"pref")||R6(c.slice(1,3),"pref"))return d0.Post_C;return d0.Base_C}function XO(x,d,b){let c=b.indicConfig,q=x._layoutEngine.engine.GSUBProcessor.features,$=x.glyphForCodePoint(9676).id,Y=x.glyphForCodePoint(c.virama).id;if(Y){let G=new yx(x,Y,[c.virama]);for(let E=0;E<d.length;E++)if(d[E].shaperInfo.position===d0.Base_C)d[E].shaperInfo.position=RO(x,d[E].copy(),G)}for(let G=0,E=f3(d,0);G<d.length;G=E,E=f3(d,G)){let{category:J,syllableType:V}=d[G].shaperInfo;if(V==="symbol_cluster"||V==="non_indic_cluster")continue;if(V==="broken_cluster"&&$){let j=new yx(x,$,[9676]);j.shaperInfo=new l2(1<<L8(j),YQ(j),d[G].shaperInfo.syllableType,d[G].shaperInfo.syllable);let e=G;while(e<E&&d[e].shaperInfo.category===R0.Repha)e++;d.splice(e++,0,j),E++}let N=E,U=G,K=!1;if(c.rephPos!==d0.Ra_To_Become_Reph&&q.rphf&&G+3<=E&&(c.rephMode==="Implicit"&&!b6(d[G+2])||c.rephMode==="Explicit"&&d[G+2].shaperInfo.category===R0.ZWJ)){let j=[d[G].copy(),d[G+1].copy(),d[G+2].copy()];if(R6(j.slice(0,2),"rphf")||c.rephMode==="Explicit"&&R6(j,"rphf")){U+=2;while(U<E&&b6(d[U]))U++;N=G,K=!0}}else if(c.rephMode==="Log_Repha"&&d[G].shaperInfo.category===R0.Repha){U++;while(U<E&&b6(d[U]))U++;N=G,K=!0}switch(c.basePos){case"Last":{let j=E,e=!1;do{let M=d[--j].shaperInfo;if(E7(d[j])){if(M.position!==d0.Below_C&&(M.position!==d0.Post_C||e)){N=j;break}if(M.position===d0.Below_C)e=!0;N=j}else if(G<j&&M.category===R0.ZWJ&&d[j-1].shaperInfo.category===R0.H)break}while(j>U);break}case"First":N=G;for(let j=N+1;j<E;j++)if(E7(d[j]))d[j].shaperInfo.position=d0.Below_C}if(K&&N===G&&U-N<=2)K=!1;for(let j=G;j<N;j++){let e=d[j].shaperInfo;e.position=Math.min(d0.Pre_C,e.position)}if(N<E)d[N].shaperInfo.position=d0.Base_C;for(let j=N+1;j<E;j++)if(d[j].shaperInfo.category===R0.M){for(let e=j+1;e<E;e++)if(E7(d[e])){d[e].shaperInfo.position=d0.Final_C;break}break}if(K)d[G].shaperInfo.position=d0.Ra_To_Become_Reph;if(b.isOldSpec){let j=b.unicodeScript!=="Malayalam";for(let e=N+1;e<E;e++)if(d[e].shaperInfo.category===R0.H){let M;for(M=E-1;M>e;M--)if(E7(d[M])||j&&d[M].shaperInfo.category===R0.H)break;if(d[M].shaperInfo.category!==R0.H&&M>e){let F=d[e];d.splice(e,0,...d.splice(e+1,M-e)),d[M]=F}break}}let X=d0.Start;for(let j=G;j<E;j++){let e=d[j].shaperInfo;if(e.category&($Q|R0.N|R0.RS|R0.CM|p2&e.category)){if(e.position=X,e.category===R0.H&&e.position===d0.Pre_M){for(let M=j;M>G;M--)if(d[M-1].shaperInfo.position!==d0.Pre_M){e.position=d[M-1].shaperInfo.position;break}}}else if(e.position!==d0.SMVD)X=e.position}let D=N;for(let j=N+1;j<E;j++)if(E7(d[j])){for(let e=D+1;e<j;e++)if(d[e].shaperInfo.position<d0.SMVD)d[e].shaperInfo.position=d[j].shaperInfo.position;D=j}else if(d[j].shaperInfo.category===R0.M)D=j;let L=d.slice(G,E);L.sort((j,e)=>j.shaperInfo.position-e.shaperInfo.position),d.splice(G,L.length,...L);for(let j=G;j<E;j++)if(d[j].shaperInfo.position===d0.Base_C){N=j;break}for(let j=G;j<E&&d[j].shaperInfo.position===d0.Ra_To_Become_Reph;j++)d[j].features.rphf=!0;let H=!b.isOldSpec&&c.blwfMode==="Pre_And_Post";for(let j=G;j<N;j++)if(d[j].features.half=!0,H)d[j].features.blwf=!0;for(let j=N+1;j<E;j++)d[j].features.abvf=!0,d[j].features.pstf=!0,d[j].features.blwf=!0;if(b.isOldSpec&&b.unicodeScript==="Devanagari"){for(let j=G;j+1<N;j++)if(d[j].shaperInfo.category===R0.Ra&&d[j+1].shaperInfo.category===R0.H&&(j+1===N||d[j+2].shaperInfo.category===R0.ZWJ))d[j].features.blwf=!0,d[j+1].features.blwf=!0}let O=2;if(q.pref&&N+O<E)for(let j=N+1;j+O-1<E;j++){let e=[d[j].copy(),d[j+1].copy()];if(R6(e,"pref")){for(let M=0;M<O;M++)d[j++].features.pref=!0;if(q.cfar)for(;j<E;j++)d[j].features.cfar=!0;break}}for(let j=G+1;j<E;j++)if(b6(d[j])){let e=d[j].shaperInfo.category===R0.ZWNJ,M=j;do if(M--,e)delete d[M].features.half;while(M>G&&!E7(d[M]))}}}function jO(x,d,b){let c=b.indicConfig,q=x._layoutEngine.engine.GSUBProcessor.features;for(let $=0,Y=f3(d,0);$<d.length;$=Y,Y=f3(d,$)){let G=!!q.pref,E=$;for(;E<Y;E++)if(d[E].shaperInfo.position>=d0.Base_C){if(G&&E+1<Y){for(let J=E+1;J<Y;J++)if(d[J].features.pref){if(!(d[J].substituted&&d[J].isLigated&&!d[J].isMultiplied)){E=J;while(E<Y&&N6(d[E]))E++;d[E].shaperInfo.position=d0.BASE_C,G=!1}break}}if(b.unicodeScript==="Malayalam")for(let J=E+1;J<Y;J++){while(J<Y&&b6(d[J]))J++;if(J===Y||!N6(d[J]))break;J++;while(J<Y&&b6(d[J]))J++;if(J<Y&&E7(d[J])&&d[J].shaperInfo.position===d0.Below_C)E=J,d[E].shaperInfo.position=d0.Base_C}if($<E&&d[E].shaperInfo.position>d0.Base_C)E--;break}if(E===Y&&$<E&&d[E-1].shaperInfo.category===R0.ZWJ)E--;if(E<Y)while($<E&&d[E].shaperInfo.category&(R0.N|p2))E--;if($+1<Y&&$<E){let J=E===Y?E-2:E-1;if(b.unicodeScript!=="Malayalam"&&b.unicodeScript!=="Tamil"){while(J>$&&!(d[J].shaperInfo.category&(R0.M|p2)))J--;if(N6(d[J])&&d[J].shaperInfo.position!==d0.Pre_M){if(J+1<Y&&b6(d[J+1]))J++}else J=$}if($<J&&d[J].shaperInfo.position!==d0.Pre_M){for(let V=J;V>$;V--)if(d[V-1].shaperInfo.position===d0.Pre_M){let N=V-1;if(N<E&&E<=J)E--;let U=d[N];d.splice(N,0,...d.splice(N+1,J-N)),d[J]=U,J--}}}if($+1<Y&&d[$].shaperInfo.position===d0.Ra_To_Become_Reph&&d[$].shaperInfo.category===R0.Repha!==(d[$].isLigated&&!d[$].isMultiplied)){let J,V=c.rephPos,N=!1;if(V!==d0.After_Post){J=$+1;while(J<E&&!N6(d[J]))J++;if(J<E&&N6(d[J])){if(J+1<E&&b6(d[J+1]))J++;N=!0}if(!N&&V===d0.After_Main){J=E;while(J+1<Y&&d[J+1].shaperInfo.position<=d0.After_Main)J++;N=J<Y}if(!N&&V===d0.After_Sub){J=E;while(J+1<Y&&!(d[J+1].shaperInfo.position&(d0.Post_C|d0.After_Post|d0.SMVD)))J++;N=J<Y}}if(!N){J=$+1;while(J<E&&!N6(d[J]))J++;if(J<E&&N6(d[J])){if(J+1<E&&b6(d[J+1]))J++;N=!0}}if(!N){J=Y-1;while(J>$&&d[J].shaperInfo.position===d0.SMVD)J--;if(N6(d[J])){for(let K=E+1;K<J;K++)if(d[K].shaperInfo.category===R0.M)J--}}let U=d[$];if(d.splice($,0,...d.splice($+1,J-$)),d[J]=U,$<E&&E<=J)E--}if(G&&E+1<Y){for(let J=E+1;J<Y;J++)if(d[J].features.pref){if(d[J].isLigated&&!d[J].isMultiplied){let V=E;if(b.unicodeScript!=="Malayalam"&&b.unicodeScript!=="Tamil"){while(V>$&&!(d[V-1].shaperInfo.category&(R0.M|p2)))V--;if(V>$&&d[V-1].shaperInfo.category===R0.M){let K=J;for(let X=E+1;X<K;X++)if(d[X].shaperInfo.category===R0.M){V--;break}}}if(V>$&&N6(d[V-1])){if(V<Y&&b6(d[V]))V++}let N=J,U=d[N];if(d.splice(V+1,0,...d.splice(V,N-V)),d[V]=U,V<=E&&E<N)E++}break}}if(d[$].shaperInfo.position===d0.Pre_M&&(!$||!/Cf|Mn/.test(X6.getCategory(d[$-1].codePoints[0]))))d[$].features.init=!0}}function f3(x,d){if(d>=x.length)return d;let b=x[d].shaperInfo.syllable;while(++d<x.length&&x[d].shaperInfo.syllable===b);return d}var{categories:OO,decompositions:b$}=o0(Q3),HO=new(o0(M8))(I8("AAACAAAAAAAQugAAAQUO+vHtnHuMX0UVx2d3u/t7bXe7FlqgvB+mpQhFmhikMRAg0ZQmakMU+cPWBzZisEGNjUpoiIYCEgmGUGOEGqOVNPUZUGNA+QNIBU2KREEFFSMBUYRISMXE+B3vnPzOzp553tcWfif5ZO5jnufMzJ2ZO/eumlDqFLAWnAMuBBvBZnC5uXZeBe4WsA1sBzs8/naCXcL1G8GtYDfYA74NvgfuAfcZHmT+fwEeBb8DTwvxPQWeAavACyZvq8z9VYxXwCGglijVBcvACnA8eCM4E6wHG8BF4BLwbvA+8AHwUbAd7AA7wS5wC9gN7gR7wX5wN7gXPAAeBr8Gvwd/Ac+CF8EhoCaV6oBZsBKcAE4FZ0wWeV8P9zxwoTnfCHczuBxsAdvAx8Gnzf1r4X4B3AxuA1+bHJb9m5PzdVGW/Yjv+xXHyfmxFfd9OH8Q/Ar8Bjw1WZT3GfACeAX8N5CfqSmlZsAKsGqqCH8K3DXgbHCuuXYB3HeAd4HLpgrdarbi+EPgY+CT4HPg8ybMTcb9MtyvghtYut/A+b4pf95+ELgfw08Qx/3gADgInjDl0veehPtX8A/wsrn2KtzxDuogWNoJx38k/BzXKeI8Ee5qcBZYD9aZtDbg+AwT19uMX83F7JizCdcvBZdZ97c6/BMfMWmfzfTm88/95aLj+DDSvApcDXZ04uPfaen3TMHPLvi5BezuFPVtD4t/qUcfe3FvP7gb3Ouwo9T+H+gMy/UIjh8DfwBPm7T08d/M8WMBe1Sh3xEjXo+M2s+IESNGjBgxYsSI1wLrOsM1gRsi/P+TzV3/Zc1jvxgR/j8IM9Et1mEGcJeDFeA4cJq5/ia467uF/w1wzwdvB+80998LdwvYZs63w90Bdnbd6Wp/uzz3R4wYMWJEvZzTMm2Xf8SIEfVQd/v+EsaPt3eL90J3wP2WMJ78Trd4t6+P77Hu37cIxp9/ny6YXqrUJeCR6TA74e/nll81MzxejeMtYA94HBwy91bPYow+O/S3A8d7oIM/gRN7CAP29Iqx/B1ThfuwOecM+vA3NmRjf6Gfm3BtH7v+PI7XDpS6EuwDz4O10+0/f9om1F4ehO4OmHp6EO7jxl56nvhsN/15ut+4Z0b657yYkZ7UJ0jhX0bcr3bn+6P87vekN4762QNzvWHZtL+jcH5srzg/uTf0f3pvfj5i+6tYW7rK9+aefO+tuL4BXAQ2gs3gPeBJc//9OL4CXAWuNvc/A64DN4Jbwe0s7jtxvBfsAz8EPwX3gwPgoJAHPQ9/Atf/bO7p/TTP4fglwS/5/zfujfWH5z0cz4Gj+8X5Sf1ib4m+vwbHZ/fdOtP+z+3LOnPp/QL4vxhsApeCy8BWk/a2ftFmYu22Hf4/Ba4B14Hrwc0sP7fh+Cvg6+Au8F1WthA/8pT7UeTxZ/12njkuXT8UyM9i6iur1EEb6f+yPz/eg0b3v4X7x365fMaW42lPu7PTv6vi8i/G+lWF/cvUk7bLl1r+5/rN5tu3j2qvWTd/qV+4h+AqjDGnBsX59GDo94iBXDa6v6Yjl6vu+h8itJcsZq/ZykHhHg/3tMHhUe9s/Yfuny7YNxTvQ8LYdrER2+/c0GBezhrMv3ZNRv7PmYirh7oOv4W1Y72/cwPOzx8U7X8d2295sfE3MPnbBPfSQbHv9nK4HxTqiK/trI7Yy5mLzvuVg/nX+N7V51A3r+gMy/4J434W7l2dYf5PZWGuNX6uh3uzEPetuLY7sZ20zTETY2oxyBhj3DrnfsidYPeXRGLHpxzX6pbFofGRkFBdGhcgW40L4cYtd9JAElO36q4LEzXHX7VMtZ2BEhJjy9dT25fazOtJxhwsBrHzwfu8w12kMYN9fLhIbp2RxlI59rX1dzjpsKl2Fxt3iu6rbofc9q5+KcRrXVzzDn6/Crvk6p/y1GFgGhs9/6maHjBLgv8/18fTxl1q0bPoW8ywsFTGWaazHosrNn/kP2eeqEroZYLZphsZl7L82eephMIqNT8dyT9JjH1Jpg32ubZvTB/SF665ymSnnaqjUHum+1Qn+NyOtz9f2r6y5OQ51b6hYy0D40r2tYXar30+Y/mbVX6JqY+hMC60XZapoh3S/HdOpT3DYu3rs0lKnquyb277JZvyPlqp+f1zVVK2/dJYNpQGf04uYyh1+PTPqfalZ2tO/xwSu+3bOrDzmWvfcTW/fLmibRx6lkvlcOlc8qsE/y5/rnSk67F1iAu1VT6+4jKt5tufn8e2b+n57JKcckhrsKG1Cd6Wu+Y8tf2l5DenPafqQZ/7xstKLeyr+XnInjSelvRgS9n27JPQM5n6Am7jmLG8VK6m7OvyS2L313XYV2r/tth5LWPfNxhyhI+1Up7HVbe/HMgeZE8brtNQ/7tcyX0cn//H2LTO9kpir5VI6yYp9szJW9W2jI1Tqfl5ic2v1GZ5XaG6RDZbyvxMO/DVh1SdUj5y1vraaHs+2/TYNXvtSRoXk4wrf9w6fEctnFt0zL2y+xFsfSrLza2zOTqMiZv8xOpbn8+xsL5ykdj6VsxNKb/Lvxb7nX8u48y1x6yuMW3V9tNxTlouzXslibVxndjC14xda8g2NIbg5x01XAP2lfeIBFSi/zrQEporTXru8fCueiy1CUnqrhspSM9SzbSS64tep9R1ZsZcOxKsUEUfNZeYtr0vjY5DeXW915hT8/PRV8MxlR1HV4DHZZc9R7dzajgWoXikdLtGr0uEfPigsGS/NvYjSHW87XejoXZehZ74XrcqpQ4d5T5f7Gu8f6g7fQmefoqOqk4/VarQv2o4/VDetPDnhjR2dc3BCBp/9NVw7KGfwStVMf6aZNAajj6224j9HCZbpZa/LvH1gU30i/q5WnUdSNEprxv2eIOwx2pcjjLMsmObo008k0J4u69P3d9QdbspW/dy080Nb8PXqcrmj0vsc7tu6qwD1A5oLYr3U3XWSxqj6/a10nCMkudJMyxvrvbK55jUrqU+Xlr/Iai98jY7mVAml5QNHxq31j2m5TrSdmp6z5p+9kpzQntdQbI1Pafr6I9C60gxrALHGtdF6tyhLTtxeBuW+hhqyzPMX931xl6rJ5f6n5h3blpsW7vKbvdBfL1gpYfjDLrvob1drrRT+mcuMf1OrJSdW/P+RfufdUB+pOtdTzhpL5t0jfKr46P3obQfQdPGt1jS+DEkx4MT2PmEg1j72OthqfZNWX+JuZ4at/2sTAmn5cSIMqZIjk0pnD0+aUI6YS9ekdaspWsp8cWEC62dS66UTkq+ypajyvXSlPz4xhQhm/ns6wpXBVI560jHN9aKkdT46spvWT916rONdHNsGSNtl6Hp8oakTVukpF9n3U3Jx0TNefbp3R4jltVfFfpvQkJpNaH/puyco++qbZPz7sE1L3DFGVovc4XPLUPO3ELyrzLiSpmPhaTJfqeJ+t60PiTh9snNW2656upDQ+Wtyg6ueJquB7HSVPspW9a28lDWJouhb6iyv7XjTfVL67j2vjDpvUfMt1Vl4GvctMaeq/vYcFWXIfV5Ku3XaxK951H6dsWFrhcxa3pU/pz3C1xc71tTcaXjGjtJbYIj7UHm7wxSyx+D/d7SfpfJ3wPpfSQp32tS2dt8V2tD7+Bce3rpPa3eC6Dr8Ulq+K+J3HFvbn312Zv2RdStr9g0pP0P/B04XbP3Q8cIT2dlRF6orkrhY/Rv27FqHfL1DP480ffo/V6V7aTHXLKDbTdXOOrnyG1ScvSv6xqve30lPzdpj36M8Pilb+L5vr0xE3dd30nWIfZ45uSSxK4x+CRmTUK6F/LrSsfnj+aOdYyvpXyMK7/OpHWjlDTsa0rJum5K7Ppnj7F9c+0q0qtr7pQji2X9oMwcVrJfmblwU2V2SV3rEk3YuO46XXf8MfrQz077G2zftyDkj/ZqhcZr9nldkOg5ykAt3GunJbR3NGYsUfWafd3ts853C4dLHppOM6WcfM5C+xSbaC/2HMa1H9v1vXdoXm/LKSVpYh5wqmr/X67SfwHtPc9a97p/k8bt0hpbW0j1Svr2m+7Rd98qIQ1pvSF273dKOjHYNmk6fd8/JX3tWIddblBqoU5p7zrZKnd9TppjVq0DSitWqkwz12b2exb7vwjaRvS/TFd/S+8AYvIo+Suri5TwvvZRdV1IQevQ1/8SA+UeH5eto7n/X1Oe86ptaafl8kPjcF7P7W93eD9d5n+oSvn7fFe7I/G9q1IBfylSR71N6fft94ZU18hOXKR+JqUO8f4+5dvLsmWlMQb/Vov+CUDlpTGUndeQlG3fdZWdRPoPgl3mmDlsLnaey/4X3tVuU+o6L3/Pym+qlLV/jk6rlBRd8394hZ6JdnuqIv2ykOh3pfq96Wkq/E8qu2xl88/tOJ4R3tfmpbGi3c5T859bzqr7MbsN03iI5itUNj5eaEKWqIX/KJCQ/iFWNZMmHXs8ovWk53JzFq5vPul6zDjLV36pX7bzvNzB0YlQOZephWtRS5T7eeSq8030R77/HvC1d7tN83Zt9yltrDdwSR0XxsZd5l+MvvvU1/M9jSnj+Nh6FPJbBld/w6XHXH5MZeXrOfS/65g9RTl1JCa8chzX2RZ9/3lXSh4/VqWfEBNq4b82Ytp6m+9Qqxir1jX+rfPdT1vvsWhM6bPbmON6E1LnPCZW7L0qqXswmtqf0MQelZj4myrzYtzvIYmURlvtqapyx+gzRfd0XPfahVSOquMoG+dibBdl46iyfdbV1qvUW9m8+KTudMvkzZe/pqTJ+pWTflX5zw1fVfox6ZTVc8hvHflOSb+OuG1JsZ0kufXAJf8D")),WO=new(o0(O$))(o0(Q3));class N0 extends j6{static planFeatures(x){x.addStage(LO),x.addStage(["locl","ccmp","nukt","akhn"]),x.addStage(q$),x.addStage(["rphf"],!1),x.addStage(DO),x.addStage(q$),x.addStage(["pref"]),x.addStage(eO),x.addStage(["rkrf","abvf","blwf","half","pstf","vatu","cjct"]),x.addStage(MO),x.addStage(["abvs","blws","pres","psts","dist","abvm","blwm"])}static assignFeatures(x,d){for(let b=d.length-1;b>=0;b--){let c=d[b].codePoints[0];if(b$[c]){let q=b$[c].map(($)=>{let Y=x.font.glyphForCodePoint($);return new yx(x.font,Y.id,[$],d[b].features)});d.splice(b,1,...q)}}}}Rx._(N0,"zeroMarkWidths","BEFORE_GPOS");function c$(x){return HO.get(x.codePoints[0])}class GQ{constructor(x,d,b){this.category=x,this.syllableType=d,this.syllable=b}}function LO(x,d){let b=0;for(let[c,q,$]of WO.match(d.map(c$))){++b;for(let G=c;G<=q;G++)d[G].shaperInfo=new GQ(OO[c$(d[G])],$[0],b);let Y=d[c].shaperInfo.category==="R"?1:Math.min(3,q-c);for(let G=c;G<c+Y;G++)d[G].features.rphf=!0}}function q$(x,d){for(let b of d)b.substituted=!1}function DO(x,d){for(let b of d)if(b.substituted&&b.features.rphf)b.shaperInfo.category="R"}function eO(x,d){for(let b of d)if(b.substituted)b.shaperInfo.category="VPre"}function MO(x,d){let b=x.glyphForCodePoint(9676).id;for(let c=0,q=$$(d,0);c<d.length;c=q,q=$$(d,c)){let $,Y,G=d[c].shaperInfo,E=G.syllableType;if(E!=="virama_terminated_cluster"&&E!=="standard_cluster"&&E!=="broken_cluster")continue;if(E==="broken_cluster"&&b){let J=new yx(x,b,[9676]);J.shaperInfo=G;for($=c;$<q&&d[$].shaperInfo.category==="R";$++);d.splice(++$,0,J),q++}if(G.category==="R"&&q-c>1){for($=c+1;$<q;$++)if(G=d[$].shaperInfo,Q$(G)||a4(d[$])){if(a4(d[$]))$--;d.splice(c,0,...d.splice(c+1,$-c),d[$]);break}}for($=c,Y=q;$<q;$++)if(G=d[$].shaperInfo,Q$(G)||a4(d[$]))Y=a4(d[$])?$+1:$;else if((G.category==="VPre"||G.category==="VMPre")&&Y<$)d.splice(Y,1,d[$],...d.splice(Y,$-Y))}}function $$(x,d){if(d>=x.length)return d;let b=x[d].shaperInfo.syllable;while(++d<x.length&&x[d].shaperInfo.syllable===b);return d}function a4(x){return x.shaperInfo.category==="H"&&!x.isLigated}function Q$(x){return x.category==="B"||x.category==="GB"}var AO={arab:U6,mong:U6,syrc:U6,"nko ":U6,phag:U6,mand:U6,mani:U6,phlp:U6,hang:Z8,bng2:h0,beng:h0,dev2:h0,deva:h0,gjr2:h0,gujr:h0,guru:h0,gur2:h0,knda:h0,knd2:h0,mlm2:h0,mlym:h0,ory2:h0,orya:h0,taml:h0,tml2:h0,telu:h0,tel2:h0,khmr:h0,bali:N0,batk:N0,brah:N0,bugi:N0,buhd:N0,cakm:N0,cham:N0,dupl:N0,egyp:N0,gran:N0,hano:N0,java:N0,kthi:N0,kali:N0,khar:N0,khoj:N0,sind:N0,lepc:N0,limb:N0,mahj:N0,mtei:N0,modi:N0,hmng:N0,rjng:N0,saur:N0,shrd:N0,sidd:N0,sinh:h0,sund:N0,sylo:N0,tglg:N0,tagb:N0,tale:N0,lana:N0,tavt:N0,takr:N0,tibt:N0,tfng:N0,tirh:N0,latn:j6,DFLT:j6};function FO(x){if(!Array.isArray(x))x=[x];for(let d of x){let b=AO[d];if(b)return b}return j6}class EQ extends s2{applyLookup(x,d){switch(x){case 1:{let c=this.coverageIndex(d.coverage);if(c===-1)return!1;let q=this.glyphIterator.cur;switch(d.version){case 1:q.id=q.id+d.deltaGlyphID&65535;break;case 2:q.id=d.substitute.get(c);break}return!0}case 2:{let c=this.coverageIndex(d.coverage);if(c!==-1){let q=d.sequences.get(c);if(q.length===0)return this.glyphs.splice(this.glyphIterator.index,1),!0;this.glyphIterator.cur.id=q[0],this.glyphIterator.cur.ligatureComponent=0;let $=this.glyphIterator.cur.features,Y=this.glyphIterator.cur,G=q.slice(1).map((E,J)=>{let V=new yx(this.font,E,void 0,$);return V.shaperInfo=Y.shaperInfo,V.isLigated=Y.isLigated,V.ligatureComponent=J+1,V.substituted=!0,V.isMultiplied=!0,V});return this.glyphs.splice(this.glyphIterator.index+1,0,...G),!0}return!1}case 3:{let c=this.coverageIndex(d.coverage);if(c!==-1){let q=0;return this.glyphIterator.cur.id=d.alternateSet.get(c)[q],!0}return!1}case 4:{let c=this.coverageIndex(d.coverage);if(c===-1)return!1;for(let q of d.ligatureSets.get(c)){let $=this.sequenceMatchIndices(1,q.components);if(!$)continue;let Y=this.glyphIterator.cur,G=Y.codePoints.slice();for(let X of $)G.push(...this.glyphs[X].codePoints);let E=new yx(this.font,q.glyph,G,Y.features);E.shaperInfo=Y.shaperInfo,E.isLigated=!0,E.substituted=!0;let J=Y.isMark;for(let X=0;X<$.length&&J;X++)J=this.glyphs[$[X]].isMark;E.ligatureID=J?null:this.ligatureID++;let V=Y.ligatureID,N=Y.codePoints.length,U=N,K=this.glyphIterator.index+1;for(let X of $){if(J)K=X;else while(K<X){var b=U-N+Math.min(this.glyphs[K].ligatureComponent||1,N);this.glyphs[K].ligatureID=E.ligatureID,this.glyphs[K].ligatureComponent=b,K++}V=this.glyphs[K].ligatureID,N=this.glyphs[K].codePoints.length,U+=N,K++}if(V&&!J)for(let X=K;X<this.glyphs.length;X++)if(this.glyphs[X].ligatureID===V){var b=U-N+Math.min(this.glyphs[X].ligatureComponent||1,N);this.glyphs[X].ligatureComponent=b}else break;for(let X=$.length-1;X>=0;X--)this.glyphs.splice($[X],1);return this.glyphs[this.glyphIterator.index]=E,!0}return!1}case 5:return this.applyContext(d);case 6:return this.applyChainingContext(d);case 7:return this.applyLookup(d.lookupType,d.extension);default:throw new Error(`GSUB lookupType ${x} is not supported`)}}}class JQ extends s2{applyPositionValue(x,d){let b=this.positions[this.glyphIterator.peekIndex(x)];if(d.xAdvance!=null)b.xAdvance+=d.xAdvance;if(d.yAdvance!=null)b.yAdvance+=d.yAdvance;if(d.xPlacement!=null)b.xOffset+=d.xPlacement;if(d.yPlacement!=null)b.yOffset+=d.yPlacement;let c=this.font._variationProcessor,q=this.font.GDEF&&this.font.GDEF.itemVariationStore;if(c&&q){if(d.xPlaDevice)b.xOffset+=c.getDelta(q,d.xPlaDevice.a,d.xPlaDevice.b);if(d.yPlaDevice)b.yOffset+=c.getDelta(q,d.yPlaDevice.a,d.yPlaDevice.b);if(d.xAdvDevice)b.xAdvance+=c.getDelta(q,d.xAdvDevice.a,d.xAdvDevice.b);if(d.yAdvDevice)b.yAdvance+=c.getDelta(q,d.yAdvDevice.a,d.yAdvDevice.b)}}applyLookup(x,d){switch(x){case 1:{let c=this.coverageIndex(d.coverage);if(c===-1)return!1;switch(d.version){case 1:this.applyPositionValue(0,d.value);break;case 2:this.applyPositionValue(0,d.values.get(c));break}return!0}case 2:{let c=this.glyphIterator.peek();if(!c)return!1;let q=this.coverageIndex(d.coverage);if(q===-1)return!1;switch(d.version){case 1:let $=d.pairSets.get(q);for(let E of $)if(E.secondGlyph===c.id)return this.applyPositionValue(0,E.value1),this.applyPositionValue(1,E.value2),!0;return!1;case 2:let Y=this.getClassID(this.glyphIterator.cur.id,d.classDef1),G=this.getClassID(c.id,d.classDef2);if(Y===-1||G===-1)return!1;var b=d.classRecords.get(Y).get(G);return this.applyPositionValue(0,b.value1),this.applyPositionValue(1,b.value2),!0}}case 3:{let c=this.glyphIterator.peekIndex(),q=this.glyphs[c];if(!q)return!1;let $=d.entryExitRecords[this.coverageIndex(d.coverage)];if(!$||!$.exitAnchor)return!1;let Y=d.entryExitRecords[this.coverageIndex(d.coverage,q.id)];if(!Y||!Y.entryAnchor)return!1;let G=this.getAnchor(Y.entryAnchor),E=this.getAnchor($.exitAnchor),J=this.positions[this.glyphIterator.index],V=this.positions[c],N;switch(this.direction){case"ltr":J.xAdvance=E.x+J.xOffset,N=G.x+V.xOffset,V.xAdvance-=N,V.xOffset-=N;break;case"rtl":N=E.x+J.xOffset,J.xAdvance-=N,J.xOffset-=N,V.xAdvance=G.x+V.xOffset;break}if(this.glyphIterator.flags.rightToLeft)this.glyphIterator.cur.cursiveAttachment=c,J.yOffset=G.y-E.y;else q.cursiveAttachment=this.glyphIterator.index,J.yOffset=E.y-G.y;return!0}case 4:{let c=this.coverageIndex(d.markCoverage);if(c===-1)return!1;let q=this.glyphIterator.index;while(--q>=0&&(this.glyphs[q].isMark||this.glyphs[q].ligatureComponent>0));if(q<0)return!1;let $=this.coverageIndex(d.baseCoverage,this.glyphs[q].id);if($===-1)return!1;let Y=d.markArray[c],G=d.baseArray[$][Y.class];return this.applyAnchor(Y,G,q),!0}case 5:{let c=this.coverageIndex(d.markCoverage);if(c===-1)return!1;let q=this.glyphIterator.index;while(--q>=0&&this.glyphs[q].isMark);if(q<0)return!1;let $=this.coverageIndex(d.ligatureCoverage,this.glyphs[q].id);if($===-1)return!1;let Y=d.ligatureArray[$],G=this.glyphIterator.cur,E=this.glyphs[q],J=E.ligatureID&&E.ligatureID===G.ligatureID&&G.ligatureComponent>0?Math.min(G.ligatureComponent,E.codePoints.length)-1:E.codePoints.length-1,V=d.markArray[c],N=Y[J][V.class];return this.applyAnchor(V,N,q),!0}case 6:{let c=this.coverageIndex(d.mark1Coverage);if(c===-1)return!1;let q=this.glyphIterator.peekIndex(-1),$=this.glyphs[q];if(!$||!$.isMark)return!1;let Y=this.glyphIterator.cur,G=!1;if(Y.ligatureID===$.ligatureID){if(!Y.ligatureID)G=!0;else if(Y.ligatureComponent===$.ligatureComponent)G=!0}else if(Y.ligatureID&&!Y.ligatureComponent||$.ligatureID&&!$.ligatureComponent)G=!0;if(!G)return!1;let E=this.coverageIndex(d.mark2Coverage,$.id);if(E===-1)return!1;let J=d.mark1Array[c],V=d.mark2Array[E][J.class];return this.applyAnchor(J,V,q),!0}case 7:return this.applyContext(d);case 8:return this.applyChainingContext(d);case 9:return this.applyLookup(d.lookupType,d.extension);default:throw new Error(`Unsupported GPOS table: ${x}`)}}applyAnchor(x,d,b){let c=this.getAnchor(d),q=this.getAnchor(x.markAnchor),$=this.positions[b],Y=this.positions[this.glyphIterator.index];Y.xOffset=c.x-q.x,Y.yOffset=c.y-q.y,this.glyphIterator.cur.markAttachment=b}getAnchor(x){let{xCoordinate:d,yCoordinate:b}=x,c=this.font._variationProcessor,q=this.font.GDEF&&this.font.GDEF.itemVariationStore;if(c&&q){if(x.xDeviceTable)d+=c.getDelta(q,x.xDeviceTable.a,x.xDeviceTable.b);if(x.yDeviceTable)b+=c.getDelta(q,x.yDeviceTable.a,x.yDeviceTable.b)}return{x:d,y:b}}applyFeatures(x,d,b){super.applyFeatures(x,d,b);for(var c=0;c<this.glyphs.length;c++)this.fixCursiveAttachment(c);this.fixMarkAttachment()}fixCursiveAttachment(x){let d=this.glyphs[x];if(d.cursiveAttachment!=null){let b=d.cursiveAttachment;d.cursiveAttachment=null,this.fixCursiveAttachment(b),this.positions[x].yOffset+=this.positions[b].yOffset}}fixMarkAttachment(){for(let x=0;x<this.glyphs.length;x++){let d=this.glyphs[x];if(d.markAttachment!=null){let b=d.markAttachment;if(this.positions[x].xOffset+=this.positions[b].xOffset,this.positions[x].yOffset+=this.positions[b].yOffset,this.direction==="ltr")for(let c=b;c<x;c++)this.positions[x].xOffset-=this.positions[c].xAdvance,this.positions[x].yOffset-=this.positions[c].yAdvance;else for(let c=b+1;c<x+1;c++)this.positions[x].xOffset+=this.positions[c].xAdvance,this.positions[x].yOffset+=this.positions[c].yAdvance}}}}class VQ{setup(x){this.glyphInfos=x.glyphs.map((b)=>new yx(this.font,b.id,[...b.codePoints]));let d=null;if(this.GPOSProcessor)d=this.GPOSProcessor.selectScript(x.script,x.language,x.direction);if(this.GSUBProcessor)d=this.GSUBProcessor.selectScript(x.script,x.language,x.direction);this.shaper=FO(d),this.plan=new xQ(this.font,d,x.direction),this.shaper.plan(this.plan,this.glyphInfos,x.features);for(let b in this.plan.allFeatures)x.features[b]=!0}substitute(x){if(this.GSUBProcessor)this.plan.process(this.GSUBProcessor,this.glyphInfos),x.glyphs=this.glyphInfos.map((d)=>this.font.getGlyph(d.id,d.codePoints))}position(x){if(this.shaper.zeroMarkWidths==="BEFORE_GPOS")this.zeroMarkAdvances(x.positions);if(this.GPOSProcessor)this.plan.process(this.GPOSProcessor,this.glyphInfos,x.positions);if(this.shaper.zeroMarkWidths==="AFTER_GPOS")this.zeroMarkAdvances(x.positions);if(x.direction==="rtl")x.glyphs.reverse(),x.positions.reverse();return this.GPOSProcessor&&this.GPOSProcessor.features}zeroMarkAdvances(x){for(let d=0;d<this.glyphInfos.length;d++)if(this.glyphInfos[d].isMark)x[d].xAdvance=0,x[d].yAdvance=0}cleanup(){this.glyphInfos=null,this.plan=null,this.shaper=null}getAvailableFeatures(x,d){let b=[];if(this.GSUBProcessor)this.GSUBProcessor.selectScript(x,d),b.push(...Object.keys(this.GSUBProcessor.features));if(this.GPOSProcessor)this.GPOSProcessor.selectScript(x,d),b.push(...Object.keys(this.GPOSProcessor.features));return b}constructor(x){if(this.font=x,this.glyphInfos=null,this.plan=null,this.GSUBProcessor=null,this.GPOSProcessor=null,this.fallbackPosition=!0,x.GSUB)this.GSUBProcessor=new EQ(x,x.GSUB);if(x.GPOS)this.GPOSProcessor=new JQ(x,x.GPOS)}}class NQ{layout(x,d,b,c,q){if(typeof d==="string")q=c,c=b,b=d,d=[];if(typeof x==="string"){if(b==null)b=Nj(x);var $=this.font.glyphsForString(x)}else{if(b==null){let E=[];for(let J of x)E.push(...J.codePoints);b=Uj(E)}var $=x}let Y=new r$($,d,b,c,q);if($.length===0)return Y.positions=[],Y;if(this.engine&&this.engine.setup)this.engine.setup(Y);if(this.substitute(Y),this.position(Y),this.hideDefaultIgnorables(Y.glyphs,Y.positions),this.engine&&this.engine.cleanup)this.engine.cleanup();return Y}substitute(x){if(this.engine&&this.engine.substitute)this.engine.substitute(x)}position(x){x.positions=x.glyphs.map((b)=>new s$(b.advanceWidth));let d=null;if(this.engine&&this.engine.position)d=this.engine.position(x);if(!d&&(!this.engine||this.engine.fallbackPosition)){if(!this.unicodeLayoutEngine)this.unicodeLayoutEngine=new n$(this.font);this.unicodeLayoutEngine.positionGlyphs(x.glyphs,x.positions)}if((!d||!d.kern)&&x.features.kern!==!1&&this.font.kern){if(!this.kernProcessor)this.kernProcessor=new l$(this.font);this.kernProcessor.process(x.glyphs,x.positions),x.features.kern=!0}}hideDefaultIgnorables(x,d){let b=this.font.glyphForCodePoint(32);for(let c=0;c<x.length;c++)if(this.isDefaultIgnorable(x[c].codePoints[0]))x[c]=b,d[c].xAdvance=0,d[c].yAdvance=0}isDefaultIgnorable(x){let d=x>>16;if(d===0)switch(x>>8){case 0:return x===173;case 3:return x===847;case 6:return x===1564;case 23:return 6068<=x&&x<=6069;case 24:return 6155<=x&&x<=6158;case 32:return 8203<=x&&x<=8207||8234<=x&&x<=8238||8288<=x&&x<=8303;case 254:return 65024<=x&&x<=65039||x===65279;case 255:return 65520<=x&&x<=65528;default:return!1}else switch(d){case 1:return 113824<=x&&x<=113827||119155<=x&&x<=119162;case 14:return 917504<=x&&x<=921599;default:return!1}}getAvailableFeatures(x,d){let b=[];if(this.engine)b.push(...this.engine.getAvailableFeatures(x,d));if(this.font.kern&&b.indexOf("kern")===-1)b.push("kern");return b}stringsForGlyph(x){let d=new Set,b=this.font._cmapProcessor.codePointsForGlyph(x);for(let c of b)d.add(String.fromCodePoint(c));if(this.engine&&this.engine.stringsForGlyph)for(let c of this.engine.stringsForGlyph(x))d.add(c);return Array.from(d)}constructor(x){if(this.font=x,this.unicodeLayoutEngine=null,this.kernProcessor=null,this.font.morx)this.engine=new t$(this.font);else if(this.font.GSUB||this.font.GPOS)this.engine=new VQ(this.font)}}var zO={moveTo:"M",lineTo:"L",quadraticCurveTo:"Q",bezierCurveTo:"C",closePath:"Z"};class Y2{toFunction(){return(x)=>{this.commands.forEach((d)=>{return x[d.command].apply(x,d.args)})}}toSVG(){return this.commands.map((d)=>{let b=d.args.map((c)=>Math.round(c*100)/100);return`${zO[d.command]}${b.join(" ")}`}).join("")}get cbox(){if(!this._cbox){let x=new m6;for(let d of this.commands)for(let b=0;b<d.args.length;b+=2)x.addPoint(d.args[b],d.args[b+1]);this._cbox=Object.freeze(x)}return this._cbox}get bbox(){if(this._bbox)return this._bbox;let x=new m6,d=0,b=0,c=(H)=>Math.pow(1-H,3)*U[L]+3*Math.pow(1-H,2)*H*K[L]+3*(1-H)*Math.pow(H,2)*X[L]+Math.pow(H,3)*D[L];for(let H of this.commands)switch(H.command){case"moveTo":case"lineTo":let[O,j]=H.args;x.addPoint(O,j),d=O,b=j;break;case"quadraticCurveTo":case"bezierCurveTo":if(H.command==="quadraticCurveTo")var[q,$,V,N]=H.args,Y=d+0.6666666666666666*(q-d),G=b+0.6666666666666666*($-b),E=V+0.6666666666666666*(q-V),J=N+0.6666666666666666*($-N);else var[Y,G,E,J,V,N]=H.args;x.addPoint(V,N);var U=[d,b],K=[Y,G],X=[E,J],D=[V,N];for(var L=0;L<=1;L++){let e=6*U[L]-12*K[L]+6*X[L],M=-3*U[L]+9*K[L]-9*X[L]+3*D[L];if(H=3*K[L]-3*U[L],M===0){if(e===0)continue;let w=-H/e;if(0<w&&w<1){if(L===0)x.addPoint(c(w),x.maxY);else if(L===1)x.addPoint(x.maxX,c(w))}continue}let F=Math.pow(e,2)-4*H*M;if(F<0)continue;let z=(-e+Math.sqrt(F))/(2*M);if(0<z&&z<1){if(L===0)x.addPoint(c(z),x.maxY);else if(L===1)x.addPoint(x.maxX,c(z))}let B=(-e-Math.sqrt(F))/(2*M);if(0<B&&B<1){if(L===0)x.addPoint(c(B),x.maxY);else if(L===1)x.addPoint(x.maxX,c(B))}}d=V,b=N;break}return this._bbox=Object.freeze(x)}mapPoints(x){let d=new Y2;for(let b of this.commands){let c=[];for(let q=0;q<b.args.length;q+=2){let[$,Y]=x(b.args[q],b.args[q+1]);c.push($,Y)}d[b.command](...c)}return d}transform(x,d,b,c,q,$){return this.mapPoints((Y,G)=>{let E=x*Y+b*G+q,J=d*Y+c*G+$;return[E,J]})}translate(x,d){return this.transform(1,0,0,1,x,d)}rotate(x){let d=Math.cos(x),b=Math.sin(x);return this.transform(d,b,-b,d,0,0)}scale(x,d=x){return this.transform(x,0,0,d,0,0)}constructor(){this.commands=[],this._bbox=null,this._cbox=null}}for(let x of["moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath"])Y2.prototype[x]=function(...d){return this._bbox=this._cbox=null,this.commands.push({command:x,args:d}),this};var _2=[".notdef",".null","nonmarkingreturn","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","nonbreakingspace","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron","Lslash","lslash","Scaron","scaron","Zcaron","zcaron","brokenbar","Eth","eth","Yacute","yacute","Thorn","thorn","minus","multiply","onesuperior","twosuperior","threesuperior","onehalf","onequarter","threequarters","franc","Gbreve","gbreve","Idotaccent","Scedilla","scedilla","Cacute","cacute","Ccaron","ccaron","dcroat"];class px{_getPath(){return new Y2}_getCBox(){return this.path.cbox}_getBBox(){return this.path.bbox}_getTableMetrics(x){if(this.id<x.metrics.length)return x.metrics.get(this.id);let d=x.metrics.get(x.metrics.length-1);return{advance:d?d.advance:0,bearing:x.bearings.get(this.id-x.metrics.length)||0}}_getMetrics(x){if(this._metrics)return this._metrics;let{advance:d,bearing:b}=this._getTableMetrics(this._font.hmtx);if(this._font.vmtx)var{advance:c,bearing:q}=this._getTableMetrics(this._font.vmtx);else{let $;if(typeof x==="undefined"||x===null)({cbox:x}=this);if(($=this._font["OS/2"])&&$.version>0)var c=Math.abs($.typoAscender-$.typoDescender),q=$.typoAscender-x.maxY;else{let{hhea:Y}=this._font;var c=Math.abs(Y.ascent-Y.descent),q=Y.ascent-x.maxY}}if(this._font._variationProcessor&&this._font.HVAR)d+=this._font._variationProcessor.getAdvanceAdjustment(this.id,this._font.HVAR);return this._metrics={advanceWidth:d,advanceHeight:c,leftBearing:b,topBearing:q}}get cbox(){return this._getCBox()}get bbox(){return this._getBBox()}get path(){return this._getPath()}getScaledPath(x){let d=1/this._font.unitsPerEm*x;return this.path.scale(d)}get advanceWidth(){return this._getMetrics().advanceWidth}get advanceHeight(){return this._getMetrics().advanceHeight}get ligatureCaretPositions(){}_getName(){let{post:x}=this._font;if(!x)return null;switch(x.version){case 1:return _2[this.id];case 2:let d=x.glyphNameIndex[this.id];if(d<_2.length)return _2[d];return x.names[d-_2.length];case 2.5:return _2[this.id+x.offsets[this.id]];case 4:return String.fromCharCode(x.map[this.id])}}get name(){return this._getName()}render(x,d){x.save();let b=1/this._font.head.unitsPerEm*d;x.scale(b,b),this.path.toFunction()(x),x.fill(),x.restore()}constructor(x,d,b){this.id=x,this.codePoints=d,this._font=b,this.isMark=this.codePoints.length>0&&this.codePoints.every(X6.isMark),this.isLigature=this.codePoints.length>1}}fx._([dx],px.prototype,"cbox",null);fx._([dx],px.prototype,"bbox",null);fx._([dx],px.prototype,"path",null);fx._([dx],px.prototype,"advanceWidth",null);fx._([dx],px.prototype,"advanceHeight",null);fx._([dx],px.prototype,"name",null);var Y$=new Q.Struct({numberOfContours:Q.int16,xMin:Q.int16,yMin:Q.int16,xMax:Q.int16,yMax:Q.int16}),BO=1,wO=2,PO=4,vO=8,IO=16,SO=32,ZO=1,TO=8,G$=32,CO=64,kO=128,gO=256;class _x{copy(){return new _x(this.onCurve,this.endContour,this.x,this.y)}constructor(x,d,b=0,c=0){this.onCurve=x,this.endContour=d,this.x=b,this.y=c}}class UQ{constructor(x,d,b){this.glyphID=x,this.dx=d,this.dy=b,this.pos=0,this.scaleX=this.scaleY=1,this.scale01=this.scale10=0}}class f5 extends px{_getCBox(x){if(this._font._variationProcessor&&!x)return this.path.cbox;let d=this._font._getTableStream("glyf");d.pos+=this._font.loca.offsets[this.id];let b=Y$.decode(d),c=new m6(b.xMin,b.yMin,b.xMax,b.yMax);return Object.freeze(c)}_parseGlyphCoord(x,d,b,c){if(b){var q=x.readUInt8();if(!c)q=-q;q+=d}else if(c)var q=d;else var q=d+x.readInt16BE();return q}_decode(){let x=this._font.loca.offsets[this.id],d=this._font.loca.offsets[this.id+1];if(x===d)return null;let b=this._font._getTableStream("glyf");b.pos+=x;let c=b.pos,q=Y$.decode(b);if(q.numberOfContours>0)this._decodeSimple(q,b);else if(q.numberOfContours<0)this._decodeComposite(q,b,c);return q}_decodeSimple(x,d){x.points=[];let b=new Q.Array(Q.uint16,x.numberOfContours).decode(d);x.instructions=new Q.Array(Q.uint8,Q.uint16).decode(d);let c=[],q=b[b.length-1]+1;while(c.length<q){var $=d.readUInt8();if(c.push($),$&vO){let J=d.readUInt8();for(let V=0;V<J;V++)c.push($)}}for(var Y=0;Y<c.length;Y++){var $=c[Y];let V=new _x(!!($&BO),b.indexOf(Y)>=0,0,0);x.points.push(V)}let G=0;for(var Y=0;Y<c.length;Y++){var $=c[Y];x.points[Y].x=G=this._parseGlyphCoord(d,G,$&wO,$&IO)}let E=0;for(var Y=0;Y<c.length;Y++){var $=c[Y];x.points[Y].y=E=this._parseGlyphCoord(d,E,$&PO,$&SO)}if(this._font._variationProcessor){let J=x.points.slice();J.push(...this._getPhantomPoints(x)),this._font._variationProcessor.transformPoints(this.id,J),x.phantomPoints=J.slice(-4)}return}_decodeComposite(x,d,b=0){x.components=[];let c=!1,q=G$;while(q&G$){q=d.readUInt16BE();let E=d.pos-b,J=d.readUInt16BE();if(!c)c=(q&gO)!==0;if(q&ZO)var $=d.readInt16BE(),Y=d.readInt16BE();else var $=d.readInt8(),Y=d.readInt8();var G=new UQ(J,$,Y);if(G.pos=E,q&TO)G.scaleX=G.scaleY=(d.readUInt8()<<24|d.readUInt8()<<16)/1073741824;else if(q&CO)G.scaleX=(d.readUInt8()<<24|d.readUInt8()<<16)/1073741824,G.scaleY=(d.readUInt8()<<24|d.readUInt8()<<16)/1073741824;else if(q&kO)G.scaleX=(d.readUInt8()<<24|d.readUInt8()<<16)/1073741824,G.scale01=(d.readUInt8()<<24|d.readUInt8()<<16)/1073741824,G.scale10=(d.readUInt8()<<24|d.readUInt8()<<16)/1073741824,G.scaleY=(d.readUInt8()<<24|d.readUInt8()<<16)/1073741824;x.components.push(G)}if(this._font._variationProcessor){let E=[];for(let J=0;J<x.components.length;J++){var G=x.components[J];E.push(new _x(!0,!0,G.dx,G.dy))}E.push(...this._getPhantomPoints(x)),this._font._variationProcessor.transformPoints(this.id,E),x.phantomPoints=E.splice(-4,4);for(let J=0;J<E.length;J++){let V=E[J];x.components[J].dx=V.x,x.components[J].dy=V.y}}return c}_getPhantomPoints(x){let d=this._getCBox(!0);if(this._metrics==null)this._metrics=px.prototype._getMetrics.call(this,d);let{advanceWidth:b,advanceHeight:c,leftBearing:q,topBearing:$}=this._metrics;return[new _x(!1,!0,x.xMin-q,0),new _x(!1,!0,x.xMin-q+b,0),new _x(!1,!0,0,x.yMax+$),new _x(!1,!0,0,x.yMax+$+c)]}_getContours(){let x=this._decode();if(!x)return[];let d=[];if(x.numberOfContours<0)for(let $ of x.components){let Y=this._font.getGlyph($.glyphID)._getContours();for(let G=0;G<Y.length;G++){let E=Y[G];for(let J=0;J<E.length;J++){let V=E[J],N=V.x*$.scaleX+V.y*$.scale01+$.dx,U=V.y*$.scaleY+V.x*$.scale10+$.dy;d.push(new _x(V.onCurve,V.endContour,N,U))}}}else d=x.points||[];if(x.phantomPoints&&!this._font.directory.tables.HVAR)this._metrics.advanceWidth=x.phantomPoints[1].x-x.phantomPoints[0].x,this._metrics.advanceHeight=x.phantomPoints[3].y-x.phantomPoints[2].y,this._metrics.leftBearing=x.xMin-x.phantomPoints[0].x,this._metrics.topBearing=x.phantomPoints[2].y-x.yMax;let b=[],c=[];for(let $=0;$<d.length;$++){var q=d[$];if(c.push(q),q.endContour)b.push(c),c=[]}return b}_getMetrics(){if(this._metrics)return this._metrics;let x=this._getCBox(!0);if(super._getMetrics(x),this._font._variationProcessor&&!this._font.HVAR)this.path;return this._metrics}_getPath(){let x=this._getContours(),d=new Y2;for(let c=0;c<x.length;c++){let q=x[c],$=q[0],Y=q[q.length-1],G=0;if($.onCurve){var b=null;G=1}else{if(Y.onCurve)$=Y;else $=new _x(!1,!1,($.x+Y.x)/2,($.y+Y.y)/2);var b=$}d.moveTo($.x,$.y);for(let E=G;E<q.length;E++){let J=q[E],V=E===0?$:q[E-1];if(V.onCurve&&J.onCurve)d.lineTo(J.x,J.y);else if(V.onCurve&&!J.onCurve)var b=J;else if(!V.onCurve&&!J.onCurve){let U=(V.x+J.x)/2,K=(V.y+J.y)/2;d.quadraticCurveTo(V.x,V.y,U,K);var b=J}else if(!V.onCurve&&J.onCurve){d.quadraticCurveTo(b.x,b.y,J.x,J.y);var b=null}else throw new Error("Unknown TTF path state")}if(b)d.quadraticCurveTo(b.x,b.y,$.x,$.y);d.closePath()}return d}constructor(...x){super(...x);Rx._(this,"type","TTF")}}class KQ extends px{_getName(){if(this._font.CFF2)return super._getName();return this._font["CFF "].getGlyphName(this.id)}bias(x){if(x.length<1240)return 107;else if(x.length<33900)return 1131;else return 32768}_getPath(){let x=this._font.CFF2||this._font["CFF "],{stream:d}=x,b=x.topDict.CharStrings[this.id],c=b.offset+b.length;d.pos=b.offset;let q=new Y2,$=[],Y=[],G=null,E=0,J=0,V=0,N,U,K=!1;this._usedGsubrs=N={},this._usedSubrs=U={};let X=x.globalSubrIndex||[],D=this.bias(X),L=x.privateDictForGlyph(this.id)||{},H=L.Subrs||[],O=this.bias(H),j=x.topDict.vstore&&x.topDict.vstore.itemVariationStore,e=L.vsindex,M=this._font._variationProcessor;function F(){if(G==null)G=$.shift()+L.nominalWidthX}function z(){if($.length%2!==0)F();return E+=$.length>>1,$.length=0}function B(Z,P){if(K)q.closePath();q.moveTo(Z,P),K=!0}let w=function(){while(d.pos<c){let I=d.readUInt8();if(I<32){let a,S,y,T,m,u,v,g,h,k,Y0,U0,B0,f0,p0,Z0;switch(I){case 1:case 3:case 18:case 23:z();break;case 4:if($.length>1)F();V+=$.shift(),B(J,V);break;case 5:while($.length>=2)J+=$.shift(),V+=$.shift(),q.lineTo(J,V);break;case 6:case 7:y=I===6;while($.length>=1){if(y)J+=$.shift();else V+=$.shift();q.lineTo(J,V),y=!y}break;case 8:while($.length>0)T=J+$.shift(),m=V+$.shift(),u=T+$.shift(),v=m+$.shift(),J=u+$.shift(),V=v+$.shift(),q.bezierCurveTo(T,m,u,v,J,V);break;case 10:if(a=$.pop()+O,S=H[a],S){U[a]=!0;let Q0=d.pos,K0=c;d.pos=S.offset,c=S.offset+S.length,w(),d.pos=Q0,c=K0}break;case 11:if(x.version>=2)break;return;case 14:if(x.version>=2)break;if($.length>0)F();if(K)q.closePath(),K=!1;break;case 15:if(x.version<2)throw new Error("vsindex operator not supported in CFF v1");e=$.pop();break;case 16:{if(x.version<2)throw new Error("blend operator not supported in CFF v1");if(!M)throw new Error("blend operator in non-variation font");let Q0=M.getBlendVector(j,e),K0=$.pop(),T0=K0*Q0.length,D0=$.length-T0,Qx=D0-K0;for(let Yx=0;Yx<K0;Yx++){let Mx=$[Qx+Yx];for(let bx=0;bx<Q0.length;bx++)Mx+=Q0[bx]*$[D0++];$[Qx+Yx]=Mx}while(T0--)$.pop();break}case 19:case 20:z(),d.pos+=E+7>>3;break;case 21:if($.length>2)F();J+=$.shift(),V+=$.shift(),B(J,V);break;case 22:if($.length>1)F();J+=$.shift(),B(J,V);break;case 24:while($.length>=8)T=J+$.shift(),m=V+$.shift(),u=T+$.shift(),v=m+$.shift(),J=u+$.shift(),V=v+$.shift(),q.bezierCurveTo(T,m,u,v,J,V);J+=$.shift(),V+=$.shift(),q.lineTo(J,V);break;case 25:while($.length>=8)J+=$.shift(),V+=$.shift(),q.lineTo(J,V);T=J+$.shift(),m=V+$.shift(),u=T+$.shift(),v=m+$.shift(),J=u+$.shift(),V=v+$.shift(),q.bezierCurveTo(T,m,u,v,J,V);break;case 26:if($.length%2)J+=$.shift();while($.length>=4)T=J,m=V+$.shift(),u=T+$.shift(),v=m+$.shift(),J=u,V=v+$.shift(),q.bezierCurveTo(T,m,u,v,J,V);break;case 27:if($.length%2)V+=$.shift();while($.length>=4)T=J+$.shift(),m=V,u=T+$.shift(),v=m+$.shift(),J=u+$.shift(),V=v,q.bezierCurveTo(T,m,u,v,J,V);break;case 28:$.push(d.readInt16BE());break;case 29:if(a=$.pop()+D,S=X[a],S){N[a]=!0;let Q0=d.pos,K0=c;d.pos=S.offset,c=S.offset+S.length,w(),d.pos=Q0,c=K0}break;case 30:case 31:y=I===31;while($.length>=4){if(y)T=J+$.shift(),m=V,u=T+$.shift(),v=m+$.shift(),V=v+$.shift(),J=u+($.length===1?$.shift():0);else T=J,m=V+$.shift(),u=T+$.shift(),v=m+$.shift(),J=u+$.shift(),V=v+($.length===1?$.shift():0);q.bezierCurveTo(T,m,u,v,J,V),y=!y}break;case 12:switch(I=d.readUInt8(),I){case 3:let Q0=$.pop(),K0=$.pop();$.push(Q0&&K0?1:0);break;case 4:Q0=$.pop(),K0=$.pop(),$.push(Q0||K0?1:0);break;case 5:Q0=$.pop(),$.push(Q0?0:1);break;case 9:Q0=$.pop(),$.push(Math.abs(Q0));break;case 10:Q0=$.pop(),K0=$.pop(),$.push(Q0+K0);break;case 11:Q0=$.pop(),K0=$.pop(),$.push(Q0-K0);break;case 12:Q0=$.pop(),K0=$.pop(),$.push(Q0/K0);break;case 14:Q0=$.pop(),$.push(-Q0);break;case 15:Q0=$.pop(),K0=$.pop(),$.push(Q0===K0?1:0);break;case 18:$.pop();break;case 20:let T0=$.pop(),D0=$.pop();Y[D0]=T0;break;case 21:D0=$.pop(),$.push(Y[D0]||0);break;case 22:let Qx=$.pop(),Yx=$.pop(),Mx=$.pop(),bx=$.pop();$.push(Mx<=bx?Qx:Yx);break;case 23:$.push(Math.random());break;case 24:Q0=$.pop(),K0=$.pop(),$.push(Q0*K0);break;case 26:Q0=$.pop(),$.push(Math.sqrt(Q0));break;case 27:Q0=$.pop(),$.push(Q0,Q0);break;case 28:Q0=$.pop(),K0=$.pop(),$.push(K0,Q0);break;case 29:if(D0=$.pop(),D0<0)D0=0;else if(D0>$.length-1)D0=$.length-1;$.push($[D0]);break;case 30:let Nx=$.pop(),Gx=$.pop();if(Gx>=0)while(Gx>0){var Z=$[Nx-1];for(let e0=Nx-2;e0>=0;e0--)$[e0+1]=$[e0];$[0]=Z,Gx--}else while(Gx<0){var Z=$[0];for(let C0=0;C0<=Nx;C0++)$[C0]=$[C0+1];$[Nx-1]=Z,Gx++}break;case 34:T=J+$.shift(),m=V,u=T+$.shift(),v=m+$.shift(),g=u+$.shift(),h=v,k=g+$.shift(),Y0=h,U0=k+$.shift(),B0=Y0,f0=U0+$.shift(),p0=B0,J=f0,V=p0,q.bezierCurveTo(T,m,u,v,g,h),q.bezierCurveTo(k,Y0,U0,B0,f0,p0);break;case 35:Z0=[];for(let e0=0;e0<=5;e0++)J+=$.shift(),V+=$.shift(),Z0.push(J,V);q.bezierCurveTo(...Z0.slice(0,6)),q.bezierCurveTo(...Z0.slice(6)),$.shift();break;case 36:T=J+$.shift(),m=V+$.shift(),u=T+$.shift(),v=m+$.shift(),g=u+$.shift(),h=v,k=g+$.shift(),Y0=h,U0=k+$.shift(),B0=Y0+$.shift(),f0=U0+$.shift(),p0=B0,J=f0,V=p0,q.bezierCurveTo(T,m,u,v,g,h),q.bezierCurveTo(k,Y0,U0,B0,f0,p0);break;case 37:let s0=J,l0=V;Z0=[];for(let e0=0;e0<=4;e0++)J+=$.shift(),V+=$.shift(),Z0.push(J,V);if(Math.abs(J-s0)>Math.abs(V-l0))J+=$.shift(),V=l0;else J=s0,V+=$.shift();Z0.push(J,V),q.bezierCurveTo(...Z0.slice(0,6)),q.bezierCurveTo(...Z0.slice(6));break;default:throw new Error(`Unknown op: 12 ${I}`)}break;default:throw new Error(`Unknown op: ${I}`)}}else if(I<247)$.push(I-139);else if(I<251){var P=d.readUInt8();$.push((I-247)*256+P+108)}else if(I<255){var P=d.readUInt8();$.push(-(I-251)*256-P-108)}else $.push(d.readInt32BE()/65536)}};if(w(),K)q.closePath();return q}constructor(...x){super(...x);Rx._(this,"type","CFF")}}var hO=new Q.Struct({originX:Q.uint16,originY:Q.uint16,type:new Q.String(4),data:new Q.Buffer((x)=>x.parent.buflen-x._currentOffset)});class RQ extends f5{getImageForSize(x){for(let $=0;$<this._font.sbix.imageTables.length;$++){var d=this._font.sbix.imageTables[$];if(d.ppem>=x)break}let b=d.imageOffsets,c=b[this.id],q=b[this.id+1];if(c===q)return null;return this._font.stream.pos=c,hO.decode(this._font.stream,{buflen:q-c})}render(x,d){let b=this.getImageForSize(d);if(b!=null){let c=d/this._font.unitsPerEm;x.image(b.data,{height:d,x:b.originX,y:(this.bbox.minY-b.originY)*c})}if(this._font.sbix.flags.renderOutlines)super.render(x,d)}constructor(...x){super(...x);Rx._(this,"type","SBIX")}}class D8{constructor(x,d){this.glyph=x,this.color=d}}class XQ extends px{_getBBox(){let x=new m6;for(let d=0;d<this.layers.length;d++){let c=this.layers[d].glyph.bbox;x.addPoint(c.minX,c.minY),x.addPoint(c.maxX,c.maxY)}return x}get layers(){let x=this._font.CPAL,d=this._font.COLR,b=0,c=d.baseGlyphRecord.length-1;while(b<=c){let J=b+c>>1;var q=d.baseGlyphRecord[J];if(this.id<q.gid)c=J-1;else if(this.id>q.gid)b=J+1;else{var $=q;break}}if($==null){var Y=this._font._getBaseGlyph(this.id),G={red:0,green:0,blue:0,alpha:255};return[new D8(Y,G)]}let E=[];for(let J=$.firstLayerIndex;J<$.firstLayerIndex+$.numLayers;J++){var q=d.layerRecords[J],G=x.colorRecords[q.paletteIndex],Y=this._font._getBaseGlyph(q.gid);E.push(new D8(Y,G))}return E}render(x,d){for(let{glyph:b,color:c}of this.layers)x.fillColor([c.red,c.green,c.blue],c.alpha/255*100),b.render(x,d);return}constructor(...x){super(...x);Rx._(this,"type","COLR")}}var aO=32768,_O=4095,mO=32768,E$=16384,uO=8192,J$=4095,V$=128,N$=127,yO=128,pO=64,lO=63;class jQ{normalizeCoords(x){let d=[];for(var b=0;b<this.font.fvar.axis.length;b++){let c=this.font.fvar.axis[b];if(x[b]<c.defaultValue)d.push((x[b]-c.defaultValue+Number.EPSILON)/(c.defaultValue-c.minValue+Number.EPSILON));else d.push((x[b]-c.defaultValue+Number.EPSILON)/(c.maxValue-c.defaultValue+Number.EPSILON))}if(this.font.avar)for(var b=0;b<this.font.avar.segment.length;b++){let q=this.font.avar.segment[b];for(let $=0;$<q.correspondence.length;$++){let Y=q.correspondence[$];if($>=1&&d[b]<Y.fromCoord){let G=q.correspondence[$-1];d[b]=((d[b]-G.fromCoord)*(Y.toCoord-G.toCoord)+Number.EPSILON)/(Y.fromCoord-G.fromCoord+Number.EPSILON)+G.toCoord;break}}}return d}transformPoints(x,d){if(!this.font.fvar||!this.font.gvar)return;let{gvar:b}=this.font;if(x>=b.glyphCount)return;let c=b.offsets[x];if(c===b.offsets[x+1])return;let{stream:q}=this.font;if(q.pos=c,q.pos>=q.length)return;let $=q.readUInt16BE(),Y=c+q.readUInt16BE();if($&aO){var G=q.pos;q.pos=Y;var E=this.decodePoints();Y=q.pos,q.pos=G}let J=d.map((D)=>D.copy());$&=_O;for(let D=0;D<$;D++){let L=q.readUInt16BE(),H=q.readUInt16BE();if(H&mO){var V=[];for(let z=0;z<b.axisCount;z++)V.push(q.readInt16BE()/16384)}else{if((H&J$)>=b.globalCoordCount)throw new Error("Invalid gvar table");var V=b.globalCoords[H&J$]}if(H&E$){var N=[];for(let z=0;z<b.axisCount;z++)N.push(q.readInt16BE()/16384);var U=[];for(let z=0;z<b.axisCount;z++)U.push(q.readInt16BE()/16384)}let O=this.tupleFactor(H,V,N,U);if(O===0){Y+=L;continue}var G=q.pos;if(q.pos=Y,H&uO)var K=this.decodePoints();else var K=E;let e=K.length===0?d.length:K.length,M=this.decodeDeltas(e),F=this.decodeDeltas(e);if(K.length===0)for(let z=0;z<d.length;z++){var X=d[z];X.x+=Math.round(M[z]*O),X.y+=Math.round(F[z]*O)}else{let z=J.map((w)=>w.copy()),B=d.map(()=>!1);for(let w=0;w<K.length;w++){let Z=K[w];if(Z<d.length){let P=z[Z];B[Z]=!0,P.x+=M[w]*O,P.y+=F[w]*O}}this.interpolateMissingDeltas(z,J,B);for(let w=0;w<d.length;w++){let Z=z[w].x-J[w].x,P=z[w].y-J[w].y;d[w].x=Math.round(d[w].x+Z),d[w].y=Math.round(d[w].y+P)}}Y+=L,q.pos=G}}decodePoints(){let x=this.font.stream,d=x.readUInt8();if(d&V$)d=(d&N$)<<8|x.readUInt8();let b=new Uint16Array(d),c=0,q=0;while(c<d){let $=x.readUInt8(),Y=($&N$)+1,G=$&V$?x.readUInt16:x.readUInt8;for(let E=0;E<Y&&c<d;E++)q+=G.call(x),b[c++]=q}return b}decodeDeltas(x){let d=this.font.stream,b=0,c=new Int16Array(x);while(b<x){let q=d.readUInt8(),$=(q&lO)+1;if(q&yO)b+=$;else{let Y=q&pO?d.readInt16BE:d.readInt8;for(let G=0;G<$&&b<x;G++)c[b++]=Y.call(d)}}return c}tupleFactor(x,d,b,c){let q=this.normalizedCoords,{gvar:$}=this.font,Y=1;for(let G=0;G<$.axisCount;G++){if(d[G]===0)continue;if(q[G]===0)return 0;if((x&E$)===0){if(q[G]<Math.min(0,d[G])||q[G]>Math.max(0,d[G]))return 0;Y=(Y*q[G]+Number.EPSILON)/(d[G]+Number.EPSILON)}else if(q[G]<b[G]||q[G]>c[G])return 0;else if(q[G]<d[G])Y=Y*(q[G]-b[G]+Number.EPSILON)/(d[G]-b[G]+Number.EPSILON);else Y=Y*(c[G]-q[G]+Number.EPSILON)/(c[G]-d[G]+Number.EPSILON)}return Y}interpolateMissingDeltas(x,d,b){if(x.length===0)return;let c=0;while(c<x.length){let q=c,$=c,Y=x[$];while(!Y.endContour)Y=x[++$];while(c<=$&&!b[c])c++;if(c>$)continue;let G=c,E=c;c++;while(c<=$){if(b[c])this.deltaInterpolate(E+1,c-1,E,c,d,x),E=c;c++}if(E===G)this.deltaShift(q,$,E,d,x);else if(this.deltaInterpolate(E+1,$,E,G,d,x),G>0)this.deltaInterpolate(q,G-1,E,G,d,x);c=$+1}}deltaInterpolate(x,d,b,c,q,$){if(x>d)return;let Y=["x","y"];for(let E=0;E<Y.length;E++){let J=Y[E];if(q[b][J]>q[c][J]){var G=b;b=c,c=G}let V=q[b][J],N=q[c][J],U=$[b][J],K=$[c][J];if(V!==N||U===K){let X=V===N?0:(K-U)/(N-V);for(let D=x;D<=d;D++){let L=q[D][J];if(L<=V)L+=U-V;else if(L>=N)L+=K-N;else L=U+(L-V)*X;$[D][J]=L}}}}deltaShift(x,d,b,c,q){let $=q[b].x-c[b].x,Y=q[b].y-c[b].y;if($===0&&Y===0)return;for(let G=x;G<=d;G++)if(G!==b)q[G].x+=$,q[G].y+=Y}getAdvanceAdjustment(x,d){let b,c;if(d.advanceWidthMapping){let q=x;if(q>=d.advanceWidthMapping.mapCount)q=d.advanceWidthMapping.mapCount-1;let $=d.advanceWidthMapping.entryFormat;({outerIndex:b,innerIndex:c}=d.advanceWidthMapping.mapData[q])}else b=0,c=x;return this.getDelta(d.itemVariationStore,b,c)}getDelta(x,d,b){if(d>=x.itemVariationData.length)return 0;let c=x.itemVariationData[d];if(b>=c.deltaSets.length)return 0;let q=c.deltaSets[b],$=this.getBlendVector(x,d),Y=0;for(let G=0;G<c.regionIndexCount;G++)Y+=q.deltas[G]*$[G];return Y}getBlendVector(x,d){let b=x.itemVariationData[d];if(this.blendVectors.has(b))return this.blendVectors.get(b);let c=this.normalizedCoords,q=[];for(let $=0;$<b.regionIndexCount;$++){let Y=1,G=b.regionIndexes[$],E=x.variationRegionList.variationRegions[G];for(let J=0;J<E.length;J++){let V=E[J],N;if(V.startCoord>V.peakCoord||V.peakCoord>V.endCoord)N=1;else if(V.startCoord<0&&V.endCoord>0&&V.peakCoord!==0)N=1;else if(V.peakCoord===0)N=1;else if(c[J]<V.startCoord||c[J]>V.endCoord)N=0;else if(c[J]===V.peakCoord)N=1;else if(c[J]<V.peakCoord)N=(c[J]-V.startCoord+Number.EPSILON)/(V.peakCoord-V.startCoord+Number.EPSILON);else N=(V.endCoord-c[J]+Number.EPSILON)/(V.endCoord-V.peakCoord+Number.EPSILON);Y*=N}q[$]=Y}return this.blendVectors.set(b,q),q}constructor(x,d){this.font=x,this.normalizedCoords=this.normalizeCoords(d),this.blendVectors=new Map}}var XB=Promise.resolve();class C8{includeGlyph(x){if(typeof x==="object")x=x.id;if(this.mapping[x]==null)this.glyphs.push(x),this.mapping[x]=this.glyphs.length-1;return this.mapping[x]}constructor(x){this.font=x,this.glyphs=[],this.mapping={},this.includeGlyph(0)}}var nO=1,iO=2,rO=4,sO=8,oO=16,tO=32;class e8{static size(x){return x>=0&&x<=255?1:2}static encode(x,d){if(d>=0&&d<=255)x.writeUInt8(d);else x.writeInt16BE(d)}}var U$=new Q.Struct({numberOfContours:Q.int16,xMin:Q.int16,yMin:Q.int16,xMax:Q.int16,yMax:Q.int16,endPtsOfContours:new Q.Array(Q.uint16,"numberOfContours"),instructions:new Q.Array(Q.uint8,Q.uint16),flags:new Q.Array(Q.uint8,0),xPoints:new Q.Array(e8,0),yPoints:new Q.Array(e8,0)});class OQ{encodeSimple(x,d=[]){let b=[],c=[],q=[],$=[],Y=0,G=0,E=0,J=0,V=0;for(let L=0;L<x.commands.length;L++){let H=x.commands[L];for(let O=0;O<H.args.length;O+=2){let j=H.args[O],e=H.args[O+1],M=0;if(H.command==="quadraticCurveTo"&&O===2){let F=x.commands[L+1];if(F&&F.command==="quadraticCurveTo"){let z=(G+F.args[0])/2,B=(E+F.args[1])/2;if(j===z&&e===B)continue}}if(!(H.command==="quadraticCurveTo"&&O===0))M|=nO;if(M=this._encodePoint(j,G,c,M,iO,oO),M=this._encodePoint(e,E,q,M,rO,tO),M===J&&Y<255)$[$.length-1]|=sO,Y++;else{if(Y>0)$.push(Y),Y=0;$.push(M),J=M}G=j,E=e,V++}if(H.command==="closePath")b.push(V-1)}if(x.commands.length>1&&x.commands[x.commands.length-1].command!=="closePath")b.push(V-1);let N=x.bbox,U={numberOfContours:b.length,xMin:N.minX,yMin:N.minY,xMax:N.maxX,yMax:N.maxY,endPtsOfContours:b,instructions:d,flags:$,xPoints:c,yPoints:q},K=U$.size(U),X=4-K%4,D=new Q.EncodeStream(K+X);if(U$.encode(D,U),X!==0)D.fill(0,X);return D.buffer}_encodePoint(x,d,b,c,q,$){let Y=x-d;if(x===d)c|=$;else{if(-255<=Y&&Y<=255)if(c|=q,Y<0)Y=-Y;else c|=$;b.push(Y)}return c}}class HQ extends C8{_addGlyph(x){let d=this.font.getGlyph(x),b=d._decode(),c=this.font.loca.offsets[x],q=this.font.loca.offsets[x+1],$=this.font._getTableStream("glyf");$.pos+=c;let Y=$.readBuffer(q-c);if(b&&b.numberOfContours<0){Y=new Uint8Array(Y);let G=new DataView(Y.buffer);for(let E of b.components)x=this.includeGlyph(E.glyphID),G.setUint16(E.pos,x)}else if(b&&this.font._variationProcessor)Y=this.glyphEncoder.encodeSimple(d.path,b.instructions);return this.glyf.push(Y),this.loca.offsets.push(this.offset),this.hmtx.metrics.push({advance:d.advanceWidth,bearing:d._getMetrics().leftBearing}),this.offset+=Y.length,this.glyf.length-1}encode(){this.glyf=[],this.offset=0,this.loca={offsets:[],version:this.font.loca.version},this.hmtx={metrics:[],bearings:[]};let x=0;while(x<this.glyphs.length)this._addGlyph(this.glyphs[x++]);let d=o0(f8)(this.font.maxp);d.numGlyphs=this.glyf.length,this.loca.offsets.push(this.offset);let b=o0(f8)(this.font.head);b.indexToLocFormat=this.loca.version;let c=o0(f8)(this.font.hhea);return c.numberOfMetrics=this.hmtx.metrics.length,p$.toBuffer({tables:{head:b,hhea:c,loca:this.loca,maxp:d,"cvt ":this.font["cvt "],prep:this.font.prep,glyf:this.glyf,hmtx:this.hmtx,fpgm:this.font.fpgm}})}constructor(x){super(x);this.glyphEncoder=new OQ}}class WQ extends C8{subsetCharstrings(){this.charstrings=[];let x={};for(let d of this.glyphs){this.charstrings.push(this.cff.getCharString(d));let b=this.font.getGlyph(d),c=b.path;for(let q in b._usedGsubrs)x[q]=!0}this.gsubrs=this.subsetSubrs(this.cff.globalSubrIndex,x)}subsetSubrs(x,d){let b=[];for(let c=0;c<x.length;c++){let q=x[c];if(d[c])this.cff.stream.pos=q.offset,b.push(this.cff.stream.readBuffer(q.length));else b.push(new Uint8Array([11]))}return b}subsetFontdict(x){x.FDArray=[],x.FDSelect={version:0,fds:[]};let d={},b=[],c={};for(let q of this.glyphs){let $=this.cff.fdForGlyph(q);if($==null)continue;if(!d[$])x.FDArray.push(Object.assign({},this.cff.topDict.FDArray[$])),b.push({}),c[$]=x.FDArray.length-1;d[$]=!0,x.FDSelect.fds.push(c[$]);let Y=this.font.getGlyph(q),G=Y.path;for(let E in Y._usedSubrs)b[c[$]][E]=!0}for(let q=0;q<x.FDArray.length;q++){let $=x.FDArray[q];if(delete $.FontName,$.Private&&$.Private.Subrs)$.Private=Object.assign({},$.Private),$.Private.Subrs=this.subsetSubrs($.Private.Subrs,b[q])}return}createCIDFontdict(x){let d={};for(let c of this.glyphs){let q=this.font.getGlyph(c),$=q.path;for(let Y in q._usedSubrs)d[Y]=!0}let b=Object.assign({},this.cff.topDict.Private);if(this.cff.topDict.Private&&this.cff.topDict.Private.Subrs)b.Subrs=this.subsetSubrs(this.cff.topDict.Private.Subrs,d);return x.FDArray=[{Private:b}],x.FDSelect={version:3,nRanges:1,ranges:[{first:0,fd:0}],sentinel:this.charstrings.length}}addString(x){if(!x)return null;if(!this.strings)this.strings=[];return this.strings.push(x),m4.length+this.strings.length-1}encode(){this.subsetCharstrings();let x={version:this.charstrings.length>255?2:1,ranges:[{first:1,nLeft:this.charstrings.length-2}]},d=Object.assign({},this.cff.topDict);d.Private=null,d.charset=x,d.Encoding=null,d.CharStrings=this.charstrings;for(let c of["version","Notice","Copyright","FullName","FamilyName","Weight","PostScript","BaseFontName","FontName"])d[c]=this.addString(this.cff.string(d[c]));if(d.ROS=[this.addString("Adobe"),this.addString("Identity"),0],d.CIDCount=this.charstrings.length,this.cff.isCIDFont)this.subsetFontdict(d);else this.createCIDFontdict(d);let b={version:1,hdrSize:this.cff.hdrSize,offSize:4,header:this.cff.header,nameIndex:[this.cff.postscriptName],topDictIndex:[d],stringIndex:this.strings,globalSubrIndex:this.gsubrs};return k$.toBuffer(b)}constructor(x){super(x);if(this.cff=this.font["CFF "],!this.cff)throw new Error("Not a CFF Font")}}class qx{static probe(x){let d=b3.decode(x.slice(0,4));return d==="true"||d==="OTTO"||d===String.fromCharCode(0,1,0,0)}setDefaultLanguage(x=null){this.defaultLanguage=x}_getTable(x){if(!(x.tag in this._tables))try{this._tables[x.tag]=this._decodeTable(x)}catch(d){if(W$)console.error(`Error decoding table ${x.tag}`),console.error(d.stack)}return this._tables[x.tag]}_getTableStream(x){let d=this.directory.tables[x];if(d)return this.stream.pos=d.offset,this.stream;return null}_decodeDirectory(){return this.directory=p$.decode(this.stream,{_startOffset:0})}_decodeTable(x){let d=this.stream.pos,b=this._getTableStream(x.tag),c=i4[x.tag].decode(b,this,x.length);return this.stream.pos=d,c}getName(x,d=this.defaultLanguage||p4){let b=this.name&&this.name.records[x];if(b)return b[d]||b[this.defaultLanguage]||b[p4]||b.en||b[Object.keys(b)[0]]||null;return null}get postscriptName(){return this.getName("postscriptName")}get fullName(){return this.getName("fullName")}get familyName(){return this.getName("fontFamily")}get subfamilyName(){return this.getName("fontSubfamily")}get copyright(){return this.getName("copyright")}get version(){return this.getName("version")}get ascent(){return this.hhea.ascent}get descent(){return this.hhea.descent}get lineGap(){return this.hhea.lineGap}get underlinePosition(){return this.post.underlinePosition}get underlineThickness(){return this.post.underlineThickness}get italicAngle(){return this.post.italicAngle}get capHeight(){let x=this["OS/2"];return x?x.capHeight:this.ascent}get xHeight(){let x=this["OS/2"];return x?x.xHeight:0}get numGlyphs(){return this.maxp.numGlyphs}get unitsPerEm(){return this.head.unitsPerEm}get bbox(){return Object.freeze(new m6(this.head.xMin,this.head.yMin,this.head.xMax,this.head.yMax))}get _cmapProcessor(){return new c3(this.cmap)}get characterSet(){return this._cmapProcessor.getCharacterSet()}hasGlyphForCodePoint(x){return!!this._cmapProcessor.lookup(x)}glyphForCodePoint(x){return this.getGlyph(this._cmapProcessor.lookup(x),[x])}glyphsForString(x){let d=[],b=x.length,c=0,q=-1,$=-1;while(c<=b){let Y=0,G=0;if(c<b){if(Y=x.charCodeAt(c++),55296<=Y&&Y<=56319&&c<b){let E=x.charCodeAt(c);if(56320<=E&&E<=57343)c++,Y=((Y&1023)<<10)+(E&1023)+65536}G=65024<=Y&&Y<=65039||917760<=Y&&Y<=917999?1:0}else c++;if($===0&&G===1)d.push(this.getGlyph(this._cmapProcessor.lookup(q,Y),[q,Y]));else if($===0&&G===0)d.push(this.glyphForCodePoint(q));q=Y,$=G}return d}get _layoutEngine(){return new NQ(this)}layout(x,d,b,c,q){return this._layoutEngine.layout(x,d,b,c,q)}stringsForGlyph(x){return this._layoutEngine.stringsForGlyph(x)}get availableFeatures(){return this._layoutEngine.getAvailableFeatures()}getAvailableFeatures(x,d){return this._layoutEngine.getAvailableFeatures(x,d)}_getBaseGlyph(x,d=[]){if(!this._glyphs[x]){if(this.directory.tables.glyf)this._glyphs[x]=new f5(x,d,this);else if(this.directory.tables["CFF "]||this.directory.tables.CFF2)this._glyphs[x]=new KQ(x,d,this)}return this._glyphs[x]||null}getGlyph(x,d=[]){if(!this._glyphs[x])if(this.directory.tables.sbix)this._glyphs[x]=new RQ(x,d,this);else if(this.directory.tables.COLR&&this.directory.tables.CPAL)this._glyphs[x]=new XQ(x,d,this);else this._getBaseGlyph(x,d);return this._glyphs[x]||null}createSubset(){if(this.directory.tables["CFF "])return new WQ(this);return new HQ(this)}get variationAxes(){let x={};if(!this.fvar)return x;for(let d of this.fvar.axis)x[d.axisTag.trim()]={name:d.name.en,min:d.minValue,default:d.defaultValue,max:d.maxValue};return x}get namedVariations(){let x={};if(!this.fvar)return x;for(let d of this.fvar.instance){let b={};for(let c=0;c<this.fvar.axis.length;c++){let q=this.fvar.axis[c];b[q.axisTag.trim()]=d.coord[c]}x[d.name.en]=b}return x}getVariation(x){if(!(this.directory.tables.fvar&&(this.directory.tables.gvar&&this.directory.tables.glyf||this.directory.tables.CFF2)))throw new Error("Variations require a font with the fvar, gvar and glyf, or CFF2 tables.");if(typeof x==="string")x=this.namedVariations[x];if(typeof x!=="object")throw new Error("Variation settings must be either a variation name or settings object.");let d=this.fvar.axis.map((q,$)=>{let Y=q.axisTag.trim();if(Y in x)return Math.max(q.minValue,Math.min(q.maxValue,x[Y]));else return q.defaultValue}),b=new Q.DecodeStream(this.stream.buffer);b.pos=this._directoryPos;let c=new qx(b,d);return c._tables=this._tables,c}get _variationProcessor(){if(!this.fvar)return null;let x=this.variationCoords;if(!x&&!this.CFF2)return null;if(!x)x=this.fvar.axis.map((d)=>d.defaultValue);return new jQ(this,x)}getFont(x){return this.getVariation(x)}constructor(x,d=null){Rx._(this,"type","TTF"),this.defaultLanguage=null,this.stream=x,this.variationCoords=d,this._directoryPos=this.stream.pos,this._tables={},this._glyphs={},this._decodeDirectory();for(let b in this.directory.tables){let c=this.directory.tables[b];if(i4[b]&&c.length>0)Object.defineProperty(this,b,{get:this._getTable.bind(this,c)})}}}fx._([dx],qx.prototype,"bbox",null);fx._([dx],qx.prototype,"_cmapProcessor",null);fx._([dx],qx.prototype,"characterSet",null);fx._([dx],qx.prototype,"_layoutEngine",null);fx._([dx],qx.prototype,"variationAxes",null);fx._([dx],qx.prototype,"namedVariations",null);fx._([dx],qx.prototype,"_variationProcessor",null);var xH=new Q.Struct({tag:new Q.String(4),offset:new Q.Pointer(Q.uint32,"void",{type:"global"}),compLength:Q.uint32,length:Q.uint32,origChecksum:Q.uint32}),LQ=new Q.Struct({tag:new Q.String(4),flavor:Q.uint32,length:Q.uint32,numTables:Q.uint16,reserved:new Q.Reserved(Q.uint16),totalSfntSize:Q.uint32,majorVersion:Q.uint16,minorVersion:Q.uint16,metaOffset:Q.uint32,metaLength:Q.uint32,metaOrigLength:Q.uint32,privOffset:Q.uint32,privLength:Q.uint32,tables:new Q.Array(xH,"numTables")});LQ.process=function(){let x={};for(let d of this.tables)x[d.tag]=d;this.tables=x};var fH=LQ;class DQ extends qx{static probe(x){return b3.decode(x.slice(0,4))==="wOFF"}_decodeDirectory(){this.directory=fH.decode(this.stream,{_startOffset:0})}_getTableStream(x){let d=this.directory.tables[x];if(d)if(this.stream.pos=d.offset,d.compLength<d.length){this.stream.pos+=2;let b=new Uint8Array(d.length),c=o0(fK)(this.stream.readBuffer(d.compLength-2),b);return new Q.DecodeStream(c)}else return this.stream;return null}constructor(...x){super(...x);Rx._(this,"type","WOFF")}}class eQ extends f5{_decode(){return this._font._transformedGlyphs[this.id]}_getCBox(){return this.path.bbox}constructor(...x){super(...x);Rx._(this,"type","WOFF2")}}var K$={decode(x){let d=0,b=[0,1,2,3,4];for(let c=0;c<b.length;c++){let q=b[c],$=x.readUInt8();if(d&3758096384)throw new Error("Overflow");if(d=d<<7|$&127,($&128)===0)return d}throw new Error("Bad base 128 number")}},dH=["cmap","head","hhea","hmtx","maxp","name","OS/2","post","cvt ","fpgm","glyf","loca","prep","CFF ","VORG","EBDT","EBLC","gasp","hdmx","kern","LTSH","PCLT","VDMX","vhea","vmtx","BASE","GDEF","GPOS","GSUB","EBSC","JSTF","MATH","CBDT","CBLC","COLR","CPAL","SVG ","sbix","acnt","avar","bdat","bloc","bsln","cvar","fdsc","feat","fmtx","fvar","gvar","hsty","just","lcar","mort","morx","opbd","prop","trak","Zapf","Silf","Glat","Gloc","Feat","Sill"],bH=new Q.Struct({flags:Q.uint8,customTag:new Q.Optional(new Q.String(4),(x)=>(x.flags&63)===63),tag:(x)=>x.customTag||dH[x.flags&63],length:K$,transformVersion:(x)=>x.flags>>>6&3,transformed:(x)=>x.tag==="glyf"||x.tag==="loca"?x.transformVersion===0:x.transformVersion!==0,transformLength:new Q.Optional(K$,(x)=>x.transformed)}),MQ=new Q.Struct({tag:new Q.String(4),flavor:Q.uint32,length:Q.uint32,numTables:Q.uint16,reserved:new Q.Reserved(Q.uint16),totalSfntSize:Q.uint32,totalCompressedSize:Q.uint32,majorVersion:Q.uint16,minorVersion:Q.uint16,metaOffset:Q.uint32,metaLength:Q.uint32,metaOrigLength:Q.uint32,privOffset:Q.uint32,privLength:Q.uint32,tables:new Q.Array(bH,"numTables")});MQ.process=function(){let x={};for(let d=0;d<this.tables.length;d++){let b=this.tables[d];x[b.tag]=b}return this.tables=x};var cH=MQ;class AQ extends qx{static probe(x){return b3.decode(x.slice(0,4))==="wOF2"}_decodeDirectory(){this.directory=cH.decode(this.stream),this._dataPos=this.stream.pos}_decompress(){if(!this._decompressed){this.stream.pos=this._dataPos;let x=this.stream.readBuffer(this.directory.totalCompressedSize),d=0;for(let c in this.directory.tables){let q=this.directory.tables[c];q.offset=d,d+=q.transformLength!=null?q.transformLength:q.length}let b=o0(dK)(x,d);if(!b)throw new Error("Error decoding compressed data in WOFF2");this.stream=new Q.DecodeStream(b),this._decompressed=!0}}_decodeTable(x){return this._decompress(),super._decodeTable(x)}_getBaseGlyph(x,d=[]){if(!this._glyphs[x])if(this.directory.tables.glyf&&this.directory.tables.glyf.transformed){if(!this._transformedGlyphs)this._transformGlyfTable();return this._glyphs[x]=new eQ(x,d,this)}else return super._getBaseGlyph(x,d)}_transformGlyfTable(){this._decompress(),this.stream.pos=this.directory.tables.glyf.offset;let x=qH.decode(this.stream),d=[];for(let c=0;c<x.numGlyphs;c++){let q={},$=x.nContours.readInt16BE();if(q.numberOfContours=$,$>0){let Y=[],G=0;for(let E=0;E<$;E++){let J=G8(x.nPoints);G+=J,Y.push(G)}q.points=GH(x.flags,x.glyphs,G);for(let E=0;E<$;E++)q.points[Y[E]-1].endContour=!0;var b=G8(x.glyphs)}else if($<0){if(f5.prototype._decodeComposite.call({_font:this},q,x.composites))var b=G8(x.glyphs)}d.push(q)}this._transformedGlyphs=d}constructor(...x){super(...x);Rx._(this,"type","WOFF2")}}class k6{decode(x,d){return new Q.DecodeStream(this._buf.decode(x,d))}constructor(x){this.length=x,this._buf=new Q.Buffer(x)}}var qH=new Q.Struct({version:Q.uint32,numGlyphs:Q.uint16,indexFormat:Q.uint16,nContourStreamSize:Q.uint32,nPointsStreamSize:Q.uint32,flagStreamSize:Q.uint32,glyphStreamSize:Q.uint32,compositeStreamSize:Q.uint32,bboxStreamSize:Q.uint32,instructionStreamSize:Q.uint32,nContours:new k6("nContourStreamSize"),nPoints:new k6("nPointsStreamSize"),flags:new k6("flagStreamSize"),glyphs:new k6("glyphStreamSize"),composites:new k6("compositeStreamSize"),bboxes:new k6("bboxStreamSize"),instructions:new k6("instructionStreamSize")}),$H=253,QH=254,YH=255,R$=253;function G8(x){let d=x.readUInt8();if(d===$H)return x.readUInt16BE();if(d===YH)return x.readUInt8()+R$;if(d===QH)return x.readUInt8()+R$*2;return d}function d6(x,d){return x&1?d:-d}function GH(x,d,b){let c,q=c=0,$=[];for(let E=0;E<b;E++){let J=0,V=0,N=x.readUInt8(),U=!(N>>7);if(N&=127,N<10)J=0,V=d6(N,((N&14)<<7)+d.readUInt8());else if(N<20)J=d6(N,((N-10&14)<<7)+d.readUInt8()),V=0;else if(N<84){var Y=N-20,G=d.readUInt8();J=d6(N,1+(Y&48)+(G>>4)),V=d6(N>>1,1+((Y&12)<<2)+(G&15))}else if(N<120){var Y=N-84;J=d6(N,1+(Y/12<<8)+d.readUInt8()),V=d6(N>>1,1+(Y%12>>2<<8)+d.readUInt8())}else if(N<124){var G=d.readUInt8();let X=d.readUInt8();J=d6(N,(G<<4)+(X>>4)),V=d6(N>>1,((X&15)<<8)+d.readUInt8())}else J=d6(N,d.readUInt16BE()),V=d6(N>>1,d.readUInt16BE());q+=J,c+=V,$.push(new _x(U,!1,q,c))}return $}var EH=new Q.VersionedStruct(Q.uint32,{65536:{numFonts:Q.uint32,offsets:new Q.Array(Q.uint32,"numFonts")},131072:{numFonts:Q.uint32,offsets:new Q.Array(Q.uint32,"numFonts"),dsigTag:Q.uint32,dsigLength:Q.uint32,dsigOffset:Q.uint32}});class FQ{static probe(x){return b3.decode(x.slice(0,4))==="ttcf"}getFont(x){for(let d of this.header.offsets){let b=new Q.DecodeStream(this.stream.buffer);b.pos=d;let c=new qx(b);if(c.postscriptName===x||c.postscriptName instanceof Uint8Array&&x instanceof Uint8Array&&c.postscriptName.every((q,$)=>x[$]===q))return c}return null}get fonts(){let x=[];for(let d of this.header.offsets){let b=new Q.DecodeStream(this.stream.buffer);b.pos=d,x.push(new qx(b))}return x}constructor(x){if(Rx._(this,"type","TTC"),this.stream=x,x.readString(4)!=="ttcf")throw new Error("Not a TrueType collection");this.header=EH.decode(x)}}var JH=new Q.String(Q.uint8),jB=new Q.Struct({len:Q.uint32,buf:new Q.Buffer("len")}),VH=new Q.Struct({id:Q.uint16,nameOffset:Q.int16,attr:Q.uint8,dataOffset:Q.uint24,handle:Q.uint32}),NH=new Q.Struct({name:new Q.String(4),maxTypeIndex:Q.uint16,refList:new Q.Pointer(Q.uint16,new Q.Array(VH,(x)=>x.maxTypeIndex+1),{type:"parent"})}),UH=new Q.Struct({length:Q.uint16,types:new Q.Array(NH,(x)=>x.length+1)}),KH=new Q.Struct({reserved:new Q.Reserved(Q.uint8,24),typeList:new Q.Pointer(Q.uint16,UH),nameListOffset:new Q.Pointer(Q.uint16,"void")}),X$=new Q.Struct({dataOffset:Q.uint32,map:new Q.Pointer(Q.uint32,KH),dataLength:Q.uint32,mapLength:Q.uint32});class zQ{static probe(x){let d=new Q.DecodeStream(x);try{var b=X$.decode(d)}catch(c){return!1}for(let c of b.map.typeList.types)if(c.name==="sfnt")return!0;return!1}getFont(x){if(!this.sfnt)return null;for(let d of this.sfnt.refList){let b=this.header.dataOffset+d.dataOffset+4,c=new Q.DecodeStream(this.stream.buffer.slice(b)),q=new qx(c);if(q.postscriptName===x||q.postscriptName instanceof Uint8Array&&x instanceof Uint8Array&&q.postscriptName.every(($,Y)=>x[Y]===$))return q}return null}get fonts(){let x=[];for(let d of this.sfnt.refList){let b=this.header.dataOffset+d.dataOffset+4,c=new Q.DecodeStream(this.stream.buffer.slice(b));x.push(new qx(c))}return x}constructor(x){Rx._(this,"type","DFont"),this.stream=x,this.header=X$.decode(this.stream);for(let d of this.header.map.typeList.types){for(let b of d.refList)if(b.nameOffset>=0)this.stream.pos=b.nameOffset+this.header.map.nameListOffset,b.name=JH.decode(this.stream);else b.name=null;if(d.name==="sfnt")this.sfnt=d}}}Q2(qx);Q2(DQ);Q2(AQ);Q2(FQ);Q2(zQ);H$(OB,$2);H$(OB,F8)});var wQ=i((Y3)=>{var RH="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";(function(x){var d=typeof Uint8Array!=="undefined"?Uint8Array:Array,b=43,c=47,q=48,$=97,Y=65,G=45,E=95;function J(U){var K=U.charCodeAt(0);if(K===b||K===G)return 62;if(K===c||K===E)return 63;if(K<q)return-1;if(K<q+10)return K-q+26+26;if(K<Y+26)return K-Y;if(K<$+26)return K-$+26}function V(U){var K,X,D,L,H,O;if(U.length%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var j=U.length;H=U.charAt(j-2)==="="?2:U.charAt(j-1)==="="?1:0,O=new d(U.length*3/4-H),D=H>0?U.length-4:U.length;var e=0;function M(F){O[e++]=F}for(K=0,X=0;K<D;K+=4,X+=3)L=J(U.charAt(K))<<18|J(U.charAt(K+1))<<12|J(U.charAt(K+2))<<6|J(U.charAt(K+3)),M((L&16711680)>>16),M((L&65280)>>8),M(L&255);if(H===2)L=J(U.charAt(K))<<2|J(U.charAt(K+1))>>4,M(L&255);else if(H===1)L=J(U.charAt(K))<<10|J(U.charAt(K+1))<<4|J(U.charAt(K+2))>>2,M(L>>8&255),M(L&255);return O}function N(U){var K,X=U.length%3,D="",L,H;function O(e){return RH.charAt(e)}function j(e){return O(e>>18&63)+O(e>>12&63)+O(e>>6&63)+O(e&63)}for(K=0,H=U.length-X;K<H;K+=3)L=(U[K]<<16)+(U[K+1]<<8)+U[K+2],D+=j(L);switch(X){case 1:L=U[U.length-1],D+=O(L>>2),D+=O(L<<4&63),D+="==";break;case 2:L=(U[U.length-2]<<8)+U[U.length-1],D+=O(L>>10),D+=O(L>>4&63),D+=O(L<<2&63),D+="=";break}return D}x.toByteArray=V,x.fromByteArray=N})(typeof Y3==="undefined"?Y3.base64js={}:Y3)});var aQ=i((WB,hQ)=>{var XH=w4(),jH=wQ();function TQ(x){return x&&x.__esModule?x.default:x}var OH=5,PQ=12,HH=13,WH=16,LH=17,DH=22,vQ=28,IQ=31,eH=33,G3=34,MH=35,g8=36,h8=37,CQ=38,AH=39,FH=40,d5=41,zH=42,R=0,W=1,z0=2,kQ=3,A=4,BH=[[A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,A,kQ,A,A,A,A,A,A,A,A,A,A,A],[R,A,A,W,W,A,A,A,A,W,W,R,R,R,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,R,R,R,W,R],[R,A,A,W,W,A,A,A,A,W,W,W,W,W,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,R,R,R,W,R],[A,A,A,W,W,W,A,A,A,W,W,W,W,W,W,W,W,W,W,W,A,z0,A,W,W,W,W,W,W,W,W,W,W],[W,A,A,W,W,W,A,A,A,W,W,W,W,W,W,W,W,W,W,W,A,z0,A,W,W,W,W,W,W,W,W,W,W],[R,A,A,W,W,W,A,A,A,R,R,R,R,R,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,R,R,R,W,R],[R,A,A,W,W,W,A,A,A,R,R,R,R,R,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,R,R,R,W,R],[R,A,A,W,W,W,A,A,A,R,R,W,R,W,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,R,R,R,W,R],[R,A,A,W,W,W,A,A,A,R,R,W,W,W,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,R,R,R,W,R],[W,A,A,W,W,W,A,A,A,R,R,W,W,W,W,W,W,W,R,R,A,z0,A,W,W,W,W,W,R,W,W,W,R],[W,A,A,W,W,W,A,A,A,R,R,W,W,W,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,R,R,R,W,R],[W,A,A,W,W,W,A,A,A,W,W,W,W,W,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,R,R,R,W,R],[W,A,A,W,W,W,A,A,A,W,W,W,W,W,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,R,R,R,W,R],[W,A,A,W,W,W,A,A,A,W,W,W,W,W,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,R,R,R,W,R],[R,A,A,W,W,W,A,A,A,R,W,R,R,R,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,R,R,R,W,R],[R,A,A,W,W,W,A,A,A,R,R,R,R,R,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,R,R,R,W,R],[R,A,A,W,R,W,A,A,A,R,R,W,R,R,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,R,R,R,W,R],[R,A,A,W,R,W,A,A,A,R,R,R,R,R,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,R,R,R,W,R],[W,A,A,W,W,W,A,A,A,W,W,W,W,W,W,W,W,W,W,W,A,z0,A,W,W,W,W,W,W,W,W,W,R],[R,A,A,W,W,W,A,A,A,R,R,R,R,R,R,W,W,W,R,A,A,z0,A,R,R,R,R,R,R,R,R,W,R],[R,R,R,R,R,R,R,R,R,R,R,R,R,R,R,R,R,R,R,R,A,R,R,R,R,R,R,R,R,R,R,R,R],[W,A,A,W,W,W,A,A,A,W,W,W,W,W,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,R,R,R,W,R],[W,A,A,W,W,W,A,A,A,W,W,W,W,W,W,W,W,W,W,W,A,z0,A,W,W,W,W,W,W,W,W,W,W],[R,A,A,W,W,W,A,A,A,R,W,R,R,R,R,W,W,W,R,R,A,z0,A,R,R,R,W,W,R,R,R,W,R],[R,A,A,W,W,W,A,A,A,R,W,R,R,R,R,W,W,W,R,R,A,z0,A,R,R,R,R,W,R,R,R,W,R],[R,A,A,W,W,W,A,A,A,R,W,R,R,R,R,W,W,W,R,R,A,z0,A,W,W,W,W,R,R,R,R,W,R],[R,A,A,W,W,W,A,A,A,R,W,R,R,R,R,W,W,W,R,R,A,z0,A,R,R,R,W,W,R,R,R,W,R],[R,A,A,W,W,W,A,A,A,R,W,R,R,R,R,W,W,W,R,R,A,z0,A,R,R,R,R,W,R,R,R,W,R],[R,A,A,W,W,W,A,A,A,R,R,R,R,R,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,W,R,R,W,R],[R,A,A,W,W,W,A,A,A,R,W,R,R,R,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,R,R,W,W,R],[R,A,A,W,W,W,A,A,A,R,W,R,R,R,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,R,R,R,W,R],[W,A,A,W,W,W,A,A,A,W,W,W,W,W,R,W,W,W,R,R,A,z0,A,R,R,R,R,R,R,R,R,W,R],[R,A,A,W,W,R,A,A,A,R,R,R,R,R,R,R,R,R,R,R,A,z0,A,R,R,R,R,R,R,R,R,W,R]],wH=TQ(jH).toByteArray("AAgOAAAAAAAQ4QAAAQ0P8vDtnQuMXUUZx+eyu7d7797d9m5bHoWltKVUlsjLWE0VJNigQoMVqkStEoNQQUl5GIo1KKmogEgqkKbBRki72lYabZMGKoGAjQRtJJDaCCIRiiigREBQS3z+xzOTnZ3O+3HOhd5NfpkzZx7fN9988zivu2M9hGwB28F94DnwEngd/Asc1EtIs9c/bIPDwCxwLDgezHcodyo4w5C+CCwBS8FnwSXgCnA1uFbI93XwbXAbWAfWgx+CzWAb+An4KfgFeAzsYWWfYuFz4CXwGvgb+Dfo6yNkEEwGh4CZYB44FpwI3g1OY+kfBItZOo2fB84Hy8DF4HJwNbiWpV8PVoO1LH4n2NRXyN+KcAd4kNVP9XsY4aPgcfAbsBfs6SniL4K/sPjfEf6HlanXCRkCw2BGvUh/keWfXS/CY+pFXs7x9XHmM94LTmWIeU2cgbxnS/k/B3kf86jDhU8L9V2E40vAFWAlWFUfb++NOL4F3C7JX4/4GiE+hvgWsF0oS7mXldspnN+F493gyXrh9xTav0cg3EvzgVfBG6wsmVSEkxBOBgdPGpd7JI6PnqRvJ68/xlbHof53gPeA94OzwLngk+ACsAwsByvASrAK3MB0Ws3CtQjvBJvAVrADPMDSHkb4CNijaccTwvnf4fiPEs8Lxy+D18A/QU8/xjgYBjPAbDAKTgYLwOngTHAO+EQ/8wuEF4EvsPiVCFf2+9tsFStzA8LVHuXXBsi6QyqzUYiPMR/7Mc7dAx7oL8bzw/3u/Bw8Bp4Az4AXwCtgHzsmDXP5fiF9iiVvly5d0sHngar16NKlS5cuXbp06fLmYlqHXrcd3ph4P0THUY3iXh49novju4S0tzfs5d+JPKewfAsRntZb3K9ZhOMlrO6lCC8An28U9+OuovcPcPxlVu5rCL/VmHh/iHIrzn3fIPu7SN8Axmg+8AOwEWwCm7tp3bRuWjetm5Y8bSu4B9zbKO6ZVsnORrVU3f4uXTqZ2H3sLoyx3eDXjfDndE9qyj6L838CfwVvgFpzYnof4oNgOhgBc8Fos9DrZIQLmtXPP1MmF6wGj4H+KXoWguvADkXaPil+YpuQy8Am8Ey7ODdtmJDF4HowBp4De6HDTNjhfHAHeBr0DBBy0kDxfPbcgSIusgrcWhtnJ8vL+TPix7UIOQtcBq4C28Cr4KRBnANbwSuDE+s50JgyNNFuXbp06XIgsXjIvPafjvXozKY+fVFz/z0LT1uCtKVSWbrOLWPnztG8e0Xfy7ol8XtZJi7WtG+5od2UFXQ/A12vUeS7jp27yVKHjdsU9lXB869TyNvAzt0lpP2oWbwLdjiO78bx/Sz+EMJHwK9Y/LcIfw+eZ3F67/Hl5vh9xX80J+rwX8SvRDhpgL17iPAQMHNArfPrqHPewLheI+AERV6efwV418B4nOZ/H+IfYHV8GOF5LJ3eAz0fx8sM9S0fUNud39O9CulfGZhY5huI3wzWgNvBelbHZoTbNPVpfYjKQpkHwUNgl0LWblbnk0LbbDxr0OMFpL3iqWdu9nWYPlVAWkXY39LnGdCkDbeqv1YNbfcMQ3t9oe8lzm6NH9N1ZB6Ln4BwfkJZJk7RyFnYKt6b/JDQXx9p5X+eFdqOjzM9P9MB/lUlFzr20aXIdzlY4dmn9F3YqtvoO76/2hp/D/xA5Zue88nNyL8GbFbs075X0tyUig3Qd2MCnf//HjnzpbsR3g9+1kHzzVjdnE71/qVBX9rGPUh/ysNWe1neFzvIDi5zAufV1sT0N0poR22wkFUfTOPfA4N2mbZ5fSrqOHSw+IbkSBbOGSzSRgf91/GTUWYBOB2cIZQ/G8cfBZ8CFwrnL8XxF8FKcA24jqXdiPA7Qr61OF7H4mMItwzuv2/YLth1ISt3Hzu3k4W7EH5JqPdRHD/O4k+z8A8IX5Lq3y7Z4nXE9xn6kX6vQ4bKfy+ok+hH+xf3hq9dnTTHhjKd2GmDuWA242iHMq4cC7A8kJ7i8o1+skSa7Jieo38HCWnoNjKFhdSFBxzpZ7QE6lI8N4S14aASZcryaV/WWHw66f6NHuCoxuQxmvM56GX9QMd8Q4D65ywGP+ZzRJuM+zQvx/MOS2VFeqQ4IXnH26zM9Xe6/E6D+4foAzzuajPZp8Qyw5ayZVDWuH0z0BtYRkeIDqH9KO9VbH1btd/lhNqCzvl8zeLnG0S/hnU6baHfpiuO6yy0rd+DHURo/zYF5H26j03rQsip2ndzz82u1z9N4VjWKWeb68Tedpt95HRVXp7H1R6p+/Wt4FPy/PpWwscOLRJ+PVWF/+W0iVyGzs18TIvXkOJ1Wxm66vSXz+vylenrZcj1ub439W+K8RNCGTJi2p/TJ1K23VaXr35tRpnzmjxequgfcfyk6B/TGBVlyedsNgpdd/h+W1U3P99QyFPNo1X3TwpM/WLTIWYfoBqXrv6iskHZ/RFr79R6hIyHBrH3f1nrUVnjP8SnZZ+rYtzr9Exld5MNbPNErusAPg+77u/eDOPftU9yj39TH7rezxd1LvsZQJlzkWlOirG/79zjMj/mtHUKu7vKy+3/LnXr9okyKedjX5/0He9iP/j63LwOQdarEVlfy8OO/Lqw023j6xcqmwxLiOd6heM2i9cV9LJy8jMJ23yQ+rpbfu7EQ/pXE8KYvUSqvVnb4XzZa6LrHMXHR+zcLvqWbm/Bn0/HzIs6fWPHoat8XfnDKmZGxRxeMbn2UqZ5Q94nmcZRbqqUXbZ8+lcjE+cPX11t814orvvAXNcG8vqj2vvk1MGn3anlj0bIT72v47bvE+Lc98T9b6r7AKn6j+8Duf7D0nnZx/j7Zjn0j9nbpSTndaLr9WNLivP+iN23xF7L+fqv6ZouFyb78jxVXvv5jJ9YUs9/sddO8h7KNg5jrhfaJGztT6G7KF+1d6yCmD5Kdb2fan60rSc552fZr3zeQ9DpnPp+Si5cx5Ktv2QfSzF/mMbWdOm46rFI4XstnU9xeqX4NKb7TKEdcr6pZOK3ID1k/LvFHkVczEuZLEDr499YqvqBym1aEHWgcvoYOtv0M91qQl5TfpO/in6rWx8OVpT1Wedkv3f5xom3T/xeR/6Gx6V86PWAOB4bBpqWdN+yTcVxjIyGRz/FrDGu6w/3d7kPm8StX8RyPu+uuvpNju/vTLJV37GpvoM0oZPnW87VLnL/5pDno1NoW1R6yedU6TyUv3u19a3KFnIbTLYz+ZCLP4T0tU1uivFgso0pnsJ/UtXvarNY28Xq5cvkBDrQP/E5ZaiuQwwfmTlsOiQRU1fMuqrDd/3ISSuwjOwXOfTyGUMpZIXq4GpLn3pUcdfzch2x7XO1u2uZHOPb1G6b3Xg9PH1IIWeEpJlPQtqos2EKW8b0u8rnuP1UeVLoXJb9be0uG9nnbchjU+XTszT5VeNBThPHnc5OKj1U9aj0GTHIVaGy1YhEWT4ixns00DT+XEzWn/7VAsIc63Cov3OdyhwjrnaqQqZvWKXdypRdlq+k8msZ031U+Rm4fA+3TtyeR9hwfW9G9yxDN0fZMN33F+9TE6md4hwoxumfaUzI9fN3PFT3xVV2msrQ3UsnChm6Nulk8TndpS28D3zX9tTIPsF/z7Am5OkTjm1tI1JZW74+4VgsZ0N3L1yXV3WeP5uR7TGHHdvC3JQlxybfpd22tDlk/2eofRK8TzrN/qnar/K/OUTth6I/+jAnEptNbPvFHP2gs40N3+dfMWtwqvVct7/wfd8gtQ7imifial9ZJ9/3IHLYU6eDj3+4PhsNhX+vwvcWLnu6kGfEMe8DuciPfUfGZB8X/7HJy/Gefe5n+VRGFd/wyP2ta7/LO4yh/sbLV/k9lev6kfO9Dt/5U67b1/6u/epqB1U9Me23jfHY9sscAg4tkbLl+e4/U36rJ9ddxfd6sg5vq5ice42Wpk/pb9FOJ36/W9tpv4kbC79nUbZceX8Zu6/qJ+P3WvhvA8v3reh7Jbn2d6rrNC7XNZTLma4Ba0JI9efX2uLzF5scG/w9UNU1ZxW+ymUfzELeTllXlQ1rUuhzjS5fp9c964iFBOqeSz63bU065nZKdU+mDEz3qHIjjifquw0pnb/raRtvrnsYcb46ihT3taoYz6brdNW9l6rWRnE/navdPn1XlR1km7hcz1WlH/elKuSOSvLLuE8U6m8uzwRdfcGl73VyTHuyMvzJ1Sa2cWDTP/Z63Kc94n2B1PYr24dz1JlyHLlcP+S4B6vD1c9EW4q2LWstCvUjeVy63k/LMYdUNd5D1xQfvVTzX1VjkMsUv88N8VH5fReVn/Fjn++/h6X6Q8a6b1/q3g/i/ewi0/Scs8zxXeV6mWIOUPlPzBgdFerW+bZrm2P18dnjuK6HunEp+rHvPMXbr+sHVb/lnL+pTP57jPw9Cvk3PW178JD9qChfzuvTf7Htl38L1QUf/VKu9SFjwWbTWPvFEvu7Uq76y7+31g6QlYPc669pbsm9Xur2LWI9Pu8ypfDXqm3A2z8s1FWGn4ntL9NfQu2oSlftX9uetvTtv7J8Ql4zxfXGZ3zk8PeQ9w59x2uMfqI8/q5eKh/l9cb2rwsu9rSNl06ZP2Pmxtz+rNMx93yno0n2/82rVH7rQ+y9P15H6FyRun9ViH81ATmffI7nJ5r8uXXW6enbP6b/B8/l5OifVHYLnb9S39s2zcc+Ph+rh8+eQgVPS72elzGWY/tUtbbabBpDiI7yN1q6/4th2y+ErAc5+9BVvu/7KamJbWNZeuqI/R4tRf+YyD1HmOZM1bMV3/14Sn10c0Xu+Sj1nOXb5jL73ncdy02uvlXZNde65dOHYl7Vs4KYuS6FzWLn2zJlpZqPXPVPOa5yzKOyn1VhT9lmMfdbfH7D11Wf2PXN5h9y+dD287+qxgSnaYmnIrRtIb8pJe6/Uv9OVer6Whn0zfGO/BEloZI9ojmfAlUflClDd178bTmVHVTpZXOkAlk/lb42UujmI89HH5V+cl7XtowY6vTxLVWok6UrGzoGTHN+bB+6ri05687VNpvfuvRfaP2uMlNQth1D5JjGelm/8yn+9p3p/7qk9gnfeddXZmq/Sm333PJT659Kv1zjNbZ9uv2Oi//67CV8/N1nj1DmviyXDNVeJkaeaX8UsyesYg8cu2+NvdaPfb+lLDu5tvt/"),PH=new(TQ(XH))(wH),SQ=function(x){switch(x){case eH:return PQ;case AH:case FH:case zH:return PQ;case MH:return OH;default:return x}},ZQ=function(x){switch(x){case h8:case CQ:return G3;case d5:return DH;default:return x}};class E3{constructor(x,d=!1){this.position=x,this.required=d}}class gQ{nextCodePoint(){let x=this.string.charCodeAt(this.pos++),d=this.string.charCodeAt(this.pos);if(55296<=x&&x<=56319&&56320<=d&&d<=57343)return this.pos++,(x-55296)*1024+(d-56320)+65536;return x}nextCharClass(){return SQ(PH.get(this.nextCodePoint()))}getSimpleBreak(){switch(this.nextClass){case d5:return!1;case G3:case h8:case CQ:return this.curClass=G3,!1;case g8:return this.curClass=g8,!1}return null}getPairTableBreak(x){let d=!1;switch(BH[this.curClass][this.nextClass]){case R:d=!0;break;case W:d=x===d5;break;case z0:if(d=x===d5,!d)return d=!1,d;break;case kQ:if(x!==d5)return d;break;case A:break}if(this.LB8a)d=!1;if(this.LB21a&&(this.curClass===WH||this.curClass===LH))d=!1,this.LB21a=!1;else this.LB21a=this.curClass===HH;if(this.curClass===vQ){if(this.LB30a++,this.LB30a==2&&this.nextClass===vQ)d=!0,this.LB30a=0}else this.LB30a=0;return this.curClass=this.nextClass,d}nextBreak(){if(this.curClass==null){let x=this.nextCharClass();this.curClass=ZQ(x),this.nextClass=x,this.LB8a=x===IQ,this.LB30a=0}while(this.pos<this.string.length){this.lastPos=this.pos;let x=this.nextClass;if(this.nextClass=this.nextCharClass(),this.curClass===G3||this.curClass===g8&&this.nextClass!==h8)return this.curClass=ZQ(SQ(this.nextClass)),new E3(this.lastPos,!0);let d=this.getSimpleBreak();if(d===null)d=this.getPairTableBreak(x);if(this.LB8a=this.nextClass===IQ,d)return new E3(this.lastPos)}if(this.lastPos<this.string.length)return this.lastPos=this.string.length,new E3(this.string.length);return null}constructor(x){this.string=x,this.pos=0,this.lastPos=0,this.curClass=null,this.nextClass=null,this.LB8a=!1,this.LB21a=!1,this.LB30a=0}}hQ.exports=gQ});var _Q=i((LB,vH)=>{vH.exports={ifd:{"010e":"ImageDescription","010f":"Make","011a":"XResolution","011b":"YResolution","011c":"PlanarConfiguration","012d":"TransferFunction","013b":"Artist","013e":"WhitePoint","013f":"PrimaryChromaticities","0100":"ImageWidth","0101":"ImageHeight","0102":"BitsPerSample","0103":"Compression","0106":"PhotometricInterpretation","0110":"Model","0111":"StripOffsets","0112":"Orientation","0115":"SamplesPerPixel","0116":"RowsPerStrip","0117":"StripByteCounts","0128":"ResolutionUnit","0131":"Software","0132":"DateTime","0201":"JPEGInterchangeFormat","0202":"JPEGInterchangeFormatLength","0211":"YCbCrCoefficients","0212":"YCbCrSubSampling","0213":"YCbCrPositioning","0214":"ReferenceBlackWhite","829a":"ExposureTime","829d":"FNumber","920a":"FocalLength","927c":"MakerNote","8298":"Copyright","8769":"ExifIFDPointer","8822":"ExposureProgram","8824":"SpectralSensitivity","8825":"GPSInfoIFDPointer","8827":"PhotographicSensitivity","8828":"OECF","8830":"SensitivityType","8831":"StandardOutputSensitivity","8832":"RecommendedExposureIndex","8833":"ISOSpeed","8834":"ISOSpeedLatitudeyyy","8835":"ISOSpeedLatitudezzz","9000":"ExifVersion","9003":"DateTimeOriginal","9004":"DateTimeDigitized","9101":"ComponentsConfiguration","9102":"CompressedBitsPerPixel","9201":"ShutterSpeedValue","9202":"ApertureValue","9203":"BrightnessValue","9204":"ExposureBiasValue","9205":"MaxApertureValue","9206":"SubjectDistance","9207":"MeteringMode","9208":"LightSource","9209":"Flash","9214":"SubjectArea","9286":"UserComment","9290":"SubSecTime","9291":"SubSecTimeOriginal","9292":"SubSecTimeDigitized",a000:"FlashpixVersion",a001:"ColorSpace",a002:"PixelXDimension",a003:"PixelYDimension",a004:"RelatedSoundFile",a005:"InteroperabilityIFDPointer",a20b:"FlashEnergy",a20c:"SpatialFrequencyResponse",a20e:"FocalPlaneXResolution",a20f:"FocalPlaneYResolution",a40a:"Sharpness",a40b:"DeviceSettingDescription",a40c:"SubjectDistanceRange",a210:"FocalPlaneResolutionUnit",a214:"SubjectLocation",a215:"ExposureIndex",a217:"SensingMethod",a300:"FileSource",a301:"SceneType",a302:"CFAPattern",a401:"CustomRendered",a402:"ExposureMode",a403:"WhiteBalance",a404:"DigitalZoomRatio",a405:"FocalLengthIn35mmFilm",a406:"SceneCaptureType",a407:"GainControl",a408:"Contrast",a409:"Saturation",a420:"ImageUniqueID",a430:"CameraOwnerName",a431:"BodySerialNumber",a432:"LensSpecification",a433:"LensMake",a434:"LensModel",a435:"LensSerialNumber",a500:"Gamma"},gps:{"0000":"GPSVersionID","0001":"GPSLatitudeRef","0002":"GPSLatitude","0003":"GPSLongitudeRef","0004":"GPSLongitude","0005":"GPSAltitudeRef","0006":"GPSAltitude","0007":"GPSTimeStamp","0008":"GPSSatellites","0009":"GPSStatus","000a":"GPSMeasureMode","000b":"GPSDOP","000c":"GPSSpeedRef","000d":"GPSSpeed","000e":"GPSTrackRef","000f":"GPSTrack","0010":"GPSImgDirectionRef","0011":"GPSImgDirection","0012":"GPSMapDatum","0013":"GPSDestLatitudeRef","0014":"GPSDestLatitude","0015":"GPSDestLongitudeRef","0016":"GPSDestLongitude","0017":"GPSDestBearingRef","0018":"GPSDestBearing","0019":"GPSDestDistanceRef","001a":"GPSDestDistance","001b":"GPSProcessingMethod","001c":"GPSAreaInformation","001d":"GPSDateStamp","001e":"GPSDifferential","001f":"GPSHPositioningError"}}});var rQ=i((mH)=>{var IH=wx("node:fs"),uQ=SH(IH);function SH(x){return x&&x.__esModule?x:{default:x}}var a8=_Q(),ZH=[0,1,1,2,4,8,1,1,2,4,8,4,8],yQ=2,TH=65496,CH=18761,kH=19789,m8=2,mQ=65504,gH=65519,r0=void 0,pQ=function x(d){try{var b=d.readUInt16BE(0);return b===TH}catch(c){throw new Error("Unsupport file format.")}},lQ=function x(d){try{var b=d.readUInt16BE(0);return b===CH||b===kH}catch(c){throw new Error("Unsupport file format.")}},hH=function x(d){try{var b=d.readUInt16BE(0),c=b>=mQ&&b<=gH;return c?b-mQ:!1}catch(q){throw new Error("Invalid APP Tag.")}},_8=function x(d,b,c,q){var $=c?d.readUInt16BE(0):d.readUInt16LE(0);if($===0)return{};var Y=2,G=d.slice(Y),E=12,J={},V=0;for(V;V<$;V+=1){var N=V*E,U=G.slice(N,N+E),K=0,X=2,D=K+X,L=2,H=D+L,O=4,j=H+O,e=4,M=U.slice(K,D),F=c?M.toString("hex"):M.reverse().toString("hex"),z=b[F],B=U.readUInt16BE(D),w=U.readUInt16LE(D),Z=c?B:w,P=ZH[Z],I=U.readUInt32BE(H),a=U.readUInt32LE(H),S=c?I:a,y=S*P,T=U.slice(j,j+e);if(y>4){var m=(c?T.readUInt32BE(0):T.readUInt32LE(0))-q;T=d.slice(m,m+y)}var u=void 0;if(z){switch(Z){case 1:u=T.readUInt8(0);break;case 2:u=T.toString("ascii").replace(/\0+$/,"");break;case 3:u=c?T.readUInt16BE(0):T.readUInt16LE(0);break;case 4:u=c?T.readUInt32BE(0):T.readUInt32LE(0);break;case 5:u=[];for(var v=0;v<T.length;v+=8){var g=T.readUInt32BE(v)/T.readUInt32BE(v+4),h=T.readUInt32LE(v)/T.readUInt32LE(v+4);u.push(c?g:h)}break;case 7:switch(z){case"ExifVersion":u=T.toString();break;case"FlashPixVersion":u=T.toString();break;case"SceneType":u=T.readUInt8(0);break;default:u="0x"+T.toString("hex",0,15);break}break;case 10:{var k=T.readInt32BE(0)/T.readInt32BE(4),Y0=T.readInt32LE(0)/T.readInt32LE(4);u=c?k:Y0;break}default:u="0x"+T.toString("hex");break}J[z]=u}}return J},u8=function x(d){var b=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0,c=d;if(b){c=d.slice(m8);var q=c.readUInt16BE(0);c=c.slice(0,q);var $=2;c=c.slice($);var Y=5;c=c.slice(Y);var G=1;c=c.slice(G)}var E=2,J=c.toString("ascii",0,E)==="MM",V=2,N=E+V,U=c.readUInt32BE(N),K=c.readUInt32LE(N),X=J?U:K;if(c=c.slice(X),c.length>0){if(r0=_8(c,a8.ifd,J,X),r0.ExifIFDPointer)c=c.slice(r0.ExifIFDPointer-X),r0.SubExif=_8(c,a8.ifd,J,r0.ExifIFDPointer);if(r0.GPSInfoIFDPointer){var D=r0.GPSInfoIFDPointer;c=c.slice(r0.ExifIFDPointer?D-r0.ExifIFDPointer:D-X),r0.GPSInfo=_8(c,a8.gps,J,D)}}},nQ=function x(d){var b=hH(d);if(b!==!1){var c=d.readUInt16BE(m8);switch(b){case 1:u8(d);break;default:x(d.slice(m8+c));break}}},iQ=function x(d){if(!d)throw new Error("buffer not found");if(r0=void 0,pQ(d))d=d.slice(yQ),r0={},nQ(d);else if(lQ(d))r0={},u8(d,!1);return r0},aH=function x(d){if(!d)throw new Error("File not found");var b=uQ.default.readFileSync(d);return iQ(b)},_H=function x(d,b){r0=void 0,new Promise(function(c,q){if(!d)q(new Error("\u2753File not found."));uQ.default.readFile(d,function($,Y){if($)q($);else try{if(pQ(Y)){var G=Y.slice(yQ);r0={},nQ(G),c(r0)}else if(lQ(Y))r0={},u8(Y,!1),c(r0);else q(new Error("\uD83D\uDE31Unsupport file type."))}catch(E){q(E)}})},function(c){b(c,void 0)}).then(function(c){b(void 0,c)}).catch(function(c){b(c,void 0)})};mH.fromBuffer=iQ;mH.parse=_H;mH.parseSync=aH});var tQ=i((eB,oQ)=>{var sQ=wx("node:fs"),lH=wx("node:zlib");oQ.exports=class x{static decode(d,b){return sQ.readFile(d,function(c,q){return new x(q).decode((Y)=>b(Y))})}static load(d){let b=sQ.readFileSync(d);return new x(b)}constructor(d){let b;this.data=d,this.pos=8,this.palette=[],this.imgData=[],this.transparency={},this.text={};while(!0){let E=this.readUInt32(),J="";for(b=0;b<4;b++)J+=String.fromCharCode(this.data[this.pos++]);switch(J){case"IHDR":this.width=this.readUInt32(),this.height=this.readUInt32(),this.bits=this.data[this.pos++],this.colorType=this.data[this.pos++],this.compressionMethod=this.data[this.pos++],this.filterMethod=this.data[this.pos++],this.interlaceMethod=this.data[this.pos++];break;case"PLTE":this.palette=this.read(E);break;case"IDAT":for(b=0;b<E;b++)this.imgData.push(this.data[this.pos++]);break;case"tRNS":switch(this.transparency={},this.colorType){case 3:this.transparency.indexed=this.read(E);var c=255-this.transparency.indexed.length;if(c>0)for(b=0;b<c;b++)this.transparency.indexed.push(255);break;case 0:this.transparency.grayscale=this.read(E)[0];break;case 2:this.transparency.rgb=this.read(E);break}break;case"tEXt":var q=this.read(E),$=q.indexOf(0),Y=String.fromCharCode.apply(String,q.slice(0,$));this.text[Y]=String.fromCharCode.apply(String,q.slice($+1));break;case"IEND":switch(this.colorType){case 0:case 3:case 4:this.colors=1;break;case 2:case 6:this.colors=3;break}this.hasAlphaChannel=[4,6].includes(this.colorType);var G=this.colors+(this.hasAlphaChannel?1:0);switch(this.pixelBitlength=this.bits*G,this.colors){case 1:this.colorSpace="DeviceGray";break;case 3:this.colorSpace="DeviceRGB";break}this.imgData=new Buffer(this.imgData);return;default:this.pos+=E}if(this.pos+=4,this.pos>this.data.length)throw new Error("Incomplete or corrupt PNG file")}}read(d){let b=new Array(d);for(let c=0;c<d;c++)b[c]=this.data[this.pos++];return b}readUInt32(){let d=this.data[this.pos++]<<24,b=this.data[this.pos++]<<16,c=this.data[this.pos++]<<8,q=this.data[this.pos++];return d|b|c|q}readUInt16(){let d=this.data[this.pos++]<<8,b=this.data[this.pos++];return d|b}decodePixels(d){return lH.inflate(this.imgData,(b,c)=>{if(b)throw b;let{width:q,height:$}=this,Y=this.pixelBitlength/8,G=new Buffer(q*$*Y),{length:E}=c,J=0;function V(N,U,K,X,D=!1){let L=Math.ceil((q-N)/K),H=Math.ceil(($-U)/X),O=Y*L,j=D?G:new Buffer(O*H),e=0,M=0;while(e<H&&J<E){var F,z,B,w,Z;switch(c[J++]){case 0:for(B=0;B<O;B++)j[M++]=c[J++];break;case 1:for(B=0;B<O;B++)F=c[J++],w=B<Y?0:j[M-Y],j[M++]=(F+w)%256;break;case 2:for(B=0;B<O;B++)F=c[J++],z=(B-B%Y)/Y,Z=e&&j[(e-1)*O+z*Y+B%Y],j[M++]=(Z+F)%256;break;case 3:for(B=0;B<O;B++)F=c[J++],z=(B-B%Y)/Y,w=B<Y?0:j[M-Y],Z=e&&j[(e-1)*O+z*Y+B%Y],j[M++]=(F+Math.floor((w+Z)/2))%256;break;case 4:for(B=0;B<O;B++){var P,I;if(F=c[J++],z=(B-B%Y)/Y,w=B<Y?0:j[M-Y],e===0)Z=I=0;else Z=j[(e-1)*O+z*Y+B%Y],I=z&&j[(e-1)*O+(z-1)*Y+B%Y];let a=w+Z-I,S=Math.abs(a-w),y=Math.abs(a-Z),T=Math.abs(a-I);if(S<=y&&S<=T)P=w;else if(y<=T)P=Z;else P=I;j[M++]=(F+P)%256}break;default:throw new Error(`Invalid filter algorithm: ${c[J-1]}`)}if(!D){let a=((U+e*X)*q+N)*Y,S=e*O;for(B=0;B<L;B++){for(let y=0;y<Y;y++)G[a++]=j[S++];a+=(K-1)*Y}}e++}}if(this.interlaceMethod===1)V(0,0,8,8),V(4,0,8,8),V(0,4,4,8),V(2,0,4,4),V(0,2,2,4),V(1,0,2,2),V(0,1,1,2);else V(0,0,1,1,!0);return d(G)})}decodePalette(){let{palette:d}=this,{length:b}=d,c=this.transparency.indexed||[],q=new Buffer(c.length+b),$=0,Y=0;for(let E=0;E<b;E+=3){var G;q[$++]=d[E],q[$++]=d[E+1],q[$++]=d[E+2],q[$++]=(G=c[Y++])!=null?G:255}return q}copyToImageData(d,b){let c,q,{colors:$}=this,Y=null,G=this.hasAlphaChannel;if(this.palette.length)Y=this._decodedPalette||(this._decodedPalette=this.decodePalette()),$=4,G=!0;let E=d.data||d,{length:J}=E,V=Y||b,N=c=0;if($===1)while(N<J){q=Y?b[N/4]*4:c;let U=V[q++];E[N++]=U,E[N++]=U,E[N++]=U,E[N++]=G?V[q++]:255,c=q}else while(N<J)q=Y?b[N/4]*4:c,E[N++]=V[q++],E[N++]=V[q++],E[N++]=V[q++],E[N++]=G?V[q++]:255,c=q}decode(d){let b=new Buffer(this.width*this.height*4);return this.decodePixels((c)=>{return this.copyToImageData(b,c),d(b)})}}});var _Y=i((MB,aY)=>{var __dirname="/Users/a123/Desktop/projects/learn-hono-bun/server/node_modules/pdfkit/js",nH=wx("node:stream"),b5=wx("node:zlib"),G0=Kb(),y0=wx("node:fs"),xY=BQ(),iH=wx("node:events"),rH=aQ(),sH=rQ(),oH=tQ();class s8{toString(){throw new Error("Must be implemented by subclasses")}}class X3{constructor(x={}){this._items={},this.limits=typeof x.limits==="boolean"?x.limits:!0}add(x,d){return this._items[x]=d}get(x){return this._items[x]}toString(){let x=Object.keys(this._items).sort((b,c)=>this._compareKeys(b,c)),d=["<<"];if(this.limits&&x.length>1){let b=x[0],c=x[x.length-1];d.push(`  /Limits ${Dx.convert([this._dataForKey(b),this._dataForKey(c)])}`)}d.push(`  /${this._keysName()} [`);for(let b of x)d.push(`    ${Dx.convert(this._dataForKey(b))} ${Dx.convert(this._items[b])}`);return d.push("]"),d.push(">>"),d.join(`
`)}_compareKeys(){throw new Error("Must be implemented by subclasses")}_keysName(){throw new Error("Must be implemented by subclasses")}_dataForKey(){throw new Error("Must be implemented by subclasses")}}class c5{constructor(x,d,b,c,q,$){this.id="CS"+Object.keys(x.spotColors).length,this.name=d,this.values=[b,c,q,$],this.ref=x.ref(["Separation",this.name,"DeviceCMYK",{Range:[0,1,0,1,0,1,0,1],C0:[0,0,0,0],C1:this.values.map((Y)=>Y/100),FunctionType:2,Domain:[0,1],N:1}]),this.ref.end()}toString(){return`${this.ref.id} 0 R`}}var G2=(x,d)=>(Array(d+1).join("0")+x).slice(-d),fY=/[\n\r\t\b\f()\\]/g,dY={"\n":"\\n","\r":"\\r","\t":"\\t","\b":"\\b","\f":"\\f","\\":"\\\\","(":"\\(",")":"\\)"},tH=function(x){let d=x.length;if(d&1)throw new Error("Buffer length must be even");else for(let b=0,c=d-1;b<c;b+=2){let q=x[b];x[b]=x[b+1],x[b+1]=q}return x};class Dx{static convert(x,d=null){if(typeof x==="string")return`/${x}`;else if(x instanceof String){let b=x,c=!1;for(let $=0,Y=b.length;$<Y;$++)if(b.charCodeAt($)>127){c=!0;break}let q;if(c)q=tH(Buffer.from(`\uFEFF${b}`,"utf16le"));else q=Buffer.from(b.valueOf(),"ascii");if(d)b=d(q).toString("binary");else b=q.toString("binary");return b=b.replace(fY,($)=>dY[$]),`(${b})`}else if(Buffer.isBuffer(x))return`<${x.toString("hex")}>`;else if(x instanceof s8||x instanceof X3||x instanceof c5)return x.toString();else if(x instanceof Date){let b=`D:${G2(x.getUTCFullYear(),4)}`+G2(x.getUTCMonth()+1,2)+G2(x.getUTCDate(),2)+G2(x.getUTCHours(),2)+G2(x.getUTCMinutes(),2)+G2(x.getUTCSeconds(),2)+"Z";if(d)b=d(Buffer.from(b,"ascii")).toString("binary"),b=b.replace(fY,(c)=>dY[c]);return`(${b})`}else if(Array.isArray(x))return`[${x.map((c)=>Dx.convert(c,d)).join(" ")}]`;else if({}.toString.call(x)==="[object Object]"){let b=["<<"];for(let c in x){let q=x[c];b.push(`/${c} ${Dx.convert(q,d)}`)}return b.push(">>"),b.join(`
`)}else if(typeof x==="number")return Dx.number(x);else return`${x}`}static number(x){if(x>-1000000000000000000000&&x<1000000000000000000000)return Math.round(x*1e6)/1e6;throw new Error(`unsupported number: ${x}`)}}class MY extends s8{constructor(x,d,b={}){super();this.document=x,this.id=d,this.data=b,this.gen=0,this.compress=this.document.compress&&!this.data.Filter,this.uncompressedLength=0,this.buffer=[]}write(x){if(!(x instanceof Uint8Array))x=Buffer.from(x+`
`,"binary");if(this.uncompressedLength+=x.length,this.data.Length==null)this.data.Length=0;if(this.buffer.push(x),this.data.Length+=x.length,this.compress)this.data.Filter="FlateDecode"}end(x){if(x)this.write(x);this.finalize()}finalize(){this.offset=this.document._offset;let x=this.document._security?this.document._security.getEncryptFn(this.id,this.gen):null;if(this.buffer.length){if(this.buffer=Buffer.concat(this.buffer),this.compress)this.buffer=b5.deflateSync(this.buffer);if(x)this.buffer=x(this.buffer);this.data.Length=this.buffer.length}if(this.document._write(`${this.id} ${this.gen} obj`),this.document._write(Dx.convert(this.data,x)),this.buffer.length)this.document._write("stream"),this.document._write(this.buffer),this.buffer=[],this.document._write(`
endstream`);this.document._write("endobj"),this.document._refEnd(this)}toString(){return`${this.id} ${this.gen} R`}}function J3(x){return Math.fround(x)}function $x(x,d=void 0,b=(c)=>c){if(x==null||typeof x==="object"&&Object.keys(x).length===0)x=d;if(x==null||typeof x!=="object")x={top:x,right:x,bottom:x,left:x};else if(Array.isArray(x))if(x.length===2)x={vertical:x[0],horizontal:x[1]};else x={top:x[0],right:x[1],bottom:x[2],left:x[3]};if("vertical"in x||"horizontal"in x)x={top:x.vertical,right:x.horizontal,bottom:x.vertical,left:x.horizontal};return{top:b(x.top),right:b(x.right),bottom:b(x.bottom),left:b(x.left)}}var xW=0.1,bY=0.39370078740157477,fW=0.010416666666666666,V3=72,dW=12;function AY(x){if(x===0)return 1;if(x===90)return 0;if(x===180)return-1;if(x===270)return 0;return Math.cos(x*Math.PI/180)}function FY(x){if(x===0)return 0;if(x===90)return 1;if(x===180)return 0;if(x===270)return-1;return Math.sin(x*Math.PI/180)}var bW={top:72,left:72,bottom:72,right:72},cW={"4A0":[4767.87,6740.79],"2A0":[3370.39,4767.87],A0:[2383.94,3370.39],A1:[1683.78,2383.94],A2:[1190.55,1683.78],A3:[841.89,1190.55],A4:[595.28,841.89],A5:[419.53,595.28],A6:[297.64,419.53],A7:[209.76,297.64],A8:[147.4,209.76],A9:[104.88,147.4],A10:[73.7,104.88],B0:[2834.65,4008.19],B1:[2004.09,2834.65],B2:[1417.32,2004.09],B3:[1000.63,1417.32],B4:[708.66,1000.63],B5:[498.9,708.66],B6:[354.33,498.9],B7:[249.45,354.33],B8:[175.75,249.45],B9:[124.72,175.75],B10:[87.87,124.72],C0:[2599.37,3676.54],C1:[1836.85,2599.37],C2:[1298.27,1836.85],C3:[918.43,1298.27],C4:[649.13,918.43],C5:[459.21,649.13],C6:[323.15,459.21],C7:[229.61,323.15],C8:[161.57,229.61],C9:[113.39,161.57],C10:[79.37,113.39],RA0:[2437.8,3458.27],RA1:[1729.13,2437.8],RA2:[1218.9,1729.13],RA3:[864.57,1218.9],RA4:[609.45,864.57],SRA0:[2551.18,3628.35],SRA1:[1814.17,2551.18],SRA2:[1275.59,1814.17],SRA3:[907.09,1275.59],SRA4:[637.8,907.09],EXECUTIVE:[521.86,756],FOLIO:[612,936],LEGAL:[612,1008],LETTER:[612,792],TABLOID:[792,1224]};class zY{constructor(x,d={}){this.document=x,this._options=d,this.size=d.size||"letter",this.layout=d.layout||"portrait";let b=Array.isArray(this.size)?this.size:cW[this.size.toUpperCase()];if(this.width=b[this.layout==="portrait"?0:1],this.height=b[this.layout==="portrait"?1:0],this.content=this.document.ref(),d.font)x.font(d.font,d.fontFamily);if(d.fontSize)x.fontSize(d.fontSize);this.margins=$x(d.margin??d.margins,bW,(c)=>x.sizeToPoint(c,0,this)),this.resources=this.document.ref({ProcSet:["PDF","Text","ImageB","ImageC","ImageI"]}),this.dictionary=this.document.ref({Type:"Page",Parent:this.document._root.data.Pages,MediaBox:[0,0,this.width,this.height],Contents:this.content,Resources:this.resources}),this.markings=[]}get fonts(){let x=this.resources.data;return x.Font!=null?x.Font:x.Font={}}get xobjects(){let x=this.resources.data;return x.XObject!=null?x.XObject:x.XObject={}}get ext_gstates(){let x=this.resources.data;return x.ExtGState!=null?x.ExtGState:x.ExtGState={}}get patterns(){let x=this.resources.data;return x.Pattern!=null?x.Pattern:x.Pattern={}}get colorSpaces(){let x=this.resources.data;return x.ColorSpace||(x.ColorSpace={})}get annotations(){let x=this.dictionary.data;return x.Annots!=null?x.Annots:x.Annots=[]}get structParentTreeKey(){let x=this.dictionary.data;return x.StructParents!=null?x.StructParents:x.StructParents=this.document.createStructParentTreeNextKey()}get contentWidth(){return this.width-this.margins.left-this.margins.right}get contentHeight(){return this.height-this.margins.top-this.margins.bottom}maxY(){return this.height-this.margins.bottom}write(x){return this.content.write(x)}_setTabOrder(){if(!this.dictionary.Tabs&&this.document.hasMarkInfoDictionary())this.dictionary.data.Tabs="S"}end(){this._setTabOrder(),this.dictionary.end(),this.resources.data.ColorSpace=this.resources.data.ColorSpace||{};for(let x of Object.values(this.document.spotColors))this.resources.data.ColorSpace[x.id]=x;return this.resources.end(),this.content.end()}}class K3 extends X3{_compareKeys(x,d){return x.localeCompare(d)}_keysName(){return"Names"}_dataForKey(x){return new String(x)}}function L6(x,d){if(x<d[0])return!1;let b=0,c=d.length/2;while(b<=c){let q=Math.floor((b+c)/2),$=q*2;if(x>=d[$]&&x<=d[$+1])return!0;if(x>d[$+1])b=q+1;else c=q-1}return!1}var qW=[545,545,564,591,686,687,751,767,848,863,880,883,886,889,891,893,895,899,907,907,909,909,930,930,975,975,1015,1023,1159,1159,1231,1231,1270,1271,1274,1279,1296,1328,1367,1368,1376,1376,1416,1416,1419,1424,1442,1442,1466,1466,1477,1487,1515,1519,1525,1547,1549,1562,1564,1566,1568,1568,1595,1599,1622,1631,1774,1775,1791,1791,1806,1806,1837,1839,1867,1919,1970,2304,2308,2308,2362,2363,2382,2383,2389,2391,2417,2432,2436,2436,2445,2446,2449,2450,2473,2473,2481,2481,2483,2485,2490,2491,2493,2493,2501,2502,2505,2506,2510,2518,2520,2523,2526,2526,2532,2533,2555,2561,2563,2564,2571,2574,2577,2578,2601,2601,2609,2609,2612,2612,2615,2615,2618,2619,2621,2621,2627,2630,2633,2634,2638,2648,2653,2653,2655,2661,2677,2688,2692,2692,2700,2700,2702,2702,2706,2706,2729,2729,2737,2737,2740,2740,2746,2747,2758,2758,2762,2762,2766,2767,2769,2783,2785,2789,2800,2816,2820,2820,2829,2830,2833,2834,2857,2857,2865,2865,2868,2869,2874,2875,2884,2886,2889,2890,2894,2901,2904,2907,2910,2910,2914,2917,2929,2945,2948,2948,2955,2957,2961,2961,2966,2968,2971,2971,2973,2973,2976,2978,2981,2983,2987,2989,2998,2998,3002,3005,3011,3013,3017,3017,3022,3030,3032,3046,3059,3072,3076,3076,3085,3085,3089,3089,3113,3113,3124,3124,3130,3133,3141,3141,3145,3145,3150,3156,3159,3167,3170,3173,3184,3201,3204,3204,3213,3213,3217,3217,3241,3241,3252,3252,3258,3261,3269,3269,3273,3273,3278,3284,3287,3293,3295,3295,3298,3301,3312,3329,3332,3332,3341,3341,3345,3345,3369,3369,3386,3389,3396,3397,3401,3401,3406,3414,3416,3423,3426,3429,3440,3457,3460,3460,3479,3481,3506,3506,3516,3516,3518,3519,3527,3529,3531,3534,3541,3541,3543,3543,3552,3569,3573,3584,3643,3646,3676,3712,3715,3715,3717,3718,3721,3721,3723,3724,3726,3731,3736,3736,3744,3744,3748,3748,3750,3750,3752,3753,3756,3756,3770,3770,3774,3775,3781,3781,3783,3783,3790,3791,3802,3803,3806,3839,3912,3912,3947,3952,3980,3983,3992,3992,4029,4029,4045,4046,4048,4095,4130,4130,4136,4136,4139,4139,4147,4149,4154,4159,4186,4255,4294,4303,4345,4346,4348,4351,4442,4446,4515,4519,4602,4607,4615,4615,4679,4679,4681,4681,4686,4687,4695,4695,4697,4697,4702,4703,4743,4743,4745,4745,4750,4751,4783,4783,4785,4785,4790,4791,4799,4799,4801,4801,4806,4807,4815,4815,4823,4823,4847,4847,4879,4879,4881,4881,4886,4887,4895,4895,4935,4935,4955,4960,4989,5023,5109,5120,5751,5759,5789,5791,5873,5887,5901,5901,5909,5919,5943,5951,5972,5983,5997,5997,6001,6001,6004,6015,6109,6111,6122,6143,6159,6159,6170,6175,6264,6271,6314,7679,7836,7839,7930,7935,7958,7959,7966,7967,8006,8007,8014,8015,8024,8024,8026,8026,8028,8028,8030,8030,8062,8063,8117,8117,8133,8133,8148,8149,8156,8156,8176,8177,8181,8181,8191,8191,8275,8278,8280,8286,8292,8297,8306,8307,8335,8351,8370,8399,8427,8447,8507,8508,8524,8530,8580,8591,9167,9215,9255,9279,9291,9311,9471,9471,9748,9749,9752,9752,9854,9855,9866,9984,9989,9989,9994,9995,10024,10024,10060,10060,10062,10062,10067,10069,10071,10071,10079,10080,10133,10135,10160,10160,10175,10191,10220,10223,11008,11903,11930,11930,12020,12031,12246,12271,12284,12287,12352,12352,12439,12440,12544,12548,12589,12592,12687,12687,12728,12783,12829,12831,12868,12880,12924,12926,13004,13007,13055,13055,13175,13178,13278,13279,13311,13311,19894,19967,40870,40959,42125,42127,42183,44031,55204,55295,64046,64047,64107,64255,64263,64274,64280,64284,64311,64311,64317,64317,64319,64319,64322,64322,64325,64325,64434,64466,64832,64847,64912,64913,64968,64975,65021,65023,65040,65055,65060,65071,65095,65096,65107,65107,65127,65127,65132,65135,65141,65141,65277,65278,65280,65280,65471,65473,65480,65481,65488,65489,65496,65497,65501,65503,65511,65511,65519,65528,65536,66303,66335,66335,66340,66351,66379,66559,66598,66599,66638,118783,119030,119039,119079,119081,119262,119807,119893,119893,119965,119965,119968,119969,119971,119972,119975,119976,119981,119981,119994,119994,119996,119996,120001,120001,120004,120004,120070,120070,120075,120076,120085,120085,120093,120093,120122,120122,120127,120127,120133,120133,120135,120137,120145,120145,120484,120487,120778,120781,120832,131069,173783,194559,195102,196605,196608,262141,262144,327677,327680,393213,393216,458749,458752,524285,524288,589821,589824,655357,655360,720893,720896,786429,786432,851965,851968,917501,917504,917504,917506,917535,917632,983037],$W=(x)=>L6(x,qW),QW=[173,173,847,847,6150,6150,6155,6155,6156,6156,6157,6157,8203,8203,8204,8204,8205,8205,8288,8288,65024,65024,65025,65025,65026,65026,65027,65027,65028,65028,65029,65029,65030,65030,65031,65031,65032,65032,65033,65033,65034,65034,65035,65035,65036,65036,65037,65037,65038,65038,65039,65039,65279,65279],YW=(x)=>L6(x,QW),BY=[160,160,5760,5760,8192,8192,8193,8193,8194,8194,8195,8195,8196,8196,8197,8197,8198,8198,8199,8199,8200,8200,8201,8201,8202,8202,8203,8203,8239,8239,8287,8287,12288,12288],GW=(x)=>L6(x,BY),EW=[128,159,1757,1757,1807,1807,6158,6158,8204,8204,8205,8205,8232,8232,8233,8233,8288,8288,8289,8289,8290,8290,8291,8291,8298,8303,65279,65279,65529,65532,119155,119162],JW=[64976,65007,65534,65535,131070,131071,196606,196607,262142,262143,327678,327679,393214,393215,458750,458751,524286,524287,589822,589823,655358,655359,720894,720895,786430,786431,851966,851967,917502,917503,983038,983039,1114110,1114111],VW=[0,31,127,127,832,832,833,833,8206,8206,8207,8207,8234,8234,8235,8235,8236,8236,8237,8237,8238,8238,8298,8298,8299,8299,8300,8300,8301,8301,8302,8302,8303,8303,12272,12283,55296,57343,57344,63743,65529,65529,65530,65530,65531,65531,65532,65532,65533,65533,917505,917505,917536,917631,983040,1048573,1048576,1114109],NW=(x)=>L6(x,BY)||L6(x,VW)||L6(x,EW)||L6(x,JW),UW=[1470,1470,1472,1472,1475,1475,1488,1514,1520,1524,1563,1563,1567,1567,1569,1594,1600,1610,1645,1647,1649,1749,1757,1757,1765,1766,1786,1790,1792,1805,1808,1808,1810,1836,1920,1957,1969,1969,8207,8207,64285,64285,64287,64296,64298,64310,64312,64316,64318,64318,64320,64321,64323,64324,64326,64433,64467,64829,64848,64911,64914,64967,65008,65020,65136,65140,65142,65276],y8=(x)=>L6(x,UW),KW=[65,90,97,122,170,170,181,181,186,186,192,214,216,246,248,544,546,563,592,685,688,696,699,705,720,721,736,740,750,750,890,890,902,902,904,906,908,908,910,929,931,974,976,1013,1024,1154,1162,1230,1232,1269,1272,1273,1280,1295,1329,1366,1369,1375,1377,1415,1417,1417,2307,2307,2309,2361,2365,2368,2377,2380,2384,2384,2392,2401,2404,2416,2434,2435,2437,2444,2447,2448,2451,2472,2474,2480,2482,2482,2486,2489,2494,2496,2503,2504,2507,2508,2519,2519,2524,2525,2527,2529,2534,2545,2548,2554,2565,2570,2575,2576,2579,2600,2602,2608,2610,2611,2613,2614,2616,2617,2622,2624,2649,2652,2654,2654,2662,2671,2674,2676,2691,2691,2693,2699,2701,2701,2703,2705,2707,2728,2730,2736,2738,2739,2741,2745,2749,2752,2761,2761,2763,2764,2768,2768,2784,2784,2790,2799,2818,2819,2821,2828,2831,2832,2835,2856,2858,2864,2866,2867,2870,2873,2877,2878,2880,2880,2887,2888,2891,2892,2903,2903,2908,2909,2911,2913,2918,2928,2947,2947,2949,2954,2958,2960,2962,2965,2969,2970,2972,2972,2974,2975,2979,2980,2984,2986,2990,2997,2999,3001,3006,3007,3009,3010,3014,3016,3018,3020,3031,3031,3047,3058,3073,3075,3077,3084,3086,3088,3090,3112,3114,3123,3125,3129,3137,3140,3168,3169,3174,3183,3202,3203,3205,3212,3214,3216,3218,3240,3242,3251,3253,3257,3262,3262,3264,3268,3271,3272,3274,3275,3285,3286,3294,3294,3296,3297,3302,3311,3330,3331,3333,3340,3342,3344,3346,3368,3370,3385,3390,3392,3398,3400,3402,3404,3415,3415,3424,3425,3430,3439,3458,3459,3461,3478,3482,3505,3507,3515,3517,3517,3520,3526,3535,3537,3544,3551,3570,3572,3585,3632,3634,3635,3648,3654,3663,3675,3713,3714,3716,3716,3719,3720,3722,3722,3725,3725,3732,3735,3737,3743,3745,3747,3749,3749,3751,3751,3754,3755,3757,3760,3762,3763,3773,3773,3776,3780,3782,3782,3792,3801,3804,3805,3840,3863,3866,3892,3894,3894,3896,3896,3902,3911,3913,3946,3967,3967,3973,3973,3976,3979,4030,4037,4039,4044,4047,4047,4096,4129,4131,4135,4137,4138,4140,4140,4145,4145,4152,4152,4160,4183,4256,4293,4304,4344,4347,4347,4352,4441,4447,4514,4520,4601,4608,4614,4616,4678,4680,4680,4682,4685,4688,4694,4696,4696,4698,4701,4704,4742,4744,4744,4746,4749,4752,4782,4784,4784,4786,4789,4792,4798,4800,4800,4802,4805,4808,4814,4816,4822,4824,4846,4848,4878,4880,4880,4882,4885,4888,4894,4896,4934,4936,4954,4961,4988,5024,5108,5121,5750,5761,5786,5792,5872,5888,5900,5902,5905,5920,5937,5941,5942,5952,5969,5984,5996,5998,6000,6016,6070,6078,6085,6087,6088,6100,6106,6108,6108,6112,6121,6160,6169,6176,6263,6272,6312,7680,7835,7840,7929,7936,7957,7960,7965,7968,8005,8008,8013,8016,8023,8025,8025,8027,8027,8029,8029,8031,8061,8064,8116,8118,8124,8126,8126,8130,8132,8134,8140,8144,8147,8150,8155,8160,8172,8178,8180,8182,8188,8206,8206,8305,8305,8319,8319,8450,8450,8455,8455,8458,8467,8469,8469,8473,8477,8484,8484,8486,8486,8488,8488,8490,8493,8495,8497,8499,8505,8509,8511,8517,8521,8544,8579,9014,9082,9109,9109,9372,9449,12293,12295,12321,12329,12337,12341,12344,12348,12353,12438,12445,12447,12449,12538,12540,12543,12549,12588,12593,12686,12688,12727,12784,12828,12832,12867,12896,12923,12927,12976,12992,13003,13008,13054,13056,13174,13179,13277,13280,13310,13312,19893,19968,40869,40960,42124,44032,55203,55296,64045,64048,64106,64256,64262,64275,64279,65313,65338,65345,65370,65382,65470,65474,65479,65482,65487,65490,65495,65498,65500,66304,66334,66336,66339,66352,66378,66560,66597,66600,66637,118784,119029,119040,119078,119082,119142,119146,119154,119171,119172,119180,119209,119214,119261,119808,119892,119894,119964,119966,119967,119970,119970,119973,119974,119977,119980,119982,119993,119995,119995,119997,120000,120002,120003,120005,120069,120071,120074,120077,120084,120086,120092,120094,120121,120123,120126,120128,120132,120134,120134,120138,120144,120146,120483,120488,120777,131072,173782,194560,195101,983040,1048573,1048576,1114109],RW=(x)=>L6(x,KW),XW=GW,jW=YW,cY=(x)=>x.codePointAt(0),OW=(x)=>x[0],HW=(x)=>x[x.length-1];function qY(x){let d=[],b=x.length;for(let c=0;c<b;c+=1){let q=x.charCodeAt(c);if(q>=55296&&q<=56319&&b>c+1){let $=x.charCodeAt(c+1);if($>=56320&&$<=57343){d.push((q-55296)*1024+$-56320+65536),c+=1;continue}}d.push(q)}return d}function WW(x,d={}){if(typeof x!=="string")throw new TypeError("Expected string.");if(x.length===0)return"";let b=qY(x).map((V)=>XW(V)?32:V).filter((V)=>!jW(V)),c=String.fromCodePoint.apply(null,b).normalize("NFKC"),q=qY(c);if(q.some(NW))throw new Error("Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3");if(d.allowUnassigned!==!0){if(q.some($W))throw new Error("Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5")}let Y=q.some(y8),G=q.some(RW);if(Y&&G)throw new Error("String must not contain RandALCat and LCat at the same time, see https://tools.ietf.org/html/rfc3454#section-6");let E=y8(cY(OW(c))),J=y8(cY(HW(c)));if(Y&&!(E&&J))throw new Error("Bidirectional RandALCat character must be the first and the last character of the string, see https://tools.ietf.org/html/rfc3454#section-6");return c}class H6{static generateFileID(x={}){let d=`${x.CreationDate.getTime()}
`;for(let b in x){if(!x.hasOwnProperty(b))continue;d+=`${b}: ${x[b].valueOf()}
`}return c6(G0.MD5(d))}static generateRandomWordArray(x){return G0.lib.WordArray.random(x)}static create(x,d={}){if(!d.ownerPassword&&!d.userPassword)return null;return new H6(x,d)}constructor(x,d={}){if(!d.ownerPassword&&!d.userPassword)throw new Error("None of owner password and user password is defined.");this.document=x,this._setupEncryption(d)}_setupEncryption(x){switch(x.pdfVersion){case"1.4":case"1.5":this.version=2;break;case"1.6":case"1.7":this.version=4;break;case"1.7ext3":this.version=5;break;default:this.version=1;break}let d={Filter:"Standard"};switch(this.version){case 1:case 2:case 4:this._setupEncryptionV1V2V4(this.version,d,x);break;case 5:this._setupEncryptionV5(d,x);break}this.dictionary=this.document.ref(d)}_setupEncryptionV1V2V4(x,d,b){let c,q;switch(x){case 1:c=2,this.keyBits=40,q=LW(b.permissions);break;case 2:c=3,this.keyBits=128,q=p8(b.permissions);break;case 4:c=4,this.keyBits=128,q=p8(b.permissions);break}let $=R3(b.userPassword),Y=b.ownerPassword?R3(b.ownerPassword):$,G=MW(c,this.keyBits,$,Y);this.encryptionKey=AW(c,this.keyBits,this.document._id,$,G,q);let E;if(c===2)E=DW(this.encryptionKey);else E=eW(this.document._id,this.encryptionKey);if(d.V=x,x>=2)d.Length=this.keyBits;if(x===4)d.CF={StdCF:{AuthEvent:"DocOpen",CFM:"AESV2",Length:this.keyBits/8}},d.StmF="StdCF",d.StrF="StdCF";d.R=c,d.O=c6(G),d.U=c6(E),d.P=q}_setupEncryptionV5(x,d){this.keyBits=256;let b=p8(d.permissions),c=$Y(d.userPassword),q=d.ownerPassword?$Y(d.ownerPassword):c;this.encryptionKey=PW(H6.generateRandomWordArray);let $=FW(c,H6.generateRandomWordArray),Y=G0.lib.WordArray.create($.words.slice(10,12),8),G=zW(c,Y,this.encryptionKey),E=BW(q,$,H6.generateRandomWordArray),J=G0.lib.WordArray.create(E.words.slice(10,12),8),V=wW(q,J,$,this.encryptionKey),N=vW(b,this.encryptionKey,H6.generateRandomWordArray);x.V=5,x.Length=this.keyBits,x.CF={StdCF:{AuthEvent:"DocOpen",CFM:"AESV3",Length:this.keyBits/8}},x.StmF="StdCF",x.StrF="StdCF",x.R=5,x.O=c6(E),x.OE=c6(V),x.U=c6($),x.UE=c6(G),x.P=b,x.Perms=c6(N)}getEncryptFn(x,d){let b;if(this.version<5)b=this.encryptionKey.clone().concat(G0.lib.WordArray.create([(x&255)<<24|(x&65280)<<8|x>>8&65280|d&255,(d&65280)<<16],5));if(this.version===1||this.version===2){let Y=G0.MD5(b);return Y.sigBytes=Math.min(16,this.keyBits/8+5),(G)=>c6(G0.RC4.encrypt(G0.lib.WordArray.create(G),Y).ciphertext)}let c;if(this.version===4)c=G0.MD5(b.concat(G0.lib.WordArray.create([1933667412],4)));else c=this.encryptionKey;let q=H6.generateRandomWordArray(16),$={mode:G0.mode.CBC,padding:G0.pad.Pkcs7,iv:q};return(Y)=>c6(q.clone().concat(G0.AES.encrypt(G0.lib.WordArray.create(Y),c,$).ciphertext))}end(){this.dictionary.end()}}function LW(x={}){let d=-64;if(x.printing)d|=4;if(x.modifying)d|=8;if(x.copying)d|=16;if(x.annotating)d|=32;return d}function p8(x={}){let d=-3904;if(x.printing==="lowResolution")d|=4;if(x.printing==="highResolution")d|=2052;if(x.modifying)d|=8;if(x.copying)d|=16;if(x.annotating)d|=32;if(x.fillingForms)d|=256;if(x.contentAccessibility)d|=512;if(x.documentAssembly)d|=1024;return d}function DW(x){return G0.RC4.encrypt(R3(),x).ciphertext}function eW(x,d){let b=d.clone(),c=G0.MD5(R3().concat(G0.lib.WordArray.create(x)));for(let q=0;q<20;q++){let $=Math.ceil(b.sigBytes/4);for(let Y=0;Y<$;Y++)b.words[Y]=d.words[Y]^(q|q<<8|q<<16|q<<24);c=G0.RC4.encrypt(c,b).ciphertext}return c.concat(G0.lib.WordArray.create(null,16))}function MW(x,d,b,c){let q=c,$=x>=3?51:1;for(let E=0;E<$;E++)q=G0.MD5(q);let Y=q.clone();Y.sigBytes=d/8;let G=b;$=x>=3?20:1;for(let E=0;E<$;E++){let J=Math.ceil(Y.sigBytes/4);for(let V=0;V<J;V++)Y.words[V]=q.words[V]^(E|E<<8|E<<16|E<<24);G=G0.RC4.encrypt(G,Y).ciphertext}return G}function AW(x,d,b,c,q,$){let Y=c.clone().concat(q).concat(G0.lib.WordArray.create([wY($)],4)).concat(G0.lib.WordArray.create(b)),G=x>=3?51:1;for(let E=0;E<G;E++)Y=G0.MD5(Y),Y.sigBytes=d/8;return Y}function FW(x,d){let b=d(8),c=d(8);return G0.SHA256(x.clone().concat(b)).concat(b).concat(c)}function zW(x,d,b){let c=G0.SHA256(x.clone().concat(d)),q={mode:G0.mode.CBC,padding:G0.pad.NoPadding,iv:G0.lib.WordArray.create(null,16)};return G0.AES.encrypt(b,c,q).ciphertext}function BW(x,d,b){let c=b(8),q=b(8);return G0.SHA256(x.clone().concat(c).concat(d)).concat(c).concat(q)}function wW(x,d,b,c){let q=G0.SHA256(x.clone().concat(d).concat(b)),$={mode:G0.mode.CBC,padding:G0.pad.NoPadding,iv:G0.lib.WordArray.create(null,16)};return G0.AES.encrypt(c,q,$).ciphertext}function PW(x){return x(32)}function vW(x,d,b){let c=G0.lib.WordArray.create([wY(x),4294967295,1415668834],12).concat(b(4)),q={mode:G0.mode.ECB,padding:G0.pad.NoPadding};return G0.AES.encrypt(c,d,q).ciphertext}function R3(x=""){let d=Buffer.alloc(32),b=x.length,c=0;while(c<b&&c<32){let q=x.charCodeAt(c);if(q>255)throw new Error("Password contains one or more invalid characters.");d[c]=q,c++}while(c<32)d[c]=IW[c-b],c++;return G0.lib.WordArray.create(d)}function $Y(x=""){x=unescape(encodeURIComponent(WW(x)));let d=Math.min(127,x.length),b=Buffer.alloc(d);for(let c=0;c<d;c++)b[c]=x.charCodeAt(c);return G0.lib.WordArray.create(b)}function wY(x){return(x&255)<<24|(x&65280)<<8|x>>8&65280|x>>24&255}function c6(x){let d=[];for(let b=0;b<x.sigBytes;b++)d.push(x.words[Math.floor(b/4)]>>8*(3-b%4)&255);return Buffer.from(d)}var IW=[40,191,78,94,78,117,138,65,100,0,78,86,255,250,1,8,46,46,0,182,208,104,62,128,47,12,169,254,100,83,105,122],{number:SW}=Dx;class j3{constructor(x){this.doc=x,this.stops=[],this.embedded=!1,this.transform=[1,0,0,1,0,0]}stop(x,d,b){if(b==null)b=1;if(d=this.doc._normalizeColor(d),this.stops.length===0)if(d.length===3)this._colorSpace="DeviceRGB";else if(d.length===4)this._colorSpace="DeviceCMYK";else if(d.length===1)this._colorSpace="DeviceGray";else throw new Error("Unknown color space");else if(this._colorSpace==="DeviceRGB"&&d.length!==3||this._colorSpace==="DeviceCMYK"&&d.length!==4||this._colorSpace==="DeviceGray"&&d.length!==1)throw new Error("All gradient stops must use the same color space");return b=Math.max(0,Math.min(1,b)),this.stops.push([x,d,b]),this}setTransform(x,d,b,c,q,$){return this.transform=[x,d,b,c,q,$],this}embed(x){let d,b=this.stops.length;if(b===0)return;this.embedded=!0,this.matrix=x;let c=this.stops[b-1];if(c[0]<1)this.stops.push([1,c[1],c[2]]);let q=[],$=[],Y=[];for(let J=0;J<b-1;J++){if($.push(0,1),J+2!==b)q.push(this.stops[J+1][0]);d=this.doc.ref({FunctionType:2,Domain:[0,1],C0:this.stops[J+0][1],C1:this.stops[J+1][1],N:1}),Y.push(d),d.end()}if(b===1)d=Y[0];else d=this.doc.ref({FunctionType:3,Domain:[0,1],Functions:Y,Bounds:q,Encode:$}),d.end();this.id=`Sh${++this.doc._gradCount}`;let G=this.shader(d);G.end();let E=this.doc.ref({Type:"Pattern",PatternType:2,Shading:G,Matrix:this.matrix.map(SW)});if(E.end(),this.stops.some((J)=>J[2]<1)){let J=this.opacityGradient();J._colorSpace="DeviceGray";for(let X of this.stops)J.stop(X[0],[X[2]]);J=J.embed(this.matrix);let V=[0,0,this.doc.page.width,this.doc.page.height],N=this.doc.ref({Type:"XObject",Subtype:"Form",FormType:1,BBox:V,Group:{Type:"Group",S:"Transparency",CS:"DeviceGray"},Resources:{ProcSet:["PDF","Text","ImageB","ImageC","ImageI"],Pattern:{Sh1:J}}});N.write("/Pattern cs /Sh1 scn"),N.end(`${V.join(" ")} re f`);let U=this.doc.ref({Type:"ExtGState",SMask:{Type:"Mask",S:"Luminosity",G:N}});U.end();let K=this.doc.ref({Type:"Pattern",PatternType:1,PaintType:1,TilingType:2,BBox:V,XStep:V[2],YStep:V[3],Resources:{ProcSet:["PDF","Text","ImageB","ImageC","ImageI"],Pattern:{Sh1:E},ExtGState:{Gs1:U}}});K.write("/Gs1 gs /Pattern cs /Sh1 scn"),K.end(`${V.join(" ")} re f`),this.doc.page.patterns[this.id]=K}else this.doc.page.patterns[this.id]=E;return E}apply(x){let[d,b,c,q,$,Y]=this.doc._ctm,[G,E,J,V,N,U]=this.transform,K=[d*G+c*E,b*G+q*E,d*J+c*V,b*J+q*V,d*N+c*U+$,b*N+q*U+Y];if(!this.embedded||K.join(" ")!==this.matrix.join(" "))this.embed(K);this.doc._setColorSpace("Pattern",x);let X=x?"SCN":"scn";return this.doc.addContent(`/${this.id} ${X}`)}}class o8 extends j3{constructor(x,d,b,c,q){super(x);this.x1=d,this.y1=b,this.x2=c,this.y2=q}shader(x){return this.doc.ref({ShadingType:2,ColorSpace:this._colorSpace,Coords:[this.x1,this.y1,this.x2,this.y2],Function:x,Extend:[!0,!0]})}opacityGradient(){return new o8(this.doc,this.x1,this.y1,this.x2,this.y2)}}class t8 extends j3{constructor(x,d,b,c,q,$,Y){super(x);this.doc=x,this.x1=d,this.y1=b,this.r1=c,this.x2=q,this.y2=$,this.r2=Y}shader(x){return this.doc.ref({ShadingType:3,ColorSpace:this._colorSpace,Coords:[this.x1,this.y1,this.r1,this.x2,this.y2,this.r2],Function:x,Extend:[!0,!0]})}opacityGradient(){return new t8(this.doc,this.x1,this.y1,this.r1,this.x2,this.y2,this.r2)}}var ZW={PDFGradient:j3,PDFLinearGradient:o8,PDFRadialGradient:t8},TW=["DeviceCMYK","DeviceRGB"];class PY{constructor(x,d,b,c,q){this.doc=x,this.bBox=d,this.xStep=b,this.yStep=c,this.stream=q}createPattern(){let x=this.doc.ref();x.end();let[d,b,c,q,$,Y]=this.doc._ctm,[G,E,J,V,N,U]=[1,0,0,1,0,0],K=[d*G+c*E,b*G+q*E,d*J+c*V,b*J+q*V,d*N+c*U+$,b*N+q*U+Y],X=this.doc.ref({Type:"Pattern",PatternType:1,PaintType:2,TilingType:2,BBox:this.bBox,XStep:this.xStep,YStep:this.yStep,Matrix:K.map((D)=>+D.toFixed(5)),Resources:x});return X.end(this.stream),X}embedPatternColorSpaces(){TW.forEach((x)=>{let d=this.getPatternColorSpaceId(x);if(this.doc.page.colorSpaces[d])return;let b=this.doc.ref(["Pattern",x]);b.end(),this.doc.page.colorSpaces[d]=b})}getPatternColorSpaceId(x){return`CsP${x}`}embed(){if(!this.id)this.doc._patternCount=this.doc._patternCount+1,this.id="P"+this.doc._patternCount,this.pattern=this.createPattern();if(!this.doc.page.patterns[this.id])this.doc.page.patterns[this.id]=this.pattern}apply(x,d){this.embedPatternColorSpaces(),this.embed();let b=this.doc._normalizeColor(d);if(!b)throw Error(`invalid pattern color. (value: ${d})`);let c=this.getPatternColorSpaceId(this.doc._getColorSpace(b));this.doc._setColorSpace(c,x);let q=x?"SCN":"scn";return this.doc.addContent(`${b.join(" ")} /${this.id} ${q}`)}}var CW={PDFTilingPattern:PY},{PDFGradient:kW,PDFLinearGradient:gW,PDFRadialGradient:hW}=ZW,{PDFTilingPattern:QY}=CW,aW={initColor(){this.spotColors={},this._opacityRegistry={},this._opacityCount=0,this._patternCount=0,this._gradCount=0},_normalizeColor(x){if(typeof x==="string"){if(x.charAt(0)==="#"){if(x.length===4)x=x.replace(/#([0-9A-F])([0-9A-F])([0-9A-F])/i,"#$1$1$2$2$3$3");let d=parseInt(x.slice(1),16);x=[d>>16,d>>8&255,d&255]}else if(YY[x])x=YY[x];else if(this.spotColors[x])return this.spotColors[x]}if(Array.isArray(x)){if(x.length===3)x=x.map((d)=>d/255);else if(x.length===4)x=x.map((d)=>d/100);return x}return null},_setColor(x,d){if(x instanceof kW)return x.apply(d),!0;else if(Array.isArray(x)&&x[0]instanceof QY)return x[0].apply(d,x[1]),!0;return this._setColorCore(x,d)},_setColorCore(x,d){if(x=this._normalizeColor(x),!x)return!1;let b=d?"SCN":"scn",c=this._getColorSpace(x);if(this._setColorSpace(c,d),x instanceof c5)this.page.colorSpaces[x.id]=x.ref,this.addContent(`1 ${b}`);else this.addContent(`${x.join(" ")} ${b}`);return!0},_setColorSpace(x,d){let b=d?"CS":"cs";return this.addContent(`/${x} ${b}`)},_getColorSpace(x){if(x instanceof c5)return x.id;return x.length===4?"DeviceCMYK":"DeviceRGB"},fillColor(x,d){if(this._setColor(x,!1))this.fillOpacity(d);return this._fillColor=[x,d],this},strokeColor(x,d){if(this._setColor(x,!0))this.strokeOpacity(d);return this},opacity(x){return this._doOpacity(x,x),this},fillOpacity(x){return this._doOpacity(x,null),this},strokeOpacity(x){return this._doOpacity(null,x),this},_doOpacity(x,d){let b,c;if(x==null&&d==null)return;if(x!=null)x=Math.max(0,Math.min(1,x));if(d!=null)d=Math.max(0,Math.min(1,d));let q=`${x}_${d}`;if(this._opacityRegistry[q])[b,c]=this._opacityRegistry[q];else{if(b={Type:"ExtGState"},x!=null)b.ca=x;if(d!=null)b.CA=d;b=this.ref(b),b.end(),c=`Gs${++this._opacityCount}`,this._opacityRegistry[q]=[b,c]}return this.page.ext_gstates[c]=b,this.addContent(`/${c} gs`)},linearGradient(x,d,b,c){return new gW(this,x,d,b,c)},radialGradient(x,d,b,c,q,$){return new hW(this,x,d,b,c,q,$)},pattern(x,d,b,c){return new QY(this,x,d,b,c)},addSpotColor(x,d,b,c,q){let $=new c5(this,x,d,b,c,q);return this.spotColors[x]=$,this}},YY={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],grey:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},t,x0,j0,A0,E2,J2;t=x0=j0=A0=E2=J2=0;var GY={A:7,a:7,C:6,c:6,H:1,h:1,L:2,l:2,M:2,m:2,Q:4,q:4,S:4,s:4,T:2,t:2,V:1,v:1,Z:0,z:0},_W=function(x){let d,b=[],c=[],q="",$=!1,Y=0;for(let G of x)if(GY[G]!=null){if(Y=GY[G],d){if(q.length>0)c[c.length]=+q;b[b.length]={cmd:d,args:c},c=[],q="",$=!1}d=G}else if([" ",","].includes(G)||G==="-"&&q.length>0&&q[q.length-1]!=="e"||G==="."&&$){if(q.length===0)continue;if(c.length===Y){if(b[b.length]={cmd:d,args:c},c=[+q],d==="M")d="L";if(d==="m")d="l"}else c[c.length]=+q;$=G===".",q=["-","."].includes(G)?G:""}else if(q+=G,G===".")$=!0;if(q.length>0)if(c.length===Y){if(b[b.length]={cmd:d,args:c},c=[+q],d==="M")d="L";if(d==="m")d="l"}else c[c.length]=+q;return b[b.length]={cmd:d,args:c},b},mW=function(x,d){t=x0=j0=A0=E2=J2=0;for(let b=0;b<x.length;b++){let c=x[b];if(typeof EY[c.cmd]==="function")EY[c.cmd](d,c.args)}},EY={M(x,d){return t=d[0],x0=d[1],j0=A0=null,E2=t,J2=x0,x.moveTo(t,x0)},m(x,d){return t+=d[0],x0+=d[1],j0=A0=null,E2=t,J2=x0,x.moveTo(t,x0)},C(x,d){return t=d[4],x0=d[5],j0=d[2],A0=d[3],x.bezierCurveTo(...d)},c(x,d){return x.bezierCurveTo(d[0]+t,d[1]+x0,d[2]+t,d[3]+x0,d[4]+t,d[5]+x0),j0=t+d[2],A0=x0+d[3],t+=d[4],x0+=d[5]},S(x,d){if(j0===null)j0=t,A0=x0;return x.bezierCurveTo(t-(j0-t),x0-(A0-x0),d[0],d[1],d[2],d[3]),j0=d[0],A0=d[1],t=d[2],x0=d[3]},s(x,d){if(j0===null)j0=t,A0=x0;return x.bezierCurveTo(t-(j0-t),x0-(A0-x0),t+d[0],x0+d[1],t+d[2],x0+d[3]),j0=t+d[0],A0=x0+d[1],t+=d[2],x0+=d[3]},Q(x,d){return j0=d[0],A0=d[1],t=d[2],x0=d[3],x.quadraticCurveTo(d[0],d[1],t,x0)},q(x,d){return x.quadraticCurveTo(d[0]+t,d[1]+x0,d[2]+t,d[3]+x0),j0=t+d[0],A0=x0+d[1],t+=d[2],x0+=d[3]},T(x,d){if(j0===null)j0=t,A0=x0;else j0=t-(j0-t),A0=x0-(A0-x0);return x.quadraticCurveTo(j0,A0,d[0],d[1]),j0=t-(j0-t),A0=x0-(A0-x0),t=d[0],x0=d[1]},t(x,d){if(j0===null)j0=t,A0=x0;else j0=t-(j0-t),A0=x0-(A0-x0);return x.quadraticCurveTo(j0,A0,t+d[0],x0+d[1]),t+=d[0],x0+=d[1]},A(x,d){return JY(x,t,x0,d),t=d[5],x0=d[6]},a(x,d){return d[5]+=t,d[6]+=x0,JY(x,t,x0,d),t=d[5],x0=d[6]},L(x,d){return t=d[0],x0=d[1],j0=A0=null,x.lineTo(t,x0)},l(x,d){return t+=d[0],x0+=d[1],j0=A0=null,x.lineTo(t,x0)},H(x,d){return t=d[0],j0=A0=null,x.lineTo(t,x0)},h(x,d){return t+=d[0],j0=A0=null,x.lineTo(t,x0)},V(x,d){return x0=d[0],j0=A0=null,x.lineTo(t,x0)},v(x,d){return x0+=d[0],j0=A0=null,x.lineTo(t,x0)},Z(x){return x.closePath(),t=E2,x0=J2},z(x){return x.closePath(),t=E2,x0=J2}},JY=function(x,d,b,c){let[q,$,Y,G,E,J,V]=c,N=uW(J,V,q,$,G,E,Y,d,b);for(let U of N){let K=yW(...U);x.bezierCurveTo(...K)}},uW=function(x,d,b,c,q,$,Y,G,E){let J=Y*(Math.PI/180),V=Math.sin(J),N=Math.cos(J);b=Math.abs(b),c=Math.abs(c),j0=N*(G-x)*0.5+V*(E-d)*0.5,A0=N*(E-d)*0.5-V*(G-x)*0.5;let U=j0*j0/(b*b)+A0*A0/(c*c);if(U>1)U=Math.sqrt(U),b*=U,c*=U;let K=N/b,X=V/b,D=-V/c,L=N/c,H=K*G+X*E,O=D*G+L*E,j=K*x+X*d,e=D*x+L*d,F=1/((j-H)*(j-H)+(e-O)*(e-O))-0.25;if(F<0)F=0;let z=Math.sqrt(F);if($===q)z=-z;let B=0.5*(H+j)-z*(e-O),w=0.5*(O+e)+z*(j-H),Z=Math.atan2(O-w,H-B),I=Math.atan2(e-w,j-B)-Z;if(I<0&&$===1)I+=2*Math.PI;else if(I>0&&$===0)I-=2*Math.PI;let a=Math.ceil(Math.abs(I/(Math.PI*0.5+0.001))),S=[];for(let y=0;y<a;y++){let T=Z+y*I/a,m=Z+(y+1)*I/a;S[y]=[B,w,T,m,b,c,V,N]}return S},yW=function(x,d,b,c,q,$,Y,G){let E=G*q,J=-Y*$,V=Y*q,N=G*$,U=0.5*(c-b),K=2.6666666666666665*Math.sin(U*0.5)*Math.sin(U*0.5)/Math.sin(U),X=x+Math.cos(b)-K*Math.sin(b),D=d+Math.sin(b)+K*Math.cos(b),L=x+Math.cos(c),H=d+Math.sin(c),O=L+K*Math.sin(c),j=H-K*Math.cos(c);return[E*X+J*D,V*X+N*D,E*O+J*j,V*O+N*j,E*L+J*H,V*L+N*H]};class vY{static apply(x,d){let b=_W(d);mW(b,x)}}var{number:g0}=Dx,N3=4*((Math.sqrt(2)-1)/3),pW={initVector(){this._ctm=[1,0,0,1,0,0],this._ctmStack=[]},save(){return this._ctmStack.push(this._ctm.slice()),this.addContent("q")},restore(){return this._ctm=this._ctmStack.pop()||[1,0,0,1,0,0],this.addContent("Q")},closePath(){return this.addContent("h")},lineWidth(x){return this.addContent(`${g0(x)} w`)},_CAP_STYLES:{BUTT:0,ROUND:1,SQUARE:2},lineCap(x){if(typeof x==="string")x=this._CAP_STYLES[x.toUpperCase()];return this.addContent(`${x} J`)},_JOIN_STYLES:{MITER:0,ROUND:1,BEVEL:2},lineJoin(x){if(typeof x==="string")x=this._JOIN_STYLES[x.toUpperCase()];return this.addContent(`${x} j`)},miterLimit(x){return this.addContent(`${g0(x)} M`)},dash(x,d={}){let b=x;if(!Array.isArray(x))x=[x,d.space||x];if(!x.every((q)=>Number.isFinite(q)&&q>0))throw new Error(`dash(${JSON.stringify(b)}, ${JSON.stringify(d)}) invalid, lengths must be numeric and greater than zero`);return x=x.map(g0).join(" "),this.addContent(`[${x}] ${g0(d.phase||0)} d`)},undash(){return this.addContent("[] 0 d")},moveTo(x,d){return this.addContent(`${g0(x)} ${g0(d)} m`)},lineTo(x,d){return this.addContent(`${g0(x)} ${g0(d)} l`)},bezierCurveTo(x,d,b,c,q,$){return this.addContent(`${g0(x)} ${g0(d)} ${g0(b)} ${g0(c)} ${g0(q)} ${g0($)} c`)},quadraticCurveTo(x,d,b,c){return this.addContent(`${g0(x)} ${g0(d)} ${g0(b)} ${g0(c)} v`)},rect(x,d,b,c){return this.addContent(`${g0(x)} ${g0(d)} ${g0(b)} ${g0(c)} re`)},roundedRect(x,d,b,c,q){if(q==null)q=0;q=Math.min(q,0.5*b,0.5*c);let $=q*(1-N3);return this.moveTo(x+q,d),this.lineTo(x+b-q,d),this.bezierCurveTo(x+b-$,d,x+b,d+$,x+b,d+q),this.lineTo(x+b,d+c-q),this.bezierCurveTo(x+b,d+c-$,x+b-$,d+c,x+b-q,d+c),this.lineTo(x+q,d+c),this.bezierCurveTo(x+$,d+c,x,d+c-$,x,d+c-q),this.lineTo(x,d+q),this.bezierCurveTo(x,d+$,x+$,d,x+q,d),this.closePath()},ellipse(x,d,b,c){if(c==null)c=b;x-=b,d-=c;let q=b*N3,$=c*N3,Y=x+b*2,G=d+c*2,E=x+b,J=d+c;return this.moveTo(x,J),this.bezierCurveTo(x,J-$,E-q,d,E,d),this.bezierCurveTo(E+q,d,Y,J-$,Y,J),this.bezierCurveTo(Y,J+$,E+q,G,E,G),this.bezierCurveTo(E-q,G,x,J+$,x,J),this.closePath()},circle(x,d,b){return this.ellipse(x,d,b)},arc(x,d,b,c,q,$){if($==null)$=!1;let Y=2*Math.PI,G=0.5*Math.PI,E=q-c;if(Math.abs(E)>Y)E=Y;else if(E!==0&&$!==E<0)E=($?-1:1)*Y+E;let J=Math.ceil(Math.abs(E)/G),V=E/J,N=V/G*N3*b,U=c,K=-Math.sin(U)*N,X=Math.cos(U)*N,D=x+Math.cos(U)*b,L=d+Math.sin(U)*b;this.moveTo(D,L);for(let H=0;H<J;H++){let O=D+K,j=L+X;U+=V,D=x+Math.cos(U)*b,L=d+Math.sin(U)*b,K=-Math.sin(U)*N,X=Math.cos(U)*N;let e=D-K,M=L-X;this.bezierCurveTo(O,j,e,M,D,L)}return this},polygon(...x){this.moveTo(...x.shift()||[]);for(let d of x)this.lineTo(...d||[]);return this.closePath()},path(x){return vY.apply(this,x),this},_windingRule(x){if(/even-?odd/.test(x))return"*";return""},fill(x,d){if(/(even-?odd)|(non-?zero)/.test(x))d=x,x=null;if(x)this.fillColor(x);return this.addContent(`f${this._windingRule(d)}`)},stroke(x){if(x)this.strokeColor(x);return this.addContent("S")},fillAndStroke(x,d,b){if(d==null)d=x;let c=/(even-?odd)|(non-?zero)/;if(c.test(x))b=x,x=null;if(c.test(d))b=d,d=x;if(x)this.fillColor(x),this.strokeColor(d);return this.addContent(`B${this._windingRule(b)}`)},clip(x){return this.addContent(`W${this._windingRule(x)} n`)},transform(x,d,b,c,q,$){if(x===1&&d===0&&b===0&&c===1&&q===0&&$===0)return this;let Y=this._ctm,[G,E,J,V,N,U]=Y;Y[0]=G*x+J*d,Y[1]=E*x+V*d,Y[2]=G*b+J*c,Y[3]=E*b+V*c,Y[4]=G*q+J*$+N,Y[5]=E*q+V*$+U;let K=[x,d,b,c,q,$].map((X)=>g0(X)).join(" ");return this.addContent(`${K} cm`)},translate(x,d){return this.transform(1,0,0,1,x,d)},rotate(x,d={}){let b,c=x*Math.PI/180,q=Math.cos(c),$=Math.sin(c),Y=b=0;if(d.origin!=null){[Y,b]=d.origin;let G=Y*q-b*$,E=Y*$+b*q;Y-=G,b-=E}return this.transform(q,$,-$,q,Y,b)},scale(x,d,b={}){let c;if(d==null)d=x;if(typeof d==="object")b=d,d=x;let q=c=0;if(b.origin!=null)[q,c]=b.origin,q-=x*q,c-=d*c;return this.transform(x,0,0,d,q,c)}},VY={402:131,8211:150,8212:151,8216:145,8217:146,8218:130,8220:147,8221:148,8222:132,8224:134,8225:135,8226:149,8230:133,8364:128,8240:137,8249:139,8250:155,710:136,8482:153,338:140,339:156,732:152,352:138,353:154,376:159,381:142,382:158},NY=`.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
  
space         exclam         quotedbl       numbersign
dollar        percent        ampersand      quotesingle
parenleft     parenright     asterisk       plus
comma         hyphen         period         slash
zero          one            two            three
four          five           six            seven
eight         nine           colon          semicolon
less          equal          greater        question
  
at            A              B              C
D             E              F              G
H             I              J              K
L             M              N              O
P             Q              R              S
T             U              V              W
X             Y              Z              bracketleft
backslash     bracketright   asciicircum    underscore
  
grave         a              b              c
d             e              f              g
h             i              j              k
l             m              n              o
p             q              r              s
t             u              v              w
x             y              z              braceleft
bar           braceright     asciitilde     .notdef
  
Euro          .notdef        quotesinglbase florin
quotedblbase  ellipsis       dagger         daggerdbl
circumflex    perthousand    Scaron         guilsinglleft
OE            .notdef        Zcaron         .notdef
.notdef       quoteleft      quoteright     quotedblleft
quotedblright bullet         endash         emdash
tilde         trademark      scaron         guilsinglright
oe            .notdef        zcaron         ydieresis
  
space         exclamdown     cent           sterling
currency      yen            brokenbar      section
dieresis      copyright      ordfeminine    guillemotleft
logicalnot    hyphen         registered     macron
degree        plusminus      twosuperior    threesuperior
acute         mu             paragraph      periodcentered
cedilla       onesuperior    ordmasculine   guillemotright
onequarter    onehalf        threequarters  questiondown
  
Agrave        Aacute         Acircumflex    Atilde
Adieresis     Aring          AE             Ccedilla
Egrave        Eacute         Ecircumflex    Edieresis
Igrave        Iacute         Icircumflex    Idieresis
Eth           Ntilde         Ograve         Oacute
Ocircumflex   Otilde         Odieresis      multiply
Oslash        Ugrave         Uacute         Ucircumflex
Udieresis     Yacute         Thorn          germandbls
  
agrave        aacute         acircumflex    atilde
adieresis     aring          ae             ccedilla
egrave        eacute         ecircumflex    edieresis
igrave        iacute         icircumflex    idieresis
eth           ntilde         ograve         oacute
ocircumflex   otilde         odieresis      divide
oslash        ugrave         uacute         ucircumflex
udieresis     yacute         thorn          ydieresis`.split(/\s+/);class x1{static open(x){return new x1(y0.readFileSync(x,"utf8"))}constructor(x){this.contents=x,this.attributes={},this.glyphWidths={},this.boundingBoxes={},this.kernPairs={},this.parse(),this.charWidths=new Array(256);for(let d=0;d<=255;d++)this.charWidths[d]=this.glyphWidths[NY[d]];this.bbox=this.attributes.FontBBox.split(/\s+/).map((d)=>+d),this.ascender=+(this.attributes.Ascender||0),this.descender=+(this.attributes.Descender||0),this.xHeight=+(this.attributes.XHeight||0),this.capHeight=+(this.attributes.CapHeight||0),this.lineGap=this.bbox[3]-this.bbox[1]-(this.ascender-this.descender)}parse(){let x="";for(let Y of this.contents.split(`
`)){var d,b;if(d=Y.match(/^Start(\w+)/)){x=d[1];continue}else if(d=Y.match(/^End(\w+)/)){x="";continue}switch(x){case"FontMetrics":d=Y.match(/(^\w+)\s+(.*)/);var c=d[1],q=d[2];if(b=this.attributes[c]){if(!Array.isArray(b))b=this.attributes[c]=[b];b.push(q)}else this.attributes[c]=q;break;case"CharMetrics":if(!/^CH?\s/.test(Y))continue;var $=Y.match(/\bN\s+(\.?\w+)\s*;/)[1];this.glyphWidths[$]=+Y.match(/\bWX\s+(\d+)\s*;/)[1];break;case"KernPairs":if(d=Y.match(/^KPX\s+(\.?\w+)\s+(\.?\w+)\s+(-?\d+)/),d)this.kernPairs[d[1]+"\x00"+d[2]]=parseInt(d[3]);break}}}encodeText(x){let d=[];for(let b=0,c=x.length;b<c;b++){let q=x.charCodeAt(b);q=VY[q]||q,d.push(q.toString(16))}return d}glyphsForString(x){let d=[];for(let b=0,c=x.length;b<c;b++){let q=x.charCodeAt(b);d.push(this.characterToGlyph(q))}return d}characterToGlyph(x){return NY[VY[x]||x]||".notdef"}widthOfGlyph(x){return this.glyphWidths[x]||0}getKernPair(x,d){return this.kernPairs[x+"\x00"+d]||0}advancesForGlyphs(x){let d=[];for(let b=0;b<x.length;b++){let c=x[b],q=x[b+1];d.push(this.widthOfGlyph(c)+this.getKernPair(c,q))}return d}}class f1{constructor(){}encode(){throw new Error("Must be implemented by subclasses")}widthOfString(){throw new Error("Must be implemented by subclasses")}ref(){return this.dictionary!=null?this.dictionary:this.dictionary=this.document.ref()}finalize(){if(this.embedded||this.dictionary==null)return;this.embed(),this.embedded=!0}embed(){throw new Error("Must be implemented by subclasses")}lineHeight(x,d=!1){let b=d?this.lineGap:0;return(this.ascender+b-this.descender)/1000*x}}var UY={Courier(){return y0.readFileSync(__dirname+"/data/Courier.afm","utf8")},"Courier-Bold"(){return y0.readFileSync(__dirname+"/data/Courier-Bold.afm","utf8")},"Courier-Oblique"(){return y0.readFileSync(__dirname+"/data/Courier-Oblique.afm","utf8")},"Courier-BoldOblique"(){return y0.readFileSync(__dirname+"/data/Courier-BoldOblique.afm","utf8")},Helvetica(){return y0.readFileSync(__dirname+"/data/Helvetica.afm","utf8")},"Helvetica-Bold"(){return y0.readFileSync(__dirname+"/data/Helvetica-Bold.afm","utf8")},"Helvetica-Oblique"(){return y0.readFileSync(__dirname+"/data/Helvetica-Oblique.afm","utf8")},"Helvetica-BoldOblique"(){return y0.readFileSync(__dirname+"/data/Helvetica-BoldOblique.afm","utf8")},"Times-Roman"(){return y0.readFileSync(__dirname+"/data/Times-Roman.afm","utf8")},"Times-Bold"(){return y0.readFileSync(__dirname+"/data/Times-Bold.afm","utf8")},"Times-Italic"(){return y0.readFileSync(__dirname+"/data/Times-Italic.afm","utf8")},"Times-BoldItalic"(){return y0.readFileSync(__dirname+"/data/Times-BoldItalic.afm","utf8")},Symbol(){return y0.readFileSync(__dirname+"/data/Symbol.afm","utf8")},ZapfDingbats(){return y0.readFileSync(__dirname+"/data/ZapfDingbats.afm","utf8")}};class i8 extends f1{constructor(x,d,b){super();this.document=x,this.name=d,this.id=b,this.font=new x1(UY[this.name]()),{ascender:this.ascender,descender:this.descender,bbox:this.bbox,lineGap:this.lineGap,xHeight:this.xHeight,capHeight:this.capHeight}=this.font}embed(){return this.dictionary.data={Type:"Font",BaseFont:this.name,Subtype:"Type1",Encoding:"WinAnsiEncoding"},this.dictionary.end()}encode(x){let d=this.font.encodeText(x),b=this.font.glyphsForString(`${x}`),c=this.font.advancesForGlyphs(b),q=[];for(let $=0;$<b.length;$++){let Y=b[$];q.push({xAdvance:c[$],yAdvance:0,xOffset:0,yOffset:0,advanceWidth:this.font.widthOfGlyph(Y)})}return[d,q]}widthOfString(x,d){let b=this.font.glyphsForString(`${x}`),c=this.font.advancesForGlyphs(b),q=0;for(let Y of c)q+=Y;let $=d/1000;return q*$}static isStandardFont(x){return x in UY}}var U3=function(x){return`0000${x.toString(16)}`.slice(-4)};class IY extends f1{constructor(x,d,b){super();if(this.document=x,this.font=d,this.id=b,this.subset=this.font.createSubset(),this.unicode=[[0]],this.widths=[this.font.getGlyph(0).advanceWidth],this.name=this.font.postscriptName,this.scale=1000/this.font.unitsPerEm,this.ascender=this.font.ascent*this.scale,this.descender=this.font.descent*this.scale,this.xHeight=this.font.xHeight*this.scale,this.capHeight=this.font.capHeight*this.scale,this.lineGap=this.font.lineGap*this.scale,this.bbox=this.font.bbox,x.options.fontLayoutCache!==!1)this.layoutCache=Object.create(null)}layoutRun(x,d){let b=this.font.layout(x,d);for(let c=0;c<b.positions.length;c++){let q=b.positions[c];for(let $ in q)q[$]*=this.scale;q.advanceWidth=b.glyphs[c].advanceWidth*this.scale}return b}layoutCached(x){if(!this.layoutCache)return this.layoutRun(x);let d;if(d=this.layoutCache[x])return d;let b=this.layoutRun(x);return this.layoutCache[x]=b,b}layout(x,d,b){if(d)return this.layoutRun(x,d);let c=b?null:[],q=b?null:[],$=0,Y=0,G=0;while(G<=x.length){var E;if(G===x.length&&Y<G||(E=x.charAt(G),[" ","\t"].includes(E))){let J=this.layoutCached(x.slice(Y,++G));if(!b)c=c.concat(J.glyphs),q=q.concat(J.positions);$+=J.advanceWidth,Y=G}else G++}return{glyphs:c,positions:q,advanceWidth:$}}encode(x,d){let{glyphs:b,positions:c}=this.layout(x,d),q=[];for(let $=0;$<b.length;$++){let Y=b[$],G=this.subset.includeGlyph(Y.id);if(q.push(`0000${G.toString(16)}`.slice(-4)),this.widths[G]==null)this.widths[G]=Y.advanceWidth*this.scale;if(this.unicode[G]==null)this.unicode[G]=Y.codePoints}return[q,c]}widthOfString(x,d,b){let c=this.layout(x,b,!0).advanceWidth,q=d/1000;return c*q}embed(){let x=this.subset.cff!=null,d=this.document.ref();if(x)d.data.Subtype="CIDFontType0C";d.end(this.subset.encode());let b=((this.font["OS/2"]!=null?this.font["OS/2"].sFamilyClass:void 0)||0)>>8,c=0;if(this.font.post.isFixedPitch)c|=1;if(1<=b&&b<=7)c|=2;if(c|=4,b===10)c|=8;if(this.font.head.macStyle.italic)c|=64;let $=[1,2,3,4,5,6].map((V)=>String.fromCharCode((this.id.charCodeAt(V)||73)+17)).join("")+"+"+this.font.postscriptName?.replaceAll(" ","_"),{bbox:Y}=this.font,G=this.document.ref({Type:"FontDescriptor",FontName:$,Flags:c,FontBBox:[Y.minX*this.scale,Y.minY*this.scale,Y.maxX*this.scale,Y.maxY*this.scale],ItalicAngle:this.font.italicAngle,Ascent:this.ascender,Descent:this.descender,CapHeight:(this.font.capHeight||this.font.ascent)*this.scale,XHeight:(this.font.xHeight||0)*this.scale,StemV:0});if(x)G.data.FontFile3=d;else G.data.FontFile2=d;if(this.document.subset&&this.document.subset===1){let V=Buffer.from("FFFFFFFFC0","hex"),N=this.document.ref();N.write(V),N.end(),G.data.CIDSet=N}G.end();let E={Type:"Font",Subtype:"CIDFontType0",BaseFont:$,CIDSystemInfo:{Registry:new String("Adobe"),Ordering:new String("Identity"),Supplement:0},FontDescriptor:G,W:[0,this.widths]};if(!x)E.Subtype="CIDFontType2",E.CIDToGIDMap="Identity";let J=this.document.ref(E);return J.end(),this.dictionary.data={Type:"Font",Subtype:"Type0",BaseFont:$,Encoding:"Identity-H",DescendantFonts:[J],ToUnicode:this.toUnicodeCmap()},this.dictionary.end()}toUnicodeCmap(){let x=this.document.ref(),d=[];for(let $ of this.unicode){let Y=[];for(let G of $){if(G>65535)G-=65536,Y.push(U3(G>>>10&1023|55296)),G=56320|G&1023;Y.push(U3(G))}d.push(`<${Y.join(" ")}>`)}let b=256,c=Math.ceil(d.length/b),q=[];for(let $=0;$<c;$++){let Y=$*b,G=Math.min(($+1)*b,d.length);q.push(`<${U3(Y)}> <${U3(G-1)}> [${d.slice(Y,G).join(" ")}]`)}return x.end(`/CIDInit /ProcSet findresource begin
12 dict begin
begincmap
/CIDSystemInfo <<
  /Registry (Adobe)
  /Ordering (UCS)
  /Supplement 0
>> def
/CMapName /Adobe-Identity-UCS def
/CMapType 2 def
1 begincodespacerange
<0000><ffff>
endcodespacerange
1 beginbfrange
${q.join(`
`)}
endbfrange
endcmap
CMapName currentdict /CMap defineresource pop
end
end`),x}}class SY{static open(x,d,b,c){let q;if(typeof d==="string"){if(i8.isStandardFont(d))return new i8(x,d,c);d=y0.readFileSync(d)}if(d instanceof Uint8Array)q=xY.create(d,b);else if(d instanceof ArrayBuffer)q=xY.create(new Uint8Array(d),b);if(q==null)throw new Error("Not a supported font format or standard PDF font.");return new IY(x,q,c)}}var lW=(x,d)=>{if(x.font._tables?.head?.checkSumAdjustment!==d.font._tables?.head?.checkSumAdjustment)return!1;if(JSON.stringify(x.font._tables?.name?.records)!==JSON.stringify(d.font._tables?.name?.records))return!1;return!0},nW={initFonts(x="Helvetica",d=null,b=12){if(this._fontFamilies={},this._fontCount=0,this._fontSource=x,this._fontFamily=d,this._fontSize=b,this._font=null,this._remSize=b,this._registeredFonts={},x)this.font(x,d)},font(x,d,b){let c,q;if(typeof d==="number")b=d,d=null;if(typeof x==="string"&&this._registeredFonts[x])c=x,{src:x,family:d}=this._registeredFonts[x];else if(c=d||x,typeof c!=="string")c=null;if(this._fontSource=x,this._fontFamily=d,b!=null)this.fontSize(b);if(q=this._fontFamilies[c])return this._font=q,this;let $=`F${++this._fontCount}`;if(this._font=SY.open(this,x,d,$),(q=this._fontFamilies[this._font.name])&&lW(this._font,q))return this._font=q,this;if(c)this._fontFamilies[c]=this._font;if(this._font.name)this._fontFamilies[this._font.name]=this._font;return this},fontSize(x){return this._fontSize=this.sizeToPoint(x),this},currentLineHeight(x){return this._font.lineHeight(this._fontSize,x)},registerFont(x,d,b){return this._registeredFonts[x]={src:d,family:b},this},sizeToPoint(x,d=0,b=this.page,c=void 0){if(!c)c=this._fontSize;if(typeof d!=="number")d=this.sizeToPoint(d);if(x===void 0)return d;if(typeof x==="number")return x;if(typeof x==="boolean")return Number(x);let q=String(x).match(/((\d+)?(\.\d+)?)(em|in|px|cm|mm|pc|ex|ch|rem|vw|vh|vmin|vmax|%|pt)?/);if(!q)throw new Error(`Unsupported size '${x}'`);let $;switch(q[4]){case"em":$=this._fontSize;break;case"in":$=V3;break;case"px":$=fW*V3;break;case"cm":$=bY*V3;break;case"mm":$=xW*bY*V3;break;case"pc":$=dW;break;case"ex":$=this.currentLineHeight();break;case"ch":$=this.widthOfString("0");break;case"rem":$=this._remSize;break;case"vw":$=b.width/100;break;case"vh":$=b.height/100;break;case"vmin":$=Math.min(b.width,b.height)/100;break;case"vmax":$=Math.max(b.width,b.height)/100;break;case"%":$=c/100;break;case"pt":default:$=1}return $*Number(q[1])}},KY="\xAD",l8="-";class q5 extends iH.EventEmitter{constructor(x,d){super();if(this.document=x,this.horizontalScaling=d.horizontalScaling||100,this.indent=(d.indent||0)*this.horizontalScaling/100,this.characterSpacing=(d.characterSpacing||0)*this.horizontalScaling/100,this.wordSpacing=(d.wordSpacing===0)*this.horizontalScaling/100,this.columns=d.columns||1,this.columnGap=(d.columnGap!=null?d.columnGap:18)*this.horizontalScaling/100,this.lineWidth=(d.width*this.horizontalScaling/100-this.columnGap*(this.columns-1))/this.columns,this.spaceLeft=this.lineWidth,this.startX=this.document.x,this.startY=this.document.y,this.column=1,this.ellipsis=d.ellipsis,this.continuedX=0,this.features=d.features,d.height!=null)this.height=d.height,this.maxY=J3(this.startY+d.height);else this.maxY=J3(this.document.page.maxY());this.on("firstLine",(b)=>{let c=this.continuedX||this.indent;if(this.document.x+=c,this.lineWidth-=c,b.indentAllLines)return;this.once("line",()=>{if(this.document.x-=c,this.lineWidth+=c,b.continued&&!this.continuedX)this.continuedX=this.indent;if(!b.continued)this.continuedX=0})}),this.on("lastLine",(b)=>{let{align:c}=b;if(c==="justify")b.align="left";this.lastLine=!0,this.once("line",()=>{return this.document.y+=b.paragraphGap||0,b.align=c,this.lastLine=!1})})}wordWidth(x){return this.document.widthOfString(x,this)+this.characterSpacing+this.wordSpacing}canFit(x,d){if(x[x.length-1]!=KY)return d<=this.spaceLeft;return d+this.wordWidth(l8)<=this.spaceLeft}eachWord(x,d){let b,c=new rH(x),q=null,$=Object.create(null);while(b=c.nextBreak()){var Y;let J=x.slice((q!=null?q.position:void 0)||0,b.position),V=$[J]!=null?$[J]:$[J]=this.wordWidth(J);if(V>this.lineWidth+this.continuedX){let N=q,U={};while(J.length){var G,E;if(V>this.spaceLeft)G=Math.ceil(this.spaceLeft/(V/J.length)),V=this.wordWidth(J.slice(0,G)),E=V<=this.spaceLeft&&G<J.length;else G=J.length;let K=V>this.spaceLeft&&G>0;while(K||E)if(K)V=this.wordWidth(J.slice(0,--G)),K=V>this.spaceLeft&&G>0;else V=this.wordWidth(J.slice(0,++G)),K=V>this.spaceLeft&&G>0,E=V<=this.spaceLeft&&G<J.length;if(G===0&&this.spaceLeft===this.lineWidth)G=1;if(U.required=b.required||G<J.length,Y=d(J.slice(0,G),V,U,N),N={required:!1},J=J.slice(G),V=this.wordWidth(J),Y===!1)break}}else Y=d(J,V,b,q);if(Y===!1)break;q=b}}wrap(x,d){if(this.horizontalScaling=d.horizontalScaling||100,d.indent!=null)this.indent=d.indent*this.horizontalScaling/100;if(d.characterSpacing!=null)this.characterSpacing=d.characterSpacing*this.horizontalScaling/100;if(d.wordSpacing!=null)this.wordSpacing=d.wordSpacing*this.horizontalScaling/100;if(d.ellipsis!=null)this.ellipsis=d.ellipsis;let b=this.document.y+this.document.currentLineHeight(!0);if(this.document.y>this.maxY||b>this.maxY)this.nextSection();let c="",q=0,$=0,Y=0,{y:G}=this.document,E=()=>{return d.textWidth=q+this.wordSpacing*($-1),d.wordCount=$,d.lineWidth=this.lineWidth,{y:G}=this.document,this.emit("line",c,d,this),Y++};if(this.emit("sectionStart",d,this),this.eachWord(x,(J,V,N,U)=>{if(U==null||U.required)this.emit("firstLine",d,this),this.spaceLeft=this.lineWidth;if(this.canFit(J,V))c+=J,q+=V,$++;if(N.required||!this.canFit(J,V)){let K=this.document.currentLineHeight(!0);if(this.height!=null&&this.ellipsis&&J3(this.document.y+K*2)>this.maxY&&this.column>=this.columns){if(this.ellipsis===!0)this.ellipsis="\u2026";c=c.replace(/\s+$/,""),q=this.wordWidth(c+this.ellipsis);while(c&&q>this.lineWidth)c=c.slice(0,-1).replace(/\s+$/,""),q=this.wordWidth(c+this.ellipsis);if(q<=this.lineWidth)c=c+this.ellipsis;q=this.wordWidth(c)}if(N.required){if(V>this.spaceLeft)E(),c=J,q=V,$=1;this.emit("lastLine",d,this)}if(c[c.length-1]==KY)c=c.slice(0,-1)+l8,this.spaceLeft-=this.wordWidth(l8);if(E(),J3(this.document.y+K)>this.maxY){if(!this.nextSection())return $=0,c="",!1}if(N.required)return this.spaceLeft=this.lineWidth,c="",q=0,$=0;else return this.spaceLeft=this.lineWidth-V,c=J,q=V,$=1}else return this.spaceLeft-=V}),$>0)this.emit("lastLine",d,this),E();if(this.emit("sectionEnd",d,this),d.continued===!0){if(Y>1)this.continuedX=0;this.continuedX+=d.textWidth||0,this.document.y=G}else this.document.x=this.startX}nextSection(x){if(this.emit("sectionEnd",x,this),++this.column>this.columns){if(this.height!=null)return!1;if(this.document.continueOnNewPage(),this.column=1,this.startY=this.document.page.margins.top,this.maxY=this.document.page.maxY(),this.document.x=this.startX,this.document._fillColor)this.document.fillColor(...this.document._fillColor);this.emit("pageBreak",x,this)}else this.document.x+=this.lineWidth+this.columnGap,this.document.y=this.startY,this.emit("columnBreak",x,this);return this.emit("sectionStart",x,this),!0}}var{number:O6}=Dx,iW={initText(){this._line=this._line.bind(this),this.x=0,this.y=0,this._lineGap=0},lineGap(x){return this._lineGap=x,this},moveDown(x){if(x==null)x=1;return this.y+=this.currentLineHeight(!0)*x+this._lineGap,this},moveUp(x){if(x==null)x=1;return this.y-=this.currentLineHeight(!0)*x+this._lineGap,this},_text(x,d,b,c,q){if(c=this._initOptions(d,b,c),x=x==null?"":`${x}`,c.wordSpacing)x=x.replace(/\s{2,}/g," ");let $=()=>{if(c.structParent)c.structParent.add(this.struct(c.structType||"P",[this.markStructureContent(c.structType||"P")]))};if(c.rotation!==0)this.save(),this.rotate(-c.rotation,{origin:[this.x,this.y]});if(c.width){let Y=this._wrapper;if(!Y)Y=new q5(this,c),Y.on("line",q),Y.on("firstLine",$);this._wrapper=c.continued?Y:null,this._textOptions=c.continued?c:null,Y.wrap(x,c)}else for(let Y of x.split(`
`))$(),q(Y,c);if(c.rotation!==0)this.restore();return this},text(x,d,b,c){return this._text(x,d,b,c,this._line)},widthOfString(x,d={}){let b=d.horizontalScaling||100;return(this._font.widthOfString(x,this._fontSize,d.features)+(d.characterSpacing||0)*(x.length-1))*b/100},boundsOfString(x,d,b,c){c=this._initOptions(d,b,c),{x:d,y:b}=this;let q=c.lineGap??this._lineGap??0,$=this.currentLineHeight(!0)+q,Y=0;if(x=String(x??""),c.wordSpacing)x=x.replace(/\s{2,}/g," ");if(c.width){let F=new q5(this,c);F.on("line",(z,B)=>{if(this.y+=$,z=z.replace(/\n/g,""),z.length){let w=B.wordSpacing??0,Z=B.characterSpacing??0;if(B.width&&B.align==="justify"){let P=z.trim().split(/\s+/),I=this.widthOfString(z.replace(/\s+/g,""),B),a=this.widthOfString(" ")+Z;w=Math.max(0,(B.lineWidth-I)/Math.max(1,P.length-1)-a)}Y=Math.max(Y,B.textWidth+w*(B.wordCount-1)+Z*(z.length-1))}}),F.wrap(x,c)}else for(let F of x.split(`
`)){let z=this.widthOfString(F,c);this.y+=$,Y=Math.max(Y,z)}let G=this.y-b;if(c.height)G=Math.min(G,c.height);if(this.x=d,this.y=b,c.rotation===0)return{x:d,y:b,width:Y,height:G};else if(c.rotation===90)return{x:d,y:b-Y,width:G,height:Y};else if(c.rotation===180)return{x:d-Y,y:b-G,width:Y,height:G};else if(c.rotation===270)return{x:d-G,y:b,width:G,height:Y};let E=AY(c.rotation),J=FY(c.rotation),V=d,N=b,U=d+Y*E,K=b-Y*J,X=d+Y*E+G*J,D=b-Y*J+G*E,L=d+G*J,H=b+G*E,O=Math.min(V,U,X,L),j=Math.max(V,U,X,L),e=Math.min(N,K,D,H),M=Math.max(N,K,D,H);return{x:O,y:e,width:j-O,height:M-e}},heightOfString(x,d){let{x:b,y:c}=this;d=this._initOptions(d),d.height=1/0;let q=d.lineGap||this._lineGap||0;this._text(x,this.x,this.y,d,()=>{this.y+=this.currentLineHeight(!0)+q});let $=this.y-c;return this.x=b,this.y=c,$},list(x,d,b,c,q){c=this._initOptions(d,b,c);let $=c.listType||"bullet",Y=Math.round(this._font.ascender/1000*this._fontSize),G=Y/2,E=c.bulletRadius||Y/3,J=c.textIndent||($==="bullet"?E*5:Y*2),V=c.bulletIndent||($==="bullet"?E*8:Y*2),N=1,U=[],K=[],X=[];var D=function(O){let j=1;for(let e=0;e<O.length;e++){let M=O[e];if(Array.isArray(M))N++,D(M),N--;else if(U.push(M),K.push(N),$!=="bullet")X.push(j++)}};D(x);let L=function(O){switch($){case"numbered":return`${O}.`;case"lettered":var j=String.fromCharCode((O-1)%26+65),e=Math.floor((O-1)/26+1),M=Array(e+1).join(j);return`${M}.`}},H=function(O,j){q=new q5(this,c),q.on("line",this._line),N=1,q.once("firstLine",()=>{let e,M,F,z;if(c.structParent)if(c.structTypes)[M,F,z]=c.structTypes;else[M,F,z]=["LI","Lbl","LBody"];if(M)e=this.struct(M),c.structParent.add(e);else if(c.structParent)e=c.structParent;let B;if((B=K[j++])!==N){let Z=V*(B-N);this.x+=Z,q.lineWidth-=Z,N=B}if(e&&(F||z))e.add(this.struct(F||z,[this.markStructureContent(F||z)]));switch($){case"bullet":this.circle(this.x-J+E,this.y+G,E),this.fill();break;case"numbered":case"lettered":var w=L(X[j-1]);this._fragment(w,this.x-J,this.y,c);break}if(e&&F&&z)e.add(this.struct(z,[this.markStructureContent(z)]));if(e&&e!==c.structParent)e.end()}),q.on("sectionStart",()=>{let e=J+V*(N-1);this.x+=e,q.lineWidth-=e}),q.on("sectionEnd",()=>{let e=J+V*(N-1);this.x-=e,q.lineWidth+=e}),q.wrap(O,c)};for(let O=0;O<U.length;O++)H.call(this,U[O],O);return this},_initOptions(x={},d,b={}){if(typeof x==="object")b=x,x=null;let c=Object.assign({},b);if(this._textOptions)for(let q in this._textOptions){let $=this._textOptions[q];if(q!=="continued"){if(c[q]===void 0)c[q]=$}}if(x!=null)this.x=x;if(d!=null)this.y=d;if(c.lineBreak!==!1){if(c.width==null)c.width=this.page.width-this.x-this.page.margins.right;c.width=Math.max(c.width,0)}if(!c.columns)c.columns=0;if(c.columnGap==null)c.columnGap=18;if(c.rotation=Number(b.rotation??0)%360,c.rotation<0)c.rotation+=360;return c},_line(x,d={},b){this._fragment(x,this.x,this.y,d);let c=d.lineGap||this._lineGap||0;if(!b)this.x+=this.widthOfString(x,d);else this.y+=this.currentLineHeight(!0)+c},_fragment(x,d,b,c){let q,$,Y,G,E,J;if(x=`${x}`.replace(/\n/g,""),x.length===0)return;let V=c.align||"left",N=c.wordSpacing||0,U=c.characterSpacing||0,K=c.horizontalScaling||100;if(c.width)switch(V){case"right":E=this.widthOfString(x.replace(/\s+$/,""),c),d+=c.lineWidth-E;break;case"center":d+=c.lineWidth/2-c.textWidth/2;break;case"justify":J=x.trim().split(/\s+/),E=this.widthOfString(x.replace(/\s+/g,""),c);var X=this.widthOfString(" ")+U;N=Math.max(0,(c.lineWidth-E)/Math.max(1,J.length-1)-X);break}if(typeof c.baseline==="number")q=-c.baseline;else{switch(c.baseline){case"svg-middle":q=0.5*this._font.xHeight;break;case"middle":case"svg-central":q=0.5*(this._font.descender+this._font.ascender);break;case"bottom":case"ideographic":q=this._font.descender;break;case"alphabetic":q=0;break;case"mathematical":q=0.5*this._font.ascender;break;case"hanging":q=0.8*this._font.ascender;break;case"top":q=this._font.ascender;break;default:q=this._font.ascender}q=q/1000*this._fontSize}let D=c.textWidth+N*(c.wordCount-1)+U*(x.length-1);if(c.link!=null)this.link(d,b,D,this.currentLineHeight(),c.link);if(c.goTo!=null)this.goTo(d,b,D,this.currentLineHeight(),c.goTo);if(c.destination!=null)this.addNamedDestination(c.destination,"XYZ",d,b,null);if(c.underline){if(this.save(),!c.stroke)this.strokeColor(...this._fillColor||[]);let z=this._fontSize<10?0.5:Math.floor(this._fontSize/10);this.lineWidth(z);let B=b+this.currentLineHeight()-z;this.moveTo(d,B),this.lineTo(d+D,B),this.stroke(),this.restore()}if(c.strike){if(this.save(),!c.stroke)this.strokeColor(...this._fillColor||[]);let z=this._fontSize<10?0.5:Math.floor(this._fontSize/10);this.lineWidth(z);let B=b+this.currentLineHeight()/2;this.moveTo(d,B),this.lineTo(d+D,B),this.stroke(),this.restore()}if(this.save(),c.oblique){let z;if(typeof c.oblique==="number")z=-Math.tan(c.oblique*Math.PI/180);else z=-0.25;this.transform(1,0,0,1,d,b),this.transform(1,0,z,1,-z*q,0),this.transform(1,0,0,1,-d,-b)}if(this.transform(1,0,0,-1,0,this.page.height),b=this.page.height-b-q,this.page.fonts[this._font.id]==null)this.page.fonts[this._font.id]=this._font.ref();this.addContent("BT"),this.addContent(`1 0 0 1 ${O6(d)} ${O6(b)} Tm`),this.addContent(`/${this._font.id} ${O6(this._fontSize)} Tf`);let L=c.fill&&c.stroke?2:c.stroke?1:0;if(L)this.addContent(`${L} Tr`);if(U)this.addContent(`${O6(U)} Tc`);if(K!==100)this.addContent(`${K} Tz`);if(N){J=x.trim().split(/\s+/),N+=this.widthOfString(" ")+U,N*=1000/this._fontSize,$=[],G=[];for(let z of J){let[B,w]=this._font.encode(z,c.features);$=$.concat(B),G=G.concat(w);let Z={},P=G[G.length-1];for(let I in P){let a=P[I];Z[I]=a}Z.xAdvance+=N,G[G.length-1]=Z}}else[$,G]=this._font.encode(x,c.features);let H=this._fontSize/1000,O=[],j=0,e=!1,M=(z)=>{if(j<z){let B=$.slice(j,z).join(""),w=G[z-1].xAdvance-G[z-1].advanceWidth;O.push(`<${B}> ${O6(-w)}`)}j=z},F=(z)=>{if(M(z),O.length>0)this.addContent(`[${O.join(" ")}] TJ`),O.length=0};for(Y=0;Y<G.length;Y++){let z=G[Y];if(z.xOffset||z.yOffset)F(Y),this.addContent(`1 0 0 1 ${O6(d+z.xOffset*H)} ${O6(b+z.yOffset*H)} Tm`),F(Y+1),e=!0;else{if(e)this.addContent(`1 0 0 1 ${O6(d)} ${O6(b)} Tm`),e=!1;if(z.xAdvance-z.advanceWidth!==0)M(Y+1)}d+=z.xAdvance*H}F(Y),this.addContent("ET"),this.restore()}},RY=[65472,65473,65474,65475,65477,65478,65479,65480,65481,65482,65483,65484,65485,65486,65487],rW={1:"DeviceGray",3:"DeviceRGB",4:"DeviceCMYK"};class ZY{constructor(x,d){let b;if(this.data=x,this.label=d,this.data.readUInt16BE(0)!==65496)throw"SOI not found in JPEG";this.orientation=sH.fromBuffer(this.data).Orientation||1;let c=2;while(c<this.data.length){if(b=this.data.readUInt16BE(c),c+=2,RY.includes(b))break;c+=this.data.readUInt16BE(c)}if(!RY.includes(b))throw"Invalid JPEG.";c+=2,this.bits=this.data[c++],this.height=this.data.readUInt16BE(c),c+=2,this.width=this.data.readUInt16BE(c),c+=2;let q=this.data[c++];this.colorSpace=rW[q],this.obj=null}embed(x){if(this.obj)return;if(this.obj=x.ref({Type:"XObject",Subtype:"Image",BitsPerComponent:this.bits,Width:this.width,Height:this.height,ColorSpace:this.colorSpace,Filter:"DCTDecode"}),this.colorSpace==="DeviceCMYK")this.obj.data.Decode=[1,0,1,0,1,0,1,0];return this.obj.end(this.data),this.data=null}}class TY{constructor(x,d){this.label=d,this.image=new oH(x),this.width=this.image.width,this.height=this.image.height,this.imgData=this.image.imgData,this.obj=null}embed(x){let d=!1;if(this.document=x,this.obj)return;let b=this.image.hasAlphaChannel,c=this.image.interlaceMethod===1;if(this.obj=this.document.ref({Type:"XObject",Subtype:"Image",BitsPerComponent:b?8:this.image.bits,Width:this.width,Height:this.height,Filter:"FlateDecode"}),!b){let q=this.document.ref({Predictor:c?1:15,Colors:this.image.colors,BitsPerComponent:this.image.bits,Columns:this.width});this.obj.data.DecodeParms=q,q.end()}if(this.image.palette.length===0)this.obj.data.ColorSpace=this.image.colorSpace;else{let q=this.document.ref();q.end(Buffer.from(this.image.palette)),this.obj.data.ColorSpace=["Indexed","DeviceRGB",this.image.palette.length/3-1,q]}if(this.image.transparency.grayscale!=null){let q=this.image.transparency.grayscale;this.obj.data.Mask=[q,q]}else if(this.image.transparency.rgb){let{rgb:q}=this.image.transparency,$=[];for(let Y of q)$.push(Y,Y);this.obj.data.Mask=$}else if(this.image.transparency.indexed)return d=!0,this.loadIndexedAlphaChannel();else if(b)return d=!0,this.splitAlphaChannel();if(c&&!d)return this.decodeData();this.finalize()}finalize(){if(this.alphaChannel){let x=this.document.ref({Type:"XObject",Subtype:"Image",Height:this.height,Width:this.width,BitsPerComponent:8,Filter:"FlateDecode",ColorSpace:"DeviceGray",Decode:[0,1]});x.end(this.alphaChannel),this.obj.data.SMask=x}return this.obj.end(this.imgData),this.image=null,this.imgData=null}splitAlphaChannel(){return this.image.decodePixels((x)=>{let d,b,c=this.image.colors,q=this.width*this.height,$=Buffer.alloc(q*c),Y=Buffer.alloc(q),G=b=d=0,E=x.length,J=this.image.bits===16?1:0;while(G<E){for(let V=0;V<c;V++)$[b++]=x[G++],G+=J;Y[d++]=x[G++],G+=J}return this.imgData=b5.deflateSync($),this.alphaChannel=b5.deflateSync(Y),this.finalize()})}loadIndexedAlphaChannel(){let x=this.image.transparency.indexed;return this.image.decodePixels((d)=>{let b=Buffer.alloc(this.width*this.height),c=0;for(let q=0,$=d.length;q<$;q++)b[c++]=x[d[q]];return this.alphaChannel=b5.deflateSync(b),this.finalize()})}decodeData(){this.image.decodePixels((x)=>{this.imgData=b5.deflateSync(x),this.finalize()})}}class CY{static open(x,d){let b;if(Buffer.isBuffer(x))b=x;else if(x instanceof ArrayBuffer)b=Buffer.from(new Uint8Array(x));else{let c;if(c=/^data:.+?;base64,(.*)$/.exec(x))b=Buffer.from(c[1],"base64");else if(b=y0.readFileSync(x),!b)return}if(b[0]===255&&b[1]===216)return new ZY(b,d);else if(b[0]===137&&b.toString("ascii",1,4)==="PNG")return new TY(b,d);else throw new Error("Unknown image format.")}}var sW={initImages(){this._imageRegistry={},this._imageCount=0},image(x,d,b,c={}){let q,$,Y,G,E,J,V,N,U;if(typeof d==="object")c=d,d=null;let K=c.ignoreOrientation||c.ignoreOrientation!==!1&&this.options.ignoreOrientation,X=typeof b!=="number";if(d=(J=d!=null?d:c.x)!=null?J:this.x,b=(V=b!=null?b:c.y)!=null?V:this.y,typeof x==="string")G=this._imageRegistry[x];if(!G)if(x.width&&x.height)G=x;else G=this.openImage(x);if(!G.obj)G.embed(this);if(this.page.xobjects[G.label]==null)this.page.xobjects[G.label]=G.obj;let{width:D,height:L}=G;if(!K&&G.orientation>4)[D,L]=[L,D];let H=c.width||D,O=c.height||L;if(c.width&&!c.height){let B=H/D;H=D*B,O=L*B}else if(c.height&&!c.width){let B=O/L;H=D*B,O=L*B}else if(c.scale)H=D*c.scale,O=L*c.scale;else if(c.fit)if([Y,q]=c.fit,$=Y/q,E=D/L,E>$)H=Y,O=Y/E;else O=q,H=q*E;else if(c.cover)if([Y,q]=c.cover,$=Y/q,E=D/L,E>$)O=q,H=q*E;else H=Y,O=Y/E;if(c.fit||c.cover){if(c.align==="center")d=d+Y/2-H/2;else if(c.align==="right")d=d+Y-H;if(c.valign==="center")b=b+q/2-O/2;else if(c.valign==="bottom")b=b+q-O}let j=0,e=d,M=b,F=O,z=H;if(!K)switch(G.orientation){default:case 1:F=-O,M+=O;break;case 2:z=-H,F=-O,e+=H,M+=O;break;case 3:N=d,U=b,F=-O,e-=H,j=180;break;case 4:break;case 5:N=d,U=b,z=O,F=H,M-=F,j=90;break;case 6:N=d,U=b,z=O,F=-H,j=90;break;case 7:N=d,U=b,F=-H,z=-O,e+=O,j=90;break;case 8:N=d,U=b,z=O,F=-H,e-=O,M+=H,j=-90;break}else F=-O,M+=O;if(c.link!=null)this.link(d,b,H,O,c.link);if(c.goTo!=null)this.goTo(d,b,H,O,c.goTo);if(c.destination!=null)this.addNamedDestination(c.destination,"XYZ",d,b,null);if(X)this.y+=O;if(this.save(),j)this.rotate(j,{origin:[N,U]});return this.transform(z,0,0,F,e,M),this.addContent(`/${G.label} Do`),this.restore(),this},openImage(x){let d;if(typeof x==="string")d=this._imageRegistry[x];if(!d){if(d=CY.open(x,`I${++this._imageCount}`),typeof x==="string")this._imageRegistry[x]=d}return d}},oW={annotate(x,d,b,c,q){if(q.Type="Annot",q.Rect=this._convertRect(x,d,b,c),q.Border=[0,0,0],q.Subtype==="Link"&&typeof q.F==="undefined")q.F=4;if(q.Subtype!=="Link"){if(q.C==null)q.C=this._normalizeColor(q.color||[0,0,0])}if(delete q.color,typeof q.Dest==="string")q.Dest=new String(q.Dest);for(let Y in q){let G=q[Y];q[Y[0].toUpperCase()+Y.slice(1)]=G}let $=this.ref(q);return this.page.annotations.push($),$.end(),this},note(x,d,b,c,q,$={}){if($.Subtype="Text",$.Contents=new String(q),$.Name==null)$.Name="Comment";if($.color==null)$.color=[243,223,92];return this.annotate(x,d,b,c,$)},goTo(x,d,b,c,q,$={}){return $.Subtype="Link",$.A=this.ref({S:"GoTo",D:new String(q)}),$.A.end(),this.annotate(x,d,b,c,$)},link(x,d,b,c,q,$={}){if($.Subtype="Link",typeof q==="number"){let Y=this._root.data.Pages.data;if(q>=0&&q<Y.Kids.length)$.A=this.ref({S:"GoTo",D:[Y.Kids[q],"XYZ",null,null,null]}),$.A.end();else throw new Error(`The document has no page ${q}`)}else $.A=this.ref({S:"URI",URI:new String(q)}),$.A.end();return this.annotate(x,d,b,c,$)},_markup(x,d,b,c,q={}){let[$,Y,G,E]=this._convertRect(x,d,b,c);return q.QuadPoints=[$,E,G,E,$,Y,G,Y],q.Contents=new String,this.annotate(x,d,b,c,q)},highlight(x,d,b,c,q={}){if(q.Subtype="Highlight",q.color==null)q.color=[241,238,148];return this._markup(x,d,b,c,q)},underline(x,d,b,c,q={}){return q.Subtype="Underline",this._markup(x,d,b,c,q)},strike(x,d,b,c,q={}){return q.Subtype="StrikeOut",this._markup(x,d,b,c,q)},lineAnnotation(x,d,b,c,q={}){return q.Subtype="Line",q.Contents=new String,q.L=[x,this.page.height-d,b,this.page.height-c],this.annotate(x,d,b,c,q)},rectAnnotation(x,d,b,c,q={}){return q.Subtype="Square",q.Contents=new String,this.annotate(x,d,b,c,q)},ellipseAnnotation(x,d,b,c,q={}){return q.Subtype="Circle",q.Contents=new String,this.annotate(x,d,b,c,q)},textAnnotation(x,d,b,c,q,$={}){return $.Subtype="FreeText",$.Contents=new String(q),$.DA=new String,this.annotate(x,d,b,c,$)},fileAnnotation(x,d,b,c,q={},$={}){let Y=this.file(q.src,Object.assign({hidden:!0},q));if($.Subtype="FileAttachment",$.FS=Y,$.Contents)$.Contents=new String($.Contents);else if(Y.data.Desc)$.Contents=Y.data.Desc;return this.annotate(x,d,b,c,$)},_convertRect(x,d,b,c){let q=d;d+=c;let $=x+b,[Y,G,E,J,V,N]=this._ctm;return x=Y*x+E*d+V,d=G*x+J*d+N,$=Y*$+E*q+V,q=G*$+J*q+N,[x,d,$,q]}};class d1{constructor(x,d,b,c,q={expanded:!1}){if(this.document=x,this.options=q,this.outlineData={},c!==null)this.outlineData.Dest=[c.dictionary,"Fit"];if(d!==null)this.outlineData.Parent=d;if(b!==null)this.outlineData.Title=new String(b);this.dictionary=this.document.ref(this.outlineData),this.children=[]}addItem(x,d={expanded:!1}){let b=new d1(this.document,this.dictionary,x,this.document.page,d);return this.children.push(b),b}endOutline(){if(this.children.length>0){if(this.options.expanded)this.outlineData.Count=this.children.length;let x=this.children[0],d=this.children[this.children.length-1];this.outlineData.First=x.dictionary,this.outlineData.Last=d.dictionary;for(let b=0,c=this.children.length;b<c;b++){let q=this.children[b];if(b>0)q.outlineData.Prev=this.children[b-1].dictionary;if(b<this.children.length-1)q.outlineData.Next=this.children[b+1].dictionary;q.endOutline()}}return this.dictionary.end()}}var tW={initOutline(){this.outline=new d1(this,null,null,null)},endOutline(){if(this.outline.endOutline(),this.outline.children.length>0)return this._root.data.Outlines=this.outline.dictionary,this._root.data.PageMode="UseOutlines"}};class $5{constructor(x,d){this.refs=[{pageRef:x,mcid:d}]}push(x){x.refs.forEach((d)=>this.refs.push(d))}}class W6{constructor(x,d,b={},c=null){this.document=x,this._attached=!1,this._ended=!1,this._flushed=!1,this.dictionary=x.ref({S:d});let q=this.dictionary.data;if(Array.isArray(b)||this._isValidChild(b))c=b,b={};if(typeof b.title!=="undefined")q.T=new String(b.title);if(typeof b.lang!=="undefined")q.Lang=new String(b.lang);if(typeof b.alt!=="undefined")q.Alt=new String(b.alt);if(typeof b.expanded!=="undefined")q.E=new String(b.expanded);if(typeof b.actual!=="undefined")q.ActualText=new String(b.actual);if(this._children=[],c){if(!Array.isArray(c))c=[c];c.forEach(($)=>this.add($)),this.end()}}add(x){if(this._ended)throw new Error("Cannot add child to already-ended structure element");if(!this._isValidChild(x))throw new Error("Invalid structure element child");if(x instanceof W6){if(x.setParent(this.dictionary),this._attached)x.setAttached()}if(x instanceof $5)this._addContentToParentTree(x);if(typeof x==="function"&&this._attached)x=this._contentForClosure(x);return this._children.push(x),this}_addContentToParentTree(x){x.refs.forEach(({pageRef:d,mcid:b})=>{let c=this.document.getStructParentTree().get(d.data.StructParents);c[b]=this.dictionary})}setParent(x){if(this.dictionary.data.P)throw new Error("Structure element added to more than one parent");this.dictionary.data.P=x,this._flush()}setAttached(){if(this._attached)return;this._children.forEach((x,d)=>{if(x instanceof W6)x.setAttached();if(typeof x==="function")this._children[d]=this._contentForClosure(x)}),this._attached=!0,this._flush()}end(){if(this._ended)return;this._children.filter((x)=>x instanceof W6).forEach((x)=>x.end()),this._ended=!0,this._flush()}_isValidChild(x){return x instanceof W6||x instanceof $5||typeof x==="function"}_contentForClosure(x){let d=this.document.markStructureContent(this.dictionary.data.S);return x(),this.document.endMarkedContent(),this._addContentToParentTree(d),d}_isFlushable(){if(!this.dictionary.data.P||!this._ended)return!1;return this._children.every((x)=>{if(typeof x==="function")return!1;if(x instanceof W6)return x._isFlushable();return!0})}_flush(){if(this._flushed||!this._isFlushable())return;this.dictionary.data.K=[],this._children.forEach((x)=>this._flushChild(x)),this.dictionary.end(),this._children=[],this.dictionary.data.K=null,this._flushed=!0}_flushChild(x){if(x instanceof W6)this.dictionary.data.K.push(x.dictionary);if(x instanceof $5)x.refs.forEach(({pageRef:d,mcid:b})=>{if(!this.dictionary.data.Pg)this.dictionary.data.Pg=d;if(this.dictionary.data.Pg===d)this.dictionary.data.K.push(b);else this.dictionary.data.K.push({Type:"MCR",Pg:d,MCID:b})})}}class kY extends X3{_compareKeys(x,d){return parseInt(x)-parseInt(d)}_keysName(){return"Nums"}_dataForKey(x){return parseInt(x)}}var xL={initMarkings(x){if(this.structChildren=[],x.tagged)this.getMarkInfoDictionary().data.Marked=!0,this.getStructTreeRoot()},markContent(x,d=null){if(x==="Artifact"||d&&d.mcid){let c=0;this.page.markings.forEach((q)=>{if(c||q.structContent||q.tag==="Artifact")c++});while(c--)this.endMarkedContent()}if(!d)return this.page.markings.push({tag:x}),this.addContent(`/${x} BMC`),this;this.page.markings.push({tag:x,options:d});let b={};if(typeof d.mcid!=="undefined")b.MCID=d.mcid;if(x==="Artifact"){if(typeof d.type==="string")b.Type=d.type;if(Array.isArray(d.bbox))b.BBox=[d.bbox[0],this.page.height-d.bbox[3],d.bbox[2],this.page.height-d.bbox[1]];if(Array.isArray(d.attached)&&d.attached.every((c)=>typeof c==="string"))b.Attached=d.attached}if(x==="Span"){if(d.lang)b.Lang=new String(d.lang);if(d.alt)b.Alt=new String(d.alt);if(d.expanded)b.E=new String(d.expanded);if(d.actual)b.ActualText=new String(d.actual)}return this.addContent(`/${x} ${Dx.convert(b)} BDC`),this},markStructureContent(x,d={}){let b=this.getStructParentTree().get(this.page.structParentTreeKey),c=b.length;b.push(null),this.markContent(x,{...d,mcid:c});let q=new $5(this.page.dictionary,c);return this.page.markings.slice(-1)[0].structContent=q,q},endMarkedContent(){return this.page.markings.pop(),this.addContent("EMC"),this},struct(x,d={},b=null){return new W6(this,x,d,b)},addStructure(x){let d=this.getStructTreeRoot();if(x.setParent(d),x.setAttached(),this.structChildren.push(x),!d.data.K)d.data.K=[];return d.data.K.push(x.dictionary),this},initPageMarkings(x){x.forEach((d)=>{if(d.structContent){let b=d.structContent,c=this.markStructureContent(d.tag,d.options);b.push(c),this.page.markings.slice(-1)[0].structContent=b}else this.markContent(d.tag,d.options)})},endPageMarkings(x){let d=x.markings;return d.forEach(()=>x.write("EMC")),x.markings=[],d},getMarkInfoDictionary(){if(!this._root.data.MarkInfo)this._root.data.MarkInfo=this.ref({});return this._root.data.MarkInfo},hasMarkInfoDictionary(){return!!this._root.data.MarkInfo},getStructTreeRoot(){if(!this._root.data.StructTreeRoot)this._root.data.StructTreeRoot=this.ref({Type:"StructTreeRoot",ParentTree:new kY,ParentTreeNextKey:0});return this._root.data.StructTreeRoot},getStructParentTree(){return this.getStructTreeRoot().data.ParentTree},createStructParentTreeNextKey(){this.getMarkInfoDictionary();let x=this.getStructTreeRoot(),d=x.data.ParentTreeNextKey++;return x.data.ParentTree.add(d,[]),d},endMarkings(){let x=this._root.data.StructTreeRoot;if(x)x.end(),this.structChildren.forEach((d)=>d.end());if(this._root.data.MarkInfo)this._root.data.MarkInfo.end()}},XY={readOnly:1,required:2,noExport:4,multiline:4096,password:8192,toggleToOffButton:16384,radioButton:32768,pushButton:65536,combo:131072,edit:262144,sort:524288,multiSelect:2097152,noSpell:4194304},jY={left:0,center:1,right:2},OY={value:"V",defaultValue:"DV"},HY={zip:"0",zipPlus4:"1",zip4:"1",phone:"2",ssn:"3"},WY={number:{nDec:0,sepComma:!1,negStyle:"MinusBlack",currency:"",currencyPrepend:!0},percent:{nDec:0,sepComma:!1}},fL={initForm(){if(!this._font)throw new Error("Must set a font before calling initForm method");this._acroform={fonts:{},defaultFont:this._font.name},this._acroform.fonts[this._font.id]=this._font.ref();let x={Fields:[],NeedAppearances:!0,DA:new String(`/${this._font.id} 0 Tf 0 g`),DR:{Font:{}}};x.DR.Font[this._font.id]=this._font.ref();let d=this.ref(x);return this._root.data.AcroForm=d,this},endAcroForm(){if(this._root.data.AcroForm){if(!Object.keys(this._acroform.fonts).length&&!this._acroform.defaultFont)throw new Error("No fonts specified for PDF form");let x=this._root.data.AcroForm.data.DR.Font;Object.keys(this._acroform.fonts).forEach((d)=>{x[d]=this._acroform.fonts[d]}),this._root.data.AcroForm.data.Fields.forEach((d)=>{this._endChild(d)}),this._root.data.AcroForm.end()}return this},_endChild(x){if(Array.isArray(x.data.Kids))x.data.Kids.forEach((d)=>{this._endChild(d)}),x.end();return this},formField(x,d={}){let b=this._fieldDict(x,null,d),c=this.ref(b);return this._addToParent(c),c},formAnnotation(x,d,b,c,q,$,Y={}){let G=this._fieldDict(x,d,Y);if(G.Subtype="Widget",G.F===void 0)G.F=4;this.annotate(b,c,q,$,G);let E=this.page.annotations[this.page.annotations.length-1];return this._addToParent(E)},formText(x,d,b,c,q,$={}){return this.formAnnotation(x,"text",d,b,c,q,$)},formPushButton(x,d,b,c,q,$={}){return this.formAnnotation(x,"pushButton",d,b,c,q,$)},formCombo(x,d,b,c,q,$={}){return this.formAnnotation(x,"combo",d,b,c,q,$)},formList(x,d,b,c,q,$={}){return this.formAnnotation(x,"list",d,b,c,q,$)},formRadioButton(x,d,b,c,q,$={}){return this.formAnnotation(x,"radioButton",d,b,c,q,$)},formCheckbox(x,d,b,c,q,$={}){return this.formAnnotation(x,"checkbox",d,b,c,q,$)},_addToParent(x){let d=x.data.Parent;if(d){if(!d.data.Kids)d.data.Kids=[];d.data.Kids.push(x)}else this._root.data.AcroForm.data.Fields.push(x);return this},_fieldDict(x,d,b={}){if(!this._acroform)throw new Error("Call document.initForm() method before adding form elements to document");let c=Object.assign({},b);if(d!==null)c=this._resolveType(d,b);if(c=this._resolveFlags(c),c=this._resolveJustify(c),c=this._resolveFont(c),c=this._resolveStrings(c),c=this._resolveColors(c),c=this._resolveFormat(c),c.T=new String(x),c.parent)c.Parent=c.parent,delete c.parent;return c},_resolveType(x,d){if(x==="text")d.FT="Tx";else if(x==="pushButton")d.FT="Btn",d.pushButton=!0;else if(x==="radioButton")d.FT="Btn",d.radioButton=!0;else if(x==="checkbox")d.FT="Btn";else if(x==="combo")d.FT="Ch",d.combo=!0;else if(x==="list")d.FT="Ch";else throw new Error(`Invalid form annotation type '${x}'`);return d},_resolveFormat(x){let d=x.format;if(d&&d.type){let b,c,q="";if(HY[d.type]!==void 0)b="AFSpecial_Keystroke",c="AFSpecial_Format",q=HY[d.type];else{let $=d.type.charAt(0).toUpperCase()+d.type.slice(1);if(b=`AF${$}_Keystroke`,c=`AF${$}_Format`,d.type==="date")b+="Ex",q=String(d.param);else if(d.type==="time")q=String(d.param);else if(d.type==="number"){let Y=Object.assign({},WY.number,d);q=String([String(Y.nDec),Y.sepComma?"0":"1",'"'+Y.negStyle+'"',"null",'"'+Y.currency+'"',String(Y.currencyPrepend)].join(","))}else if(d.type==="percent"){let Y=Object.assign({},WY.percent,d);q=String([String(Y.nDec),Y.sepComma?"0":"1"].join(","))}}x.AA=x.AA?x.AA:{},x.AA.K={S:"JavaScript",JS:new String(`${b}(${q});`)},x.AA.F={S:"JavaScript",JS:new String(`${c}(${q});`)}}return delete x.format,x},_resolveColors(x){let d=this._normalizeColor(x.backgroundColor);if(d){if(!x.MK)x.MK={};x.MK.BG=d}if(d=this._normalizeColor(x.borderColor),d){if(!x.MK)x.MK={};x.MK.BC=d}return delete x.backgroundColor,delete x.borderColor,x},_resolveFlags(x){let d=0;if(Object.keys(x).forEach((b)=>{if(XY[b]){if(x[b])d|=XY[b];delete x[b]}}),d!==0)x.Ff=x.Ff?x.Ff:0,x.Ff|=d;return x},_resolveJustify(x){let d=0;if(x.align!==void 0){if(typeof jY[x.align]==="number")d=jY[x.align];delete x.align}if(d!==0)x.Q=d;return x},_resolveFont(x){if(this._acroform.fonts[this._font.id]==null)this._acroform.fonts[this._font.id]=this._font.ref();if(this._acroform.defaultFont!==this._font.name){x.DR={Font:{}};let d=x.fontSize||0;x.DR.Font[this._font.id]=this._font.ref(),x.DA=new String(`/${this._font.id} ${d} Tf 0 g`)}return x},_resolveStrings(x){let d=[];function b(c){if(Array.isArray(c))for(let q=0;q<c.length;q++)if(typeof c[q]==="string")d.push(new String(c[q]));else d.push(c[q])}if(b(x.Opt),x.select)b(x.select),delete x.select;if(d.length)x.Opt=d;if(Object.keys(OY).forEach((c)=>{if(x[c]!==void 0)x[OY[c]]=x[c],delete x[c]}),["V","DV"].forEach((c)=>{if(typeof x[c]==="string")x[c]=new String(x[c])}),x.MK&&x.MK.CA)x.MK.CA=new String(x.MK.CA);if(x.label)x.MK=x.MK?x.MK:{},x.MK.CA=new String(x.label),delete x.label;return x}},dL={file(x,d={}){d.name=d.name||x,d.relationship=d.relationship||"Unspecified";let b={Type:"EmbeddedFile",Params:{}},c;if(!x)throw new Error("No src specified");if(Buffer.isBuffer(x))c=x;else if(x instanceof ArrayBuffer)c=Buffer.from(new Uint8Array(x));else{let J;if(J=/^data:(.*?);base64,(.*)$/.exec(x)){if(J[1])b.Subtype=J[1].replace("/","#2F");c=Buffer.from(J[2],"base64")}else{if(c=y0.readFileSync(x),!c)throw new Error(`Could not read contents of file at filepath ${x}`);let{birthtime:V,ctime:N}=y0.statSync(x);b.Params.CreationDate=V,b.Params.ModDate=N}}if(d.creationDate instanceof Date)b.Params.CreationDate=d.creationDate;if(d.modifiedDate instanceof Date)b.Params.ModDate=d.modifiedDate;if(d.type)b.Subtype=d.type.replace("/","#2F");let q=G0.MD5(G0.lib.WordArray.create(new Uint8Array(c)));b.Params.CheckSum=new String(q),b.Params.Size=c.byteLength;let $;if(!this._fileRegistry)this._fileRegistry={};let Y=this._fileRegistry[d.name];if(Y&&bL(b,Y))$=Y.ref;else $=this.ref(b),$.end(c),this._fileRegistry[d.name]={...b,ref:$};let G={Type:"Filespec",AFRelationship:d.relationship,F:new String(d.name),EF:{F:$},UF:new String(d.name)};if(d.description)G.Desc=new String(d.description);let E=this.ref(G);if(E.end(),!d.hidden)this.addNamedEmbeddedFile(d.name,E);if(this._root.data.AF)this._root.data.AF.push(E);else this._root.data.AF=[E];return E}};function bL(x,d){return x.Subtype===d.Subtype&&x.Params.CheckSum.toString()===d.Params.CheckSum.toString()&&x.Params.Size===d.Params.Size&&x.Params.CreationDate.getTime()===d.Params.CreationDate.getTime()&&(x.Params.ModDate===void 0&&d.Params.ModDate===void 0||x.Params.ModDate.getTime()===d.Params.ModDate.getTime())}var cL={initPDFA(x){if(x.charAt(x.length-3)==="-")this.subset_conformance=x.charAt(x.length-1).toUpperCase(),this.subset=parseInt(x.charAt(x.length-2));else this.subset_conformance="B",this.subset=parseInt(x.charAt(x.length-1))},endSubset(){this._addPdfaMetadata(),this._addColorOutputIntent()},_addColorOutputIntent(){let x=y0.readFileSync(`${__dirname}/data/sRGB_IEC61966_2_1.icc`),d=this.ref({Length:x.length,N:3});d.write(x),d.end();let b=this.ref({Type:"OutputIntent",S:"GTS_PDFA1",Info:new String("sRGB IEC61966-2.1"),OutputConditionIdentifier:new String("sRGB IEC61966-2.1"),DestOutputProfile:d});b.end(),this._root.data.OutputIntents=[b]},_getPdfaid(){return`
        <rdf:Description xmlns:pdfaid="http://www.aiim.org/pdfa/ns/id/" rdf:about="">
            <pdfaid:part>${this.subset}</pdfaid:part>
            <pdfaid:conformance>${this.subset_conformance}</pdfaid:conformance>
        </rdf:Description>
        `},_addPdfaMetadata(){this.appendXML(this._getPdfaid())}},qL={initPDFUA(){this.subset=1},endSubset(){this._addPdfuaMetadata()},_addPdfuaMetadata(){this.appendXML(this._getPdfuaid())},_getPdfuaid(){return`
        <rdf:Description xmlns:pdfuaid="http://www.aiim.org/pdfua/ns/id/" rdf:about="">
            <pdfuaid:part>${this.subset}</pdfuaid:part>
        </rdf:Description>
        `}},$L={_importSubset(x){Object.assign(this,x)},initSubset(x){switch(x.subset){case"PDF/A-1":case"PDF/A-1a":case"PDF/A-1b":case"PDF/A-2":case"PDF/A-2a":case"PDF/A-2b":case"PDF/A-3":case"PDF/A-3a":case"PDF/A-3b":this._importSubset(cL),this.initPDFA(x.subset);break;case"PDF/UA":this._importSubset(qL),this.initPDFUA();break}}},QL=["height","minHeight","maxHeight"],YL=["width","minWidth","maxWidth"];function LY(x,d){let b=new Map;return function(...c){let q=c[0];if(!b.has(q)){if(b.set(q,x(...c)),b.size>d)b.delete(b.keys().next())}return b.get(q)}}function n8(x){return x&&typeof x==="object"&&!Array.isArray(x)}function Q5(x,...d){if(!n8(x))return x;x=r8(x);for(let b of d)if(n8(b)){for(let c in b)if(n8(b[c])){if(!(c in x))x[c]={};x[c]=Q5(x[c],b[c])}else if(b[c]!==void 0)x[c]=r8(b[c])}return x}function r8(x){let d=x;if(typeof x=="object"){d=Array.isArray(x)?[]:{};for(let b in x)d[b]=r8(x[b])}return d}function GL(x){let d=x;if(typeof d!=="object")d={text:d};let b=Object.fromEntries(Object.entries(d).filter(([q])=>QL.includes(q))),c=Object.fromEntries(Object.entries(d).filter(([q])=>YL.includes(q)));return d.padding=$x(d.padding),d.border=$x(d.border),d.borderColor=$x(d.borderColor),d.align=O3(d.align),{defaultStyle:d,defaultRowStyle:b,defaultColStyle:c}}function EL(x,d,b){let c=d(b);if(c==null||typeof c!=="object")c={height:c};c.padding=$x(c.padding),c.border=$x(c.border),c.borderColor=$x(c.borderColor),c.align=O3(c.align),c=Q5(x,c);let q=this.document,$=q.page,Y=$.contentHeight;if(c.height==null||c.height==="auto")c.height="auto";else c.height=q.sizeToPoint(c.height,0,$,Y);return c.minHeight=q.sizeToPoint(c.minHeight,0,$,Y),c.maxHeight=q.sizeToPoint(c.maxHeight,0,$,Y),c}function JL(x,d,b){let c=d(b);if(c==null||typeof c!=="object")c={width:c};if(c.padding=$x(c.padding),c.border=$x(c.border),c.borderColor=$x(c.borderColor),c.align=O3(c.align),c=Q5(x,c),c.width==null||c.width==="*")c.width="*";else c.width=this.document.sizeToPoint(c.width,0,this.document.page,this._maxWidth);return c.minWidth=this.document.sizeToPoint(c.minWidth,0,this.document.page,this._maxWidth),c.maxWidth=this.document.sizeToPoint(c.maxWidth,0,this.document.page,this._maxWidth),c}function O3(x){return x==null||typeof x==="string"?{x,y:x}:x}function VL(){let x=this.document,d=this.opts,b=x._tableIndex++;this._id=new String(d.id??`table-${b}`),this._position={x:x.sizeToPoint(d.position?.x,x.x),y:x.sizeToPoint(d.position?.y,x.y)},this._maxWidth=x.sizeToPoint(d.maxWidth,x.page.width-x.page.margins.right-this._position.x);let{defaultStyle:c,defaultColStyle:q,defaultRowStyle:$}=GL(d.defaultStyle);this._defaultStyle=c;let Y;if(d.columnStyles){if(Array.isArray(d.columnStyles))Y=(E)=>d.columnStyles[E];else if(typeof d.columnStyles==="function")Y=LY((E)=>d.columnStyles(E),1/0);else if(typeof d.columnStyles==="object")Y=()=>d.columnStyles}if(!Y)Y=()=>({});this._colStyle=JL.bind(this,q,Y);let G;if(d.rowStyles){if(Array.isArray(d.rowStyles))G=(E)=>d.rowStyles[E];else if(typeof d.rowStyles==="function")G=LY((E)=>d.rowStyles(E),10);else if(typeof d.rowStyles==="object")G=()=>d.rowStyles}if(!G)G=()=>({});this._rowStyle=EL.bind(this,$,G)}function NL(x){if(x!=null)x=`${x}`;return x}function UL(x,d,b){let c=this._colStyle(b),q=this._rowStyle(d),$=Q5({},c.font,q.font,x.font),Y=Object.values($).filter((U)=>U!=null).length>0,G=this.document,E=G._fontSource,J=G._fontSize,V=G._fontFamily;if(Y){if($.src)G.font($.src,$.family);if($.size)G.fontSize($.size);q=this._rowStyle(d)}x.padding=$x(x.padding),x.border=$x(x.border),x.borderColor=$x(x.borderColor);let N=Q5(this._defaultStyle,c,q,x);if(N.rowIndex=d,N.colIndex=b,N.font=$??{},N.customFont=Y,N.text=NL(N.text),N.rowSpan=N.rowSpan??1,N.colSpan=N.colSpan??1,N.padding=$x(N.padding,"0.25em",(U)=>G.sizeToPoint(U,"0.25em")),N.border=$x(N.border,1,(U)=>G.sizeToPoint(U,1)),N.borderColor=$x(N.borderColor,"black",(U)=>U??"black"),N.align=O3(N.align),N.align.x=N.align.x??"left",N.align.y=N.align.y??"top",N.textStroke=G.sizeToPoint(N.textStroke,0),N.textStrokeColor=N.textStrokeColor??"black",N.textColor=N.textColor??"black",N.textOptions=N.textOptions??{},N.id=new String(N.id??`${this._id}-${d}-${b}`),N.type=N.type?.toUpperCase()==="TH"?"TH":"TD",N.scope){if(N.scope=N.scope.toLowerCase(),N.scope==="row")N.scope="Row";else if(N.scope==="both")N.scope="Both";else if(N.scope==="column")N.scope="Column"}if(typeof this.opts.debug==="boolean")N.debug=this.opts.debug;if(Y)G.font(E,V,J);return N}function KL(x,d){if(!this._cellClaim)this._cellClaim=new Set;let b=0;return x.map((c)=>{if(c==null||typeof c!=="object")c={text:c};while(this._cellClaim.has(`${d},${b}`))b++;c=UL.call(this,c,d,b);for(let q=0;q<c.rowSpan;q++)for(let $=0;$<c.colSpan;$++)this._cellClaim.add(`${d+q},${b+$}`);return b+=c.colSpan,c})}function RL(x){this._columnWidths=[],XL.call(this,x.reduce((d,b)=>d+b.colSpan,0)),this._rowHeights=[],this._rowYPos=[this._position.y],this._rowBuffer=new Set}function XL(x){let d=[],b=0,c=this._maxWidth;for(let Y=0;Y<x;Y++){let G=this._colStyle(Y);if(G.width==="*")d[Y]=G,b+=G.minWidth;else c-=G.width,this._columnWidths[Y]=G.width}let q=d.reduce((Y)=>Y+1,0);if(b>=c)d.forEach((Y,G)=>{this._columnWidths[G]=Y.minWidth});else if(q>0)d.forEach((Y,G)=>{let E=c/q;if(this._columnWidths[G]=Math.max(E,Y.minWidth),Y.maxWidth>0)this._columnWidths[G]=Math.min(this._columnWidths[G],Y.maxWidth);c-=this._columnWidths[G],q--});let $=this._position.x;this._columnXPos=Array.from(this._columnWidths,(Y)=>{let G=$;return $+=Y,G})}function jL(x,d){if(x.forEach((Y)=>this._rowBuffer.add(Y)),d>0)this._rowYPos[d]=this._rowYPos[d-1]+this._rowHeights[d-1];let b=this._rowStyle(d),c=[];this._rowBuffer.forEach((Y)=>{if(Y.rowIndex+Y.rowSpan-1===d)c.push(DY.call(this,Y,b.height)),this._rowBuffer.delete(Y)});let q=b.height;if(q==="auto")q=c.reduce((Y,G)=>{let E=G.textBounds.height+G.padding.top+G.padding.bottom;for(let J=0;J<G.rowSpan-1;J++)E-=this._rowHeights[G.rowIndex+J];return Math.max(Y,E)},0);if(q=Math.max(q,b.minHeight),b.maxHeight>0)q=Math.min(q,b.maxHeight);this._rowHeights[d]=q;let $=!1;if(q>this.document.page.contentHeight)console.warn(new Error(`Row ${d} requested more than the safe page height, row has been clamped`).stack.slice(7)),this._rowHeights[d]=this.document.page.maxY()-this._rowYPos[d];else if(this._rowYPos[d]+q>=this.document.page.maxY())this._rowYPos[d]=this.document.page.margins.top,$=!0;return{newPage:$,toRender:c.map((Y)=>DY.call(this,Y,q))}}function DY(x,d){let b=0;for(let N=0;N<x.colSpan;N++)b+=this._columnWidths[x.colIndex+N];let c=d;if(c==="auto")c=this.document.page.contentHeight;else for(let N=0;N<x.rowSpan-1;N++)c+=this._rowHeights[x.rowIndex+N];let q=b-x.padding.left-x.padding.right,$=c-x.padding.top-x.padding.bottom,Y=x.textOptions.rotation??0,{width:G,height:E}=OL(Y,q,$),J={align:x.align.x,ellipsis:!0,stroke:x.textStroke>0,fill:!0,width:G,height:E,rotation:Y,...x.textOptions},V={x:0,y:0,width:0,height:0};if(x.text){let N=this.document._fontSource,U=this.document._fontSize,K=this.document._fontFamily;if(x.font?.src)this.document.font(x.font.src,x.font?.family);if(x.font?.size)this.document.fontSize(x.font.size);let X=this.document.boundsOfString(x.text,0,0,{...J,rotation:0});J.width=X.width,J.height=X.height,V=this.document.boundsOfString(x.text,0,0,J),this.document.font(N,K,U)}return{...x,textOptions:J,x:this._columnXPos[x.colIndex],y:this._rowYPos[x.rowIndex],textX:this._columnXPos[x.colIndex]+x.padding.left,textY:this._rowYPos[x.rowIndex]+x.padding.top,width:b,height:c,textAllocatedHeight:$,textAllocatedWidth:q,textBounds:V}}function OL(x,d,b){let c,q,$=AY(x),Y=FY(x);if(x===0||x===180)c=d,q=b;else if(x===90||x===270)c=b,q=d;else if(x<90||x>180&&x<270)c=d/(2*$),q=d/(2*Y);else q=d/(2*$),c=d/(2*Y);let G=Y*c,E=$*q;if(G+E>b){let J=$*$-Y*Y;if(x===0||x===180)c=d,q=b;else if(x===90||x===270)c=b,q=d;else if(x<90||x>180&&x<270)c=(d*$-b*Y)/J,q=(b*$-d*Y)/J;else q=(d*$-b*Y)/J,c=(b*$-d*Y)/J}return{width:Math.abs(c),height:Math.abs(q)}}function HL(){let x=this.opts.structParent;if(x){if(this._tableStruct=this.document.struct("Table"),this._tableStruct.dictionary.data.ID=this._id,x instanceof W6)x.add(this._tableStruct);else if(x instanceof Y5)x.addStructure(this._tableStruct);this._headerRowLookup={},this._headerColumnLookup={}}}function WL(){if(this._tableStruct)this._tableStruct.end()}function LL(x,d,b){let c=this.document.struct("TR");c.dictionary.data.ID=new String(`${this._id}-${d}`),this._tableStruct.add(c),x.forEach((q)=>b(q,c)),c.end()}function DL(x,d,b){let c=this.document,q=c.struct(x.type,{title:x.title});q.dictionary.data.ID=x.id,d.add(q);let{padding:$,border:Y}=x,G={O:"Table",Width:x.width,Height:x.height,Padding:[$.top,$.bottom,$.left,$.right],RowSpan:x.rowSpan>1?x.rowSpan:void 0,ColSpan:x.colSpan>1?x.colSpan:void 0,BorderThickness:[Y.top,Y.bottom,Y.left,Y.right]};if(x.type==="TH"){if(x.scope==="Row"||x.scope==="Both"){for(let N=0;N<x.rowSpan;N++){if(!this._headerRowLookup[x.rowIndex+N])this._headerRowLookup[x.rowIndex+N]=[];this._headerRowLookup[x.rowIndex+N].push(x.id)}G.Scope=x.scope}if(x.scope==="Column"||x.scope==="Both"){for(let N=0;N<x.colSpan;N++){if(!this._headerColumnLookup[x.colIndex+N])this._headerColumnLookup[x.colIndex+N]=[];this._headerColumnLookup[x.colIndex+N].push(x.id)}G.Scope=x.scope}}let E=new Set([...Array.from({length:x.colSpan},(N,U)=>this._headerColumnLookup[x.colIndex+U]).flat(),...Array.from({length:x.rowSpan},(N,U)=>this._headerRowLookup[x.rowIndex+U]).flat()].filter(Boolean));if(E.size)G.Headers=Array.from(E);let J=c._normalizeColor;if(x.backgroundColor!=null)G.BackgroundColor=J(x.backgroundColor);let V=[Y.top,Y.bottom,Y.left,Y.right];if(V.some((N)=>N)){let N=x.borderColor;G.BorderColor=[V[0]?J(N.top):null,V[1]?J(N.bottom):null,V[2]?J(N.left):null,V[3]?J(N.right):null]}Object.keys(G).forEach((N)=>G[N]===void 0&&delete G[N]),q.dictionary.data.A=c.ref(G),q.add(b),q.end(),q.dictionary.data.A.end()}function eL(x,d){if(this._tableStruct)LL.call(this,x,d,eY.bind(this));else x.forEach((b)=>eY.call(this,b));return this._rowYPos[d]+this._rowHeights[d]}function eY(x,d){let b=()=>{if(x.backgroundColor!=null)this.document.save().rect(x.x,x.y,x.width,x.height).fill(x.backgroundColor).restore();if(AL.call(this,x.border,x.borderColor,x.x,x.y,x.width,x.height),x.debug)this.document.save(),this.document.dash(1,{space:1}).lineWidth(1).strokeOpacity(0.3),this.document.rect(x.x,x.y,x.width,x.height).stroke("green"),this.document.restore();if(x.text)ML.call(this,x)};if(d)DL.call(this,x,d,b);else b()}function ML(x){let d=this.document,b=d._fontSource,c=d._fontSize,q=d._fontFamily;if(x.customFont){if(x.font.src)d.font(x.font.src,x.font.family);if(x.font.size)d.fontSize(x.font.size)}let{textX:$,textY:Y,textAllocatedHeight:G,textAllocatedWidth:E}=x,J=x.textBounds.width,V=x.textBounds.height,N=-x.textBounds.x,U=-x.textBounds.y,K=x.align.x==="right"?1:x.align.x==="center"?0.5:0,X=(E-J)*K,D=x.align.y==="bottom"?1:x.align.y==="center"?0.5:0,L=(G-V)*D,H=X+N,O=L+U;if(x.debug){if(d.save(),d.dash(1,{space:1}).lineWidth(1).strokeOpacity(0.3),x.text)d.moveTo($+X,Y).lineTo($+X,Y+G).moveTo($+X+J,Y).lineTo($+X+J,Y+G).stroke("blue").moveTo($,Y+L).lineTo($+E,Y+L).moveTo($,Y+L+V).lineTo($+E,Y+L+V).stroke("green");d.rect($,Y,E,G).stroke("orange"),d.restore()}if(d.save().rect($,Y,E,G).clip(),d.fillColor(x.textColor).strokeColor(x.textStrokeColor),x.textStroke>0)d.lineWidth(x.textStroke);if(d.text(x.text,$+H,Y+O,x.textOptions),d.restore(),x.font)d.font(b,q,c)}function AL(x,d,b,c,q,$,Y){x=Object.fromEntries(Object.entries(x).map(([E,J])=>[E,Y&&!Y[E]?0:J]));let G=this.document;if([x.right,x.bottom,x.left].every((E)=>E===x.top)){if(x.top>0)G.save().lineWidth(x.top).rect(b,c,q,$).stroke(d.top).restore()}else{if(x.top>0)G.save().lineWidth(x.top).moveTo(b,c).lineTo(b+q,c).stroke(d.top).restore();if(x.right>0)G.save().lineWidth(x.right).moveTo(b+q,c).lineTo(b+q,c+$).stroke(d.right).restore();if(x.bottom>0)G.save().lineWidth(x.bottom).moveTo(b+q,c+$).lineTo(b,c+$).stroke(d.bottom).restore();if(x.left>0)G.save().lineWidth(x.left).moveTo(b,c+$).lineTo(b,c).stroke(d.left).restore()}}class gY{constructor(x,d={}){if(this.document=x,this.opts=Object.freeze(d),VL.call(this),HL.call(this),this._currRowIndex=0,this._ended=!1,d.data){for(let b of d.data)this.row(b);return this.end()}}row(x,d=!1){if(this._ended)throw new Error(`Table was marked as ended on row ${this._currRowIndex}`);if(x=Array.from(x),x=KL.call(this,x,this._currRowIndex),this._currRowIndex===0)RL.call(this,x);let{newPage:b,toRender:c}=jL.call(this,x,this._currRowIndex);if(b)this.document.continueOnNewPage();let q=eL.call(this,c,this._currRowIndex);if(this.document.x=this._position.x,this.document.y=q,d)return this.end();return this._currRowIndex++,this}end(){while(this._rowBuffer?.size)this.row([]);return this._ended=!0,WL.call(this),this.document}}var FL={initTables(){this._tableIndex=0},table(x){return new gY(this,x)}};class hY{constructor(){this._metadata=`
        <?xpacket begin="\uFEFF" id="W5M0MpCehiHzreSzNTczkc9d"?>
            <x:xmpmeta xmlns:x="adobe:ns:meta/">
                <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
        `}_closeTags(){this._metadata=this._metadata.concat(`
                </rdf:RDF>
            </x:xmpmeta>
        <?xpacket end="w"?>
        `)}append(x,d=!0){if(this._metadata=this._metadata.concat(x),d)this._metadata=this._metadata.concat(`
`)}getXML(){return this._metadata}getLength(){return this._metadata.length}end(){this._closeTags(),this._metadata=this._metadata.trim()}}var zL={initMetadata(){this.metadata=new hY},appendXML(x,d=!0){this.metadata.append(x,d)},_addInfo(){if(this.appendXML(`
        <rdf:Description rdf:about="" xmlns:xmp="http://ns.adobe.com/xap/1.0/">
            <xmp:CreateDate>${this.info.CreationDate.toISOString().split(".")[0]+"Z"}</xmp:CreateDate>
            <xmp:CreatorTool>${this.info.Creator}</xmp:CreatorTool>
        </rdf:Description>
        `),this.info.Title||this.info.Author||this.info.Subject){if(this.appendXML(`
            <rdf:Description rdf:about="" xmlns:dc="http://purl.org/dc/elements/1.1/">
            `),this.info.Title)this.appendXML(`
                <dc:title>
                    <rdf:Alt>
                        <rdf:li xml:lang="x-default">${this.info.Title}</rdf:li>
                    </rdf:Alt>
                </dc:title>
                `);if(this.info.Author)this.appendXML(`
                <dc:creator>
                    <rdf:Seq>
                        <rdf:li>${this.info.Author}</rdf:li>
                    </rdf:Seq>
                </dc:creator>
                `);if(this.info.Subject)this.appendXML(`
                <dc:description>
                    <rdf:Alt>
                        <rdf:li xml:lang="x-default">${this.info.Subject}</rdf:li>
                    </rdf:Alt>
                </dc:description>
                `);this.appendXML(`
            </rdf:Description>
            `)}if(this.appendXML(`
        <rdf:Description rdf:about="" xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
            <pdf:Producer>${this.info.Creator}</pdf:Producer>`,!1),this.info.Keywords)this.appendXML(`
            <pdf:Keywords>${this.info.Keywords}</pdf:Keywords>`,!1);this.appendXML(`
        </rdf:Description>
        `)},endMetadata(){if(this._addInfo(),this.metadata.end(),this.version!=1.3)this.metadataRef=this.ref({length:this.metadata.getLength(),Type:"Metadata",Subtype:"XML"}),this.metadataRef.compress=!1,this.metadataRef.write(Buffer.from(this.metadata.getXML(),"utf-8")),this.metadataRef.end(),this._root.data.Metadata=this.metadataRef}};class Y5 extends nH.Readable{constructor(x={}){super(x);switch(this.options=x,x.pdfVersion){case"1.4":this.version=1.4;break;case"1.5":this.version=1.5;break;case"1.6":this.version=1.6;break;case"1.7":case"1.7ext3":this.version=1.7;break;default:this.version=1.3;break}this.compress=this.options.compress!=null?this.options.compress:!0,this._pageBuffer=[],this._pageBufferStart=0,this._offsets=[],this._waiting=0,this._ended=!1,this._offset=0;let d=this.ref({Type:"Pages",Count:0,Kids:[]}),b=this.ref({Dests:new K3});if(this._root=this.ref({Type:"Catalog",Pages:d,Names:b}),this.options.lang)this._root.data.Lang=new String(this.options.lang);if(this.page=null,this.initMetadata(),this.initColor(),this.initVector(),this.initFonts(x.font),this.initText(),this.initImages(),this.initOutline(),this.initMarkings(x),this.initTables(),this.initSubset(x),this.info={Producer:"PDFKit",Creator:"PDFKit",CreationDate:new Date},this.options.info)for(let c in this.options.info){let q=this.options.info[c];this.info[c]=q}if(this.options.displayTitle)this._root.data.ViewerPreferences=this.ref({DisplayDocTitle:!0});if(this._id=H6.generateFileID(this.info),this._security=H6.create(this,x),this._write(`%PDF-${this.version}`),this._write("%\xFF\xFF\xFF\xFF"),this.options.autoFirstPage!==!1)this.addPage()}addPage(x){if(x==null)({options:x}=this);if(!this.options.bufferPages)this.flushPages();this.page=new zY(this,x),this._pageBuffer.push(this.page);let d=this._root.data.Pages.data;return d.Kids.push(this.page.dictionary),d.Count++,this.x=this.page.margins.left,this.y=this.page.margins.top,this._ctm=[1,0,0,1,0,0],this.transform(1,0,0,-1,0,this.page.height),this.emit("pageAdded"),this}continueOnNewPage(x){let d=this.endPageMarkings(this.page);return this.addPage(x??this.page._options),this.initPageMarkings(d),this}bufferedPageRange(){return{start:this._pageBufferStart,count:this._pageBuffer.length}}switchToPage(x){let d;if(!(d=this._pageBuffer[x-this._pageBufferStart]))throw new Error(`switchToPage(${x}) out of bounds, current buffer covers pages ${this._pageBufferStart} to ${this._pageBufferStart+this._pageBuffer.length-1}`);return this.page=d}flushPages(){let x=this._pageBuffer;this._pageBuffer=[],this._pageBufferStart+=x.length;for(let d of x)this.endPageMarkings(d),d.end()}addNamedDestination(x,...d){if(d.length===0)d=["XYZ",null,null,null];if(d[0]==="XYZ"&&d[2]!==null)d[2]=this.page.height-d[2];d.unshift(this.page.dictionary),this._root.data.Names.data.Dests.add(x,d)}addNamedEmbeddedFile(x,d){if(!this._root.data.Names.data.EmbeddedFiles)this._root.data.Names.data.EmbeddedFiles=new K3({limits:!1});this._root.data.Names.data.EmbeddedFiles.add(x,d)}addNamedJavaScript(x,d){if(!this._root.data.Names.data.JavaScript)this._root.data.Names.data.JavaScript=new K3;let b={JS:new String(d),S:"JavaScript"};this._root.data.Names.data.JavaScript.add(x,b)}ref(x){let d=new MY(this,this._offsets.length+1,x);return this._offsets.push(null),this._waiting++,d}_read(){}_write(x){if(!Buffer.isBuffer(x))x=Buffer.from(x+`
`,"binary");this.push(x),this._offset+=x.length}addContent(x){return this.page.write(x),this}_refEnd(x){if(this._offsets[x.id-1]=x.offset,--this._waiting===0&&this._ended)this._finalize(),this._ended=!1}end(){this.flushPages(),this._info=this.ref();for(let x in this.info){let d=this.info[x];if(typeof d==="string")d=new String(d);let b=this.ref(d);b.end(),this._info.data[x]=b}this._info.end();for(let x in this._fontFamilies)this._fontFamilies[x].finalize();if(this.endOutline(),this.endMarkings(),this.subset)this.endSubset();if(this.endMetadata(),this._root.end(),this._root.data.Pages.end(),this._root.data.Names.end(),this.endAcroForm(),this._root.data.ViewerPreferences)this._root.data.ViewerPreferences.end();if(this._security)this._security.end();if(this._waiting===0)this._finalize();else this._ended=!0}_finalize(){let x=this._offset;this._write("xref"),this._write(`0 ${this._offsets.length+1}`),this._write("0000000000 65535 f ");for(let b of this._offsets)b=`0000000000${b}`.slice(-10),this._write(b+" 00000 n ");let d={Size:this._offsets.length+1,Root:this._root,Info:this._info,ID:[this._id,this._id]};if(this._security)d.Encrypt=this._security.dictionary;this._write("trailer"),this._write(Dx.convert(d)),this._write("startxref"),this._write(`${x}`),this._write("%%EOF"),this.push(null)}toString(){return"[object PDFDocument]"}}var ex=(x)=>{Object.assign(Y5.prototype,x)};ex(zL);ex(aW);ex(pW);ex(nW);ex(iW);ex(sW);ex(oW);ex(tW);ex(xL);ex(fL);ex(dL);ex($L);ex(FL);Y5.LineWrapper=q5;aY.exports=Y5});var uY=i((mY,H3)=>{var BL=_Y();class PDFDocumentWithTables extends BL{constructor(x){super(x);this.opt=x}logg(...x){}addBackground({x,y:d,width:b,height:c},q,$,Y){q||(q="grey"),$||($=0.1),this.save(),this.fill(q).fillOpacity($).rect(x,d,b,c).fill(),this.restore(),typeof Y==="function"&&Y(this)}table(table,options,callback){return new Promise((resolve,reject)=>{try{if(typeof table==="string"&&(table=JSON.parse(table)),table||(table={}),options||(options={}),table.headers||(table.headers=[]),table.datas||(table.datas=[]),table.rows||(table.rows=[]),table.options&&(options={...options,...table.options}),options.hideHeader||(options.hideHeader=!1),options.padding||(options.padding=0),options.columnsSize||(options.columnsSize=[]),options.addPage||(options.addPage=!1),options.absolutePosition||(options.absolutePosition=!1),options.minRowHeight||(options.minRowHeight=0),options.divider||(options.divider={}),options.divider.header||(options.divider.header={disabled:!1,width:void 0,opacity:void 0}),options.divider.horizontal||(options.divider.horizontal={disabled:!1,width:void 0,opacity:void 0}),options.divider.vertical||(options.divider.vertical={disabled:!0,width:void 0,opacity:void 0}),!table.headers.length)throw new Error("Headers not defined. Use options: hideHeader to hide.");if(options.useSafelyMarginBottom===void 0)options.useSafelyMarginBottom=!0;let title=table.title?table.title:options.title||"",subtitle=table.subtitle?table.subtitle:options.subtitle||"";this.logg("layout",this.page.layout),this.logg("size",this.page.size),this.logg("margins",this.page.margins);let columnSpacing=options.columnSpacing||3,columnSizes=[],columnPositions=[],columnWidth=0,rowDistance=0.5,cellPadding={top:0,right:0,bottom:0,left:0},prepareHeader=options.prepareHeader||(()=>this.fillColor("black").font("Helvetica-Bold").fontSize(8).fill()),prepareRow=options.prepareRow||((x,d,b,c,q)=>this.fillColor("black").font("Helvetica").fontSize(8).fill()),tableWidth=0,maxY=this.page.height-this.page.margins.bottom,startX=options.x||this.x||this.page.margins.left,startY=options.y||this.y||this.page.margins.top,lastPositionX=0,rowBottomY=0,titleHeight=0;this.headerHeight=0;let firstLineHeight=0;this.datasIndex=0,this.rowsIndex=0;let lockAddTitles=!1,lockAddPage=!1,lockAddHeader=!1,safelyMarginBottom=this.page.margins.top/2;if(options.x===null||options.x===-1)startX=this.page.margins.left;let createTitle=(x,d,b)=>{if(!x)return;if(typeof x==="string")this.fillColor("black").fontSize(8).fontSize(d).opacity(b).fill(),this.logg(x,titleHeight),this.text(x,startX,startY).opacity(1),startY=this.y+columnSpacing+2;else if(typeof x==="object")x.fontFamily&&this.font(x.fontFamily),x.label&&this.fillColor(x.color||"black").fontSize(x.fontSize||d).text(x.label,startX,startY).fill(),startY=this.y+columnSpacing+2};options.addPage===!0&&onFirePageAdded();let onFirePageAdded=()=>{startY=this.page.margins.top,rowBottomY=0,lockAddPage||this.addPage({layout:this.page.layout,size:this.page.size,margins:this.page.margins}),lockAddHeader||addHeader()},fEval=(str)=>{let f=null;return eval("f = "+str),f},separationsColumn=()=>{},separationsRow=(x,d,b,c,q,$)=>{x||(x="horizontal");let Y=rowDistance*1.5,G=options.x||this.page.margins.left||30;if((options.divider[x].disabled||!1)===!0)return;q=q||options.divider[x].opacity||0.5,c=c||options.divider[x].width||0.5,$=$||options.divider[x].color||"black",this.moveTo(d,b-Y).lineTo(d+tableWidth-G,b-Y).lineWidth(c).strokeColor($).opacity(q).stroke().opacity(1)},prepareCellPadding=(x)=>{if(Array.isArray(x))switch(x.length){case 3:x=[...x,0];break;case 2:x=[...x,...x];break;case 1:x=Array(4).fill(x[0]);break}else if(typeof x==="number")x=Array(4).fill(x);else if(typeof x==="object"){let{top:d,right:b,bottom:c,left:q}=x;x=[d,b,c,q]}else x=Array(4).fill(0);return{top:x[0]>>0,right:x[1]>>0,bottom:x[2]>>0,left:x[3]>>0}},prepareRowOptions=(x)=>{if(typeof x!=="object"||!x.hasOwnProperty("options"))return;let{fontFamily:d,fontSize:b,color:c}=x.options;d&&this.font(d),b&&this.fontSize(b),c&&this.fillColor(c)},prepareRowBackground=(x,d)=>{if(typeof x!=="object")return;x.options&&(x=x.options);let{fill:b,opac:c}={};if(x.hasOwnProperty("columnColor")){let{columnColor:q,columnOpacity:$}=x;b=q,c=$}else if(x.hasOwnProperty("backgroundColor")){let{backgroundColor:q,backgroundOpacity:$}=x;b=q,c=$}else if(x.hasOwnProperty("background")){if(typeof x.background==="object"){let{color:q,opacity:$}=x.background;b=q,c=$}}b&&this.addBackground(d,b,c)},computeRowHeight=(x,d)=>{let b=d?0:options.minRowHeight||0,c;if(!Array.isArray(x)&&typeof x==="object"&&!x.hasOwnProperty("property")){let q=[];table.headers.forEach(({property:$})=>q.push(x[$])),x=q}return x.forEach((q,$)=>{let Y=q;if(typeof q==="object")Y=String(q.label),q.hasOwnProperty("options")&&prepareRowOptions(q);Y=String(Y).replace("bold:","").replace("size",""),c=prepareCellPadding(table.headers[$].padding||options.padding||0);let G=this.heightOfString(Y,{width:columnSizes[$]-(c.left+c.right),align:"left"});b=Math.max(b,G)}),b+columnSpacing},calcColumnSizes=()=>{let x=[],d=[],b=0;if(b=this.page.width-this.page.margins.right-(options.x||this.page.margins.left),options.width&&(b=parseInt(options.width)||String(options.width).replace(/[^0-9]/g,"")>>0),table.headers.forEach((c)=>{c.width&&x.push(c.width)}),x.length===0)x=options.columnsSize;if(x.length===0)columnWidth=b/table.headers.length,table.headers.forEach(()=>x.push(columnWidth));x.reduce((c,q,$)=>{return d.push(c>>0),c+q},options.x||this.page.margins.left),x.length&&(columnSizes=x),d.length&&(columnPositions=d),b=d[d.length-1]+x[x.length-1],b&&(tableWidth=b),this.logg("columnSizes",x),this.logg("columnPositions",d)};calcColumnSizes();let addHeader=()=>{if(prepareHeader(),this.headerHeight===0)this.headerHeight=computeRowHeight(table.headers,!0),this.logg(this.headerHeight,"headers");if(firstLineHeight===0){if(table.datas.length>0)firstLineHeight=computeRowHeight(table.datas[0],!0),this.logg(firstLineHeight,"datas");if(table.rows.length>0)firstLineHeight=computeRowHeight(table.rows[0],!0),this.logg(firstLineHeight,"rows")}titleHeight=!lockAddTitles?24.1:0;let x=startY+titleHeight+firstLineHeight+this.headerHeight+safelyMarginBottom;if(firstLineHeight>maxY)lockAddPage=!0,this.logg("CRAZY! This a big text on cell");else if(x>maxY){lockAddPage=!0,onFirePageAdded();return}if(lockAddTitles===!1){if(createTitle(title,12,1),createTitle(subtitle,9,0.7),title||subtitle)startY+=3}if(prepareHeader(),lockAddTitles=!0,options.absolutePosition===!0)lastPositionX=options.x||startX||this.x,startY=options.y||startY||this.y;else lastPositionX=startX;if(!options.hideHeader&&table.headers.length>0){if(typeof table.headers[0]==="string")table.headers.forEach((d,b)=>{let c={x:lastPositionX,y:startY-columnSpacing-rowDistance*2,width:columnSizes[b],height:this.headerHeight+columnSpacing};this.addBackground(c),cellPadding=prepareCellPadding(options.padding||0),this.text(d,lastPositionX+cellPadding.left,startY,{width:Number(columnSizes[b])-(cellPadding.left+cellPadding.right),align:"left"}),lastPositionX+=columnSizes[b]>>0});else table.headers.forEach((d,b)=>{let{label:c,width:q,renderer:$,align:Y,headerColor:G,headerOpacity:E,headerAlign:J,padding:V}=d;if(q=q||columnSizes[b],Y=J||Y||"left",q=q>>0,$&&typeof $==="string")table.headers[b].renderer=fEval($);let N={x:lastPositionX,y:startY-columnSpacing-rowDistance*2,width:q,height:this.headerHeight+columnSpacing};this.addBackground(N,G,E),cellPadding=prepareCellPadding(V||options.padding||0),this.text(c,lastPositionX+cellPadding.left,startY,{width:q-(cellPadding.left+cellPadding.right),align:Y}),lastPositionX+=q});prepareRowOptions(table.headers)}if(!options.hideHeader)rowBottomY=Math.max(startY+computeRowHeight(table.headers,!0),rowBottomY),separationsRow("header",startX,rowBottomY);else rowBottomY=startY};addHeader(),table.datas.forEach((x,d)=>{this.datasIndex=d;let b=computeRowHeight(x,!1);if(this.logg(b),options.useSafelyMarginBottom&&this.y+safelyMarginBottom+b>=maxY&&!lockAddPage)onFirePageAdded();startY=rowBottomY+columnSpacing+rowDistance,lockAddPage=!1;let c={x:startX,y:startY-columnSpacing-rowDistance*2,width:tableWidth-startX,height:b+columnSpacing};if(prepareRowBackground(x,c),lastPositionX=startX,table.headers.forEach((q,$)=>{let{property:Y,width:G,renderer:E,align:J,valign:V,padding:N}=q;G=G||columnWidth,J=J||"left",cellPadding=prepareCellPadding(N||options.padding||0);let U={x:lastPositionX,y:startY-columnSpacing-rowDistance*2,width:G,height:b+columnSpacing};prepareRowOptions(x),prepareRow(x,$,d,c,U);let K=x[Y];if(typeof K==="object"){if(K=String(K.label),x[Y].hasOwnProperty("options"))prepareRowOptions(x[Y]),prepareRowBackground(x[Y],U)}else prepareRowBackground(table.headers[$],U);if(String(K).indexOf("bold:")===0)this.font("Helvetica-Bold"),K=K.replace("bold:","");if(String(K).indexOf("size")===0){let D=String(K).substr(4,2).replace(":","").replace("+","")>>0;this.fontSize(D<7?7:D),K=K.replace(`size${D}:`,"")}if(typeof E==="function")K=E(K,$,d,x,c,U);let X=0;if(V&&V!=="top"){let D=this.heightOfString(K,{width:G-(cellPadding.left+cellPadding.right),align:J});X=rowDistance-columnSpacing+(U.height-D)/2}this.text(K,lastPositionX+cellPadding.left,startY+X,{width:G-(cellPadding.left+cellPadding.right),align:J}),lastPositionX+=G,prepareRowOptions(x),prepareRow(x,$,d,c,U)}),rowBottomY=Math.max(startY+b,rowBottomY),rowBottomY>this.page.height)rowBottomY=this.y+columnSpacing+rowDistance*2;if(separationsRow("horizontal",startX,rowBottomY),x.hasOwnProperty("options")){if(x.options.hasOwnProperty("separation"))separationsRow("horizontal",startX,rowBottomY,1,1)}}),table.rows.forEach((x,d)=>{this.rowsIndex=d;let b=computeRowHeight(x,!1);if(this.logg(b),options.useSafelyMarginBottom&&this.y+safelyMarginBottom+b>=maxY&&!lockAddPage)onFirePageAdded();startY=rowBottomY+columnSpacing+rowDistance,lockAddPage=!1;let c={x:columnPositions[0],y:startY-columnSpacing-rowDistance*2,width:tableWidth-startX,height:b+columnSpacing};if(lastPositionX=startX,x.forEach((q,$)=>{let Y="left",G=void 0,E={x:lastPositionX,y:startY-columnSpacing-rowDistance*2,width:columnSizes[$],height:b+columnSpacing};if(prepareRowBackground(table.headers[$],E),prepareRow(x,$,d,c,E),typeof table.headers[$]==="object")table.headers[$].renderer&&(q=table.headers[$].renderer(q,$,d,x,c,E,this)),table.headers[$].align&&(Y=table.headers[$].align),table.headers[$].valign&&(G=table.headers[$].valign);cellPadding=prepareCellPadding(table.headers[$].padding||options.padding||0);let J=0;if(G&&G!=="top"){let V=this.heightOfString(q,{width:columnSizes[$]-(cellPadding.left+cellPadding.right),align:Y});J=rowDistance-columnSpacing+(E.height-V)/2}this.text(q,lastPositionX+cellPadding.left,startY+J,{width:columnSizes[$]-(cellPadding.left+cellPadding.right),align:Y}),lastPositionX+=columnSizes[$]}),rowBottomY=Math.max(startY+b,rowBottomY),rowBottomY>this.page.height)rowBottomY=this.y+columnSpacing+rowDistance*2;separationsRow("horizontal",startX,rowBottomY)}),this.x=startX,this.y=rowBottomY,this.moveDown(),this.off("pageAdded",onFirePageAdded),typeof callback==="function"&&callback(this),resolve()}catch(x){reject(x)}})}async tables(x,d){return new Promise(async(b,c)=>{try{if(Array.isArray(x)===!1){b();return}let q=x.length;for(let $;$<q;$++)await this.table(x[$],x[$].options||{});typeof d==="function"&&d(this),b()}catch(q){c(q)}})}}H3.exports=PDFDocumentWithTables;H3.exports.default=PDFDocumentWithTables});var L3=(x,d,b)=>{return(c,q)=>{let $=-1;return Y(0);async function Y(G){if(G<=$)throw new Error("next() called multiple times");$=G;let E,J=!1,V;if(x[G])V=x[G][0][0],c.req.routeIndex=G;else V=G===x.length&&q||void 0;if(V)try{E=await V(c,()=>Y(G+1))}catch(N){if(N instanceof Error&&d)c.error=N,E=await d(N,c),J=!0;else throw N}else if(c.finalized===!1&&b)E=await b(c);if(E&&(c.finalized===!1||J))c.res=E;return c}}};var U1=async(x,d=Object.create(null))=>{let{all:b=!1,dot:c=!1}=d,$=(x instanceof N5?x.raw.headers:x.headers).get("Content-Type");if($?.startsWith("multipart/form-data")||$?.startsWith("application/x-www-form-urlencoded"))return GG(x,{all:b,dot:c});return{}};async function GG(x,d){let b=await x.formData();if(b)return EG(b,d);return{}}function EG(x,d){let b=Object.create(null);if(x.forEach((c,q)=>{if(!(d.all||q.endsWith("[]")))b[q]=c;else JG(b,q,c)}),d.dot)Object.entries(b).forEach(([c,q])=>{if(c.includes("."))VG(b,c,q),delete b[c]});return b}var JG=(x,d,b)=>{if(x[d]!==void 0)if(Array.isArray(x[d]))x[d].push(b);else x[d]=[x[d],b];else x[d]=b},VG=(x,d,b)=>{let c=x,q=d.split(".");q.forEach(($,Y)=>{if(Y===q.length-1)c[$]=b;else{if(!c[$]||typeof c[$]!=="object"||Array.isArray(c[$])||c[$]instanceof File)c[$]=Object.create(null);c=c[$]}})};var e3=(x)=>{let d=x.split("/");if(d[0]==="")d.shift();return d},K1=(x)=>{let{groups:d,path:b}=NG(x),c=e3(b);return UG(c,d)},NG=(x)=>{let d=[];return x=x.replace(/\{[^}]+\}/g,(b,c)=>{let q=`@${c}`;return d.push([q,b]),q}),{groups:d,path:x}},UG=(x,d)=>{for(let b=d.length-1;b>=0;b--){let[c]=d[b];for(let q=x.length-1;q>=0;q--)if(x[q].includes(c)){x[q]=x[q].replace(c,d[b][1]);break}}return x},U5={},M3=(x,d)=>{if(x==="*")return"*";let b=x.match(/^\:([^\{\}]+)(?:\{(.+)\})?$/);if(b){let c=`${x}#${d}`;if(!U5[c])if(b[2])U5[c]=d&&d[0]!==":"&&d[0]!=="*"?[c,b[1],new RegExp(`^${b[2]}(?=/${d})`)]:[x,b[1],new RegExp(`^${b[2]}$`)];else U5[c]=[x,b[1],!0];return U5[c]}return null},A3=(x,d)=>{try{return d(x)}catch{return x.replace(/(?:%[0-9A-Fa-f]{2})+/g,(b)=>{try{return d(b)}catch{return b}})}},KG=(x)=>A3(x,decodeURI),F3=(x)=>{let d=x.url,b=d.indexOf("/",8),c=b;for(;c<d.length;c++){let q=d.charCodeAt(c);if(q===37){let $=d.indexOf("?",c),Y=d.slice(b,$===-1?void 0:$);return KG(Y.includes("%25")?Y.replace(/%25/g,"%2525"):Y)}else if(q===63)break}return d.slice(b,c)};var R1=(x)=>{let d=F3(x);return d.length>1&&d.at(-1)==="/"?d.slice(0,-1):d},p6=(x,d,...b)=>{if(b.length)d=p6(d,...b);return`${x?.[0]==="/"?"":"/"}${x}${d==="/"?"":`${x?.at(-1)==="/"?"":"/"}${d?.[0]==="/"?d.slice(1):d}`}`},K5=(x)=>{if(x.charCodeAt(x.length-1)!==63||!x.includes(":"))return null;let d=x.split("/"),b=[],c="";return d.forEach((q)=>{if(q!==""&&!/\:/.test(q))c+="/"+q;else if(/\:/.test(q))if(/\?/.test(q)){if(b.length===0&&c==="")b.push("/");else b.push(c);let $=q.replace("?","");c+="/"+$,b.push(c)}else c+="/"+q}),b.filter((q,$,Y)=>Y.indexOf(q)===$)},D3=(x)=>{if(!/[%+]/.test(x))return x;if(x.indexOf("+")!==-1)x=x.replace(/\+/g," ");return x.indexOf("%")!==-1?K2(x):x},X1=(x,d,b)=>{let c;if(!b&&d&&!/[%+]/.test(d)){let Y=x.indexOf(`?${d}`,8);if(Y===-1)Y=x.indexOf(`&${d}`,8);while(Y!==-1){let G=x.charCodeAt(Y+d.length+1);if(G===61){let E=Y+d.length+2,J=x.indexOf("&",E);return D3(x.slice(E,J===-1?void 0:J))}else if(G==38||isNaN(G))return"";Y=x.indexOf(`&${d}`,Y+1)}if(c=/[%+]/.test(x),!c)return}let q={};c??=/[%+]/.test(x);let $=x.indexOf("?",8);while($!==-1){let Y=x.indexOf("&",$+1),G=x.indexOf("=",$);if(G>Y&&Y!==-1)G=-1;let E=x.slice($+1,G===-1?Y===-1?void 0:Y:G);if(c)E=D3(E);if($=Y,E==="")continue;let J;if(G===-1)J="";else if(J=x.slice(G+1,Y===-1?void 0:Y),c)J=D3(J);if(b){if(!(q[E]&&Array.isArray(q[E])))q[E]=[];q[E].push(J)}else q[E]??=J}return d?q[d]:q},j1=X1,O1=(x,d)=>{return X1(x,d,!0)},K2=decodeURIComponent;var H1=(x)=>A3(x,K2),N5=class{raw;#x;#f;routeIndex=0;path;bodyCache={};constructor(x,d="/",b=[[]]){this.raw=x,this.path=d,this.#f=b,this.#x={}}param(x){return x?this.#b(x):this.#q()}#b(x){let d=this.#f[0][this.routeIndex][1][x],b=this.#c(d);return b?/\%/.test(b)?H1(b):b:void 0}#q(){let x={},d=Object.keys(this.#f[0][this.routeIndex][1]);for(let b of d){let c=this.#c(this.#f[0][this.routeIndex][1][b]);if(c&&typeof c==="string")x[b]=/\%/.test(c)?H1(c):c}return x}#c(x){return this.#f[1]?this.#f[1][x]:x}query(x){return j1(this.url,x)}queries(x){return O1(this.url,x)}header(x){if(x)return this.raw.headers.get(x)??void 0;let d={};return this.raw.headers.forEach((b,c)=>{d[c]=b}),d}async parseBody(x){return this.bodyCache.parsedBody??=await U1(this,x)}#d=(x)=>{let{bodyCache:d,raw:b}=this,c=d[x];if(c)return c;let q=Object.keys(d)[0];if(q)return d[q].then(($)=>{if(q==="json")$=JSON.stringify($);return new Response($)[x]()});return d[x]=b[x]()};json(){return this.#d("json")}text(){return this.#d("text")}arrayBuffer(){return this.#d("arrayBuffer")}blob(){return this.#d("blob")}formData(){return this.#d("formData")}addValidatedData(x,d){this.#x[x]=d}valid(x){return this.#x[x]}get url(){return this.raw.url}get method(){return this.raw.method}get matchedRoutes(){return this.#f[0].map(([[,x]])=>x)}get routePath(){return this.#f[0].map(([[,x]])=>x)[this.routeIndex].path}};var W1={Stringify:1,BeforeStream:2,Stream:3},RG=(x,d)=>{let b=new String(x);return b.isEscaped=!0,b.callbacks=d,b};var z3=async(x,d,b,c,q)=>{if(typeof x==="object"&&!(x instanceof String)){if(!(x instanceof Promise))x=x.toString();if(x instanceof Promise)x=await x}let $=x.callbacks;if(!$?.length)return Promise.resolve(x);if(q)q[0]+=x;else q=[x];let Y=Promise.all($.map((G)=>G({phase:d,buffer:q,context:c}))).then((G)=>Promise.all(G.filter(Boolean).map((E)=>z3(E,d,!1,c,q))).then(()=>q[0]));if(b)return RG(await Y,$);else return Y};var XG="text/plain; charset=UTF-8",B3=(x,d={})=>{for(let b of Object.keys(d))x.set(b,d[b]);return x},L1=class{#x;#f;env={};#b;finalized=!1;error;#q=200;#c;#d;#$;#Y;#G=!0;#V;#E;#J;#N;#U;constructor(x,d){if(this.#x=x,d)this.#c=d.executionCtx,this.env=d.env,this.#J=d.notFoundHandler,this.#U=d.path,this.#N=d.matchResult}get req(){return this.#f??=new N5(this.#x,this.#U,this.#N),this.#f}get event(){if(this.#c&&"respondWith"in this.#c)return this.#c;else throw Error("This context has no FetchEvent")}get executionCtx(){if(this.#c)return this.#c;else throw Error("This context has no ExecutionContext")}get res(){return this.#G=!1,this.#Y||=new Response("404 Not Found",{status:404})}set res(x){if(this.#G=!1,this.#Y&&x)try{for(let[d,b]of this.#Y.headers.entries()){if(d==="content-type")continue;if(d==="set-cookie"){let c=this.#Y.headers.getSetCookie();x.headers.delete("set-cookie");for(let q of c)x.headers.append("set-cookie",q)}else x.headers.set(d,b)}}catch(d){if(d instanceof TypeError&&d.message.includes("immutable")){this.res=new Response(x.body,{headers:x.headers,status:x.status});return}else throw d}this.#Y=x,this.finalized=!0}render=(...x)=>{return this.#E??=(d)=>this.html(d),this.#E(...x)};setLayout=(x)=>this.#V=x;getLayout=()=>this.#V;setRenderer=(x)=>{this.#E=x};header=(x,d,b)=>{if(d===void 0){if(this.#d)this.#d.delete(x);else if(this.#$)delete this.#$[x.toLocaleLowerCase()];if(this.finalized)this.res.headers.delete(x);return}if(b?.append){if(!this.#d)this.#G=!1,this.#d=new Headers(this.#$),this.#$={};this.#d.append(x,d)}else if(this.#d)this.#d.set(x,d);else this.#$??={},this.#$[x.toLowerCase()]=d;if(this.finalized)if(b?.append)this.res.headers.append(x,d);else this.res.headers.set(x,d)};status=(x)=>{this.#G=!1,this.#q=x};set=(x,d)=>{this.#b??=new Map,this.#b.set(x,d)};get=(x)=>{return this.#b?this.#b.get(x):void 0};get var(){if(!this.#b)return{};return Object.fromEntries(this.#b)}#Q(x,d,b){if(this.#G&&!b&&!d&&this.#q===200)return new Response(x,{headers:this.#$});if(d&&typeof d!=="number"){let q=new Headers(d.headers);if(this.#d)this.#d.forEach((Y,G)=>{if(G==="set-cookie")q.append(G,Y);else q.set(G,Y)});let $=B3(q,this.#$);return new Response(x,{headers:$,status:d.status??this.#q})}let c=typeof d==="number"?d:this.#q;if(this.#$??={},this.#d??=new Headers,B3(this.#d,this.#$),this.#Y)this.#Y.headers.forEach((q,$)=>{if($==="set-cookie")this.#d?.append($,q);else this.#d?.set($,q)}),B3(this.#d,this.#$);b??={};for(let[q,$]of Object.entries(b))if(typeof $==="string")this.#d.set(q,$);else{this.#d.delete(q);for(let Y of $)this.#d.append(q,Y)}return new Response(x,{status:c,headers:this.#d})}newResponse=(...x)=>this.#Q(...x);body=(x,d,b)=>{return typeof d==="number"?this.#Q(x,d,b):this.#Q(x,d)};text=(x,d,b)=>{if(!this.#$){if(this.#G&&!b&&!d)return new Response(x);this.#$={}}if(this.#$["content-type"]=XG,typeof d==="number")return this.#Q(x,d,b);return this.#Q(x,d)};json=(x,d,b)=>{let c=JSON.stringify(x);return this.#$??={},this.#$["content-type"]="application/json",typeof d==="number"?this.#Q(c,d,b):this.#Q(c,d)};html=(x,d,b)=>{if(this.#$??={},this.#$["content-type"]="text/html; charset=UTF-8",typeof x==="object")return z3(x,W1.Stringify,!1,{}).then((c)=>{return typeof d==="number"?this.#Q(c,d,b):this.#Q(c,d)});return typeof d==="number"?this.#Q(x,d,b):this.#Q(x,d)};redirect=(x,d)=>{return this.#d??=new Headers,this.#d.set("Location",String(x)),this.newResponse(null,d??302)};notFound=()=>{return this.#J??=()=>new Response,this.#J(this)}};var k0="ALL",D1="all",e1=["get","post","put","delete","options","patch"],R5="Can not add a route since the matcher is already built.",X5=class extends Error{};var w3="__COMPOSED_HANDLER";var jG=(x)=>{return x.text("404 Not Found",404)},M1=(x,d)=>{if("getResponse"in x)return x.getResponse();return console.error(x),d.text("Internal Server Error",500)},P3=class{get;post;put;delete;options;patch;all;on;use;router;getPath;_basePath="/";#x="/";routes=[];constructor(x={}){[...e1,D1].forEach((q)=>{this[q]=($,...Y)=>{if(typeof $==="string")this.#x=$;else this.#q(q,this.#x,$);return Y.forEach((G)=>{this.#q(q,this.#x,G)}),this}}),this.on=(q,$,...Y)=>{for(let G of[$].flat()){this.#x=G;for(let E of[q].flat())Y.map((J)=>{this.#q(E.toUpperCase(),this.#x,J)})}return this},this.use=(q,...$)=>{if(typeof q==="string")this.#x=q;else this.#x="*",$.unshift(q);return $.forEach((Y)=>{this.#q(k0,this.#x,Y)}),this};let{strict:b,...c}=x;Object.assign(this,c),this.getPath=b??!0?x.getPath??F3:R1}#f(){let x=new P3({router:this.router,getPath:this.getPath});return x.routes=this.routes,x}#b=jG;errorHandler=M1;route(x,d){let b=this.basePath(x);return d.routes.map((c)=>{let q;if(d.errorHandler===M1)q=c.handler;else q=async($,Y)=>(await L3([],d.errorHandler)($,()=>c.handler($,Y))).res,q[w3]=c.handler;b.#q(c.method,c.path,q)}),this}basePath(x){let d=this.#f();return d._basePath=p6(this._basePath,x),d}onError=(x)=>{return this.errorHandler=x,this};notFound=(x)=>{return this.#b=x,this};mount(x,d,b){let c,q;if(b)if(typeof b==="function")q=b;else q=b.optionHandler,c=b.replaceRequest;let $=q?(G)=>{let E=q(G);return Array.isArray(E)?E:[E]}:(G)=>{let E=void 0;try{E=G.executionCtx}catch{}return[G.env,E]};c||=(()=>{let G=p6(this._basePath,x),E=G==="/"?0:G.length;return(J)=>{let V=new URL(J.url);return V.pathname=V.pathname.slice(E)||"/",new Request(V,J)}})();let Y=async(G,E)=>{let J=await d(c(G.req.raw),...$(G));if(J)return J;await E()};return this.#q(k0,p6(x,"*"),Y),this}#q(x,d,b){x=x.toUpperCase(),d=p6(this._basePath,d);let c={path:d,method:x,handler:b};this.router.add(x,d,[b,c]),this.routes.push(c)}#c(x,d){if(x instanceof Error)return this.errorHandler(x,d);throw x}#d(x,d,b,c){if(c==="HEAD")return(async()=>new Response(null,await this.#d(x,d,b,"GET")))();let q=this.getPath(x,{env:b}),$=this.router.match(c,q),Y=new L1(x,{path:q,matchResult:$,env:b,executionCtx:d,notFoundHandler:this.#b});if($[0].length===1){let E;try{E=$[0][0][0][0](Y,async()=>{Y.res=await this.#b(Y)})}catch(J){return this.#c(J,Y)}return E instanceof Promise?E.then((J)=>J||(Y.finalized?Y.res:this.#b(Y))).catch((J)=>this.#c(J,Y)):E??this.#b(Y)}let G=L3($[0],this.errorHandler,this.#b);return(async()=>{try{let E=await G(Y);if(!E.finalized)throw new Error("Context is not finalized. Did you forget to return a Response object or `await next()`?");return E.res}catch(E){return this.#c(E,Y)}})()}fetch=(x,...d)=>{return this.#d(x,d[1],d[0],x.method)};request=(x,d,b,c)=>{if(x instanceof Request)return this.fetch(d?new Request(x,d):x,b,c);return x=x.toString(),this.fetch(new Request(/^https?:\/\//.test(x)?x:`http://localhost${p6("/",x)}`,d),b,c)};fire=()=>{addEventListener("fetch",(x)=>{x.respondWith(this.#d(x.request,x,void 0,x.request.method))})}};var j5="[^/]+",R2=".*",X2="(?:|/.*)",X7=Symbol(),OG=new Set(".\\+*[^]$()");function HG(x,d){if(x.length===1)return d.length===1?x<d?-1:1:-1;if(d.length===1)return 1;if(x===R2||x===X2)return 1;else if(d===R2||d===X2)return-1;if(x===j5)return 1;else if(d===j5)return-1;return x.length===d.length?x<d?-1:1:d.length-x.length}var O5=class{#x;#f;#b=Object.create(null);insert(x,d,b,c,q){if(x.length===0){if(this.#x!==void 0)throw X7;if(q)return;this.#x=d;return}let[$,...Y]=x,G=$==="*"?Y.length===0?["","",R2]:["","",j5]:$==="/*"?["","",X2]:$.match(/^\:([^\{\}]+)(?:\{(.+)\})?$/),E;if(G){let J=G[1],V=G[2]||j5;if(J&&G[2]){if(V=V.replace(/^\((?!\?:)(?=[^)]+\)$)/,"(?:"),/\((?!\?:)/.test(V))throw X7}if(E=this.#b[V],!E){if(Object.keys(this.#b).some((N)=>N!==R2&&N!==X2))throw X7;if(q)return;if(E=this.#b[V]=new O5,J!=="")E.#f=c.varIndex++}if(!q&&J!=="")b.push([J,E.#f])}else if(E=this.#b[$],!E){if(Object.keys(this.#b).some((J)=>J.length>1&&J!==R2&&J!==X2))throw X7;if(q)return;E=this.#b[$]=new O5}E.insert(Y,d,b,c,q)}buildRegExpStr(){let d=Object.keys(this.#b).sort(HG).map((b)=>{let c=this.#b[b];return(typeof c.#f==="number"?`(${b})@${c.#f}`:OG.has(b)?`\\${b}`:b)+c.buildRegExpStr()});if(typeof this.#x==="number")d.unshift(`#${this.#x}`);if(d.length===0)return"";if(d.length===1)return d[0];return"(?:"+d.join("|")+")"}};var A1=class{#x={varIndex:0};#f=new O5;insert(x,d,b){let c=[],q=[];for(let Y=0;;){let G=!1;if(x=x.replace(/\{[^}]+\}/g,(E)=>{let J=`@\\${Y}`;return q[Y]=[J,E],Y++,G=!0,J}),!G)break}let $=x.match(/(?::[^\/]+)|(?:\/\*$)|./g)||[];for(let Y=q.length-1;Y>=0;Y--){let[G]=q[Y];for(let E=$.length-1;E>=0;E--)if($[E].indexOf(G)!==-1){$[E]=$[E].replace(G,q[Y][1]);break}}return this.#f.insert($,d,c,this.#x,b),c}buildRegExp(){let x=this.#f.buildRegExpStr();if(x==="")return[/^$/,[],[]];let d=0,b=[],c=[];return x=x.replace(/#(\d+)|@(\d+)|\.\*\$/g,(q,$,Y)=>{if($!==void 0)return b[++d]=Number($),"$()";if(Y!==void 0)return c[Number(Y)]=++d,"";return""}),[new RegExp(`^${x}`),b,c]}};var F1=[],WG=[/^$/,[],Object.create(null)],z1=Object.create(null);function B1(x){return z1[x]??=new RegExp(x==="*"?"":`^${x.replace(/\/\*$|([.\\+*[^\]$()])/g,(d,b)=>b?`\\${b}`:"(?:|/.*)")}$`)}function LG(){z1=Object.create(null)}function DG(x){let d=new A1,b=[];if(x.length===0)return WG;let c=x.map((J)=>[!/\*|\/:/.test(J[0]),...J]).sort(([J,V],[N,U])=>J?1:N?-1:V.length-U.length),q=Object.create(null);for(let J=0,V=-1,N=c.length;J<N;J++){let[U,K,X]=c[J];if(U)q[K]=[X.map(([L])=>[L,Object.create(null)]),F1];else V++;let D;try{D=d.insert(K,V,U)}catch(L){throw L===X7?new X5(K):L}if(U)continue;b[V]=X.map(([L,H])=>{let O=Object.create(null);H-=1;for(;H>=0;H--){let[j,e]=D[H];O[j]=e}return[L,O]})}let[$,Y,G]=d.buildRegExp();for(let J=0,V=b.length;J<V;J++)for(let N=0,U=b[J].length;N<U;N++){let K=b[J][N]?.[1];if(!K)continue;let X=Object.keys(K);for(let D=0,L=X.length;D<L;D++)K[X[D]]=G[K[X[D]]]}let E=[];for(let J in Y)E[J]=b[Y[J]];return[$,E,q]}function j7(x,d){if(!x)return;for(let b of Object.keys(x).sort((c,q)=>q.length-c.length))if(B1(b).test(d))return[...x[b]];return}var v3=class{name="RegExpRouter";#x;#f;constructor(){this.#x={[k0]:Object.create(null)},this.#f={[k0]:Object.create(null)}}add(x,d,b){let c=this.#x,q=this.#f;if(!c||!q)throw new Error(R5);if(!c[x])[c,q].forEach((G)=>{G[x]=Object.create(null),Object.keys(G[k0]).forEach((E)=>{G[x][E]=[...G[k0][E]]})});if(d==="/*")d="*";let $=(d.match(/\/:/g)||[]).length;if(/\*$/.test(d)){let G=B1(d);if(x===k0)Object.keys(c).forEach((E)=>{c[E][d]||=j7(c[E],d)||j7(c[k0],d)||[]});else c[x][d]||=j7(c[x],d)||j7(c[k0],d)||[];Object.keys(c).forEach((E)=>{if(x===k0||x===E)Object.keys(c[E]).forEach((J)=>{G.test(J)&&c[E][J].push([b,$])})}),Object.keys(q).forEach((E)=>{if(x===k0||x===E)Object.keys(q[E]).forEach((J)=>G.test(J)&&q[E][J].push([b,$]))});return}let Y=K5(d)||[d];for(let G=0,E=Y.length;G<E;G++){let J=Y[G];Object.keys(q).forEach((V)=>{if(x===k0||x===V)q[V][J]||=[...j7(c[V],J)||j7(c[k0],J)||[]],q[V][J].push([b,$-E+G+1])})}}match(x,d){LG();let b=this.#b();return this.match=(c,q)=>{let $=b[c]||b[k0],Y=$[2][q];if(Y)return Y;let G=q.match($[0]);if(!G)return[[],F1];let E=G.indexOf("",1);return[$[1][E],G]},this.match(x,d)}#b(){let x=Object.create(null);return Object.keys(this.#f).concat(Object.keys(this.#x)).forEach((d)=>{x[d]||=this.#q(d)}),this.#x=this.#f=void 0,x}#q(x){let d=[],b=x===k0;if([this.#x,this.#f].forEach((c)=>{let q=c[x]?Object.keys(c[x]).map(($)=>[$,c[x][$]]):[];if(q.length!==0)b||=!0,d.push(...q);else if(x!==k0)d.push(...Object.keys(c[k0]).map(($)=>[$,c[k0][$]]))}),!b)return null;else return DG(d)}};var I3=class{name="SmartRouter";#x=[];#f=[];constructor(x){this.#x=x.routers}add(x,d,b){if(!this.#f)throw new Error(R5);this.#f.push([x,d,b])}match(x,d){if(!this.#f)throw new Error("Fatal error");let b=this.#x,c=this.#f,q=b.length,$=0,Y;for(;$<q;$++){let G=b[$];try{for(let E=0,J=c.length;E<J;E++)G.add(...c[E]);Y=G.match(x,d)}catch(E){if(E instanceof X5)continue;throw E}this.match=G.match.bind(G),this.#x=[G],this.#f=void 0;break}if($===q)throw new Error("Fatal error");return this.name=`SmartRouter + ${this.activeRouter.name}`,Y}get activeRouter(){if(this.#f||this.#x.length!==1)throw new Error("No active router has been determined yet.");return this.#x[0]}};var j2=Object.create(null),S3=class{#x;#f;#b;#q=0;#c=j2;constructor(x,d,b){if(this.#f=b||Object.create(null),this.#x=[],x&&d){let c=Object.create(null);c[x]={handler:d,possibleKeys:[],score:0},this.#x=[c]}this.#b=[]}insert(x,d,b){this.#q=++this.#q;let c=this,q=K1(d),$=[];for(let E=0,J=q.length;E<J;E++){let V=q[E],N=q[E+1],U=M3(V,N),K=Array.isArray(U)?U[0]:V;if(Object.keys(c.#f).includes(K)){c=c.#f[K];let X=M3(V,N);if(X)$.push(X[1]);continue}if(c.#f[K]=new S3,U)c.#b.push(U),$.push(U[1]);c=c.#f[K]}let Y=Object.create(null),G={handler:b,possibleKeys:$.filter((E,J,V)=>V.indexOf(E)===J),score:this.#q};return Y[x]=G,c.#x.push(Y),c}#d(x,d,b,c){let q=[];for(let $=0,Y=x.#x.length;$<Y;$++){let G=x.#x[$],E=G[d]||G[k0],J={};if(E!==void 0){if(E.params=Object.create(null),q.push(E),b!==j2||c&&c!==j2)for(let V=0,N=E.possibleKeys.length;V<N;V++){let U=E.possibleKeys[V],K=J[E.score];E.params[U]=c?.[U]&&!K?c[U]:b[U]??c?.[U],J[E.score]=!0}}}return q}search(x,d){let b=[];this.#c=j2;let q=[this],$=e3(d),Y=[];for(let G=0,E=$.length;G<E;G++){let J=$[G],V=G===E-1,N=[];for(let U=0,K=q.length;U<K;U++){let X=q[U],D=X.#f[J];if(D)if(D.#c=X.#c,V){if(D.#f["*"])b.push(...this.#d(D.#f["*"],x,X.#c));b.push(...this.#d(D,x,X.#c))}else N.push(D);for(let L=0,H=X.#b.length;L<H;L++){let O=X.#b[L],j=X.#c===j2?{}:{...X.#c};if(O==="*"){let w=X.#f["*"];if(w)b.push(...this.#d(w,x,X.#c)),w.#c=j,N.push(w);continue}if(J==="")continue;let[e,M,F]=O,z=X.#f[e],B=$.slice(G).join("/");if(F instanceof RegExp){let w=F.exec(B);if(w){if(j[M]=w[0],b.push(...this.#d(z,x,X.#c,j)),Object.keys(z.#f).length){z.#c=j;let Z=w[0].match(/\//)?.length??0;(Y[Z]||=[]).push(z)}continue}}if(F===!0||F.test(J))if(j[M]=J,V){if(b.push(...this.#d(z,x,j,X.#c)),z.#f["*"])b.push(...this.#d(z.#f["*"],x,j,X.#c))}else z.#c=j,N.push(z)}}q=N.concat(Y.shift()??[])}if(b.length>1)b.sort((G,E)=>{return G.score-E.score});return[b.map(({handler:G,params:E})=>[G,E])]}};var Z3=class{name="TrieRouter";#x;constructor(){this.#x=new S3}add(x,d,b){let c=K5(d);if(c){for(let q=0,$=c.length;q<$;q++)this.#x.insert(x,c[q],b);return}this.#x.insert(x,d,b)}match(x,d){return this.#x.search(x,d)}};var T3=class extends P3{constructor(x={}){super(x);this.router=x.router??new I3({routers:[new v3,new Z3]})}};var w1=(x)=>{let b={...{origin:"*",allowMethods:["GET","HEAD","PUT","POST","DELETE","PATCH"],allowHeaders:[],exposeHeaders:[]},...x},c=((q)=>{if(typeof q==="string")if(q==="*")return()=>q;else return($)=>q===$?$:null;else if(typeof q==="function")return q;else return($)=>q.includes($)?$:null})(b.origin);return async function q($,Y){function G(J,V){$.res.headers.set(J,V)}let E=c($.req.header("origin")||"",$);if(E)G("Access-Control-Allow-Origin",E);if(b.origin!=="*"){let J=$.req.header("Vary");if(J)G("Vary",J);else G("Vary","Origin")}if(b.credentials)G("Access-Control-Allow-Credentials","true");if(b.exposeHeaders?.length)G("Access-Control-Expose-Headers",b.exposeHeaders.join(","));if($.req.method==="OPTIONS"){if(b.maxAge!=null)G("Access-Control-Max-Age",b.maxAge.toString());if(b.allowMethods?.length)G("Access-Control-Allow-Methods",b.allowMethods.join(","));let J=b.allowHeaders;if(!J?.length){let V=$.req.header("Access-Control-Request-Headers");if(V)J=V.split(/\s*,\s*/)}if(J?.length)G("Access-Control-Allow-Headers",J.join(",")),$.res.headers.append("Vary","Access-Control-Request-Headers");return $.res.headers.delete("Content-Length"),$.res.headers.delete("Content-Type"),new Response(null,{headers:$.res.headers,status:204,statusText:"No Content"})}await Y()}};var H0=class extends Error{res;status;constructor(x=500,d){super(d?.message,{cause:d?.cause});this.res=d?.res,this.status=x}getResponse(){if(this.res)return new Response(this.res.body,{status:this.status,headers:this.res.headers});return new Response(this.message,{status:this.status})}};var P1=async(x)=>{return await eG(x,{name:"SHA-256",alias:"sha256"})};var eG=async(x,d)=>{let b;if(ArrayBuffer.isView(x)||x instanceof ArrayBuffer)b=x;else{if(typeof x==="object")x=JSON.stringify(x);b=new TextEncoder().encode(String(x))}if(crypto&&crypto.subtle){let c=await crypto.subtle.digest({name:d.name},b);return Array.prototype.map.call(new Uint8Array(c),($)=>("00"+$.toString(16)).slice(-2)).join("")}return null};var C3=async(x,d,b)=>{if(!b)b=P1;let[c,q]=await Promise.all([b(x),b(d)]);if(!c||!q)return!1;return c===q&&x===d};var v1=(x,d)=>{return new Response(x,{headers:{"Content-Type":d}}).formData()};var MG="[A-Za-z0-9._~+/-]+=*",AG="Bearer",FG="Authorization",O7=(x)=>{if(!(("token"in x)||("verifyToken"in x)))throw new Error('bearer auth middleware requires options for "token"');if(!x.realm)x.realm="";if(x.prefix===void 0)x.prefix=AG;let d=x.realm?.replace(/"/g,"\\\""),b=x.prefix===""?"":`${x.prefix} +`,c=new RegExp(`^${b}(${MG}) *$`),q=x.prefix===""?"":`${x.prefix} `,$=async(Y,G,E,J)=>{let V={"WWW-Authenticate":E},N=typeof J==="function"?await J(Y):J,U=typeof N==="string"?new Response(N,{status:G,headers:V}):new Response(JSON.stringify(N),{status:G,headers:{...V,"content-type":"application/json"}});throw new H0(G,{res:U})};return async function Y(G,E){let J=G.req.header(x.headerName||FG);if(!J)await $(G,401,`${q}realm="${d}"`,x.noAuthenticationHeaderMessage||"Unauthorized");else{let V=c.exec(J);if(!V)await $(G,400,`${q}error="invalid_request"`,x.invalidAuthenticationHeaderMessage||"Bad Request");else{let N=!1;if("verifyToken"in x)N=await x.verifyToken(V[1],G);else if(typeof x.token==="string")N=await C3(x.token,V[1],x.hashFunction);else if(Array.isArray(x.token)&&x.token.length>0){for(let U of x.token)if(await C3(U,V[1],x.hashFunction)){N=!0;break}}if(!N)await $(G,401,`${q}error="invalid_token"`,x.invalidTokenMessage||"Unauthorized")}}await E()}};var zG=/^[\w!#$%&'*.^`|~+-]+$/,BG=/^[ !#-:<-[\]-~]*$/,k3=(x,d)=>{if(d&&x.indexOf(d)===-1)return{};let b=x.trim().split(";"),c={};for(let q of b){q=q.trim();let $=q.indexOf("=");if($===-1)continue;let Y=q.substring(0,$).trim();if(d&&d!==Y||!zG.test(Y))continue;let G=q.substring($+1).trim();if(G.startsWith('"')&&G.endsWith('"'))G=G.slice(1,-1);if(BG.test(G)){if(c[Y]=K2(G),d)break}}return c};var wG=(x,d,b={})=>{let c=`${x}=${d}`;if(x.startsWith("__Secure-")&&!b.secure)throw new Error("__Secure- Cookie must have Secure attributes");if(x.startsWith("__Host-")){if(!b.secure)throw new Error("__Host- Cookie must have Secure attributes");if(b.path!=="/")throw new Error('__Host- Cookie must have Path attributes with "/"');if(b.domain)throw new Error("__Host- Cookie must not have Domain attributes")}if(b&&typeof b.maxAge==="number"&&b.maxAge>=0){if(b.maxAge>34560000)throw new Error("Cookies Max-Age SHOULD NOT be greater than 400 days (34560000 seconds) in duration.");c+=`; Max-Age=${b.maxAge|0}`}if(b.domain&&b.prefix!=="host")c+=`; Domain=${b.domain}`;if(b.path)c+=`; Path=${b.path}`;if(b.expires){if(b.expires.getTime()-Date.now()>34560000000)throw new Error("Cookies Expires SHOULD NOT be greater than 400 days (34560000 seconds) in the future.");c+=`; Expires=${b.expires.toUTCString()}`}if(b.httpOnly)c+="; HttpOnly";if(b.secure)c+="; Secure";if(b.sameSite)c+=`; SameSite=${b.sameSite.charAt(0).toUpperCase()+b.sameSite.slice(1)}`;if(b.priority)c+=`; Priority=${b.priority}`;if(b.partitioned){if(!b.secure)throw new Error("Partitioned Cookie must have Secure attributes");c+="; Partitioned"}return c},H5=(x,d,b)=>{return d=encodeURIComponent(d),wG(x,d,b)};var q6=(x,d,b)=>{let c=x.req.raw.headers.get("Cookie");if(typeof d==="string"){if(!c)return;let $=d;if(b==="secure")$="__Secure-"+d;else if(b==="host")$="__Host-"+d;return k3(c,$)[$]}if(!c)return{};return k3(c)};var I1=(x,d,b,c)=>{let q;if(c?.prefix==="secure")q=H5("__Secure-"+d,b,{path:"/",...c,secure:!0});else if(c?.prefix==="host")q=H5("__Host-"+d,b,{...c,path:"/",secure:!0,domain:void 0});else q=H5(d,b,{path:"/",...c});x.header("Set-Cookie",q,{append:!0})};var g3=(x)=>{return a3(x.replace(/_|-/g,(d)=>({_:"/","-":"+"})[d]??d))},h3=(x)=>PG(x).replace(/\/|\+/g,(d)=>({"/":"_","+":"-"})[d]??d),PG=(x)=>{let d="",b=new Uint8Array(x);for(let c=0,q=b.length;c<q;c++)d+=String.fromCharCode(b[c]);return btoa(d)},a3=(x)=>{let d=atob(x),b=new Uint8Array(new ArrayBuffer(d.length)),c=d.length/2;for(let q=0,$=d.length-1;q<=c;q++,$--)b[q]=d.charCodeAt(q),b[$]=d.charCodeAt($);return b};var _3=((x)=>{return x.HS256="HS256",x.HS384="HS384",x.HS512="HS512",x.RS256="RS256",x.RS384="RS384",x.RS512="RS512",x.PS256="PS256",x.PS384="PS384",x.PS512="PS512",x.ES256="ES256",x.ES384="ES384",x.ES512="ES512",x.EdDSA="EdDSA",x})(_3||{});var vG={deno:"Deno",bun:"Bun",workerd:"Cloudflare-Workers",node:"Node.js"},S1=()=>{let x=globalThis;if(typeof navigator!=="undefined"&&typeof navigator.userAgent==="string"){for(let[b,c]of Object.entries(vG))if(IG(c))return b}if(typeof x?.EdgeRuntime==="string")return"edge-light";if(x?.fastly!==void 0)return"fastly";if(x?.process?.release?.name==="node")return"node";return"other"},IG=(x)=>{return navigator.userAgent.startsWith(x)};var Z1=class extends Error{constructor(x){super(`${x} is not an implemented algorithm`);this.name="JwtAlgorithmNotImplemented"}},O2=class extends Error{constructor(x){super(`invalid JWT token: ${x}`);this.name="JwtTokenInvalid"}},T1=class extends Error{constructor(x){super(`token (${x}) is being used before it's valid`);this.name="JwtTokenNotBefore"}},C1=class extends Error{constructor(x){super(`token (${x}) expired`);this.name="JwtTokenExpired"}},k1=class extends Error{constructor(x,d){super(`Incorrect "iat" claim must be a older than "${x}" (iat: "${d}")`);this.name="JwtTokenIssuedAt"}},m3=class extends Error{constructor(x){super(`jwt header is invalid: ${JSON.stringify(x)}`);this.name="JwtHeaderInvalid"}},g1=class extends Error{constructor(x){super(`required "kid" in jwt header: ${JSON.stringify(x)}`);this.name="JwtHeaderRequiresKid"}},h1=class extends Error{constructor(x){super(`token(${x}) signature mismatched`);this.name="JwtTokenSignatureMismatched"}},H7=((x)=>{return x.Encrypt="encrypt",x.Decrypt="decrypt",x.Sign="sign",x.Verify="verify",x.DeriveKey="deriveKey",x.DeriveBits="deriveBits",x.WrapKey="wrapKey",x.UnwrapKey="unwrapKey",x})(H7||{});var M6=new TextEncoder,a1=new TextDecoder;async function m1(x,d,b){let c=y1(d),q=await SG(x,c);return await crypto.subtle.sign(c,q,b)}async function u1(x,d,b,c){let q=y1(d),$=await ZG(x,q);return await crypto.subtle.verify(q,$,b,c)}function u3(x){return a3(x.replace(/-+(BEGIN|END).*/g,"").replace(/\s/g,""))}async function SG(x,d){if(!crypto.subtle||!crypto.subtle.importKey)throw new Error("`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.");if(p1(x)){if(x.type!=="private"&&x.type!=="secret")throw new Error(`unexpected key type: CryptoKey.type is ${x.type}, expected private or secret`);return x}let b=[H7.Sign];if(typeof x==="object")return await crypto.subtle.importKey("jwk",x,d,!1,b);if(x.includes("PRIVATE"))return await crypto.subtle.importKey("pkcs8",u3(x),d,!1,b);return await crypto.subtle.importKey("raw",M6.encode(x),d,!1,b)}async function ZG(x,d){if(!crypto.subtle||!crypto.subtle.importKey)throw new Error("`crypto.subtle.importKey` is undefined. JWT auth middleware requires it.");if(p1(x)){if(x.type==="public"||x.type==="secret")return x;x=await _1(x)}if(typeof x==="string"&&x.includes("PRIVATE")){let c=await crypto.subtle.importKey("pkcs8",u3(x),d,!0,[H7.Sign]);x=await _1(c)}let b=[H7.Verify];if(typeof x==="object")return await crypto.subtle.importKey("jwk",x,d,!1,b);if(x.includes("PUBLIC"))return await crypto.subtle.importKey("spki",u3(x),d,!1,b);return await crypto.subtle.importKey("raw",M6.encode(x),d,!1,b)}async function _1(x){if(x.type!=="private")throw new Error(`unexpected key type: ${x.type}`);if(!x.extractable)throw new Error("unexpected private key is unextractable");let d=await crypto.subtle.exportKey("jwk",x),{kty:b}=d,{alg:c,e:q,n:$}=d,{crv:Y,x:G,y:E}=d;return{kty:b,alg:c,e:q,n:$,crv:Y,x:G,y:E,key_ops:[H7.Verify]}}function y1(x){switch(x){case"HS256":return{name:"HMAC",hash:{name:"SHA-256"}};case"HS384":return{name:"HMAC",hash:{name:"SHA-384"}};case"HS512":return{name:"HMAC",hash:{name:"SHA-512"}};case"RS256":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-256"}};case"RS384":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-384"}};case"RS512":return{name:"RSASSA-PKCS1-v1_5",hash:{name:"SHA-512"}};case"PS256":return{name:"RSA-PSS",hash:{name:"SHA-256"},saltLength:32};case"PS384":return{name:"RSA-PSS",hash:{name:"SHA-384"},saltLength:48};case"PS512":return{name:"RSA-PSS",hash:{name:"SHA-512"},saltLength:64};case"ES256":return{name:"ECDSA",hash:{name:"SHA-256"},namedCurve:"P-256"};case"ES384":return{name:"ECDSA",hash:{name:"SHA-384"},namedCurve:"P-384"};case"ES512":return{name:"ECDSA",hash:{name:"SHA-512"},namedCurve:"P-521"};case"EdDSA":return{name:"Ed25519",namedCurve:"Ed25519"};default:throw new Z1(x)}}function p1(x){if(S1()==="node"&&!!crypto.webcrypto)return x instanceof crypto.webcrypto.CryptoKey;return x instanceof CryptoKey}var y3=(x)=>h3(M6.encode(JSON.stringify(x)).buffer).replace(/=/g,""),TG=(x)=>h3(x).replace(/=/g,""),p3=(x)=>JSON.parse(a1.decode(g3(x)));function l1(x){if(typeof x==="object"&&x!==null){let d=x;return"alg"in d&&Object.values(_3).includes(d.alg)&&(!("typ"in d)||d.typ==="JWT")}return!1}var n1=async(x,d,b="HS256")=>{let c=y3(x),q;if(typeof d==="object"&&"alg"in d)b=d.alg,q=y3({alg:b,typ:"JWT",kid:d.kid});else q=y3({alg:b,typ:"JWT"});let $=`${q}.${c}`,Y=await m1(d,b,M6.encode($)),G=TG(Y);return`${$}.${G}`},l3=async(x,d,b="HS256")=>{let c=x.split(".");if(c.length!==3)throw new O2(x);let{header:q,payload:$}=n3(x);if(!l1(q))throw new m3(q);let Y=Date.now()/1000|0;if($.nbf&&$.nbf>Y)throw new T1(x);if($.exp&&$.exp<=Y)throw new C1(x);if($.iat&&Y<$.iat)throw new k1(Y,$.iat);let G=x.substring(0,x.lastIndexOf("."));if(!await u1(d,b,g3(c[2]),M6.encode(G)))throw new h1(x);return $},i1=async(x,d,b)=>{let c=CG(x);if(!l1(c))throw new m3(c);if(!c.kid)throw new g1(c);let q=typeof d.keys==="function"?await d.keys():d.keys;if(d.jwks_uri){let Y=await fetch(d.jwks_uri,b);if(!Y.ok)throw new Error(`failed to fetch JWKS from ${d.jwks_uri}`);let G=await Y.json();if(!G.keys)throw new Error('invalid JWKS response. "keys" field is missing');if(!Array.isArray(G.keys))throw new Error('invalid JWKS response. "keys" field is not an array');if(q)q.push(...G.keys);else q=G.keys}else if(!q)throw new Error('verifyFromJwks requires options for either "keys" or "jwks_uri" or both');let $=q.find((Y)=>Y.kid===c.kid);if(!$)throw new O2(x);return await l3(x,$,$.alg)},n3=(x)=>{try{let[d,b]=x.split("."),c=p3(d),q=p3(b);return{header:c,payload:q}}catch{throw new O2(x)}},CG=(x)=>{try{let[d]=x.split(".");return p3(d)}catch{throw new O2(x)}};var W5={sign:n1,verify:l3,decode:n3,verifyFromJwks:i1};var l6=W5.verify,n6=W5.decode,H2=W5.sign;var r1=O7({verifyToken:async(x)=>{let d=process.env.JWT_ACCESS_SECRET;if(!d)throw new H0(401,{message:"Process env failed"});let b=await l6(x,d).catch((c)=>({err:!0,msg:c?.name}));if(b?.err)throw new H0(401,{message:JSON.stringify(b?.msg)});if(!b)throw new H0(401,{message:"Token verification failed"});return!0}});import{stat as mG}from"node:fs/promises";var s1=/^\s*(?:text\/(?!event-stream(?:[;\s]|$))[^;\s]+|application\/(?:javascript|json|xml|xml-dtd|ecmascript|dart|postscript|rtf|tar|toml|vnd\.dart|vnd\.ms-fontobject|vnd\.ms-opentype|wasm|x-httpd-php|x-javascript|x-ns-proxy-autoconfig|x-sh|x-tar|x-virtualbox-hdd|x-virtualbox-ova|x-virtualbox-ovf|x-virtualbox-vbox|x-virtualbox-vdi|x-virtualbox-vhd|x-virtualbox-vmdk|x-www-form-urlencoded)|font\/(?:otf|ttf)|image\/(?:bmp|vnd\.adobe\.photoshop|vnd\.microsoft\.icon|vnd\.ms-dds|x-icon|x-ms-bmp)|message\/rfc822|model\/gltf-binary|x-shader\/x-fragment|x-shader\/x-vertex|[^;\s]+?\+(?:json|text|xml|yaml))(?:[;\s]|$)/i;var o1=(x)=>{let d=x.filename,b=x.defaultDocument||"index.html";if(d.endsWith("/"))d=d.concat(b);else if(!d.match(/\.[a-zA-Z0-9_-]+$/))d=d.concat("/"+b);return L5({root:x.root,filename:d})},L5=(x)=>{let d=x.root||"",b=x.filename;if(/(?:^|[\/\\])\.\.(?:$|[\/\\])/.test(b))return;b=b.replace(/^\.?[\/\\]/,""),b=b.replace(/\\/,"/"),d=d.replace(/\/$/,"");let c=d?d+"/"+b:b;if(c=c.replace(/^\.?\//,""),d[0]!=="/"&&c[0]==="/")return;return c};var i3=(x,d=gG)=>{let b=/\.([a-zA-Z0-9]+?)$/,c=x.match(b);if(!c)return;let q=d[c[1]];if(q&&q.startsWith("text"))q+="; charset=utf-8";return q};var kG={aac:"audio/aac",avi:"video/x-msvideo",avif:"image/avif",av1:"video/av1",bin:"application/octet-stream",bmp:"image/bmp",css:"text/css",csv:"text/csv",eot:"application/vnd.ms-fontobject",epub:"application/epub+zip",gif:"image/gif",gz:"application/gzip",htm:"text/html",html:"text/html",ico:"image/x-icon",ics:"text/calendar",jpeg:"image/jpeg",jpg:"image/jpeg",js:"text/javascript",json:"application/json",jsonld:"application/ld+json",map:"application/json",mid:"audio/x-midi",midi:"audio/x-midi",mjs:"text/javascript",mp3:"audio/mpeg",mp4:"video/mp4",mpeg:"video/mpeg",oga:"audio/ogg",ogv:"video/ogg",ogx:"application/ogg",opus:"audio/opus",otf:"font/otf",pdf:"application/pdf",png:"image/png",rtf:"application/rtf",svg:"image/svg+xml",tif:"image/tiff",tiff:"image/tiff",ts:"video/mp2t",ttf:"font/ttf",txt:"text/plain",wasm:"application/wasm",webm:"video/webm",weba:"audio/webm",webp:"image/webp",woff:"font/woff",woff2:"font/woff2",xhtml:"application/xhtml+xml",xml:"application/xml",zip:"application/zip","3gp":"video/3gpp","3g2":"video/3gpp2",gltf:"model/gltf+json",glb:"model/gltf-binary"},gG=kG;var t1={br:".br",zstd:".zst",gzip:".gz"},hG=Object.keys(t1),aG="index.html",_G=(x)=>x,xf=(x)=>{let d=!1,b;if(x.root)if(x.root.startsWith("/"))d=!0,b=new URL(`file://${x.root}`).pathname;else b=x.root;return async(c,q)=>{if(c.finalized){await q();return}let $=x.path??decodeURI(c.req.path);if($=x.rewriteRequestPath?x.rewriteRequestPath($):$,!$.endsWith("/")&&x.isDir){let V=L5({filename:$,root:b});if(V&&await x.isDir(V))$+="/"}let Y=o1({filename:$,root:b,defaultDocument:aG});if(!Y)return await q();if(d)Y="/"+Y;let G=x.getContent,E=x.pathResolve??_G;Y=E(Y);let J=await G(Y,c);if(!J){let V=L5({filename:$,root:b});if(!V)return await q();if(V=E(V),V!==Y){if(J=await G(V,c),J)Y=V}}if(J instanceof Response)return c.newResponse(J.body,J);if(J){let V=x.mimes&&i3(Y,x.mimes)||i3(Y);if(c.header("Content-Type",V||"application/octet-stream"),x.precompressed&&(!V||s1.test(V))){let N=new Set(c.req.header("Accept-Encoding")?.split(",").map((U)=>U.trim()));for(let U of hG){if(!N.has(U))continue;let K=await G(Y+t1[U],c);if(K){J=K,c.header("Content-Encoding",U),c.header("Vary","Accept-Encoding",{append:!0});break}}}return await x.onFound?.(Y,c),c.body(J)}await x.onNotFound?.(Y,c),await q();return}};var D5=(x)=>{return async function d(b,c){return xf({...x,getContent:async(G)=>{G=G.startsWith("/")?G:`./${G}`;let E=Bun.file(G);return await E.exists()?E:null},pathResolve:(G)=>{return G.startsWith("/")?G:`./${G}`},isDir:async(G)=>{let E;try{E=(await mG(G)).isDirectory()}catch{}return E}})(b,c)}};var r3="x-hono-disable-ssg",te=(()=>{try{return new Response("SSG is disabled",{status:404,headers:{[r3]:"true"}})}catch{return null}})();var{write:wM}=Bun;var uG=class{#x;constructor(x){this.#x=x,this.raw=x.raw,this.url=x.url?new URL(x.url):null,this.protocol=x.protocol??null}send(x,d){this.#x.send(x,d??{})}raw;binaryType="arraybuffer";get readyState(){return this.#x.readyState}url;protocol;close(x,d){this.#x.close(x,d)}};var W7=new T3;W7.get("public/*",D5({}));W7.get("private/*",r1,D5({}));W7.use("*",w1({origin:"http://localhost:3001",credentials:!0}));global.app=W7;var L7=(x,d)=>{return d.forEach((b)=>delete x[b]),x};var i6=(x)=>{let d={"<":"&lt;",">":"&gt;","&":"&amp;","'":"&#39;",'"':"&quot;","/":"&#47;"};return x.replace(/[<>&'"\/]/g,(b)=>d[b])},r6=(x,d,b,c)=>{I1(x,d,b,{httpOnly:!0,sameSite:"lax",...c})};var e5=(x)=>{return typeof x==="string"||typeof x==="number"};var M5=(x)=>{if(!x||typeof x!=="string")return"";let d={"-":"+",_:"/",".":"="};return atob(x.replace(/[\-_\.]/g,(b)=>d[b]||b))},D7=(x)=>{try{return JSON.parse(x)}catch(d){return null}};var{password:bJ,sql:Kf}=globalThis.Bun;var Zx={access:(x)=>{let d=process.env.JWT_ACCESS_SECRET,b=+(process.env.JWT_ACCESS_TOKEN_LIFE_TIME_S||0);if(!d||!b)throw new Error("getAccess env failed");let c=Math.round(Date.now()/1000)+b;return H2({id:x,exp:c},d)},refresh:(x)=>{let d=process.env.JWT_REFRESH_SECRET,b=+(process.env.JWT_REFRESH_TOKEN_LIFE_TIME_S||0);if(!d||!b)throw new Error("getAccess env failed");let c=Math.round(Date.now()/1000)+b;return H2({id:x,exp:c},d)},verifyEmail:(x)=>{let d=process.env.JWT_VERIFY_EMAIL_SECRET,b=+(process.env.JWT_VERIFY_EMAIL_TOKEN_LIFE_TIME_S||0);if(!d||!b)throw new Error("getAccess env failed");let c=Math.round(Date.now()/1000)+b;return H2({id:x,exp:c},d)}};var pG=/^application\/([a-z-\.]+\+)?json(;\s*[a-zA-Z0-9\-]+\=([^;]+))*$/,lG=/^multipart\/form-data(;\s?boundary=[a-zA-Z0-9'"()+_,\-./:=?]+)?$/,nG=/^application\/x-www-form-urlencoded(;\s*[a-zA-Z0-9\-]+\=([^;]+))*$/,s3=(x,d)=>{return async(b,c)=>{let q={},$=b.req.header("Content-Type");switch(x){case"json":if(!$||!pG.test($))break;try{q=await b.req.json()}catch{throw new H0(400,{message:"Malformed JSON in request body"})}break;case"form":{if(!$||!(lG.test($)||nG.test($)))break;let G;if(b.req.bodyCache.formData)G=await b.req.bodyCache.formData;else try{let J=await b.req.arrayBuffer();G=await v1(J,$),b.req.bodyCache.formData=G}catch(J){let V="Malformed FormData request.";throw V+=J instanceof Error?` ${J.message}`:` ${String(J)}`,new H0(400,{message:V})}let E={};G.forEach((J,V)=>{if(V.endsWith("[]"))(E[V]??=[]).push(J);else if(Array.isArray(E[V]))E[V].push(J);else if(V in E)E[V]=[E[V],J];else E[V]=J}),q=E;break}case"query":q=Object.fromEntries(Object.entries(b.req.queries()).map(([G,E])=>{return E.length===1?[G,E[0]]:[G,E]}));break;case"param":q=b.req.param();break;case"header":q=b.req.header();break;case"cookie":q=q6(b);break}let Y=await d(q,b);if(Y instanceof Response)return Y;b.req.addValidatedData(x,Y),await c()}};var M0;(function(x){x.assertEqual=(q)=>q;function d(q){}x.assertIs=d;function b(q){throw new Error}x.assertNever=b,x.arrayToEnum=(q)=>{let $={};for(let Y of q)$[Y]=Y;return $},x.getValidEnumValues=(q)=>{let $=x.objectKeys(q).filter((G)=>typeof q[q[G]]!=="number"),Y={};for(let G of $)Y[G]=q[G];return x.objectValues(Y)},x.objectValues=(q)=>{return x.objectKeys(q).map(function($){return q[$]})},x.objectKeys=typeof Object.keys==="function"?(q)=>Object.keys(q):(q)=>{let $=[];for(let Y in q)if(Object.prototype.hasOwnProperty.call(q,Y))$.push(Y);return $},x.find=(q,$)=>{for(let Y of q)if($(Y))return Y;return},x.isInteger=typeof Number.isInteger==="function"?(q)=>Number.isInteger(q):(q)=>typeof q==="number"&&isFinite(q)&&Math.floor(q)===q;function c(q,$=" | "){return q.map((Y)=>typeof Y==="string"?`'${Y}'`:Y).join($)}x.joinValues=c,x.jsonStringifyReplacer=(q,$)=>{if(typeof $==="bigint")return $.toString();return $}})(M0||(M0={}));var t3;(function(x){x.mergeShapes=(d,b)=>{return{...d,...b}}})(t3||(t3={}));var r=M0.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),Q6=(x)=>{switch(typeof x){case"undefined":return r.undefined;case"string":return r.string;case"number":return isNaN(x)?r.nan:r.number;case"boolean":return r.boolean;case"function":return r.function;case"bigint":return r.bigint;case"symbol":return r.symbol;case"object":if(Array.isArray(x))return r.array;if(x===null)return r.null;if(x.then&&typeof x.then==="function"&&x.catch&&typeof x.catch==="function")return r.promise;if(typeof Map!=="undefined"&&x instanceof Map)return r.map;if(typeof Set!=="undefined"&&x instanceof Set)return r.set;if(typeof Date!=="undefined"&&x instanceof Date)return r.date;return r.object;default:return r.unknown}},_=M0.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),iG=(x)=>{return JSON.stringify(x,null,2).replace(/"([^"]+)":/g,"$1:")};class jx extends Error{get errors(){return this.issues}constructor(x){super();this.issues=[],this.addIssue=(b)=>{this.issues=[...this.issues,b]},this.addIssues=(b=[])=>{this.issues=[...this.issues,...b]};let d=new.target.prototype;if(Object.setPrototypeOf)Object.setPrototypeOf(this,d);else this.__proto__=d;this.name="ZodError",this.issues=x}format(x){let d=x||function(q){return q.message},b={_errors:[]},c=(q)=>{for(let $ of q.issues)if($.code==="invalid_union")$.unionErrors.map(c);else if($.code==="invalid_return_type")c($.returnTypeError);else if($.code==="invalid_arguments")c($.argumentsError);else if($.path.length===0)b._errors.push(d($));else{let Y=b,G=0;while(G<$.path.length){let E=$.path[G];if(G!==$.path.length-1)Y[E]=Y[E]||{_errors:[]};else Y[E]=Y[E]||{_errors:[]},Y[E]._errors.push(d($));Y=Y[E],G++}}};return c(this),b}static assert(x){if(!(x instanceof jx))throw new Error(`Not a ZodError: ${x}`)}toString(){return this.message}get message(){return JSON.stringify(this.issues,M0.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(x=(d)=>d.message){let d={},b=[];for(let c of this.issues)if(c.path.length>0)d[c.path[0]]=d[c.path[0]]||[],d[c.path[0]].push(x(c));else b.push(x(c));return{formErrors:b,fieldErrors:d}}get formErrors(){return this.flatten()}}jx.create=(x)=>{return new jx(x)};var F7=(x,d)=>{let b;switch(x.code){case _.invalid_type:if(x.received===r.undefined)b="Required";else b=`Expected ${x.expected}, received ${x.received}`;break;case _.invalid_literal:b=`Invalid literal value, expected ${JSON.stringify(x.expected,M0.jsonStringifyReplacer)}`;break;case _.unrecognized_keys:b=`Unrecognized key(s) in object: ${M0.joinValues(x.keys,", ")}`;break;case _.invalid_union:b="Invalid input";break;case _.invalid_union_discriminator:b=`Invalid discriminator value. Expected ${M0.joinValues(x.options)}`;break;case _.invalid_enum_value:b=`Invalid enum value. Expected ${M0.joinValues(x.options)}, received '${x.received}'`;break;case _.invalid_arguments:b="Invalid function arguments";break;case _.invalid_return_type:b="Invalid function return type";break;case _.invalid_date:b="Invalid date";break;case _.invalid_string:if(typeof x.validation==="object")if("includes"in x.validation){if(b=`Invalid input: must include "${x.validation.includes}"`,typeof x.validation.position==="number")b=`${b} at one or more positions greater than or equal to ${x.validation.position}`}else if("startsWith"in x.validation)b=`Invalid input: must start with "${x.validation.startsWith}"`;else if("endsWith"in x.validation)b=`Invalid input: must end with "${x.validation.endsWith}"`;else M0.assertNever(x.validation);else if(x.validation!=="regex")b=`Invalid ${x.validation}`;else b="Invalid";break;case _.too_small:if(x.type==="array")b=`Array must contain ${x.exact?"exactly":x.inclusive?"at least":"more than"} ${x.minimum} element(s)`;else if(x.type==="string")b=`String must contain ${x.exact?"exactly":x.inclusive?"at least":"over"} ${x.minimum} character(s)`;else if(x.type==="number")b=`Number must be ${x.exact?"exactly equal to ":x.inclusive?"greater than or equal to ":"greater than "}${x.minimum}`;else if(x.type==="date")b=`Date must be ${x.exact?"exactly equal to ":x.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(x.minimum))}`;else b="Invalid input";break;case _.too_big:if(x.type==="array")b=`Array must contain ${x.exact?"exactly":x.inclusive?"at most":"less than"} ${x.maximum} element(s)`;else if(x.type==="string")b=`String must contain ${x.exact?"exactly":x.inclusive?"at most":"under"} ${x.maximum} character(s)`;else if(x.type==="number")b=`Number must be ${x.exact?"exactly":x.inclusive?"less than or equal to":"less than"} ${x.maximum}`;else if(x.type==="bigint")b=`BigInt must be ${x.exact?"exactly":x.inclusive?"less than or equal to":"less than"} ${x.maximum}`;else if(x.type==="date")b=`Date must be ${x.exact?"exactly":x.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(x.maximum))}`;else b="Invalid input";break;case _.custom:b="Invalid input";break;case _.invalid_intersection_types:b="Intersection results could not be merged";break;case _.not_multiple_of:b=`Number must be a multiple of ${x.multipleOf}`;break;case _.not_finite:b="Number must be finite";break;default:b=d.defaultError,M0.assertNever(x)}return{message:b}},cf=F7;function rG(x){cf=x}function A5(){return cf}var F5=(x)=>{let{data:d,path:b,errorMaps:c,issueData:q}=x,$=[...b,...q.path||[]],Y={...q,path:$};if(q.message!==void 0)return{...q,path:$,message:q.message};let G="",E=c.filter((J)=>!!J).slice().reverse();for(let J of E)G=J(Y,{data:d,defaultError:G}).message;return{...q,path:$,message:G}},sG=[];function l(x,d){let b=A5(),c=F5({issueData:d,data:x.data,path:x.path,errorMaps:[x.common.contextualErrorMap,x.schemaErrorMap,b,b===F7?void 0:F7].filter((q)=>!!q)});x.common.issues.push(c)}class cx{constructor(){this.value="valid"}dirty(){if(this.value==="valid")this.value="dirty"}abort(){if(this.value!=="aborted")this.value="aborted"}static mergeArray(x,d){let b=[];for(let c of d){if(c.status==="aborted")return q0;if(c.status==="dirty")x.dirty();b.push(c.value)}return{status:x.value,value:b}}static async mergeObjectAsync(x,d){let b=[];for(let c of d){let q=await c.key,$=await c.value;b.push({key:q,value:$})}return cx.mergeObjectSync(x,b)}static mergeObjectSync(x,d){let b={};for(let c of d){let{key:q,value:$}=c;if(q.status==="aborted")return q0;if($.status==="aborted")return q0;if(q.status==="dirty")x.dirty();if($.status==="dirty")x.dirty();if(q.value!=="__proto__"&&(typeof $.value!=="undefined"||c.alwaysSet))b[q.value]=$.value}return{status:x.value,value:b}}}var q0=Object.freeze({status:"aborted"}),M7=(x)=>({status:"dirty",value:x}),Ex=(x)=>({status:"valid",value:x}),x9=(x)=>x.status==="aborted",f9=(x)=>x.status==="dirty",s6=(x)=>x.status==="valid",D2=(x)=>typeof Promise!=="undefined"&&x instanceof Promise;function z5(x,d,b,c){if(b==="a"&&!c)throw new TypeError("Private accessor was defined without a getter");if(typeof d==="function"?x!==d||!c:!d.has(x))throw new TypeError("Cannot read private member from an object whose class did not declare it");return b==="m"?c:b==="a"?c.call(x):c?c.value:d.get(x)}function qf(x,d,b,c,q){if(c==="m")throw new TypeError("Private method is not writable");if(c==="a"&&!q)throw new TypeError("Private accessor was defined without a setter");if(typeof d==="function"?x!==d||!q:!d.has(x))throw new TypeError("Cannot write private member to an object whose class did not declare it");return c==="a"?q.call(x,b):q?q.value=b:d.set(x,b),b}var o;(function(x){x.errToObj=(d)=>typeof d==="string"?{message:d}:d||{},x.toString=(d)=>typeof d==="string"?d:d===null||d===void 0?void 0:d.message})(o||(o={}));var W2,L2;class gx{constructor(x,d,b,c){this._cachedPath=[],this.parent=x,this.data=d,this._path=b,this._key=c}get path(){if(!this._cachedPath.length)if(this._key instanceof Array)this._cachedPath.push(...this._path,...this._key);else this._cachedPath.push(...this._path,this._key);return this._cachedPath}}var ff=(x,d)=>{if(s6(d))return{success:!0,data:d.value};else{if(!x.common.issues.length)throw new Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;let b=new jx(x.common.issues);return this._error=b,this._error}}}};function E0(x){if(!x)return{};let{errorMap:d,invalid_type_error:b,required_error:c,description:q}=x;if(d&&(b||c))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);if(d)return{errorMap:d,description:q};return{errorMap:(Y,G)=>{var E,J;let{message:V}=x;if(Y.code==="invalid_enum_value")return{message:V!==null&&V!==void 0?V:G.defaultError};if(typeof G.data==="undefined")return{message:(E=V!==null&&V!==void 0?V:c)!==null&&E!==void 0?E:G.defaultError};if(Y.code!=="invalid_type")return{message:G.defaultError};return{message:(J=V!==null&&V!==void 0?V:b)!==null&&J!==void 0?J:G.defaultError}},description:q}}class J0{get description(){return this._def.description}_getType(x){return Q6(x.data)}_getOrReturnCtx(x,d){return d||{common:x.parent.common,data:x.data,parsedType:Q6(x.data),schemaErrorMap:this._def.errorMap,path:x.path,parent:x.parent}}_processInputParams(x){return{status:new cx,ctx:{common:x.parent.common,data:x.data,parsedType:Q6(x.data),schemaErrorMap:this._def.errorMap,path:x.path,parent:x.parent}}}_parseSync(x){let d=this._parse(x);if(D2(d))throw new Error("Synchronous parse encountered promise.");return d}_parseAsync(x){let d=this._parse(x);return Promise.resolve(d)}parse(x,d){let b=this.safeParse(x,d);if(b.success)return b.data;throw b.error}safeParse(x,d){var b;let c={common:{issues:[],async:(b=d===null||d===void 0?void 0:d.async)!==null&&b!==void 0?b:!1,contextualErrorMap:d===null||d===void 0?void 0:d.errorMap},path:(d===null||d===void 0?void 0:d.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:x,parsedType:Q6(x)},q=this._parseSync({data:x,path:c.path,parent:c});return ff(c,q)}"~validate"(x){var d,b;let c={common:{issues:[],async:!!this["~standard"].async},path:[],schemaErrorMap:this._def.errorMap,parent:null,data:x,parsedType:Q6(x)};if(!this["~standard"].async)try{let q=this._parseSync({data:x,path:[],parent:c});return s6(q)?{value:q.value}:{issues:c.common.issues}}catch(q){if((b=(d=q===null||q===void 0?void 0:q.message)===null||d===void 0?void 0:d.toLowerCase())===null||b===void 0?void 0:b.includes("encountered"))this["~standard"].async=!0;c.common={issues:[],async:!0}}return this._parseAsync({data:x,path:[],parent:c}).then((q)=>s6(q)?{value:q.value}:{issues:c.common.issues})}async parseAsync(x,d){let b=await this.safeParseAsync(x,d);if(b.success)return b.data;throw b.error}async safeParseAsync(x,d){let b={common:{issues:[],contextualErrorMap:d===null||d===void 0?void 0:d.errorMap,async:!0},path:(d===null||d===void 0?void 0:d.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:x,parsedType:Q6(x)},c=this._parse({data:x,path:b.path,parent:b}),q=await(D2(c)?c:Promise.resolve(c));return ff(b,q)}refine(x,d){let b=(c)=>{if(typeof d==="string"||typeof d==="undefined")return{message:d};else if(typeof d==="function")return d(c);else return d};return this._refinement((c,q)=>{let $=x(c),Y=()=>q.addIssue({code:_.custom,...b(c)});if(typeof Promise!=="undefined"&&$ instanceof Promise)return $.then((G)=>{if(!G)return Y(),!1;else return!0});if(!$)return Y(),!1;else return!0})}refinement(x,d){return this._refinement((b,c)=>{if(!x(b))return c.addIssue(typeof d==="function"?d(b,c):d),!1;else return!0})}_refinement(x){return new Px({schema:this,typeName:c0.ZodEffects,effect:{type:"refinement",refinement:x}})}superRefine(x){return this._refinement(x)}constructor(x){this.spa=this.safeParseAsync,this._def=x,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.readonly=this.readonly.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this),this["~standard"]={version:1,vendor:"zod",validate:(d)=>this["~validate"](d)}}optional(){return kx.create(this,this._def)}nullable(){return Y6.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return Cx.create(this)}promise(){return f7.create(this,this._def)}or(x){return P7.create([this,x],this._def)}and(x){return v7.create(this,x,this._def)}transform(x){return new Px({...E0(this._def),schema:this,typeName:c0.ZodEffects,effect:{type:"transform",transform:x}})}default(x){let d=typeof x==="function"?x:()=>x;return new T7({...E0(this._def),innerType:this,defaultValue:d,typeName:c0.ZodDefault})}brand(){return new w5({typeName:c0.ZodBranded,type:this,...E0(this._def)})}catch(x){let d=typeof x==="function"?x:()=>x;return new C7({...E0(this._def),innerType:this,catchValue:d,typeName:c0.ZodCatch})}describe(x){return new this.constructor({...this._def,description:x})}pipe(x){return B2.create(this,x)}readonly(){return k7.create(this)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}}var oG=/^c[^\s-]{8,}$/i,tG=/^[0-9a-z]+$/,xE=/^[0-9A-HJKMNP-TV-Z]{26}$/i,fE=/^[0-9a-fA-F]{8}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{4}\b-[0-9a-fA-F]{12}$/i,dE=/^[a-z0-9_-]{21}$/i,bE=/^[A-Za-z0-9-_]+\.[A-Za-z0-9-_]+\.[A-Za-z0-9-_]*$/,cE=/^[-+]?P(?!$)(?:(?:[-+]?\d+Y)|(?:[-+]?\d+[.,]\d+Y$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:(?:[-+]?\d+W)|(?:[-+]?\d+[.,]\d+W$))?(?:(?:[-+]?\d+D)|(?:[-+]?\d+[.,]\d+D$))?(?:T(?=[\d+-])(?:(?:[-+]?\d+H)|(?:[-+]?\d+[.,]\d+H$))?(?:(?:[-+]?\d+M)|(?:[-+]?\d+[.,]\d+M$))?(?:[-+]?\d+(?:[.,]\d+)?S)?)??$/,qE=/^(?!\.)(?!.*\.\.)([A-Z0-9_'+\-\.]*)[A-Z0-9_+-]@([A-Z0-9][A-Z0-9\-]*\.)+[A-Z]{2,}$/i,$E="^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$",o3,QE=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])$/,YE=/^(?:(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\.){3}(?:25[0-5]|2[0-4][0-9]|1[0-9][0-9]|[1-9][0-9]|[0-9])\/(3[0-2]|[12]?[0-9])$/,GE=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/,EE=/^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))\/(12[0-8]|1[01][0-9]|[1-9]?[0-9])$/,JE=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/,VE=/^([0-9a-zA-Z-_]{4})*(([0-9a-zA-Z-_]{2}(==)?)|([0-9a-zA-Z-_]{3}(=)?))?$/,$f="((\\d\\d[2468][048]|\\d\\d[13579][26]|\\d\\d0[48]|[02468][048]00|[13579][26]00)-02-29|\\d{4}-((0[13578]|1[02])-(0[1-9]|[12]\\d|3[01])|(0[469]|11)-(0[1-9]|[12]\\d|30)|(02)-(0[1-9]|1\\d|2[0-8])))",NE=new RegExp(`^${$f}$`);function Qf(x){let d="([01]\\d|2[0-3]):[0-5]\\d:[0-5]\\d";if(x.precision)d=`${d}\\.\\d{${x.precision}}`;else if(x.precision==null)d=`${d}(\\.\\d+)?`;return d}function UE(x){return new RegExp(`^${Qf(x)}$`)}function Yf(x){let d=`${$f}T${Qf(x)}`,b=[];if(b.push(x.local?"Z?":"Z"),x.offset)b.push("([+-]\\d{2}:?\\d{2})");return d=`${d}(${b.join("|")})`,new RegExp(`^${d}$`)}function KE(x,d){if((d==="v4"||!d)&&QE.test(x))return!0;if((d==="v6"||!d)&&GE.test(x))return!0;return!1}function RE(x,d){if(!bE.test(x))return!1;try{let[b]=x.split("."),c=b.replace(/-/g,"+").replace(/_/g,"/").padEnd(b.length+(4-b.length%4)%4,"="),q=JSON.parse(atob(c));if(typeof q!=="object"||q===null)return!1;if(!q.typ||!q.alg)return!1;if(d&&q.alg!==d)return!1;return!0}catch(b){return!1}}function XE(x,d){if((d==="v4"||!d)&&YE.test(x))return!0;if((d==="v6"||!d)&&EE.test(x))return!0;return!1}class Tx extends J0{_parse(x){if(this._def.coerce)x.data=String(x.data);if(this._getType(x)!==r.string){let q=this._getOrReturnCtx(x);return l(q,{code:_.invalid_type,expected:r.string,received:q.parsedType}),q0}let b=new cx,c=void 0;for(let q of this._def.checks)if(q.kind==="min"){if(x.data.length<q.value)c=this._getOrReturnCtx(x,c),l(c,{code:_.too_small,minimum:q.value,type:"string",inclusive:!0,exact:!1,message:q.message}),b.dirty()}else if(q.kind==="max"){if(x.data.length>q.value)c=this._getOrReturnCtx(x,c),l(c,{code:_.too_big,maximum:q.value,type:"string",inclusive:!0,exact:!1,message:q.message}),b.dirty()}else if(q.kind==="length"){let $=x.data.length>q.value,Y=x.data.length<q.value;if($||Y){if(c=this._getOrReturnCtx(x,c),$)l(c,{code:_.too_big,maximum:q.value,type:"string",inclusive:!0,exact:!0,message:q.message});else if(Y)l(c,{code:_.too_small,minimum:q.value,type:"string",inclusive:!0,exact:!0,message:q.message});b.dirty()}}else if(q.kind==="email"){if(!qE.test(x.data))c=this._getOrReturnCtx(x,c),l(c,{validation:"email",code:_.invalid_string,message:q.message}),b.dirty()}else if(q.kind==="emoji"){if(!o3)o3=new RegExp($E,"u");if(!o3.test(x.data))c=this._getOrReturnCtx(x,c),l(c,{validation:"emoji",code:_.invalid_string,message:q.message}),b.dirty()}else if(q.kind==="uuid"){if(!fE.test(x.data))c=this._getOrReturnCtx(x,c),l(c,{validation:"uuid",code:_.invalid_string,message:q.message}),b.dirty()}else if(q.kind==="nanoid"){if(!dE.test(x.data))c=this._getOrReturnCtx(x,c),l(c,{validation:"nanoid",code:_.invalid_string,message:q.message}),b.dirty()}else if(q.kind==="cuid"){if(!oG.test(x.data))c=this._getOrReturnCtx(x,c),l(c,{validation:"cuid",code:_.invalid_string,message:q.message}),b.dirty()}else if(q.kind==="cuid2"){if(!tG.test(x.data))c=this._getOrReturnCtx(x,c),l(c,{validation:"cuid2",code:_.invalid_string,message:q.message}),b.dirty()}else if(q.kind==="ulid"){if(!xE.test(x.data))c=this._getOrReturnCtx(x,c),l(c,{validation:"ulid",code:_.invalid_string,message:q.message}),b.dirty()}else if(q.kind==="url")try{new URL(x.data)}catch($){c=this._getOrReturnCtx(x,c),l(c,{validation:"url",code:_.invalid_string,message:q.message}),b.dirty()}else if(q.kind==="regex"){if(q.regex.lastIndex=0,!q.regex.test(x.data))c=this._getOrReturnCtx(x,c),l(c,{validation:"regex",code:_.invalid_string,message:q.message}),b.dirty()}else if(q.kind==="trim")x.data=x.data.trim();else if(q.kind==="includes"){if(!x.data.includes(q.value,q.position))c=this._getOrReturnCtx(x,c),l(c,{code:_.invalid_string,validation:{includes:q.value,position:q.position},message:q.message}),b.dirty()}else if(q.kind==="toLowerCase")x.data=x.data.toLowerCase();else if(q.kind==="toUpperCase")x.data=x.data.toUpperCase();else if(q.kind==="startsWith"){if(!x.data.startsWith(q.value))c=this._getOrReturnCtx(x,c),l(c,{code:_.invalid_string,validation:{startsWith:q.value},message:q.message}),b.dirty()}else if(q.kind==="endsWith"){if(!x.data.endsWith(q.value))c=this._getOrReturnCtx(x,c),l(c,{code:_.invalid_string,validation:{endsWith:q.value},message:q.message}),b.dirty()}else if(q.kind==="datetime"){if(!Yf(q).test(x.data))c=this._getOrReturnCtx(x,c),l(c,{code:_.invalid_string,validation:"datetime",message:q.message}),b.dirty()}else if(q.kind==="date"){if(!NE.test(x.data))c=this._getOrReturnCtx(x,c),l(c,{code:_.invalid_string,validation:"date",message:q.message}),b.dirty()}else if(q.kind==="time"){if(!UE(q).test(x.data))c=this._getOrReturnCtx(x,c),l(c,{code:_.invalid_string,validation:"time",message:q.message}),b.dirty()}else if(q.kind==="duration"){if(!cE.test(x.data))c=this._getOrReturnCtx(x,c),l(c,{validation:"duration",code:_.invalid_string,message:q.message}),b.dirty()}else if(q.kind==="ip"){if(!KE(x.data,q.version))c=this._getOrReturnCtx(x,c),l(c,{validation:"ip",code:_.invalid_string,message:q.message}),b.dirty()}else if(q.kind==="jwt"){if(!RE(x.data,q.alg))c=this._getOrReturnCtx(x,c),l(c,{validation:"jwt",code:_.invalid_string,message:q.message}),b.dirty()}else if(q.kind==="cidr"){if(!XE(x.data,q.version))c=this._getOrReturnCtx(x,c),l(c,{validation:"cidr",code:_.invalid_string,message:q.message}),b.dirty()}else if(q.kind==="base64"){if(!JE.test(x.data))c=this._getOrReturnCtx(x,c),l(c,{validation:"base64",code:_.invalid_string,message:q.message}),b.dirty()}else if(q.kind==="base64url"){if(!VE.test(x.data))c=this._getOrReturnCtx(x,c),l(c,{validation:"base64url",code:_.invalid_string,message:q.message}),b.dirty()}else M0.assertNever(q);return{status:b.value,value:x.data}}_regex(x,d,b){return this.refinement((c)=>x.test(c),{validation:d,code:_.invalid_string,...o.errToObj(b)})}_addCheck(x){return new Tx({...this._def,checks:[...this._def.checks,x]})}email(x){return this._addCheck({kind:"email",...o.errToObj(x)})}url(x){return this._addCheck({kind:"url",...o.errToObj(x)})}emoji(x){return this._addCheck({kind:"emoji",...o.errToObj(x)})}uuid(x){return this._addCheck({kind:"uuid",...o.errToObj(x)})}nanoid(x){return this._addCheck({kind:"nanoid",...o.errToObj(x)})}cuid(x){return this._addCheck({kind:"cuid",...o.errToObj(x)})}cuid2(x){return this._addCheck({kind:"cuid2",...o.errToObj(x)})}ulid(x){return this._addCheck({kind:"ulid",...o.errToObj(x)})}base64(x){return this._addCheck({kind:"base64",...o.errToObj(x)})}base64url(x){return this._addCheck({kind:"base64url",...o.errToObj(x)})}jwt(x){return this._addCheck({kind:"jwt",...o.errToObj(x)})}ip(x){return this._addCheck({kind:"ip",...o.errToObj(x)})}cidr(x){return this._addCheck({kind:"cidr",...o.errToObj(x)})}datetime(x){var d,b;if(typeof x==="string")return this._addCheck({kind:"datetime",precision:null,offset:!1,local:!1,message:x});return this._addCheck({kind:"datetime",precision:typeof(x===null||x===void 0?void 0:x.precision)==="undefined"?null:x===null||x===void 0?void 0:x.precision,offset:(d=x===null||x===void 0?void 0:x.offset)!==null&&d!==void 0?d:!1,local:(b=x===null||x===void 0?void 0:x.local)!==null&&b!==void 0?b:!1,...o.errToObj(x===null||x===void 0?void 0:x.message)})}date(x){return this._addCheck({kind:"date",message:x})}time(x){if(typeof x==="string")return this._addCheck({kind:"time",precision:null,message:x});return this._addCheck({kind:"time",precision:typeof(x===null||x===void 0?void 0:x.precision)==="undefined"?null:x===null||x===void 0?void 0:x.precision,...o.errToObj(x===null||x===void 0?void 0:x.message)})}duration(x){return this._addCheck({kind:"duration",...o.errToObj(x)})}regex(x,d){return this._addCheck({kind:"regex",regex:x,...o.errToObj(d)})}includes(x,d){return this._addCheck({kind:"includes",value:x,position:d===null||d===void 0?void 0:d.position,...o.errToObj(d===null||d===void 0?void 0:d.message)})}startsWith(x,d){return this._addCheck({kind:"startsWith",value:x,...o.errToObj(d)})}endsWith(x,d){return this._addCheck({kind:"endsWith",value:x,...o.errToObj(d)})}min(x,d){return this._addCheck({kind:"min",value:x,...o.errToObj(d)})}max(x,d){return this._addCheck({kind:"max",value:x,...o.errToObj(d)})}length(x,d){return this._addCheck({kind:"length",value:x,...o.errToObj(d)})}nonempty(x){return this.min(1,o.errToObj(x))}trim(){return new Tx({...this._def,checks:[...this._def.checks,{kind:"trim"}]})}toLowerCase(){return new Tx({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]})}toUpperCase(){return new Tx({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}get isDatetime(){return!!this._def.checks.find((x)=>x.kind==="datetime")}get isDate(){return!!this._def.checks.find((x)=>x.kind==="date")}get isTime(){return!!this._def.checks.find((x)=>x.kind==="time")}get isDuration(){return!!this._def.checks.find((x)=>x.kind==="duration")}get isEmail(){return!!this._def.checks.find((x)=>x.kind==="email")}get isURL(){return!!this._def.checks.find((x)=>x.kind==="url")}get isEmoji(){return!!this._def.checks.find((x)=>x.kind==="emoji")}get isUUID(){return!!this._def.checks.find((x)=>x.kind==="uuid")}get isNANOID(){return!!this._def.checks.find((x)=>x.kind==="nanoid")}get isCUID(){return!!this._def.checks.find((x)=>x.kind==="cuid")}get isCUID2(){return!!this._def.checks.find((x)=>x.kind==="cuid2")}get isULID(){return!!this._def.checks.find((x)=>x.kind==="ulid")}get isIP(){return!!this._def.checks.find((x)=>x.kind==="ip")}get isCIDR(){return!!this._def.checks.find((x)=>x.kind==="cidr")}get isBase64(){return!!this._def.checks.find((x)=>x.kind==="base64")}get isBase64url(){return!!this._def.checks.find((x)=>x.kind==="base64url")}get minLength(){let x=null;for(let d of this._def.checks)if(d.kind==="min"){if(x===null||d.value>x)x=d.value}return x}get maxLength(){let x=null;for(let d of this._def.checks)if(d.kind==="max"){if(x===null||d.value<x)x=d.value}return x}}Tx.create=(x)=>{var d;return new Tx({checks:[],typeName:c0.ZodString,coerce:(d=x===null||x===void 0?void 0:x.coerce)!==null&&d!==void 0?d:!1,...E0(x)})};function jE(x,d){let b=(x.toString().split(".")[1]||"").length,c=(d.toString().split(".")[1]||"").length,q=b>c?b:c,$=parseInt(x.toFixed(q).replace(".","")),Y=parseInt(d.toFixed(q).replace(".",""));return $%Y/Math.pow(10,q)}class F6 extends J0{constructor(){super(...arguments);this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(x){if(this._def.coerce)x.data=Number(x.data);if(this._getType(x)!==r.number){let q=this._getOrReturnCtx(x);return l(q,{code:_.invalid_type,expected:r.number,received:q.parsedType}),q0}let b=void 0,c=new cx;for(let q of this._def.checks)if(q.kind==="int"){if(!M0.isInteger(x.data))b=this._getOrReturnCtx(x,b),l(b,{code:_.invalid_type,expected:"integer",received:"float",message:q.message}),c.dirty()}else if(q.kind==="min"){if(q.inclusive?x.data<q.value:x.data<=q.value)b=this._getOrReturnCtx(x,b),l(b,{code:_.too_small,minimum:q.value,type:"number",inclusive:q.inclusive,exact:!1,message:q.message}),c.dirty()}else if(q.kind==="max"){if(q.inclusive?x.data>q.value:x.data>=q.value)b=this._getOrReturnCtx(x,b),l(b,{code:_.too_big,maximum:q.value,type:"number",inclusive:q.inclusive,exact:!1,message:q.message}),c.dirty()}else if(q.kind==="multipleOf"){if(jE(x.data,q.value)!==0)b=this._getOrReturnCtx(x,b),l(b,{code:_.not_multiple_of,multipleOf:q.value,message:q.message}),c.dirty()}else if(q.kind==="finite"){if(!Number.isFinite(x.data))b=this._getOrReturnCtx(x,b),l(b,{code:_.not_finite,message:q.message}),c.dirty()}else M0.assertNever(q);return{status:c.value,value:x.data}}gte(x,d){return this.setLimit("min",x,!0,o.toString(d))}gt(x,d){return this.setLimit("min",x,!1,o.toString(d))}lte(x,d){return this.setLimit("max",x,!0,o.toString(d))}lt(x,d){return this.setLimit("max",x,!1,o.toString(d))}setLimit(x,d,b,c){return new F6({...this._def,checks:[...this._def.checks,{kind:x,value:d,inclusive:b,message:o.toString(c)}]})}_addCheck(x){return new F6({...this._def,checks:[...this._def.checks,x]})}int(x){return this._addCheck({kind:"int",message:o.toString(x)})}positive(x){return this._addCheck({kind:"min",value:0,inclusive:!1,message:o.toString(x)})}negative(x){return this._addCheck({kind:"max",value:0,inclusive:!1,message:o.toString(x)})}nonpositive(x){return this._addCheck({kind:"max",value:0,inclusive:!0,message:o.toString(x)})}nonnegative(x){return this._addCheck({kind:"min",value:0,inclusive:!0,message:o.toString(x)})}multipleOf(x,d){return this._addCheck({kind:"multipleOf",value:x,message:o.toString(d)})}finite(x){return this._addCheck({kind:"finite",message:o.toString(x)})}safe(x){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:o.toString(x)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:o.toString(x)})}get minValue(){let x=null;for(let d of this._def.checks)if(d.kind==="min"){if(x===null||d.value>x)x=d.value}return x}get maxValue(){let x=null;for(let d of this._def.checks)if(d.kind==="max"){if(x===null||d.value<x)x=d.value}return x}get isInt(){return!!this._def.checks.find((x)=>x.kind==="int"||x.kind==="multipleOf"&&M0.isInteger(x.value))}get isFinite(){let x=null,d=null;for(let b of this._def.checks)if(b.kind==="finite"||b.kind==="int"||b.kind==="multipleOf")return!0;else if(b.kind==="min"){if(d===null||b.value>d)d=b.value}else if(b.kind==="max"){if(x===null||b.value<x)x=b.value}return Number.isFinite(d)&&Number.isFinite(x)}}F6.create=(x)=>{return new F6({checks:[],typeName:c0.ZodNumber,coerce:(x===null||x===void 0?void 0:x.coerce)||!1,...E0(x)})};class z6 extends J0{constructor(){super(...arguments);this.min=this.gte,this.max=this.lte}_parse(x){if(this._def.coerce)try{x.data=BigInt(x.data)}catch(q){return this._getInvalidInput(x)}if(this._getType(x)!==r.bigint)return this._getInvalidInput(x);let b=void 0,c=new cx;for(let q of this._def.checks)if(q.kind==="min"){if(q.inclusive?x.data<q.value:x.data<=q.value)b=this._getOrReturnCtx(x,b),l(b,{code:_.too_small,type:"bigint",minimum:q.value,inclusive:q.inclusive,message:q.message}),c.dirty()}else if(q.kind==="max"){if(q.inclusive?x.data>q.value:x.data>=q.value)b=this._getOrReturnCtx(x,b),l(b,{code:_.too_big,type:"bigint",maximum:q.value,inclusive:q.inclusive,message:q.message}),c.dirty()}else if(q.kind==="multipleOf"){if(x.data%q.value!==BigInt(0))b=this._getOrReturnCtx(x,b),l(b,{code:_.not_multiple_of,multipleOf:q.value,message:q.message}),c.dirty()}else M0.assertNever(q);return{status:c.value,value:x.data}}_getInvalidInput(x){let d=this._getOrReturnCtx(x);return l(d,{code:_.invalid_type,expected:r.bigint,received:d.parsedType}),q0}gte(x,d){return this.setLimit("min",x,!0,o.toString(d))}gt(x,d){return this.setLimit("min",x,!1,o.toString(d))}lte(x,d){return this.setLimit("max",x,!0,o.toString(d))}lt(x,d){return this.setLimit("max",x,!1,o.toString(d))}setLimit(x,d,b,c){return new z6({...this._def,checks:[...this._def.checks,{kind:x,value:d,inclusive:b,message:o.toString(c)}]})}_addCheck(x){return new z6({...this._def,checks:[...this._def.checks,x]})}positive(x){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:o.toString(x)})}negative(x){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:o.toString(x)})}nonpositive(x){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:o.toString(x)})}nonnegative(x){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:o.toString(x)})}multipleOf(x,d){return this._addCheck({kind:"multipleOf",value:x,message:o.toString(d)})}get minValue(){let x=null;for(let d of this._def.checks)if(d.kind==="min"){if(x===null||d.value>x)x=d.value}return x}get maxValue(){let x=null;for(let d of this._def.checks)if(d.kind==="max"){if(x===null||d.value<x)x=d.value}return x}}z6.create=(x)=>{var d;return new z6({checks:[],typeName:c0.ZodBigInt,coerce:(d=x===null||x===void 0?void 0:x.coerce)!==null&&d!==void 0?d:!1,...E0(x)})};class z7 extends J0{_parse(x){if(this._def.coerce)x.data=Boolean(x.data);if(this._getType(x)!==r.boolean){let b=this._getOrReturnCtx(x);return l(b,{code:_.invalid_type,expected:r.boolean,received:b.parsedType}),q0}return Ex(x.data)}}z7.create=(x)=>{return new z7({typeName:c0.ZodBoolean,coerce:(x===null||x===void 0?void 0:x.coerce)||!1,...E0(x)})};class o6 extends J0{_parse(x){if(this._def.coerce)x.data=new Date(x.data);if(this._getType(x)!==r.date){let q=this._getOrReturnCtx(x);return l(q,{code:_.invalid_type,expected:r.date,received:q.parsedType}),q0}if(isNaN(x.data.getTime())){let q=this._getOrReturnCtx(x);return l(q,{code:_.invalid_date}),q0}let b=new cx,c=void 0;for(let q of this._def.checks)if(q.kind==="min"){if(x.data.getTime()<q.value)c=this._getOrReturnCtx(x,c),l(c,{code:_.too_small,message:q.message,inclusive:!0,exact:!1,minimum:q.value,type:"date"}),b.dirty()}else if(q.kind==="max"){if(x.data.getTime()>q.value)c=this._getOrReturnCtx(x,c),l(c,{code:_.too_big,message:q.message,inclusive:!0,exact:!1,maximum:q.value,type:"date"}),b.dirty()}else M0.assertNever(q);return{status:b.value,value:new Date(x.data.getTime())}}_addCheck(x){return new o6({...this._def,checks:[...this._def.checks,x]})}min(x,d){return this._addCheck({kind:"min",value:x.getTime(),message:o.toString(d)})}max(x,d){return this._addCheck({kind:"max",value:x.getTime(),message:o.toString(d)})}get minDate(){let x=null;for(let d of this._def.checks)if(d.kind==="min"){if(x===null||d.value>x)x=d.value}return x!=null?new Date(x):null}get maxDate(){let x=null;for(let d of this._def.checks)if(d.kind==="max"){if(x===null||d.value<x)x=d.value}return x!=null?new Date(x):null}}o6.create=(x)=>{return new o6({checks:[],coerce:(x===null||x===void 0?void 0:x.coerce)||!1,typeName:c0.ZodDate,...E0(x)})};class e2 extends J0{_parse(x){if(this._getType(x)!==r.symbol){let b=this._getOrReturnCtx(x);return l(b,{code:_.invalid_type,expected:r.symbol,received:b.parsedType}),q0}return Ex(x.data)}}e2.create=(x)=>{return new e2({typeName:c0.ZodSymbol,...E0(x)})};class B7 extends J0{_parse(x){if(this._getType(x)!==r.undefined){let b=this._getOrReturnCtx(x);return l(b,{code:_.invalid_type,expected:r.undefined,received:b.parsedType}),q0}return Ex(x.data)}}B7.create=(x)=>{return new B7({typeName:c0.ZodUndefined,...E0(x)})};class w7 extends J0{_parse(x){if(this._getType(x)!==r.null){let b=this._getOrReturnCtx(x);return l(b,{code:_.invalid_type,expected:r.null,received:b.parsedType}),q0}return Ex(x.data)}}w7.create=(x)=>{return new w7({typeName:c0.ZodNull,...E0(x)})};class t6 extends J0{constructor(){super(...arguments);this._any=!0}_parse(x){return Ex(x.data)}}t6.create=(x)=>{return new t6({typeName:c0.ZodAny,...E0(x)})};class A6 extends J0{constructor(){super(...arguments);this._unknown=!0}_parse(x){return Ex(x.data)}}A6.create=(x)=>{return new A6({typeName:c0.ZodUnknown,...E0(x)})};class lx extends J0{_parse(x){let d=this._getOrReturnCtx(x);return l(d,{code:_.invalid_type,expected:r.never,received:d.parsedType}),q0}}lx.create=(x)=>{return new lx({typeName:c0.ZodNever,...E0(x)})};class M2 extends J0{_parse(x){if(this._getType(x)!==r.undefined){let b=this._getOrReturnCtx(x);return l(b,{code:_.invalid_type,expected:r.void,received:b.parsedType}),q0}return Ex(x.data)}}M2.create=(x)=>{return new M2({typeName:c0.ZodVoid,...E0(x)})};class Cx extends J0{_parse(x){let{ctx:d,status:b}=this._processInputParams(x),c=this._def;if(d.parsedType!==r.array)return l(d,{code:_.invalid_type,expected:r.array,received:d.parsedType}),q0;if(c.exactLength!==null){let $=d.data.length>c.exactLength.value,Y=d.data.length<c.exactLength.value;if($||Y)l(d,{code:$?_.too_big:_.too_small,minimum:Y?c.exactLength.value:void 0,maximum:$?c.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:c.exactLength.message}),b.dirty()}if(c.minLength!==null){if(d.data.length<c.minLength.value)l(d,{code:_.too_small,minimum:c.minLength.value,type:"array",inclusive:!0,exact:!1,message:c.minLength.message}),b.dirty()}if(c.maxLength!==null){if(d.data.length>c.maxLength.value)l(d,{code:_.too_big,maximum:c.maxLength.value,type:"array",inclusive:!0,exact:!1,message:c.maxLength.message}),b.dirty()}if(d.common.async)return Promise.all([...d.data].map(($,Y)=>{return c.type._parseAsync(new gx(d,$,d.path,Y))})).then(($)=>{return cx.mergeArray(b,$)});let q=[...d.data].map(($,Y)=>{return c.type._parseSync(new gx(d,$,d.path,Y))});return cx.mergeArray(b,q)}get element(){return this._def.type}min(x,d){return new Cx({...this._def,minLength:{value:x,message:o.toString(d)}})}max(x,d){return new Cx({...this._def,maxLength:{value:x,message:o.toString(d)}})}length(x,d){return new Cx({...this._def,exactLength:{value:x,message:o.toString(d)}})}nonempty(x){return this.min(1,x)}}Cx.create=(x,d)=>{return new Cx({type:x,minLength:null,maxLength:null,exactLength:null,typeName:c0.ZodArray,...E0(d)})};function e7(x){if(x instanceof I0){let d={};for(let b in x.shape){let c=x.shape[b];d[b]=kx.create(e7(c))}return new I0({...x._def,shape:()=>d})}else if(x instanceof Cx)return new Cx({...x._def,type:e7(x.element)});else if(x instanceof kx)return kx.create(e7(x.unwrap()));else if(x instanceof Y6)return Y6.create(e7(x.unwrap()));else if(x instanceof nx)return nx.create(x.items.map((d)=>e7(d)));else return x}class I0 extends J0{constructor(){super(...arguments);this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(this._cached!==null)return this._cached;let x=this._def.shape(),d=M0.objectKeys(x);return this._cached={shape:x,keys:d}}_parse(x){if(this._getType(x)!==r.object){let E=this._getOrReturnCtx(x);return l(E,{code:_.invalid_type,expected:r.object,received:E.parsedType}),q0}let{status:b,ctx:c}=this._processInputParams(x),{shape:q,keys:$}=this._getCached(),Y=[];if(!(this._def.catchall instanceof lx&&this._def.unknownKeys==="strip")){for(let E in c.data)if(!$.includes(E))Y.push(E)}let G=[];for(let E of $){let J=q[E],V=c.data[E];G.push({key:{status:"valid",value:E},value:J._parse(new gx(c,V,c.path,E)),alwaysSet:E in c.data})}if(this._def.catchall instanceof lx){let E=this._def.unknownKeys;if(E==="passthrough")for(let J of Y)G.push({key:{status:"valid",value:J},value:{status:"valid",value:c.data[J]}});else if(E==="strict"){if(Y.length>0)l(c,{code:_.unrecognized_keys,keys:Y}),b.dirty()}else if(E==="strip");else throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else{let E=this._def.catchall;for(let J of Y){let V=c.data[J];G.push({key:{status:"valid",value:J},value:E._parse(new gx(c,V,c.path,J)),alwaysSet:J in c.data})}}if(c.common.async)return Promise.resolve().then(async()=>{let E=[];for(let J of G){let V=await J.key,N=await J.value;E.push({key:V,value:N,alwaysSet:J.alwaysSet})}return E}).then((E)=>{return cx.mergeObjectSync(b,E)});else return cx.mergeObjectSync(b,G)}get shape(){return this._def.shape()}strict(x){return o.errToObj,new I0({...this._def,unknownKeys:"strict",...x!==void 0?{errorMap:(d,b)=>{var c,q,$,Y;let G=($=(q=(c=this._def).errorMap)===null||q===void 0?void 0:q.call(c,d,b).message)!==null&&$!==void 0?$:b.defaultError;if(d.code==="unrecognized_keys")return{message:(Y=o.errToObj(x).message)!==null&&Y!==void 0?Y:G};return{message:G}}}:{}})}strip(){return new I0({...this._def,unknownKeys:"strip"})}passthrough(){return new I0({...this._def,unknownKeys:"passthrough"})}extend(x){return new I0({...this._def,shape:()=>({...this._def.shape(),...x})})}merge(x){return new I0({unknownKeys:x._def.unknownKeys,catchall:x._def.catchall,shape:()=>({...this._def.shape(),...x._def.shape()}),typeName:c0.ZodObject})}setKey(x,d){return this.augment({[x]:d})}catchall(x){return new I0({...this._def,catchall:x})}pick(x){let d={};return M0.objectKeys(x).forEach((b)=>{if(x[b]&&this.shape[b])d[b]=this.shape[b]}),new I0({...this._def,shape:()=>d})}omit(x){let d={};return M0.objectKeys(this.shape).forEach((b)=>{if(!x[b])d[b]=this.shape[b]}),new I0({...this._def,shape:()=>d})}deepPartial(){return e7(this)}partial(x){let d={};return M0.objectKeys(this.shape).forEach((b)=>{let c=this.shape[b];if(x&&!x[b])d[b]=c;else d[b]=c.optional()}),new I0({...this._def,shape:()=>d})}required(x){let d={};return M0.objectKeys(this.shape).forEach((b)=>{if(x&&!x[b])d[b]=this.shape[b];else{let q=this.shape[b];while(q instanceof kx)q=q._def.innerType;d[b]=q}}),new I0({...this._def,shape:()=>d})}keyof(){return Gf(M0.objectKeys(this.shape))}}I0.create=(x,d)=>{return new I0({shape:()=>x,unknownKeys:"strip",catchall:lx.create(),typeName:c0.ZodObject,...E0(d)})};I0.strictCreate=(x,d)=>{return new I0({shape:()=>x,unknownKeys:"strict",catchall:lx.create(),typeName:c0.ZodObject,...E0(d)})};I0.lazycreate=(x,d)=>{return new I0({shape:x,unknownKeys:"strip",catchall:lx.create(),typeName:c0.ZodObject,...E0(d)})};class P7 extends J0{_parse(x){let{ctx:d}=this._processInputParams(x),b=this._def.options;function c(q){for(let Y of q)if(Y.result.status==="valid")return Y.result;for(let Y of q)if(Y.result.status==="dirty")return d.common.issues.push(...Y.ctx.common.issues),Y.result;let $=q.map((Y)=>new jx(Y.ctx.common.issues));return l(d,{code:_.invalid_union,unionErrors:$}),q0}if(d.common.async)return Promise.all(b.map(async(q)=>{let $={...d,common:{...d.common,issues:[]},parent:null};return{result:await q._parseAsync({data:d.data,path:d.path,parent:$}),ctx:$}})).then(c);else{let q=void 0,$=[];for(let G of b){let E={...d,common:{...d.common,issues:[]},parent:null},J=G._parseSync({data:d.data,path:d.path,parent:E});if(J.status==="valid")return J;else if(J.status==="dirty"&&!q)q={result:J,ctx:E};if(E.common.issues.length)$.push(E.common.issues)}if(q)return d.common.issues.push(...q.ctx.common.issues),q.result;let Y=$.map((G)=>new jx(G));return l(d,{code:_.invalid_union,unionErrors:Y}),q0}}get options(){return this._def.options}}P7.create=(x,d)=>{return new P7({options:x,typeName:c0.ZodUnion,...E0(d)})};var $6=(x)=>{if(x instanceof I7)return $6(x.schema);else if(x instanceof Px)return $6(x.innerType());else if(x instanceof S7)return[x.value];else if(x instanceof B6)return x.options;else if(x instanceof Z7)return M0.objectValues(x.enum);else if(x instanceof T7)return $6(x._def.innerType);else if(x instanceof B7)return[void 0];else if(x instanceof w7)return[null];else if(x instanceof kx)return[void 0,...$6(x.unwrap())];else if(x instanceof Y6)return[null,...$6(x.unwrap())];else if(x instanceof w5)return $6(x.unwrap());else if(x instanceof k7)return $6(x.unwrap());else if(x instanceof C7)return $6(x._def.innerType);else return[]};class B5 extends J0{_parse(x){let{ctx:d}=this._processInputParams(x);if(d.parsedType!==r.object)return l(d,{code:_.invalid_type,expected:r.object,received:d.parsedType}),q0;let b=this.discriminator,c=d.data[b],q=this.optionsMap.get(c);if(!q)return l(d,{code:_.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[b]}),q0;if(d.common.async)return q._parseAsync({data:d.data,path:d.path,parent:d});else return q._parseSync({data:d.data,path:d.path,parent:d})}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(x,d,b){let c=new Map;for(let q of d){let $=$6(q.shape[x]);if(!$.length)throw new Error(`A discriminator value for key \`${x}\` could not be extracted from all schema options`);for(let Y of $){if(c.has(Y))throw new Error(`Discriminator property ${String(x)} has duplicate value ${String(Y)}`);c.set(Y,q)}}return new B5({typeName:c0.ZodDiscriminatedUnion,discriminator:x,options:d,optionsMap:c,...E0(b)})}}function d9(x,d){let b=Q6(x),c=Q6(d);if(x===d)return{valid:!0,data:x};else if(b===r.object&&c===r.object){let q=M0.objectKeys(d),$=M0.objectKeys(x).filter((G)=>q.indexOf(G)!==-1),Y={...x,...d};for(let G of $){let E=d9(x[G],d[G]);if(!E.valid)return{valid:!1};Y[G]=E.data}return{valid:!0,data:Y}}else if(b===r.array&&c===r.array){if(x.length!==d.length)return{valid:!1};let q=[];for(let $=0;$<x.length;$++){let Y=x[$],G=d[$],E=d9(Y,G);if(!E.valid)return{valid:!1};q.push(E.data)}return{valid:!0,data:q}}else if(b===r.date&&c===r.date&&+x===+d)return{valid:!0,data:x};else return{valid:!1}}class v7 extends J0{_parse(x){let{status:d,ctx:b}=this._processInputParams(x),c=(q,$)=>{if(x9(q)||x9($))return q0;let Y=d9(q.value,$.value);if(!Y.valid)return l(b,{code:_.invalid_intersection_types}),q0;if(f9(q)||f9($))d.dirty();return{status:d.value,value:Y.data}};if(b.common.async)return Promise.all([this._def.left._parseAsync({data:b.data,path:b.path,parent:b}),this._def.right._parseAsync({data:b.data,path:b.path,parent:b})]).then(([q,$])=>c(q,$));else return c(this._def.left._parseSync({data:b.data,path:b.path,parent:b}),this._def.right._parseSync({data:b.data,path:b.path,parent:b}))}}v7.create=(x,d,b)=>{return new v7({left:x,right:d,typeName:c0.ZodIntersection,...E0(b)})};class nx extends J0{_parse(x){let{status:d,ctx:b}=this._processInputParams(x);if(b.parsedType!==r.array)return l(b,{code:_.invalid_type,expected:r.array,received:b.parsedType}),q0;if(b.data.length<this._def.items.length)return l(b,{code:_.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),q0;if(!this._def.rest&&b.data.length>this._def.items.length)l(b,{code:_.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),d.dirty();let q=[...b.data].map(($,Y)=>{let G=this._def.items[Y]||this._def.rest;if(!G)return null;return G._parse(new gx(b,$,b.path,Y))}).filter(($)=>!!$);if(b.common.async)return Promise.all(q).then(($)=>{return cx.mergeArray(d,$)});else return cx.mergeArray(d,q)}get items(){return this._def.items}rest(x){return new nx({...this._def,rest:x})}}nx.create=(x,d)=>{if(!Array.isArray(x))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new nx({items:x,typeName:c0.ZodTuple,rest:null,...E0(d)})};class A2 extends J0{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(x){let{status:d,ctx:b}=this._processInputParams(x);if(b.parsedType!==r.object)return l(b,{code:_.invalid_type,expected:r.object,received:b.parsedType}),q0;let c=[],q=this._def.keyType,$=this._def.valueType;for(let Y in b.data)c.push({key:q._parse(new gx(b,Y,b.path,Y)),value:$._parse(new gx(b,b.data[Y],b.path,Y)),alwaysSet:Y in b.data});if(b.common.async)return cx.mergeObjectAsync(d,c);else return cx.mergeObjectSync(d,c)}get element(){return this._def.valueType}static create(x,d,b){if(d instanceof J0)return new A2({keyType:x,valueType:d,typeName:c0.ZodRecord,...E0(b)});return new A2({keyType:Tx.create(),valueType:x,typeName:c0.ZodRecord,...E0(d)})}}class F2 extends J0{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(x){let{status:d,ctx:b}=this._processInputParams(x);if(b.parsedType!==r.map)return l(b,{code:_.invalid_type,expected:r.map,received:b.parsedType}),q0;let c=this._def.keyType,q=this._def.valueType,$=[...b.data.entries()].map(([Y,G],E)=>{return{key:c._parse(new gx(b,Y,b.path,[E,"key"])),value:q._parse(new gx(b,G,b.path,[E,"value"]))}});if(b.common.async){let Y=new Map;return Promise.resolve().then(async()=>{for(let G of $){let E=await G.key,J=await G.value;if(E.status==="aborted"||J.status==="aborted")return q0;if(E.status==="dirty"||J.status==="dirty")d.dirty();Y.set(E.value,J.value)}return{status:d.value,value:Y}})}else{let Y=new Map;for(let G of $){let{key:E,value:J}=G;if(E.status==="aborted"||J.status==="aborted")return q0;if(E.status==="dirty"||J.status==="dirty")d.dirty();Y.set(E.value,J.value)}return{status:d.value,value:Y}}}}F2.create=(x,d,b)=>{return new F2({valueType:d,keyType:x,typeName:c0.ZodMap,...E0(b)})};class x7 extends J0{_parse(x){let{status:d,ctx:b}=this._processInputParams(x);if(b.parsedType!==r.set)return l(b,{code:_.invalid_type,expected:r.set,received:b.parsedType}),q0;let c=this._def;if(c.minSize!==null){if(b.data.size<c.minSize.value)l(b,{code:_.too_small,minimum:c.minSize.value,type:"set",inclusive:!0,exact:!1,message:c.minSize.message}),d.dirty()}if(c.maxSize!==null){if(b.data.size>c.maxSize.value)l(b,{code:_.too_big,maximum:c.maxSize.value,type:"set",inclusive:!0,exact:!1,message:c.maxSize.message}),d.dirty()}let q=this._def.valueType;function $(G){let E=new Set;for(let J of G){if(J.status==="aborted")return q0;if(J.status==="dirty")d.dirty();E.add(J.value)}return{status:d.value,value:E}}let Y=[...b.data.values()].map((G,E)=>q._parse(new gx(b,G,b.path,E)));if(b.common.async)return Promise.all(Y).then((G)=>$(G));else return $(Y)}min(x,d){return new x7({...this._def,minSize:{value:x,message:o.toString(d)}})}max(x,d){return new x7({...this._def,maxSize:{value:x,message:o.toString(d)}})}size(x,d){return this.min(x,d).max(x,d)}nonempty(x){return this.min(1,x)}}x7.create=(x,d)=>{return new x7({valueType:x,minSize:null,maxSize:null,typeName:c0.ZodSet,...E0(d)})};class A7 extends J0{constructor(){super(...arguments);this.validate=this.implement}_parse(x){let{ctx:d}=this._processInputParams(x);if(d.parsedType!==r.function)return l(d,{code:_.invalid_type,expected:r.function,received:d.parsedType}),q0;function b(Y,G){return F5({data:Y,path:d.path,errorMaps:[d.common.contextualErrorMap,d.schemaErrorMap,A5(),F7].filter((E)=>!!E),issueData:{code:_.invalid_arguments,argumentsError:G}})}function c(Y,G){return F5({data:Y,path:d.path,errorMaps:[d.common.contextualErrorMap,d.schemaErrorMap,A5(),F7].filter((E)=>!!E),issueData:{code:_.invalid_return_type,returnTypeError:G}})}let q={errorMap:d.common.contextualErrorMap},$=d.data;if(this._def.returns instanceof f7){let Y=this;return Ex(async function(...G){let E=new jx([]),J=await Y._def.args.parseAsync(G,q).catch((U)=>{throw E.addIssue(b(G,U)),E}),V=await Reflect.apply($,this,J);return await Y._def.returns._def.type.parseAsync(V,q).catch((U)=>{throw E.addIssue(c(V,U)),E})})}else{let Y=this;return Ex(function(...G){let E=Y._def.args.safeParse(G,q);if(!E.success)throw new jx([b(G,E.error)]);let J=Reflect.apply($,this,E.data),V=Y._def.returns.safeParse(J,q);if(!V.success)throw new jx([c(J,V.error)]);return V.data})}}parameters(){return this._def.args}returnType(){return this._def.returns}args(...x){return new A7({...this._def,args:nx.create(x).rest(A6.create())})}returns(x){return new A7({...this._def,returns:x})}implement(x){return this.parse(x)}strictImplement(x){return this.parse(x)}static create(x,d,b){return new A7({args:x?x:nx.create([]).rest(A6.create()),returns:d||A6.create(),typeName:c0.ZodFunction,...E0(b)})}}class I7 extends J0{get schema(){return this._def.getter()}_parse(x){let{ctx:d}=this._processInputParams(x);return this._def.getter()._parse({data:d.data,path:d.path,parent:d})}}I7.create=(x,d)=>{return new I7({getter:x,typeName:c0.ZodLazy,...E0(d)})};class S7 extends J0{_parse(x){if(x.data!==this._def.value){let d=this._getOrReturnCtx(x);return l(d,{received:d.data,code:_.invalid_literal,expected:this._def.value}),q0}return{status:"valid",value:x.data}}get value(){return this._def.value}}S7.create=(x,d)=>{return new S7({value:x,typeName:c0.ZodLiteral,...E0(d)})};function Gf(x,d){return new B6({values:x,typeName:c0.ZodEnum,...E0(d)})}class B6 extends J0{constructor(){super(...arguments);W2.set(this,void 0)}_parse(x){if(typeof x.data!=="string"){let d=this._getOrReturnCtx(x),b=this._def.values;return l(d,{expected:M0.joinValues(b),received:d.parsedType,code:_.invalid_type}),q0}if(!z5(this,W2,"f"))qf(this,W2,new Set(this._def.values),"f");if(!z5(this,W2,"f").has(x.data)){let d=this._getOrReturnCtx(x),b=this._def.values;return l(d,{received:d.data,code:_.invalid_enum_value,options:b}),q0}return Ex(x.data)}get options(){return this._def.values}get enum(){let x={};for(let d of this._def.values)x[d]=d;return x}get Values(){let x={};for(let d of this._def.values)x[d]=d;return x}get Enum(){let x={};for(let d of this._def.values)x[d]=d;return x}extract(x,d=this._def){return B6.create(x,{...this._def,...d})}exclude(x,d=this._def){return B6.create(this.options.filter((b)=>!x.includes(b)),{...this._def,...d})}}W2=new WeakMap;B6.create=Gf;class Z7 extends J0{constructor(){super(...arguments);L2.set(this,void 0)}_parse(x){let d=M0.getValidEnumValues(this._def.values),b=this._getOrReturnCtx(x);if(b.parsedType!==r.string&&b.parsedType!==r.number){let c=M0.objectValues(d);return l(b,{expected:M0.joinValues(c),received:b.parsedType,code:_.invalid_type}),q0}if(!z5(this,L2,"f"))qf(this,L2,new Set(M0.getValidEnumValues(this._def.values)),"f");if(!z5(this,L2,"f").has(x.data)){let c=M0.objectValues(d);return l(b,{received:b.data,code:_.invalid_enum_value,options:c}),q0}return Ex(x.data)}get enum(){return this._def.values}}L2=new WeakMap;Z7.create=(x,d)=>{return new Z7({values:x,typeName:c0.ZodNativeEnum,...E0(d)})};class f7 extends J0{unwrap(){return this._def.type}_parse(x){let{ctx:d}=this._processInputParams(x);if(d.parsedType!==r.promise&&d.common.async===!1)return l(d,{code:_.invalid_type,expected:r.promise,received:d.parsedType}),q0;let b=d.parsedType===r.promise?d.data:Promise.resolve(d.data);return Ex(b.then((c)=>{return this._def.type.parseAsync(c,{path:d.path,errorMap:d.common.contextualErrorMap})}))}}f7.create=(x,d)=>{return new f7({type:x,typeName:c0.ZodPromise,...E0(d)})};class Px extends J0{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===c0.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(x){let{status:d,ctx:b}=this._processInputParams(x),c=this._def.effect||null,q={addIssue:($)=>{if(l(b,$),$.fatal)d.abort();else d.dirty()},get path(){return b.path}};if(q.addIssue=q.addIssue.bind(q),c.type==="preprocess"){let $=c.transform(b.data,q);if(b.common.async)return Promise.resolve($).then(async(Y)=>{if(d.value==="aborted")return q0;let G=await this._def.schema._parseAsync({data:Y,path:b.path,parent:b});if(G.status==="aborted")return q0;if(G.status==="dirty")return M7(G.value);if(d.value==="dirty")return M7(G.value);return G});else{if(d.value==="aborted")return q0;let Y=this._def.schema._parseSync({data:$,path:b.path,parent:b});if(Y.status==="aborted")return q0;if(Y.status==="dirty")return M7(Y.value);if(d.value==="dirty")return M7(Y.value);return Y}}if(c.type==="refinement"){let $=(Y)=>{let G=c.refinement(Y,q);if(b.common.async)return Promise.resolve(G);if(G instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return Y};if(b.common.async===!1){let Y=this._def.schema._parseSync({data:b.data,path:b.path,parent:b});if(Y.status==="aborted")return q0;if(Y.status==="dirty")d.dirty();return $(Y.value),{status:d.value,value:Y.value}}else return this._def.schema._parseAsync({data:b.data,path:b.path,parent:b}).then((Y)=>{if(Y.status==="aborted")return q0;if(Y.status==="dirty")d.dirty();return $(Y.value).then(()=>{return{status:d.value,value:Y.value}})})}if(c.type==="transform")if(b.common.async===!1){let $=this._def.schema._parseSync({data:b.data,path:b.path,parent:b});if(!s6($))return $;let Y=c.transform($.value,q);if(Y instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:d.value,value:Y}}else return this._def.schema._parseAsync({data:b.data,path:b.path,parent:b}).then(($)=>{if(!s6($))return $;return Promise.resolve(c.transform($.value,q)).then((Y)=>({status:d.value,value:Y}))});M0.assertNever(c)}}Px.create=(x,d,b)=>{return new Px({schema:x,typeName:c0.ZodEffects,effect:d,...E0(b)})};Px.createWithPreprocess=(x,d,b)=>{return new Px({schema:d,effect:{type:"preprocess",transform:x},typeName:c0.ZodEffects,...E0(b)})};class kx extends J0{_parse(x){if(this._getType(x)===r.undefined)return Ex(void 0);return this._def.innerType._parse(x)}unwrap(){return this._def.innerType}}kx.create=(x,d)=>{return new kx({innerType:x,typeName:c0.ZodOptional,...E0(d)})};class Y6 extends J0{_parse(x){if(this._getType(x)===r.null)return Ex(null);return this._def.innerType._parse(x)}unwrap(){return this._def.innerType}}Y6.create=(x,d)=>{return new Y6({innerType:x,typeName:c0.ZodNullable,...E0(d)})};class T7 extends J0{_parse(x){let{ctx:d}=this._processInputParams(x),b=d.data;if(d.parsedType===r.undefined)b=this._def.defaultValue();return this._def.innerType._parse({data:b,path:d.path,parent:d})}removeDefault(){return this._def.innerType}}T7.create=(x,d)=>{return new T7({innerType:x,typeName:c0.ZodDefault,defaultValue:typeof d.default==="function"?d.default:()=>d.default,...E0(d)})};class C7 extends J0{_parse(x){let{ctx:d}=this._processInputParams(x),b={...d,common:{...d.common,issues:[]}},c=this._def.innerType._parse({data:b.data,path:b.path,parent:{...b}});if(D2(c))return c.then((q)=>{return{status:"valid",value:q.status==="valid"?q.value:this._def.catchValue({get error(){return new jx(b.common.issues)},input:b.data})}});else return{status:"valid",value:c.status==="valid"?c.value:this._def.catchValue({get error(){return new jx(b.common.issues)},input:b.data})}}removeCatch(){return this._def.innerType}}C7.create=(x,d)=>{return new C7({innerType:x,typeName:c0.ZodCatch,catchValue:typeof d.catch==="function"?d.catch:()=>d.catch,...E0(d)})};class z2 extends J0{_parse(x){if(this._getType(x)!==r.nan){let b=this._getOrReturnCtx(x);return l(b,{code:_.invalid_type,expected:r.nan,received:b.parsedType}),q0}return{status:"valid",value:x.data}}}z2.create=(x)=>{return new z2({typeName:c0.ZodNaN,...E0(x)})};var OE=Symbol("zod_brand");class w5 extends J0{_parse(x){let{ctx:d}=this._processInputParams(x),b=d.data;return this._def.type._parse({data:b,path:d.path,parent:d})}unwrap(){return this._def.type}}class B2 extends J0{_parse(x){let{status:d,ctx:b}=this._processInputParams(x);if(b.common.async)return(async()=>{let q=await this._def.in._parseAsync({data:b.data,path:b.path,parent:b});if(q.status==="aborted")return q0;if(q.status==="dirty")return d.dirty(),M7(q.value);else return this._def.out._parseAsync({data:q.value,path:b.path,parent:b})})();else{let c=this._def.in._parseSync({data:b.data,path:b.path,parent:b});if(c.status==="aborted")return q0;if(c.status==="dirty")return d.dirty(),{status:"dirty",value:c.value};else return this._def.out._parseSync({data:c.value,path:b.path,parent:b})}}static create(x,d){return new B2({in:x,out:d,typeName:c0.ZodPipeline})}}class k7 extends J0{_parse(x){let d=this._def.innerType._parse(x),b=(c)=>{if(s6(c))c.value=Object.freeze(c.value);return c};return D2(d)?d.then((c)=>b(c)):b(d)}unwrap(){return this._def.innerType}}k7.create=(x,d)=>{return new k7({innerType:x,typeName:c0.ZodReadonly,...E0(d)})};function df(x,d){let b=typeof x==="function"?x(d):typeof x==="string"?{message:x}:x;return typeof b==="string"?{message:b}:b}function Ef(x,d={},b){if(x)return t6.create().superRefine((c,q)=>{var $,Y;let G=x(c);if(G instanceof Promise)return G.then((E)=>{var J,V;if(!E){let N=df(d,c),U=(V=(J=N.fatal)!==null&&J!==void 0?J:b)!==null&&V!==void 0?V:!0;q.addIssue({code:"custom",...N,fatal:U})}});if(!G){let E=df(d,c),J=(Y=($=E.fatal)!==null&&$!==void 0?$:b)!==null&&Y!==void 0?Y:!0;q.addIssue({code:"custom",...E,fatal:J})}return});return t6.create()}var HE={object:I0.lazycreate},c0;(function(x){x.ZodString="ZodString",x.ZodNumber="ZodNumber",x.ZodNaN="ZodNaN",x.ZodBigInt="ZodBigInt",x.ZodBoolean="ZodBoolean",x.ZodDate="ZodDate",x.ZodSymbol="ZodSymbol",x.ZodUndefined="ZodUndefined",x.ZodNull="ZodNull",x.ZodAny="ZodAny",x.ZodUnknown="ZodUnknown",x.ZodNever="ZodNever",x.ZodVoid="ZodVoid",x.ZodArray="ZodArray",x.ZodObject="ZodObject",x.ZodUnion="ZodUnion",x.ZodDiscriminatedUnion="ZodDiscriminatedUnion",x.ZodIntersection="ZodIntersection",x.ZodTuple="ZodTuple",x.ZodRecord="ZodRecord",x.ZodMap="ZodMap",x.ZodSet="ZodSet",x.ZodFunction="ZodFunction",x.ZodLazy="ZodLazy",x.ZodLiteral="ZodLiteral",x.ZodEnum="ZodEnum",x.ZodEffects="ZodEffects",x.ZodNativeEnum="ZodNativeEnum",x.ZodOptional="ZodOptional",x.ZodNullable="ZodNullable",x.ZodDefault="ZodDefault",x.ZodCatch="ZodCatch",x.ZodPromise="ZodPromise",x.ZodBranded="ZodBranded",x.ZodPipeline="ZodPipeline",x.ZodReadonly="ZodReadonly"})(c0||(c0={}));var WE=(x,d={message:`Input not instance of ${x.name}`})=>Ef((b)=>b instanceof x,d),Jf=Tx.create,Vf=F6.create,LE=z2.create,DE=z6.create,Nf=z7.create,eE=o6.create,ME=e2.create,AE=B7.create,FE=w7.create,zE=t6.create,BE=A6.create,wE=lx.create,PE=M2.create,vE=Cx.create,IE=I0.create,SE=I0.strictCreate,ZE=P7.create,TE=B5.create,CE=v7.create,kE=nx.create,gE=A2.create,hE=F2.create,aE=x7.create,_E=A7.create,mE=I7.create,uE=S7.create,yE=B6.create,pE=Z7.create,lE=f7.create,bf=Px.create,nE=kx.create,iE=Y6.create,rE=Px.createWithPreprocess,sE=B2.create,oE=()=>Jf().optional(),tE=()=>Vf().optional(),xJ=()=>Nf().optional(),fJ={string:(x)=>Tx.create({...x,coerce:!0}),number:(x)=>F6.create({...x,coerce:!0}),boolean:(x)=>z7.create({...x,coerce:!0}),bigint:(x)=>z6.create({...x,coerce:!0}),date:(x)=>o6.create({...x,coerce:!0})},dJ=q0,V0=Object.freeze({__proto__:null,defaultErrorMap:F7,setErrorMap:rG,getErrorMap:A5,makeIssue:F5,EMPTY_PATH:sG,addIssueToContext:l,ParseStatus:cx,INVALID:q0,DIRTY:M7,OK:Ex,isAborted:x9,isDirty:f9,isValid:s6,isAsync:D2,get util(){return M0},get objectUtil(){return t3},ZodParsedType:r,getParsedType:Q6,ZodType:J0,datetimeRegex:Yf,ZodString:Tx,ZodNumber:F6,ZodBigInt:z6,ZodBoolean:z7,ZodDate:o6,ZodSymbol:e2,ZodUndefined:B7,ZodNull:w7,ZodAny:t6,ZodUnknown:A6,ZodNever:lx,ZodVoid:M2,ZodArray:Cx,ZodObject:I0,ZodUnion:P7,ZodDiscriminatedUnion:B5,ZodIntersection:v7,ZodTuple:nx,ZodRecord:A2,ZodMap:F2,ZodSet:x7,ZodFunction:A7,ZodLazy:I7,ZodLiteral:S7,ZodEnum:B6,ZodNativeEnum:Z7,ZodPromise:f7,ZodEffects:Px,ZodTransformer:Px,ZodOptional:kx,ZodNullable:Y6,ZodDefault:T7,ZodCatch:C7,ZodNaN:z2,BRAND:OE,ZodBranded:w5,ZodPipeline:B2,ZodReadonly:k7,custom:Ef,Schema:J0,ZodSchema:J0,late:HE,get ZodFirstPartyTypeKind(){return c0},coerce:fJ,any:zE,array:vE,bigint:DE,boolean:Nf,date:eE,discriminatedUnion:TE,effect:bf,enum:yE,function:_E,instanceof:WE,intersection:CE,lazy:mE,literal:uE,map:hE,nan:LE,nativeEnum:pE,never:wE,null:FE,nullable:iE,number:Vf,object:IE,oboolean:xJ,onumber:tE,optional:nE,ostring:oE,pipeline:sE,preprocess:rE,promise:lE,record:gE,set:aE,strictObject:SE,string:Jf,symbol:ME,transformer:bf,tuple:kE,undefined:AE,union:ZE,unknown:BE,void:PE,NEVER:dJ,ZodIssueCode:_,quotelessJson:iG,ZodError:jx});var Uf=(x,d,b)=>s3(x,async(c,q)=>{let $=c;if(x==="header"&&d instanceof I0){let G=Object.keys(d.shape),E=Object.fromEntries(G.map((J)=>[J.toLowerCase(),J]));$=Object.fromEntries(Object.entries(c).map(([J,V])=>[E[J]||J,V]))}let Y=await d.safeParseAsync($);if(b){let G=await b({data:$,...Y,target:x},q);if(G){if(G instanceof Response)return G;if("response"in G)return G.response}}if(!Y.success)return q.json(Y,400);return Y.data});var P5=(x)=>{return Uf(x.target,x.schema,(d)=>{if(!d.success){let b=x.message||"Zod validation failed!";throw new H0(400,{message:b})}})};var cJ=P5({target:"json",schema:V0.object({email:V0.string().email().nonempty(),password:V0.string().nonempty().max(72)})});app.post("api/auth",cJ,async(x)=>{console.log(x);let d=x.req.valid("json"),[b]=await Kf`
    SELECT * FROM "Users"
    WHERE "email" = ${d.email}
  `;if(!b)throw new H0(401,{message:"Invalid email"});if(b.password!==d.password)throw new H0(401,{message:"Invalid password"});let c=await Zx.refresh(b.id),q=await Zx.access(b.id),$=await bJ.hash(c.split(".")[2]);return await Kf`
    UPDATE "Users"
    SET "signature" = ${$}
    WHERE "email" = ${d.email}
  `,x.json({user:L7(b,["password","signature"]),accessToken:q,refreshToken:c})});var v5=O7({verifyToken:async(x)=>{let d=process.env.JWT_ACCESS_SECRET;if(!d)throw new H0(401,{message:"Process env failed"});let b=await l6(x,d).catch((c)=>({err:!0,msg:c?.name}));if(b?.err)throw new H0(401,{message:JSON.stringify(b?.msg)});if(!b)throw new H0(401,{message:"Token verification failed"});return!0}});var{sql:qJ}=globalThis.Bun;app.delete("api/auth",v5,async(x)=>{let d=x.req.header().authorization.split(" ")[1],{id:b}=n6(d).payload;return await qJ`
    UPDATE "Users"
    SET "signature" = ${""}
    WHERE "id" = ${b};
  `,x.json({success:!0})});var{password:b9,sql:Rf}=globalThis.Bun;var Xf=async(x)=>{let d=n6(x)?.payload?.id;if(!d)throw new H0(401,{message:"Id undefined"});let[b]=await Rf`SELECT * FROM "Users" WHERE "id" = ${d}`;if(!b?.signature)throw new H0(401,{message:"Token cancelled"});if(!await b9.verify(x.split(".")[2],b.signature))throw new H0(401,{message:"Token changed"});let q=await Zx.access(d),$=await Zx.refresh(d),Y=await b9.hash($.split(".")[2]);return await Rf`UPDATE "Users" SET "signature" = ${Y} WHERE "id" = ${d};`,{accessToken:q,refreshToken:$}},jf=async(x)=>{let d=process.env.JWT_REFRESH_SECRET;if(!d)throw new H0(401,{message:"Process env failed"});let b=await l6(x,d).catch((c)=>({err:!0,msg:c?.name}));if(b?.err)throw new H0(401,{message:JSON.stringify(b?.msg)});if(!b)throw new H0(401,{message:"Refresh token verification failed"});return!0};app.get("api/auth/refresh",O7({verifyToken:jf}),async(x)=>{let d=x.req.header().authorization.split(" ")[1],b=await Xf(d);return x.json(b)});app.get("api/auth/refresh/web",async(x,d)=>{let b=q6(x,"refresh_token");if(!b)throw new H0(401,{message:"Refresh cookie undefined"});await jf(b).then(()=>d())},async(x)=>{let d=q6(x,"refresh_token"),{accessToken:b,refreshToken:c}=await Xf(d),q=+(process.env.JWT_REFRESH_TOKEN_LIFE_TIME_S||0);return r6(x,"refresh_token",c,{maxAge:q}),x.json({accessToken:b})});class v0 extends Error{constructor(){super("End-Of-Stream");this.name="EndOfStreamError"}}class g7 extends Error{constructor(x="The operation was aborted"){super(x);this.name="AbortError"}}class h7{constructor(){this.endOfStream=!1,this.interrupted=!1,this.peekQueue=[]}async peek(x,d=!1){let b=await this.read(x,d);return this.peekQueue.push(x.subarray(0,b)),b}async read(x,d=!1){if(x.length===0)return 0;let b=this.readFromPeekBuffer(x);if(!this.endOfStream)b+=await this.readRemainderFromStream(x.subarray(b),d);if(b===0)throw new v0;return b}readFromPeekBuffer(x){let d=x.length,b=0;while(this.peekQueue.length>0&&d>0){let c=this.peekQueue.pop();if(!c)throw new Error("peekData should be defined");let q=Math.min(c.length,d);if(x.set(c.subarray(0,q),b),b+=q,d-=q,q<c.length)this.peekQueue.push(c.subarray(q))}return b}async readRemainderFromStream(x,d){let b=0;while(b<x.length&&!this.endOfStream){if(this.interrupted)throw new g7;let c=await this.readFromStream(x.subarray(b),d);if(c===0)break;b+=c}if(!d&&b<x.length)throw new v0;return b}}class c9 extends h7{constructor(x){super();this.reader=x}async abort(){return this.close()}async close(){this.reader.releaseLock()}}class I5 extends c9{async readFromStream(x,d){if(x.length===0)return 0;let b=await this.reader.read(new Uint8Array(x.length),{min:d?void 0:x.length});if(b.done)this.endOfStream=b.done;if(b.value)return x.set(b.value),b.value.length;return 0}}class w2 extends h7{constructor(x){super();this.reader=x,this.buffer=null}writeChunk(x,d){let b=Math.min(d.length,x.length);if(x.set(d.subarray(0,b)),b<d.length)this.buffer=d.subarray(b);else this.buffer=null;return b}async readFromStream(x,d){if(x.length===0)return 0;let b=0;if(this.buffer)b+=this.writeChunk(x,this.buffer);while(b<x.length&&!this.endOfStream){let c=await this.reader.read();if(c.done){this.endOfStream=!0;break}if(c.value)b+=this.writeChunk(x.subarray(b),c.value)}if(b===0&&this.endOfStream)throw new v0;return b}abort(){return this.interrupted=!0,this.reader.cancel()}async close(){await this.abort(),this.reader.releaseLock()}}function q9(x){try{let d=x.getReader({mode:"byob"});if(d instanceof ReadableStreamDefaultReader)return new w2(d);return new I5(d)}catch(d){if(d instanceof TypeError)return new w2(x.getReader());throw d}}class w6{constructor(x){if(this.numBuffer=new Uint8Array(8),this.position=0,this.onClose=x?.onClose,x?.abortSignal)x.abortSignal.addEventListener("abort",()=>{this.abort()})}async readToken(x,d=this.position){let b=new Uint8Array(x.len);if(await this.readBuffer(b,{position:d})<x.len)throw new v0;return x.get(b,0)}async peekToken(x,d=this.position){let b=new Uint8Array(x.len);if(await this.peekBuffer(b,{position:d})<x.len)throw new v0;return x.get(b,0)}async readNumber(x){if(await this.readBuffer(this.numBuffer,{length:x.len})<x.len)throw new v0;return x.get(this.numBuffer,0)}async peekNumber(x){if(await this.peekBuffer(this.numBuffer,{length:x.len})<x.len)throw new v0;return x.get(this.numBuffer,0)}async ignore(x){if(this.fileInfo.size!==void 0){let d=this.fileInfo.size-this.position;if(x>d)return this.position+=d,d}return this.position+=x,x}async close(){await this.abort(),await this.onClose?.()}normalizeOptions(x,d){if(!this.supportsRandomAccess()&&d&&d.position!==void 0&&d.position<this.position)throw new Error("`options.position` must be equal or greater than `tokenizer.position`");return{...{mayBeLess:!1,offset:0,length:x.length,position:this.position},...d}}abort(){return Promise.resolve()}}var QJ=256000;class $9 extends w6{constructor(x,d){super(d);this.streamReader=x,this.fileInfo=d?.fileInfo??{}}async readBuffer(x,d){let b=this.normalizeOptions(x,d),c=b.position-this.position;if(c>0)return await this.ignore(c),this.readBuffer(x,d);if(c<0)throw new Error("`options.position` must be equal or greater than `tokenizer.position`");if(b.length===0)return 0;let q=await this.streamReader.read(x.subarray(0,b.length),b.mayBeLess);if(this.position+=q,(!d||!d.mayBeLess)&&q<b.length)throw new v0;return q}async peekBuffer(x,d){let b=this.normalizeOptions(x,d),c=0;if(b.position){let q=b.position-this.position;if(q>0){let $=new Uint8Array(b.length+q);return c=await this.peekBuffer($,{mayBeLess:b.mayBeLess}),x.set($.subarray(q)),c-q}if(q<0)throw new Error("Cannot peek from a negative offset in a stream")}if(b.length>0){try{c=await this.streamReader.peek(x.subarray(0,b.length),b.mayBeLess)}catch(q){if(d?.mayBeLess&&q instanceof v0)return 0;throw q}if(!b.mayBeLess&&c<b.length)throw new v0}return c}async ignore(x){let d=Math.min(QJ,x),b=new Uint8Array(d),c=0;while(c<x){let q=x-c,$=await this.readBuffer(b,{length:Math.min(d,q)});if($<0)return $;c+=$}return c}abort(){return this.streamReader.abort()}async close(){return this.streamReader.close()}supportsRandomAccess(){return!1}}class Q9 extends w6{constructor(x,d){super(d);this.uint8Array=x,this.fileInfo={...d?.fileInfo??{},...{size:x.length}}}async readBuffer(x,d){if(d?.position)this.position=d.position;let b=await this.peekBuffer(x,d);return this.position+=b,b}async peekBuffer(x,d){let b=this.normalizeOptions(x,d),c=Math.min(this.uint8Array.length-b.position,b.length);if(!b.mayBeLess&&c<b.length)throw new v0;return x.set(this.uint8Array.subarray(b.position,b.position+c)),c}close(){return super.close()}supportsRandomAccess(){return!0}setPosition(x){this.position=x}}function Y9(x,d){let b=q9(x),c=d??{},q=c.onClose;return c.onClose=async()=>{if(await b.close(),q)return q()},new $9(b,c)}function Of(x,d){return new Q9(x,d)}import{open as GJ}from"node:fs/promises";class P2 extends w6{static async fromFile(x){let d=await GJ(x,"r"),b=await d.stat();return new P2(d,{fileInfo:{path:x,size:b.size}})}constructor(x,d){super(d);this.fileHandle=x,this.fileInfo=d.fileInfo}async readBuffer(x,d){let b=this.normalizeOptions(x,d);if(this.position=b.position,b.length===0)return 0;let c=await this.fileHandle.read(x,0,b.length,b.position);if(this.position+=c.bytesRead,c.bytesRead<b.length&&(!d||!d.mayBeLess))throw new v0;return c.bytesRead}async peekBuffer(x,d){let b=this.normalizeOptions(x,d),c=await this.fileHandle.read(x,0,b.length,b.position);if(!b.mayBeLess&&c.bytesRead<b.length)throw new v0;return c.bytesRead}async close(){return await this.fileHandle.close(),super.close()}setPosition(x){this.position=x}supportsRandomAccess(){return!0}}var EJ=P2.fromFile;/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */function Ux(x){return new DataView(x.buffer,x.byteOffset)}var Hf={len:1,get(x,d){return Ux(x).getUint8(d)},put(x,d,b){return Ux(x).setUint8(d,b),d+1}},S0={len:2,get(x,d){return Ux(x).getUint16(d,!0)},put(x,d,b){return Ux(x).setUint16(d,b,!0),d+2}},a7={len:2,get(x,d){return Ux(x).getUint16(d)},put(x,d,b){return Ux(x).setUint16(d,b),d+2}};var a0={len:4,get(x,d){return Ux(x).getUint32(d,!0)},put(x,d,b){return Ux(x).setUint32(d,b,!0),d+4}},Wf={len:4,get(x,d){return Ux(x).getUint32(d)},put(x,d,b){return Ux(x).setUint32(d,b),d+4}};var Lf={len:4,get(x,d){return Ux(x).getInt32(d)},put(x,d,b){return Ux(x).setInt32(d,b),d+4}};var Df={len:8,get(x,d){return Ux(x).getBigUint64(d,!0)},put(x,d,b){return Ux(x).setBigUint64(d,b,!0),d+8}};class Ox{constructor(x,d){this.len=x,this.encoding=d,this.textDecoder=new TextDecoder(d)}get(x,d){return this.textDecoder.decode(x.subarray(d,d+this.len))}}import{createRequire as UJ}from"node:module";var KJ=UJ("/"),RJ;try{RJ=KJ("worker_threads").Worker}catch(x){}var Wx=Uint8Array,_7=Uint16Array,XJ=Int32Array,ef=new Wx([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0,0,0,0]),Mf=new Wx([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13,0,0]),jJ=new Wx([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Af=function(x,d){var b=new _7(31);for(var c=0;c<31;++c)b[c]=d+=1<<x[c-1];var q=new XJ(b[30]);for(var c=1;c<30;++c)for(var $=b[c];$<b[c+1];++$)q[$]=$-b[c]<<5|c;return{b,r:q}},Ff=Af(ef,2),zf=Ff.b,OJ=Ff.r;zf[28]=258,OJ[258]=28;var Bf=Af(Mf,0),HJ=Bf.b,kF=Bf.r,J9=new _7(32768);for(X0=0;X0<32768;++X0)ix=(X0&43690)>>1|(X0&21845)<<1,ix=(ix&52428)>>2|(ix&13107)<<2,ix=(ix&61680)>>4|(ix&3855)<<4,J9[X0]=((ix&65280)>>8|(ix&255)<<8)>>1;var ix,X0,v2=function(x,d,b){var c=x.length,q=0,$=new _7(d);for(;q<c;++q)if(x[q])++$[x[q]-1];var Y=new _7(d);for(q=1;q<d;++q)Y[q]=Y[q-1]+$[q-1]<<1;var G;if(b){G=new _7(1<<d);var E=15-d;for(q=0;q<c;++q)if(x[q]){var J=q<<4|x[q],V=d-x[q],N=Y[x[q]-1]++<<V;for(var U=N|(1<<V)-1;N<=U;++N)G[J9[N]>>E]=J}}else{G=new _7(c);for(q=0;q<c;++q)if(x[q])G[q]=J9[Y[x[q]-1]++]>>15-x[q]}return G},I2=new Wx(288);for(X0=0;X0<144;++X0)I2[X0]=8;var X0;for(X0=144;X0<256;++X0)I2[X0]=9;var X0;for(X0=256;X0<280;++X0)I2[X0]=7;var X0;for(X0=280;X0<288;++X0)I2[X0]=8;var X0,wf=new Wx(32);for(X0=0;X0<32;++X0)wf[X0]=5;var X0;var WJ=v2(I2,9,1);var LJ=v2(wf,5,1),G9=function(x){var d=x[0];for(var b=1;b<x.length;++b)if(x[b]>d)d=x[b];return d},hx=function(x,d,b){var c=d/8|0;return(x[c]|x[c+1]<<8)>>(d&7)&b},E9=function(x,d){var b=d/8|0;return(x[b]|x[b+1]<<8|x[b+2]<<16)>>(d&7)},DJ=function(x){return(x+7)/8|0},eJ=function(x,d,b){if(d==null||d<0)d=0;if(b==null||b>x.length)b=x.length;return new Wx(x.subarray(d,b))};var MJ=["unexpected EOF","invalid block type","invalid length/literal","invalid distance","stream finished","no stream handler",,"no callback","invalid UTF-8 data","extra field too long","date not in range 1980-2099","filename too long","stream finishing","invalid zip data"],Hx=function(x,d,b){var c=new Error(d||MJ[x]);if(c.code=x,Error.captureStackTrace)Error.captureStackTrace(c,Hx);if(!b)throw c;return c},V9=function(x,d,b,c){var q=x.length,$=c?c.length:0;if(!q||d.f&&!d.l)return b||new Wx(0);var Y=!b,G=Y||d.i!=2,E=d.i;if(Y)b=new Wx(q*3);var J=function(T0){var D0=b.length;if(T0>D0){var Qx=new Wx(Math.max(D0*2,T0));Qx.set(b),b=Qx}},V=d.f||0,N=d.p||0,U=d.b||0,K=d.l,X=d.d,D=d.m,L=d.n,H=q*8;do{if(!K){V=hx(x,N,1);var O=hx(x,N+1,3);if(N+=3,!O){var j=DJ(N)+4,e=x[j-4]|x[j-3]<<8,M=j+e;if(M>q){if(E)Hx(0);break}if(G)J(U+e);b.set(x.subarray(j,M),U),d.b=U+=e,d.p=N=M*8,d.f=V;continue}else if(O==1)K=WJ,X=LJ,D=9,L=5;else if(O==2){var F=hx(x,N,31)+257,z=hx(x,N+10,15)+4,B=F+hx(x,N+5,31)+1;N+=14;var w=new Wx(B),Z=new Wx(19);for(var P=0;P<z;++P)Z[jJ[P]]=hx(x,N+P*3,7);N+=z*3;var I=G9(Z),a=(1<<I)-1,S=v2(Z,I,1);for(var P=0;P<B;){var y=S[hx(x,N,a)];N+=y&15;var j=y>>4;if(j<16)w[P++]=j;else{var T=0,m=0;if(j==16)m=3+hx(x,N,3),N+=2,T=w[P-1];else if(j==17)m=3+hx(x,N,7),N+=3;else if(j==18)m=11+hx(x,N,127),N+=7;while(m--)w[P++]=T}}var u=w.subarray(0,F),v=w.subarray(F);D=G9(u),L=G9(v),K=v2(u,D,1),X=v2(v,L,1)}else Hx(1);if(N>H){if(E)Hx(0);break}}if(G)J(U+131072);var g=(1<<D)-1,h=(1<<L)-1,k=N;for(;;k=N){var T=K[E9(x,N)&g],Y0=T>>4;if(N+=T&15,N>H){if(E)Hx(0);break}if(!T)Hx(2);if(Y0<256)b[U++]=Y0;else if(Y0==256){k=N,K=null;break}else{var U0=Y0-254;if(Y0>264){var P=Y0-257,B0=ef[P];U0=hx(x,N,(1<<B0)-1)+zf[P],N+=B0}var f0=X[E9(x,N)&h],p0=f0>>4;if(!f0)Hx(3);N+=f0&15;var v=HJ[p0];if(p0>3){var B0=Mf[p0];v+=E9(x,N)&(1<<B0)-1,N+=B0}if(N>H){if(E)Hx(0);break}if(G)J(U+131072);var Z0=U+U0;if(U<v){var Q0=$-v,K0=Math.min(v,Z0);if(Q0+U<0)Hx(3);for(;U<K0;++U)b[U]=c[Q0+U]}for(;U<Z0;++U)b[U]=b[U-v]}}if(d.l=K,d.p=k,d.b=U,d.f=V,K)V=1,d.m=D,d.d=X,d.n=L}while(!V);return U!=b.length&&Y?eJ(b,0,U):b.subarray(0,U)};var AJ=new Wx(0);var FJ=function(x){if(x[0]!=31||x[1]!=139||x[2]!=8)Hx(6,"invalid gzip data");var d=x[3],b=10;if(d&4)b+=(x[10]|x[11]<<8)+2;for(var c=(d>>3&1)+(d>>4&1);c>0;c-=!x[b++]);return b+(d&2)},zJ=function(x){var d=x.length;return(x[d-4]|x[d-3]<<8|x[d-2]<<16|x[d-1]<<24)>>>0};var BJ=function(x,d){if((x[0]&15)!=8||x[0]>>4>7||(x[0]<<8|x[1])%31)Hx(6,"invalid zlib data");if((x[1]>>5&1)==+!d)Hx(6,"invalid zlib data: "+(x[1]&32?"need":"unexpected")+" dictionary");return(x[1]>>3&4)+2};function wJ(x,d){return V9(x,{i:2},d&&d.out,d&&d.dictionary)}function PJ(x,d){var b=FJ(x);if(b+8>x.length)Hx(6,"invalid gzip data");return V9(x.subarray(b,-8),{i:2},d&&d.out||new Wx(zJ(x)),d&&d.dictionary)}function vJ(x,d){return V9(x.subarray(BJ(x,d&&d.dictionary),-4),{i:2},d&&d.out,d&&d.dictionary)}function Pf(x,d){return x[0]==31&&x[1]==139&&x[2]==8?PJ(x,d):(x[0]&15)!=8||x[0]>>4>7||(x[0]<<8|x[1])%31?wJ(x,d):vJ(x,d)}var IJ=typeof TextDecoder!="undefined"&&new TextDecoder,SJ=0;try{IJ.decode(AJ,{stream:!0}),SJ=1}catch(x){}var rf=N1(yf(),1);var q7={LocalFileHeader:67324752,DataDescriptor:134695760,CentralFileHeader:33639248,EndOfCentralDirectory:101010256},K9={get(x){let d=S0.get(x,6);return{signature:a0.get(x,0),compressedSize:a0.get(x,8),uncompressedSize:a0.get(x,12)}},len:16},pf={get(x){let d=S0.get(x,6);return{signature:a0.get(x,0),minVersion:S0.get(x,4),dataDescriptor:!!(d&8),compressedMethod:S0.get(x,8),compressedSize:a0.get(x,18),uncompressedSize:a0.get(x,22),filenameLength:S0.get(x,26),extraFieldLength:S0.get(x,28),filename:null}},len:30},lf={get(x){return{signature:a0.get(x,0),nrOfThisDisk:S0.get(x,4),nrOfThisDiskWithTheStart:S0.get(x,6),nrOfEntriesOnThisDisk:S0.get(x,8),nrOfEntriesOfSize:S0.get(x,10),sizeOfCd:a0.get(x,12),offsetOfStartOfCd:a0.get(x,16),zipFileCommentLength:S0.get(x,20)}},len:22},nf={get(x){let d=S0.get(x,8);return{signature:a0.get(x,0),minVersion:S0.get(x,6),dataDescriptor:!!(d&8),compressedMethod:S0.get(x,10),compressedSize:a0.get(x,20),uncompressedSize:a0.get(x,24),filenameLength:S0.get(x,28),extraFieldLength:S0.get(x,30),fileCommentLength:S0.get(x,32),relativeOffsetOfLocalHeader:a0.get(x,42),filename:null}},len:46};function sf(x){let d=new Uint8Array(a0.len);return a0.put(d,0,x),d}var rx=rf.default("tokenizer:inflate"),R9=262144,KV=sf(q7.DataDescriptor),g5=sf(q7.EndOfCentralDirectory);class X9{constructor(x){this.tokenizer=x,this.syncBuffer=new Uint8Array(R9)}async isZip(){return await this.peekSignature()===q7.LocalFileHeader}peekSignature(){return this.tokenizer.peekToken(a0)}async findEndOfCentralDirectoryLocator(){let x=this.tokenizer,d=Math.min(16384,x.fileInfo.size),b=this.syncBuffer.subarray(0,d);await this.tokenizer.readBuffer(b,{position:x.fileInfo.size-d});for(let c=b.length-4;c>=0;c--)if(b[c]===g5[0]&&b[c+1]===g5[1]&&b[c+2]===g5[2]&&b[c+3]===g5[3])return x.fileInfo.size-d+c;return-1}async readCentralDirectory(){if(!this.tokenizer.supportsRandomAccess()){rx("Cannot reading central-directory without random-read support");return}rx("Reading central-directory...");let x=this.tokenizer.position,d=await this.findEndOfCentralDirectoryLocator();if(d>0){rx("Central-directory 32-bit signature found");let b=await this.tokenizer.readToken(lf,d),c=[];this.tokenizer.setPosition(b.offsetOfStartOfCd);for(let q=0;q<b.nrOfEntriesOfSize;++q){let $=await this.tokenizer.readToken(nf);if($.signature!==q7.CentralFileHeader)throw new Error("Expected Central-File-Header signature");$.filename=await this.tokenizer.readToken(new Ox($.filenameLength,"utf-8")),await this.tokenizer.ignore($.extraFieldLength),await this.tokenizer.ignore($.fileCommentLength),c.push($),rx(`Add central-directory file-entry: n=${q+1}/${c.length}: filename=${c[q].filename}`)}return this.tokenizer.setPosition(x),c}this.tokenizer.setPosition(x)}async unzip(x){let d=await this.readCentralDirectory();if(d)return this.iterateOverCentralDirectory(d,x);let b=!1;do{let c=await this.readLocalFileHeader();if(!c)break;let q=x(c);b=!!q.stop;let $=void 0;if(await this.tokenizer.ignore(c.extraFieldLength),c.dataDescriptor&&c.compressedSize===0){let Y=[],G=R9;rx("Compressed-file-size unknown, scanning for next data-descriptor-signature....");let E=-1;while(E<0&&G===R9){G=await this.tokenizer.peekBuffer(this.syncBuffer,{mayBeLess:!0}),E=RV(this.syncBuffer.subarray(0,G),KV);let J=E>=0?E:G;if(q.handler){let V=new Uint8Array(J);await this.tokenizer.readBuffer(V),Y.push(V)}else await this.tokenizer.ignore(J)}if(rx(`Found data-descriptor-signature at pos=${this.tokenizer.position}`),q.handler)await this.inflate(c,XV(Y),q.handler)}else if(q.handler)rx(`Reading compressed-file-data: ${c.compressedSize} bytes`),$=new Uint8Array(c.compressedSize),await this.tokenizer.readBuffer($),await this.inflate(c,$,q.handler);else rx(`Ignoring compressed-file-data: ${c.compressedSize} bytes`),await this.tokenizer.ignore(c.compressedSize);if(rx(`Reading data-descriptor at pos=${this.tokenizer.position}`),c.dataDescriptor){if((await this.tokenizer.readToken(K9)).signature!==134695760)throw new Error(`Expected data-descriptor-signature at position ${this.tokenizer.position-K9.len}`)}}while(!b)}async iterateOverCentralDirectory(x,d){for(let b of x){let c=d(b);if(c.handler){this.tokenizer.setPosition(b.relativeOffsetOfLocalHeader);let q=await this.readLocalFileHeader();if(q){await this.tokenizer.ignore(q.extraFieldLength);let $=new Uint8Array(b.compressedSize);await this.tokenizer.readBuffer($),await this.inflate(q,$,c.handler)}}if(c.stop)break}}inflate(x,d,b){if(x.compressedMethod===0)return b(d);rx(`Decompress filename=${x.filename}, compressed-size=${d.length}`);let c=Pf(d);return b(c)}async readLocalFileHeader(){let x=await this.tokenizer.peekToken(a0);if(x===q7.LocalFileHeader){let d=await this.tokenizer.readToken(pf);return d.filename=await this.tokenizer.readToken(new Ox(d.filenameLength,"utf-8")),d}if(x===q7.CentralFileHeader)return!1;if(x===3759263696)throw new Error("Encrypted ZIP");throw new Error("Unexpected signature")}}function RV(x,d){let b=x.length,c=d.length;if(c>b)return-1;for(let q=0;q<=b-c;q++){let $=!0;for(let Y=0;Y<c;Y++)if(x[q+Y]!==d[Y]){$=!1;break}if($)return q}return-1}function XV(x){let d=x.reduce((q,$)=>q+$.length,0),b=new Uint8Array(d),c=0;for(let q of x)b.set(q,c),c+=q.length;return b}var oF={utf8:new globalThis.TextDecoder("utf8")};var tF=new globalThis.TextEncoder;var xz=Array.from({length:256},(x,d)=>d.toString(16).padStart(2,"0"));function j9(x){let{byteLength:d}=x;if(d===6)return x.getUint16(0)*4294967296+x.getUint32(2);if(d===5)return x.getUint8(0)*4294967296+x.getUint32(1);if(d===4)return x.getUint32(0);if(d===3)return x.getUint8(0)*65536+x.getUint16(1);if(d===2)return x.getUint16(0);if(d===1)return x.getUint8(0)}function jV(x,d){let b=x.length,c=d.length;if(c===0)return-1;if(c>b)return-1;let q=b-c;for(let $=0;$<=q;$++){let Y=!0;for(let G=0;G<c;G++)if(x[$+G]!==d[G]){Y=!1;break}if(Y)return $}return-1}function of(x,d){return jV(x,d)!==-1}function tf(x){return[...x].map((d)=>d.charCodeAt(0))}function xd(x,d=0){let b=Number.parseInt(new Ox(6).get(x,148).replace(/\0.*$/,"").trim(),8);if(Number.isNaN(b))return!1;let c=256;for(let q=d;q<d+148;q++)c+=x[q];for(let q=d+156;q<d+512;q++)c+=x[q];return b===c}var fd={get:(x,d)=>x[d+3]&127|x[d+2]<<7|x[d+1]<<14|x[d]<<21,len:4};var dd=["jpg","png","apng","gif","webp","flif","xcf","cr2","cr3","orf","arw","dng","nef","rw2","raf","tif","bmp","icns","jxr","psd","indd","zip","tar","rar","gz","bz2","7z","dmg","mp4","mid","mkv","webm","mov","avi","mpg","mp2","mp3","m4a","oga","ogg","ogv","opus","flac","wav","spx","amr","pdf","epub","elf","macho","exe","swf","rtf","wasm","woff","woff2","eot","ttf","otf","ttc","ico","flv","ps","xz","sqlite","nes","crx","xpi","cab","deb","ar","rpm","Z","lz","cfb","mxf","mts","blend","bpg","docx","pptx","xlsx","3gp","3g2","j2c","jp2","jpm","jpx","mj2","aif","qcp","odt","ods","odp","xml","mobi","heic","cur","ktx","ape","wv","dcm","ics","glb","pcap","dsf","lnk","alias","voc","ac3","m4v","m4p","m4b","f4v","f4p","f4b","f4a","mie","asf","ogm","ogx","mpc","arrow","shp","aac","mp1","it","s3m","xm","ai","skp","avif","eps","lzh","pgp","asar","stl","chm","3mf","zst","jxl","vcf","jls","pst","dwg","parquet","class","arj","cpio","ace","avro","icc","fbx","vsdx","vtt","apk","drc","lz4","potx","xltx","dotx","xltm","ott","ots","otp","odg","otg","xlsm","docm","dotm","potm","pptm","jar","rm"],bd=["image/jpeg","image/png","image/gif","image/webp","image/flif","image/x-xcf","image/x-canon-cr2","image/x-canon-cr3","image/tiff","image/bmp","image/vnd.ms-photo","image/vnd.adobe.photoshop","application/x-indesign","application/epub+zip","application/x-xpinstall","application/vnd.oasis.opendocument.text","application/vnd.oasis.opendocument.spreadsheet","application/vnd.oasis.opendocument.presentation","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.openxmlformats-officedocument.presentationml.presentation","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/zip","application/x-tar","application/x-rar-compressed","application/gzip","application/x-bzip2","application/x-7z-compressed","application/x-apple-diskimage","application/x-apache-arrow","video/mp4","audio/midi","video/x-matroska","video/webm","video/quicktime","video/vnd.avi","audio/wav","audio/qcelp","audio/x-ms-asf","video/x-ms-asf","application/vnd.ms-asf","video/mpeg","video/3gpp","audio/mpeg","audio/mp4","video/ogg","audio/ogg","audio/ogg; codecs=opus","application/ogg","audio/x-flac","audio/ape","audio/wavpack","audio/amr","application/pdf","application/x-elf","application/x-mach-binary","application/x-msdownload","application/x-shockwave-flash","application/rtf","application/wasm","font/woff","font/woff2","application/vnd.ms-fontobject","font/ttf","font/otf","font/collection","image/x-icon","video/x-flv","application/postscript","application/eps","application/x-xz","application/x-sqlite3","application/x-nintendo-nes-rom","application/x-google-chrome-extension","application/vnd.ms-cab-compressed","application/x-deb","application/x-unix-archive","application/x-rpm","application/x-compress","application/x-lzip","application/x-cfb","application/x-mie","application/mxf","video/mp2t","application/x-blender","image/bpg","image/j2c","image/jp2","image/jpx","image/jpm","image/mj2","audio/aiff","application/xml","application/x-mobipocket-ebook","image/heif","image/heif-sequence","image/heic","image/heic-sequence","image/icns","image/ktx","application/dicom","audio/x-musepack","text/calendar","text/vcard","text/vtt","model/gltf-binary","application/vnd.tcpdump.pcap","audio/x-dsf","application/x.ms.shortcut","application/x.apple.alias","audio/x-voc","audio/vnd.dolby.dd-raw","audio/x-m4a","image/apng","image/x-olympus-orf","image/x-sony-arw","image/x-adobe-dng","image/x-nikon-nef","image/x-panasonic-rw2","image/x-fujifilm-raf","video/x-m4v","video/3gpp2","application/x-esri-shape","audio/aac","audio/x-it","audio/x-s3m","audio/x-xm","video/MP1S","video/MP2P","application/vnd.sketchup.skp","image/avif","application/x-lzh-compressed","application/pgp-encrypted","application/x-asar","model/stl","application/vnd.ms-htmlhelp","model/3mf","image/jxl","application/zstd","image/jls","application/vnd.ms-outlook","image/vnd.dwg","application/x-parquet","application/java-vm","application/x-arj","application/x-cpio","application/x-ace-compressed","application/avro","application/vnd.iccprofile","application/x.autodesk.fbx","application/vnd.visio","application/vnd.android.package-archive","application/vnd.google.draco","application/x-lz4","application/vnd.openxmlformats-officedocument.presentationml.template","application/vnd.openxmlformats-officedocument.spreadsheetml.template","application/vnd.openxmlformats-officedocument.wordprocessingml.template","application/vnd.ms-excel.template.macroenabled.12","application/vnd.oasis.opendocument.text-template","application/vnd.oasis.opendocument.spreadsheet-template","application/vnd.oasis.opendocument.presentation-template","application/vnd.oasis.opendocument.graphics","application/vnd.oasis.opendocument.graphics-template","application/vnd.ms-excel.sheet.macroEnabled.12","application/vnd.ms-word.document.macroEnabled.12","application/vnd.ms-word.template.macroEnabled.12","application/vnd.ms-powerpoint.template.macroEnabled.12","application/vnd.ms-powerpoint.presentation.macroEnabled.12","application/java-archive","application/vnd.rn-realmedia"];var O9=4100;async function W9(x){return new cd().fromBlob(x)}function H9(x){switch(x){case"application/epub+zip":return{ext:"epub",mime:"application/epub+zip"};case"application/vnd.oasis.opendocument.text":return{ext:"odt",mime:"application/vnd.oasis.opendocument.text"};case"application/vnd.oasis.opendocument.text-template":return{ext:"ott",mime:"application/vnd.oasis.opendocument.text-template"};case"application/vnd.oasis.opendocument.spreadsheet":return{ext:"ods",mime:"application/vnd.oasis.opendocument.spreadsheet"};case"application/vnd.oasis.opendocument.spreadsheet-template":return{ext:"ots",mime:"application/vnd.oasis.opendocument.spreadsheet-template"};case"application/vnd.oasis.opendocument.presentation":return{ext:"odp",mime:"application/vnd.oasis.opendocument.presentation"};case"application/vnd.oasis.opendocument.presentation-template":return{ext:"otp",mime:"application/vnd.oasis.opendocument.presentation-template"};case"application/vnd.oasis.opendocument.graphics":return{ext:"odg",mime:"application/vnd.oasis.opendocument.graphics"};case"application/vnd.oasis.opendocument.graphics-template":return{ext:"otg",mime:"application/vnd.oasis.opendocument.graphics-template"};case"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet":return{ext:"xlsx",mime:"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"};case"application/vnd.ms-excel.sheet.macroEnabled":return{ext:"xlsm",mime:"application/vnd.ms-excel.sheet.macroEnabled.12"};case"application/vnd.openxmlformats-officedocument.spreadsheetml.template":return{ext:"xltx",mime:"application/vnd.openxmlformats-officedocument.spreadsheetml.template"};case"application/vnd.ms-excel.template.macroEnabled":return{ext:"xltm",mime:"application/vnd.ms-excel.template.macroenabled.12"};case"application/vnd.openxmlformats-officedocument.wordprocessingml.document":return{ext:"docx",mime:"application/vnd.openxmlformats-officedocument.wordprocessingml.document"};case"application/vnd.ms-word.document.macroEnabled":return{ext:"docm",mime:"application/vnd.ms-word.document.macroEnabled.12"};case"application/vnd.openxmlformats-officedocument.wordprocessingml.template":return{ext:"dotx",mime:"application/vnd.openxmlformats-officedocument.wordprocessingml.template"};case"application/vnd.ms-word.template.macroEnabledTemplate":return{ext:"dotm",mime:"application/vnd.ms-word.template.macroEnabled.12"};case"application/vnd.openxmlformats-officedocument.presentationml.template":return{ext:"potx",mime:"application/vnd.openxmlformats-officedocument.presentationml.template"};case"application/vnd.ms-powerpoint.template.macroEnabled":return{ext:"potm",mime:"application/vnd.ms-powerpoint.template.macroEnabled.12"};case"application/vnd.openxmlformats-officedocument.presentationml.presentation":return{ext:"pptx",mime:"application/vnd.openxmlformats-officedocument.presentationml.presentation"};case"application/vnd.ms-powerpoint.presentation.macroEnabled":return{ext:"pptm",mime:"application/vnd.ms-powerpoint.presentation.macroEnabled.12"};case"application/vnd.ms-visio.drawing":return{ext:"vsdx",mime:"application/vnd.visio"};case"application/vnd.ms-package.3dmanufacturing-3dmodel+xml":return{ext:"3mf",mime:"model/3mf"};default:}}function sx(x,d,b){b={offset:0,...b};for(let[c,q]of d.entries())if(b.mask){if(q!==(b.mask[c]&x[c+b.offset]))return!1}else if(q!==x[c+b.offset])return!1;return!0}class cd{constructor(x){this.detectors=[...x?.customDetectors??[],{id:"core",detect:this.detectConfident},{id:"core.imprecise",detect:this.detectImprecise}],this.tokenizerOptions={abortSignal:x?.signal}}async fromTokenizer(x){let d=x.position;for(let b of this.detectors){let c=await b.detect(x);if(c)return c;if(d!==x.position)return}}async fromBuffer(x){if(!(x instanceof Uint8Array||x instanceof ArrayBuffer))throw new TypeError(`Expected the \`input\` argument to be of type \`Uint8Array\` or \`ArrayBuffer\`, got \`${typeof x}\``);let d=x instanceof Uint8Array?x:new Uint8Array(x);if(!(d?.length>1))return;return this.fromTokenizer(Of(d,this.tokenizerOptions))}async fromBlob(x){return this.fromStream(x.stream())}async fromStream(x){let d=await Y9(x,this.tokenizerOptions);try{return await this.fromTokenizer(d)}finally{await d.close()}}async toDetectionStream(x,d){let{sampleSize:b=O9}=d,c,q,$=x.getReader({mode:"byob"});try{let{value:E,done:J}=await $.read(new Uint8Array(b));if(q=E,!J&&E)try{c=await this.fromBuffer(E.slice(0,b))}catch(V){if(!(V instanceof v0))throw V;c=void 0}q=E}finally{$.releaseLock()}let Y=new TransformStream({async start(E){E.enqueue(q)},transform(E,J){J.enqueue(E)}}),G=x.pipeThrough(Y);return G.fileType=c,G}check(x,d){return sx(this.buffer,x,d)}checkString(x,d){return this.check(tf(x),d)}detectConfident=async(x)=>{if(this.buffer=new Uint8Array(O9),x.fileInfo.size===void 0)x.fileInfo.size=Number.MAX_SAFE_INTEGER;if(this.tokenizer=x,await x.peekBuffer(this.buffer,{length:12,mayBeLess:!0}),this.check([66,77]))return{ext:"bmp",mime:"image/bmp"};if(this.check([11,119]))return{ext:"ac3",mime:"audio/vnd.dolby.dd-raw"};if(this.check([120,1]))return{ext:"dmg",mime:"application/x-apple-diskimage"};if(this.check([77,90]))return{ext:"exe",mime:"application/x-msdownload"};if(this.check([37,33])){if(await x.peekBuffer(this.buffer,{length:24,mayBeLess:!0}),this.checkString("PS-Adobe-",{offset:2})&&this.checkString(" EPSF-",{offset:14}))return{ext:"eps",mime:"application/eps"};return{ext:"ps",mime:"application/postscript"}}if(this.check([31,160])||this.check([31,157]))return{ext:"Z",mime:"application/x-compress"};if(this.check([199,113]))return{ext:"cpio",mime:"application/x-cpio"};if(this.check([96,234]))return{ext:"arj",mime:"application/x-arj"};if(this.check([239,187,191]))return this.tokenizer.ignore(3),this.detectConfident(x);if(this.check([71,73,70]))return{ext:"gif",mime:"image/gif"};if(this.check([73,73,188]))return{ext:"jxr",mime:"image/vnd.ms-photo"};if(this.check([31,139,8]))return{ext:"gz",mime:"application/gzip"};if(this.check([66,90,104]))return{ext:"bz2",mime:"application/x-bzip2"};if(this.checkString("ID3")){await x.ignore(6);let d=await x.readToken(fd);if(x.position+d>x.fileInfo.size)return{ext:"mp3",mime:"audio/mpeg"};return await x.ignore(d),this.fromTokenizer(x)}if(this.checkString("MP+"))return{ext:"mpc",mime:"audio/x-musepack"};if((this.buffer[0]===67||this.buffer[0]===70)&&this.check([87,83],{offset:1}))return{ext:"swf",mime:"application/x-shockwave-flash"};if(this.check([255,216,255])){if(this.check([247],{offset:3}))return{ext:"jls",mime:"image/jls"};return{ext:"jpg",mime:"image/jpeg"}}if(this.check([79,98,106,1]))return{ext:"avro",mime:"application/avro"};if(this.checkString("FLIF"))return{ext:"flif",mime:"image/flif"};if(this.checkString("8BPS"))return{ext:"psd",mime:"image/vnd.adobe.photoshop"};if(this.checkString("MPCK"))return{ext:"mpc",mime:"audio/x-musepack"};if(this.checkString("FORM"))return{ext:"aif",mime:"audio/aiff"};if(this.checkString("icns",{offset:0}))return{ext:"icns",mime:"image/icns"};if(this.check([80,75,3,4])){let d;return await new X9(x).unzip((b)=>{switch(b.filename){case"META-INF/mozilla.rsa":return d={ext:"xpi",mime:"application/x-xpinstall"},{stop:!0};case"META-INF/MANIFEST.MF":return d={ext:"jar",mime:"application/java-archive"},{stop:!0};case"mimetype":return{async handler(c){let q=new TextDecoder("utf-8").decode(c).trim();d=H9(q)},stop:!0};case"[Content_Types].xml":return{async handler(c){let q=new TextDecoder("utf-8").decode(c),$=q.indexOf('.main+xml"');if($===-1){if(q.includes('ContentType="application/vnd.ms-package.3dmanufacturing-3dmodel+xml"'))d=H9("application/vnd.ms-package.3dmanufacturing-3dmodel+xml")}else{q=q.slice(0,Math.max(0,$));let Y=q.lastIndexOf('"'),G=q.slice(Math.max(0,Y+1));d=H9(G)}},stop:!0};default:if(/classes\d*\.dex/.test(b.filename))return d={ext:"apk",mime:"application/vnd.android.package-archive"},{stop:!0};return{}}}),d??{ext:"zip",mime:"application/zip"}}if(this.checkString("OggS")){await x.ignore(28);let d=new Uint8Array(8);if(await x.readBuffer(d),sx(d,[79,112,117,115,72,101,97,100]))return{ext:"opus",mime:"audio/ogg; codecs=opus"};if(sx(d,[128,116,104,101,111,114,97]))return{ext:"ogv",mime:"video/ogg"};if(sx(d,[1,118,105,100,101,111,0]))return{ext:"ogm",mime:"video/ogg"};if(sx(d,[127,70,76,65,67]))return{ext:"oga",mime:"audio/ogg"};if(sx(d,[83,112,101,101,120,32,32]))return{ext:"spx",mime:"audio/ogg"};if(sx(d,[1,118,111,114,98,105,115]))return{ext:"ogg",mime:"audio/ogg"};return{ext:"ogx",mime:"application/ogg"}}if(this.check([80,75])&&(this.buffer[2]===3||this.buffer[2]===5||this.buffer[2]===7)&&(this.buffer[3]===4||this.buffer[3]===6||this.buffer[3]===8))return{ext:"zip",mime:"application/zip"};if(this.checkString("MThd"))return{ext:"mid",mime:"audio/midi"};if(this.checkString("wOFF")&&(this.check([0,1,0,0],{offset:4})||this.checkString("OTTO",{offset:4})))return{ext:"woff",mime:"font/woff"};if(this.checkString("wOF2")&&(this.check([0,1,0,0],{offset:4})||this.checkString("OTTO",{offset:4})))return{ext:"woff2",mime:"font/woff2"};if(this.check([212,195,178,161])||this.check([161,178,195,212]))return{ext:"pcap",mime:"application/vnd.tcpdump.pcap"};if(this.checkString("DSD "))return{ext:"dsf",mime:"audio/x-dsf"};if(this.checkString("LZIP"))return{ext:"lz",mime:"application/x-lzip"};if(this.checkString("fLaC"))return{ext:"flac",mime:"audio/x-flac"};if(this.check([66,80,71,251]))return{ext:"bpg",mime:"image/bpg"};if(this.checkString("wvpk"))return{ext:"wv",mime:"audio/wavpack"};if(this.checkString("%PDF")){try{if(await x.ignore(1350)===1350){let c=new Uint8Array(Math.min(10485760,x.fileInfo.size-1350));if(await x.readBuffer(c,{mayBeLess:!0}),of(c,new TextEncoder().encode("AIPrivateData")))return{ext:"ai",mime:"application/postscript"}}}catch(d){if(!(d instanceof v0))throw d}return{ext:"pdf",mime:"application/pdf"}}if(this.check([0,97,115,109]))return{ext:"wasm",mime:"application/wasm"};if(this.check([73,73])){let d=await this.readTiffHeader(!1);if(d)return d}if(this.check([77,77])){let d=await this.readTiffHeader(!0);if(d)return d}if(this.checkString("MAC "))return{ext:"ape",mime:"audio/ape"};if(this.check([26,69,223,163])){async function d(){let Y=await x.peekNumber(Hf),G=128,E=0;while((Y&G)===0&&G!==0)++E,G>>=1;let J=new Uint8Array(E+1);return await x.readBuffer(J),J}async function b(){let Y=await d(),G=await d();G[0]^=128>>G.length-1;let E=Math.min(6,G.length),J=new DataView(Y.buffer),V=new DataView(G.buffer,G.length-E,E);return{id:j9(J),len:j9(V)}}async function c(Y){while(Y>0){let G=await b();if(G.id===17026)return(await x.readToken(new Ox(G.len))).replaceAll(/\00.*$/g,"");await x.ignore(G.len),--Y}}let q=await b();switch(await c(q.len)){case"webm":return{ext:"webm",mime:"video/webm"};case"matroska":return{ext:"mkv",mime:"video/x-matroska"};default:return}}if(this.checkString("SQLi"))return{ext:"sqlite",mime:"application/x-sqlite3"};if(this.check([78,69,83,26]))return{ext:"nes",mime:"application/x-nintendo-nes-rom"};if(this.checkString("Cr24"))return{ext:"crx",mime:"application/x-google-chrome-extension"};if(this.checkString("MSCF")||this.checkString("ISc("))return{ext:"cab",mime:"application/vnd.ms-cab-compressed"};if(this.check([237,171,238,219]))return{ext:"rpm",mime:"application/x-rpm"};if(this.check([197,208,211,198]))return{ext:"eps",mime:"application/eps"};if(this.check([40,181,47,253]))return{ext:"zst",mime:"application/zstd"};if(this.check([127,69,76,70]))return{ext:"elf",mime:"application/x-elf"};if(this.check([33,66,68,78]))return{ext:"pst",mime:"application/vnd.ms-outlook"};if(this.checkString("PAR1"))return{ext:"parquet",mime:"application/x-parquet"};if(this.checkString("ttcf"))return{ext:"ttc",mime:"font/collection"};if(this.check([207,250,237,254]))return{ext:"macho",mime:"application/x-mach-binary"};if(this.check([4,34,77,24]))return{ext:"lz4",mime:"application/x-lz4"};if(this.check([79,84,84,79,0]))return{ext:"otf",mime:"font/otf"};if(this.checkString("#!AMR"))return{ext:"amr",mime:"audio/amr"};if(this.checkString("{\\rtf"))return{ext:"rtf",mime:"application/rtf"};if(this.check([70,76,86,1]))return{ext:"flv",mime:"video/x-flv"};if(this.checkString("IMPM"))return{ext:"it",mime:"audio/x-it"};if(this.checkString("-lh0-",{offset:2})||this.checkString("-lh1-",{offset:2})||this.checkString("-lh2-",{offset:2})||this.checkString("-lh3-",{offset:2})||this.checkString("-lh4-",{offset:2})||this.checkString("-lh5-",{offset:2})||this.checkString("-lh6-",{offset:2})||this.checkString("-lh7-",{offset:2})||this.checkString("-lzs-",{offset:2})||this.checkString("-lz4-",{offset:2})||this.checkString("-lz5-",{offset:2})||this.checkString("-lhd-",{offset:2}))return{ext:"lzh",mime:"application/x-lzh-compressed"};if(this.check([0,0,1,186])){if(this.check([33],{offset:4,mask:[241]}))return{ext:"mpg",mime:"video/MP1S"};if(this.check([68],{offset:4,mask:[196]}))return{ext:"mpg",mime:"video/MP2P"}}if(this.checkString("ITSF"))return{ext:"chm",mime:"application/vnd.ms-htmlhelp"};if(this.check([202,254,186,190]))return{ext:"class",mime:"application/java-vm"};if(this.checkString(".RMF"))return{ext:"rm",mime:"application/vnd.rn-realmedia"};if(this.checkString("DRACO"))return{ext:"drc",mime:"application/vnd.google.draco"};if(this.check([253,55,122,88,90,0]))return{ext:"xz",mime:"application/x-xz"};if(this.checkString("<?xml "))return{ext:"xml",mime:"application/xml"};if(this.check([55,122,188,175,39,28]))return{ext:"7z",mime:"application/x-7z-compressed"};if(this.check([82,97,114,33,26,7])&&(this.buffer[6]===0||this.buffer[6]===1))return{ext:"rar",mime:"application/x-rar-compressed"};if(this.checkString("solid "))return{ext:"stl",mime:"model/stl"};if(this.checkString("AC")){let d=new Ox(4,"latin1").get(this.buffer,2);if(d.match("^d*")&&d>=1000&&d<=1050)return{ext:"dwg",mime:"image/vnd.dwg"}}if(this.checkString("070707"))return{ext:"cpio",mime:"application/x-cpio"};if(this.checkString("BLENDER"))return{ext:"blend",mime:"application/x-blender"};if(this.checkString("!<arch>")){if(await x.ignore(8),await x.readToken(new Ox(13,"ascii"))==="debian-binary")return{ext:"deb",mime:"application/x-deb"};return{ext:"ar",mime:"application/x-unix-archive"}}if(this.checkString("WEBVTT")&&[`
`,"\r","\t"," ","\x00"].some((d)=>this.checkString(d,{offset:6})))return{ext:"vtt",mime:"text/vtt"};if(this.check([137,80,78,71,13,10,26,10])){await x.ignore(8);async function d(){return{length:await x.readToken(Lf),type:await x.readToken(new Ox(4,"latin1"))}}do{let b=await d();if(b.length<0)return;switch(b.type){case"IDAT":return{ext:"png",mime:"image/png"};case"acTL":return{ext:"apng",mime:"image/apng"};default:await x.ignore(b.length+4)}}while(x.position+8<x.fileInfo.size);return{ext:"png",mime:"image/png"}}if(this.check([65,82,82,79,87,49,0,0]))return{ext:"arrow",mime:"application/x-apache-arrow"};if(this.check([103,108,84,70,2,0,0,0]))return{ext:"glb",mime:"model/gltf-binary"};if(this.check([102,114,101,101],{offset:4})||this.check([109,100,97,116],{offset:4})||this.check([109,111,111,118],{offset:4})||this.check([119,105,100,101],{offset:4}))return{ext:"mov",mime:"video/quicktime"};if(this.check([73,73,82,79,8,0,0,0,24]))return{ext:"orf",mime:"image/x-olympus-orf"};if(this.checkString("gimp xcf "))return{ext:"xcf",mime:"image/x-xcf"};if(this.checkString("ftyp",{offset:4})&&(this.buffer[8]&96)!==0){let d=new Ox(4,"latin1").get(this.buffer,8).replace("\x00"," ").trim();switch(d){case"avif":case"avis":return{ext:"avif",mime:"image/avif"};case"mif1":return{ext:"heic",mime:"image/heif"};case"msf1":return{ext:"heic",mime:"image/heif-sequence"};case"heic":case"heix":return{ext:"heic",mime:"image/heic"};case"hevc":case"hevx":return{ext:"heic",mime:"image/heic-sequence"};case"qt":return{ext:"mov",mime:"video/quicktime"};case"M4V":case"M4VH":case"M4VP":return{ext:"m4v",mime:"video/x-m4v"};case"M4P":return{ext:"m4p",mime:"video/mp4"};case"M4B":return{ext:"m4b",mime:"audio/mp4"};case"M4A":return{ext:"m4a",mime:"audio/x-m4a"};case"F4V":return{ext:"f4v",mime:"video/mp4"};case"F4P":return{ext:"f4p",mime:"video/mp4"};case"F4A":return{ext:"f4a",mime:"audio/mp4"};case"F4B":return{ext:"f4b",mime:"audio/mp4"};case"crx":return{ext:"cr3",mime:"image/x-canon-cr3"};default:if(d.startsWith("3g")){if(d.startsWith("3g2"))return{ext:"3g2",mime:"video/3gpp2"};return{ext:"3gp",mime:"video/3gpp"}}return{ext:"mp4",mime:"video/mp4"}}}if(this.check([82,73,70,70])){if(this.checkString("WEBP",{offset:8}))return{ext:"webp",mime:"image/webp"};if(this.check([65,86,73],{offset:8}))return{ext:"avi",mime:"video/vnd.avi"};if(this.check([87,65,86,69],{offset:8}))return{ext:"wav",mime:"audio/wav"};if(this.check([81,76,67,77],{offset:8}))return{ext:"qcp",mime:"audio/qcelp"}}if(this.check([73,73,85,0,24,0,0,0,136,231,116,216]))return{ext:"rw2",mime:"image/x-panasonic-rw2"};if(this.check([48,38,178,117,142,102,207,17,166,217])){async function d(){let b=new Uint8Array(16);return await x.readBuffer(b),{id:b,size:Number(await x.readToken(Df))}}await x.ignore(30);while(x.position+24<x.fileInfo.size){let b=await d(),c=b.size-24;if(sx(b.id,[145,7,220,183,183,169,207,17,142,230,0,192,12,32,83,101])){let q=new Uint8Array(16);if(c-=await x.readBuffer(q),sx(q,[64,158,105,248,77,91,207,17,168,253,0,128,95,92,68,43]))return{ext:"asf",mime:"audio/x-ms-asf"};if(sx(q,[192,239,25,188,77,91,207,17,168,253,0,128,95,92,68,43]))return{ext:"asf",mime:"video/x-ms-asf"};break}await x.ignore(c)}return{ext:"asf",mime:"application/vnd.ms-asf"}}if(this.check([171,75,84,88,32,49,49,187,13,10,26,10]))return{ext:"ktx",mime:"image/ktx"};if((this.check([126,16,4])||this.check([126,24,4]))&&this.check([48,77,73,69],{offset:4}))return{ext:"mie",mime:"application/x-mie"};if(this.check([39,10,0,0,0,0,0,0,0,0,0,0],{offset:2}))return{ext:"shp",mime:"application/x-esri-shape"};if(this.check([255,79,255,81]))return{ext:"j2c",mime:"image/j2c"};if(this.check([0,0,0,12,106,80,32,32,13,10,135,10]))switch(await x.ignore(20),await x.readToken(new Ox(4,"ascii"))){case"jp2 ":return{ext:"jp2",mime:"image/jp2"};case"jpx ":return{ext:"jpx",mime:"image/jpx"};case"jpm ":return{ext:"jpm",mime:"image/jpm"};case"mjp2":return{ext:"mj2",mime:"image/mj2"};default:return}if(this.check([255,10])||this.check([0,0,0,12,74,88,76,32,13,10,135,10]))return{ext:"jxl",mime:"image/jxl"};if(this.check([254,255])){if(this.check([0,60,0,63,0,120,0,109,0,108],{offset:2}))return{ext:"xml",mime:"application/xml"};return}if(this.check([208,207,17,224,161,177,26,225]))return{ext:"cfb",mime:"application/x-cfb"};if(await x.peekBuffer(this.buffer,{length:Math.min(256,x.fileInfo.size),mayBeLess:!0}),this.check([97,99,115,112],{offset:36}))return{ext:"icc",mime:"application/vnd.iccprofile"};if(this.checkString("**ACE",{offset:7})&&this.checkString("**",{offset:12}))return{ext:"ace",mime:"application/x-ace-compressed"};if(this.checkString("BEGIN:")){if(this.checkString("VCARD",{offset:6}))return{ext:"vcf",mime:"text/vcard"};if(this.checkString("VCALENDAR",{offset:6}))return{ext:"ics",mime:"text/calendar"}}if(this.checkString("FUJIFILMCCD-RAW"))return{ext:"raf",mime:"image/x-fujifilm-raf"};if(this.checkString("Extended Module:"))return{ext:"xm",mime:"audio/x-xm"};if(this.checkString("Creative Voice File"))return{ext:"voc",mime:"audio/x-voc"};if(this.check([4,0,0,0])&&this.buffer.length>=16){let d=new DataView(this.buffer.buffer).getUint32(12,!0);if(d>12&&this.buffer.length>=d+16)try{let b=new TextDecoder().decode(this.buffer.slice(16,d+16));if(JSON.parse(b).files)return{ext:"asar",mime:"application/x-asar"}}catch{}}if(this.check([6,14,43,52,2,5,1,1,13,1,2,1,1,2]))return{ext:"mxf",mime:"application/mxf"};if(this.checkString("SCRM",{offset:44}))return{ext:"s3m",mime:"audio/x-s3m"};if(this.check([71])&&this.check([71],{offset:188}))return{ext:"mts",mime:"video/mp2t"};if(this.check([71],{offset:4})&&this.check([71],{offset:196}))return{ext:"mts",mime:"video/mp2t"};if(this.check([66,79,79,75,77,79,66,73],{offset:60}))return{ext:"mobi",mime:"application/x-mobipocket-ebook"};if(this.check([68,73,67,77],{offset:128}))return{ext:"dcm",mime:"application/dicom"};if(this.check([76,0,0,0,1,20,2,0,0,0,0,0,192,0,0,0,0,0,0,70]))return{ext:"lnk",mime:"application/x.ms.shortcut"};if(this.check([98,111,111,107,0,0,0,0,109,97,114,107,0,0,0,0]))return{ext:"alias",mime:"application/x.apple.alias"};if(this.checkString("Kaydara FBX Binary  \x00"))return{ext:"fbx",mime:"application/x.autodesk.fbx"};if(this.check([76,80],{offset:34})&&(this.check([0,0,1],{offset:8})||this.check([1,0,2],{offset:8})||this.check([2,0,2],{offset:8})))return{ext:"eot",mime:"application/vnd.ms-fontobject"};if(this.check([6,6,237,245,216,29,70,229,189,49,239,231,254,116,183,29]))return{ext:"indd",mime:"application/x-indesign"};if(await x.peekBuffer(this.buffer,{length:Math.min(512,x.fileInfo.size),mayBeLess:!0}),xd(this.buffer))return{ext:"tar",mime:"application/x-tar"};if(this.check([255,254])){if(this.check([60,0,63,0,120,0,109,0,108,0],{offset:2}))return{ext:"xml",mime:"application/xml"};if(this.check([255,14,83,0,107,0,101,0,116,0,99,0,104,0,85,0,112,0,32,0,77,0,111,0,100,0,101,0,108,0],{offset:2}))return{ext:"skp",mime:"application/vnd.sketchup.skp"};return}if(this.checkString("-----BEGIN PGP MESSAGE-----"))return{ext:"pgp",mime:"application/pgp-encrypted"}};detectImprecise=async(x)=>{if(this.buffer=new Uint8Array(O9),await x.peekBuffer(this.buffer,{length:Math.min(8,x.fileInfo.size),mayBeLess:!0}),this.check([0,0,1,186])||this.check([0,0,1,179]))return{ext:"mpg",mime:"video/mpeg"};if(this.check([0,1,0,0,0]))return{ext:"ttf",mime:"font/ttf"};if(this.check([0,0,1,0]))return{ext:"ico",mime:"image/x-icon"};if(this.check([0,0,2,0]))return{ext:"cur",mime:"image/x-icon"};if(this.buffer.length>=2&&this.check([255,224],{offset:0,mask:[255,224]})){if(this.check([16],{offset:1,mask:[22]})){if(this.check([8],{offset:1,mask:[8]}))return{ext:"aac",mime:"audio/aac"};return{ext:"aac",mime:"audio/aac"}}if(this.check([2],{offset:1,mask:[6]}))return{ext:"mp3",mime:"audio/mpeg"};if(this.check([4],{offset:1,mask:[6]}))return{ext:"mp2",mime:"audio/mpeg"};if(this.check([6],{offset:1,mask:[6]}))return{ext:"mp1",mime:"audio/mpeg"}}};async readTiffTag(x){let d=await this.tokenizer.readToken(x?a7:S0);switch(this.tokenizer.ignore(10),d){case 50341:return{ext:"arw",mime:"image/x-sony-arw"};case 50706:return{ext:"dng",mime:"image/x-adobe-dng"};default:}}async readTiffIFD(x){let d=await this.tokenizer.readToken(x?a7:S0);for(let b=0;b<d;++b){let c=await this.readTiffTag(x);if(c)return c}}async readTiffHeader(x){let d=(x?a7:S0).get(this.buffer,2),b=(x?Wf:a0).get(this.buffer,4);if(d===42){if(b>=6){if(this.checkString("CR",{offset:8}))return{ext:"cr2",mime:"image/x-canon-cr2"};if(b>=8){let q=(x?a7:S0).get(this.buffer,8),$=(x?a7:S0).get(this.buffer,10);if(q===28&&$===254||q===31&&$===11)return{ext:"nef",mime:"image/x-nikon-nef"}}}return await this.tokenizer.ignore(b),await this.readTiffIFD(x)??{ext:"tif",mime:"image/tiff"}}if(d===43)return{ext:"tif",mime:"image/tiff"}}}var OV=new Set(dd),HV=new Set(bd);import{randomBytes as WV}from"node:crypto";var LV={png:!0,gif:!0,jpeg:!0,jpg:!0,svg:!0,webp:!0},qd=async(x)=>{if(!(x.file instanceof Blob))return;let d=await W9(x.file);if(!d?.ext)return;if(!{...LV,...x.allowed}[d.ext])return;let c=Math.round(Date.now()/1000),q=WV(7).toString("hex"),$=`${c}-${q}.${d.ext}`;return await Bun.write(`${x.dir}/${$}`,x.file),$};var $d=async(x)=>{if(!x.ctx.req.raw.headers.get("Content-Type")?.includes("multipart/form-data"))throw new H0(415,{message:"CONTENT_TYPE_IS_NOT_MULTIPART"});if(!x.ctx.req.raw.body)throw new H0(422,{message:"BODY_IS_UNDEFINED"});let $=(await x.ctx.req.formData()).getAll("files").map(async(Y)=>{if(!(Y instanceof Blob))return;let G=await qd({...x,file:Y}).catch(console.error);if(G&&x.onFile)x.onFile(G);return G});return Promise.allSettled($)};app.post("api/flowers",async(x)=>{return await $d({ctx:x,dir:"public",onFile:(d)=>{console.log(d)}}),x.text("ok")});var{sql:Lx}=globalThis.Bun;var DV=V0.tuple([V0.string().refine((x)=>/^[A-Za-z0-9]+$/.test(x)),V0.enum(["ASC","DESC"])]).or(V0.tuple([V0.string().refine((x)=>/^[A-Za-z0-9]+$/.test(x))])).array(),L9=(x)=>{if(x.req.query("nopages")==="1")return Lx``;let d=parseInt(x.req.query("limit")||"10"),b=parseInt(x.req.query("offset")||"0"),c=M5(x.req.query("order"));if(!c)return Lx`LIMIT ${d} OFFSET ${b}`;let q=D7(c),$=DV.safeParse(q);if(!$.data||!$.success)return Lx`LIMIT ${d} OFFSET ${b}`;let Y=$.data.reduce((G,E,J)=>{if(!J&&E[1]==="DESC")return Lx`ORDER BY ${Lx(E[0])} DESC`;if(!J)return Lx`ORDER BY ${Lx(E[0])} ASC`;if(E[1]==="DESC")return Lx`${G}, ${Lx(E[0])} DESC`;return Lx`${G}, ${Lx(E[0])} ASC`},Lx``);return Lx`${Y} LIMIT ${d} OFFSET ${b}`};var{sql:n0}=globalThis.Bun;var Qd=(x)=>{let d=x[1].toUpperCase(),b=x[0],c=x[2];switch(d){case"=":return n0`${n0(b)} = ${c}`;case">":return n0`${n0(b)} > ${c}`;case"<":return n0`${n0(b)} < ${c}`;case">=":return n0`${n0(b)} >= ${c}`;case"<=":return n0`${n0(b)} <= ${c}`;case"<>":return n0`${n0(b)} <> ${c}`;case"BTW":if(!Array.isArray(c)||c.length!==2)return null;let q=e5(c[0])&&c[0],$=e5(c[1])&&c[1];if(!q||!$)return null;return n0`${n0(b)} BETWEEN ${q} and ${$}`;case"LIKE":if(typeof c!=="string")return null;return n0`${n0(b)} LIKE ${c}`;case"IN":if(!Array.isArray(c))return null;let G=c.map((E)=>e5(E)&&E).filter((E)=>E!==!1);if(!G.length)return null;return n0`${n0(b)} IN ${n0(G)}`;default:return null}};var{sql:S2}=globalThis.Bun;var eV=V0.tuple([V0.string().refine((x)=>/^[A-Za-z0-9]+$/.test(x)),V0.string().nonempty(),V0.union([V0.string().nonempty().or(V0.number()).or(V0.boolean()),V0.string().nonempty().or(V0.number()).or(V0.boolean()).array()])]).array(),D9=(x)=>{let d=M5(x.req.query("filter"));if(!d)return S2``;let b=eV.safeParse(D7(d));if(!b.success||!b.data)return console.error(b.error),S2``;return b.data.map(Qd).filter((c)=>!!c).reduce((c,q,$)=>{if(!$)return S2`WHERE ${q}`;return S2`${c} AND ${q}`},S2``)};var{sql:$7}=globalThis.Bun;var MV=V0.string().refine((x)=>/^[A-Za-z0-9]+$/.test(x)).array(),e9=(x,d,b)=>{let c=(V,N)=>{return{SQL:V,join:N}},q=x.req.query("select");if(!q)return c();let $=D7(q),Y=MV.safeParse($);if(!Y.data||!Y.success)return c();let G={},J=(!b?.length?Y.data:Y.data.filter((V)=>{if(!b.includes(V))return!0;return G[V]=!0,!1})).reduce((V,N,U)=>{if(!U)return $7`SELECT ${$7(N)}`;return $7`${V}, ${$7(N)}`},$7``);return c($7`${J} FROM ${$7(d)}`,G)};var{sql:M9}=globalThis.Bun;app.get("api/flowers",async(x)=>{let d=e9(x,"Flowers",["hist"]),b=await M9`
    ${d.SQL}
    ${L9(x)}
    ${D9(x)}
  `;if(!d.join||d.join.hist){let q=(await M9`
      SELECT * FROM "FlowersHistory"
      WHERE "hist_flowersId" IN ${M9(b.map(($)=>$.id))}
    `).reduce(($,Y)=>{let G=$[Y.hist_flowersId]||[];return{...$,[Y.hist_flowersId]:G.concat(Y)}},{});return console.log(q),x.json({data:b.map(($)=>({...$,hist:q[$.id]}))})}return x.json({data:b})});var yY=N1(uY(),1);app.get("api/pdf",async(x)=>{let d={title:"Tablica 1",subtitle:"opisanie",headers:["Country","Conversion rate","Trend"],rows:[["Switzerland","12%","+1.12%"],["France","67%","-0.98%"],["England","33%","+4.44%"]]},b=new yY.default({margin:30,size:"A4"});b.font("pdfkit/roboto.ttf"),b.info.Title="Test Document";let c="\u0421\u0447\u0435\u0442 \u043D\u0430 \u043E\u043F\u043B\u0430\u0442\u0443!";b.text(c,{align:"center"}),await b.table(d,{width:500}),await b.table(d,{columnsSize:[200,100,100]});let q=b.y+35,$=22,Y=100;return b.fontSize(20).text("22.01.2025!",b.x+20,q+(Y-$)/2),b.image("private/1742829153-cbb96e295d2ace.jpg",400,q,{width:100,height:Y}),b.end(),x.body(b)});import wL from"node:crypto";class b1{provider;clientId;clientSecret;scopes;urls;userInfo;tokenSchema=V0.object({access_token:V0.string(),token_type:V0.string()});constructor({provider:x,clientId:d,clientSecret:b,scopes:c,urls:q,userInfo:$}){this.provider=x,this.clientId=d,this.clientSecret=b,this.scopes=c,this.urls=q,this.userInfo=$}get redirectUrl(){return new URL(this.provider,"http://localhost:3000/api/oauth/callback/")}createAuthUrl(x,d){let b=new URL(this.urls.auth);return b.searchParams.set("client_id",this.clientId),b.searchParams.set("redirect_uri",this.redirectUrl.toString()),b.searchParams.set("response_type","code"),b.searchParams.set("scope",this.scopes.join(" ")),b.searchParams.set("state",x),b.searchParams.set("code_challenge_method","S256"),b.searchParams.set("code_challenge",wL.hash("sha256",d,"base64url")),b.toString()}async fetchUser(x,d){let{accessToken:b,tokenType:c}=await this.fetchToken(x,d),q=await fetch(this.urls.user,{headers:{Authorization:`${c} ${b}`}}).then(($)=>$.json()).then(($)=>{let{data:Y,success:G,error:E}=this.userInfo.schema.safeParse($);if(!G)throw new lY(E);return Y});return this.userInfo.parser(q)}async fetchToken(x,d){let c=await(await fetch(this.urls.token,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded",Accept:"application/json"},body:new URLSearchParams({code:x,redirect_uri:this.redirectUrl.toString(),grant_type:"authorization_code",client_id:this.clientId,client_secret:this.clientSecret,code_verifier:d})})).json(),{data:q,success:$,error:Y}=this.tokenSchema.safeParse(c);if(!$)throw new pY(Y);return{accessToken:q.access_token,tokenType:q.token_type}}}class pY extends Error{constructor(x){super("Invalid Token");this.cause=x}}class lY extends Error{constructor(x){super("Invalid User");this.cause=x}}function nY(){return new b1({provider:"google",clientId:process.env.GOOGLE_CLIENT_ID||"",clientSecret:process.env.GOOGLE_CLIENT_SECRET||"",scopes:["email","profile"],urls:{auth:"https://accounts.google.com/o/oauth2/v2/auth",token:"https://oauth2.googleapis.com/token",user:"https://www.googleapis.com/oauth2/v3/userinfo"},userInfo:{schema:V0.object({sub:V0.string(),name:V0.string(),given_name:V0.string(),picture:V0.string(),email:V0.string().email(),email_verified:V0.boolean()}),parser:(x)=>({id:i6(x.sub),name:i6(x.name),email:i6(x.email)})}})}var V2={google:nY};import iY from"node:crypto";var c1="oauth_state",q1="oauth_code_verifier";app.get("api/oauth/url/:provider",(x)=>{let d=x.req.param("provider"),b=V2[d]&&V2[d]();if(!b)throw new H0(400,{message:"Invalid provider"});let c=iY.randomBytes(64).toString("hex").normalize(),q=iY.randomBytes(64).toString("hex").normalize();return r6(x,c1,c,{maxAge:600}),r6(x,q1,q,{maxAge:600}),x.json({url:b.createAuthUrl(c,q)})});var{password:PL,sql:K7}=globalThis.Bun;app.get("api/oauth/callback/:provider",async(x)=>{let d=x.req.param("provider"),b=V2[d]&&V2[d]();if(!b)return x.redirect("http://localhost:3001/login?err=1");let c=q6(x,c1),q=q6(x,q1),$=x.req.query("state"),Y=x.req.query("code");if(!(Y&&q&&$)||$!==c)return x.redirect("http://localhost:3001/login?err=1");let G=async(E)=>{let J=await Zx.refresh(E),V=await PL.hash(J.split(".")[2]);return r6(x,"refresh_token",J),V};try{let E=await b.fetchUser(Y,q),[J]=await K7`
      SELECT * FROM "Users"
      WHERE "oauth" = ${d}
      AND "oauthId" = ${E.id}
    `;if(J){let U=await G(J.id);return await K7`
        UPDATE "Users"
        SET ${K7({name:E.name,email:E.email,signature:U})}
        WHERE "id" = ${J.id}
      `,x.redirect("http://localhost:3001/")}let[V]=await K7`
      INSERT INTO "Users" ${K7({oauth:d,oauthId:E.id,name:E.name,email:E.email})}
      RETURNING *
    `,N=await G(V.id);return await K7`
      UPDATE "Users"
      SET ${K7({signature:N})}
      WHERE "id" = ${V.id}
    `,x.redirect("http://localhost:3001/")}catch(E){return console.error(E),x.redirect("http://localhost:3001/login?err=1")}});var{password:vL,sql:W3}=globalThis.Bun;var IL=P5({target:"json",schema:V0.object({email:V0.string().email().transform(i6),name:V0.string().nonempty().max(30).transform(i6),password:V0.string().min(6).max(72)})});app.post("api/users",IL,async(x)=>{let{email:d,name:b,password:c}=x.req.valid("json"),[q]=await W3`
    SELECT * FROM "Users"
    WHERE "email" = ${d}
    AND "oauth" IS NULL
  `;if(q)return x.text("Email already busy",401);let[$]=await W3`
    INSERT INTO "Users" ${W3({name:b,email:d,password:c})}
    RETURNING *
  `,Y=await Zx.refresh($.id),G=await Zx.access($.id),E=await vL.hash(Y.split(".")[2]);return await W3`
    UPDATE "Users"
    SET "signature" = ${E}
    WHERE "id" = ${$.id}
  `,x.json({user:L7($,["signature","password"]),accessToken:G,refreshToken:Y})});var{sql:SL}=globalThis.Bun;app.get("api/users",v5,async(x)=>{let d=x.req.header().authorization.split(" ")[1],b=n6(d).payload;if(!b?.id)throw new H0(401,{message:"Email is empty"});let[c]=await SL`
    SELECT * FROM "Users"
    WHERE "id" = ${b.id}
  `;if(!c)throw new H0(401,{message:"User not found"});return x.json({user:L7(c,["password","signature"])})});var jw=W7;export{jw as default};
